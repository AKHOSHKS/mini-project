Id,PostTypeId,Title,Body,Score,ViewCount,Tags
"101752","1","I ran into a merge conflict. How can I abort the merge?","<p>I used <code>git pull</code> and had a merge conflict. I know that the other version of the file is good and that mine is bad so all my changes should be abandoned. How do I do this?</p>

<pre><code>unmerged:   _widget.html.erb

You are in the middle of a conflicted merge.
</code></pre>
","1128","554121","<git><version-control><git-merge><merge-conflict-resolution>"
"16937359","1","GIT copy file preserving history","<p>I have a somewhat confusing question in GIT.
Lets say, I have a file <code>dir1/A.txt</code> committed and git preserves a history of commits</p>

<p>Now I need (for some reasons) to copy the file into <code>dir2/A.txt</code> (not move but copy).
I know that there is a <code>git mv</code> command but I need <code>dir2/A.txt</code> to have the same history of commits as <code>dir1/A.txt</code>, and <code>dir1/A.txt</code> to still remain there.</p>

<p>I'm not planning to update <code>A.txt</code> once the copy is created and all the future work will be done on <code>dir2/A.txt</code></p>

<p>I know it sounds confusing, I'll add that this situation is on java based module (mavenized project) and we need to create a new version of code so that our customers will have the ability to have 2 different versions in runtime, the first version will be removed eventually when the alignment will be done.
We can use maven versioning of course, I'm just newbie in GIT and curious about what git can provide here.</p>
","59","21241","<git><copy>"
"9591407","1","Unstage a deleted file in git","<p>Usually, to discard changes to a file you would do:</p>

<pre><code>git checkout -- &lt;file&gt;
</code></pre>

<p>What if the change I want to discard is deleting the file? The above line would give an error:</p>

<pre><code>error: pathspec '&lt;file&gt;' did not match any file(s) known to git.
</code></pre>

<p>What command will restore that single file without undoing other changes?</p>

<p><strong>bonus point:</strong> Also, what if the change I want to discard is <em>adding</em> a file? I would like to know how to unstage that change as well.</p>
","186","52914","<git><git-checkout>"
"4830056","1","GIT Discard any changes I've made to a branch","<p>I'm working in a branch (""design"") and I've made a number of changes but I need to discard them all and reset it to match the repository version. I thought <code>git checkout design</code> would do it, but it just tells me I'm already in branch 'design' and that I have 3 modified files.</p>

<p>How would I discard those changes and get the branch as it stands now on the remote server?</p>
","53","62100","<git><branch><rollback>"
"9599411","1","Differences between Git merge --squash and --no-commit","<p>As the title says, I am not really clear about the differences between a <code>git merge --squash</code> and a <code>git merge --no-commit</code>.</p>

<p>As far as I understand the help page for <code>git merge</code>, both commands would leave me in an updated working-tree, where it is still possible to edit and then to do a final commit (or multiple commits).</p>

<p>Could someone clarify the differences of those 2 options? When would I use one instead of the other?</p>
","35","20457","<git><merge><squash>"
"149198","1","Can I commit only parts of my code using SVN or Mercurial?","<p>I use Tortoise SVN usuallly, but I have been looking into Mercurial since it is a distributed revision control system. </p>

<p>What I am looking for, in both systems, is a tool that let me pick only parts of a file and commit them. If I want to do this now, I have to copy to a temp version of the file and keep only the changes I want to commit in the current version, and then copy the temp version to the current version again after committing. It's just such a hassle and the program should be able to do this for me.</p>

<p>I heard Git supports this, please let me know if this is correct.</p>
","34","7991","<git><svn><version-control><mercurial><tortoisesvn>"
"2389361","1","Undo a Git merge that hasn't been pushed yet?","<p>Within my master branch, I did a <code>git merge some-other-branch</code> locally, but never pushed the changes to origin master. I didn't mean to merge, so I'd like to undo it. When doing a <code>git status</code> after my merge, I was getting this message:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 4 commits.
</code></pre>

<p>Based upon some <a href=""http://www.gitready.com/intermediate/2009/03/16/rolling-back-changes-with-revert.html"">instructions I found</a>, I tried running</p>

<pre><code>git revert HEAD -m 1
</code></pre>

<p>but now I'm getting this message with <code>git status</code>:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 5 commits.
</code></pre>

<p>I don't want my branch to be ahead by any number of commits. How do I get back to that point?</p>
","2004","945817","<git><undo><git-merge>"
"7214039","1","How do you move a commit to the staging area in git?","<p>If you want to move a commit to the staging area - that is uncommit it and move all of the changes which were in it into the staging area (effectively putting the branch in the state that it would have been in prior to the commit) - how do you do it? Or is it something that you can't do?</p>

<p>The closest that I know how to do is to copy all of the files that were changed in the commit to somewhere else, reset the branch to the commit before the commit that you're trying to move into the staging area, move all of the copied files back into the repository, and then add them to the staging area. It works, but it's not exactly a nice solution. What I'd like to be able to do is just undo the commit and move its changing into the staging area. Can it be done? And if so, how?</p>
","37","7711","<git><commit><staging>"
"2397822","1","What is the best practice for dealing with passwords in github?","<p>I've got a little Bash script that I use to access twitter and pop up a Growl notification in certain situations. Whats the best way to handle storing my password with the script? </p>

<p>I would like to post this script on GitHub, but I'm wondering what the best way to keep my login/password private while doing this is. Currently the password is stored in the script itself. I can't remove it right before I push because all the old commits will contain the password. Developing without the password isn't an option. I imagine that I should be storing the password in an external config file, but I thought I'd check to see if there was an established way to handle this before I tried and put something together.</p>
","93","17740","<git><bash><github>"
"179123","1","Edit an incorrect commit message in Git","<p>I wrote the wrong thing in a commit message.</p>

<p>How can I change the message? The commit has not been pushed yet.</p>
","7688","1705489","<git><git-commit><git-rewrite-history><amend>"
"4848607","1","Git 'fatal: No such ref: HEAD'","<p>A weird thing happend to my git repository. When I try to commit something in tortoisegit window I receive all files from project. I cannot revert them, when I pull from server I receive 'fatal: No such ref: HEAD' and 'fatal: Cannot lock the ref 'HEAD'.'. All my local branches are missing. Is there any way to resolve the problem?</p>

<p>This is not first commit or something. This thing happend suddenly.</p>

<p>EDIT:</p>

<p>git branch -a says: Failed to resolve HEAD as a valid ref</p>

<p>git status prints all project files marked as new file.</p>

<p>I changed repository folder name for a while, and when I changed it back things were not correct.</p>
","42","35246","<git><tortoisegit>"
"180052","1","Checkout subdirectories in Git?","<p>Is it possible to check out subdirectories of a repository in Git?</p>

<p>Imagine I am setting up a new WordPress installation. I will create two new directories for my plugin and theme customization:</p>

<ul>
<li><code>wordpress/wp-content/plugins/myplugins/</code> </li>
<li><code>wordpress/wp-content/themes/mytheme/</code></li>
</ul>

<p>I want to maintain these directories via Git. In Subversion, I would accomplish this by having <code>trunk/myplugins/</code> and <code>trunk/mytheme/</code> directories and checking out subdirectories. Does Git have a way to accomplish the same task using a single repository?</p>

<p>I could just be missing the boat on some Git paradigm, as a long time SVN user with little exposure to Git.</p>

<p><strong>Edit:</strong> <a href=""http://stackoverflow.com/questions/466303/git-branches-with-completely-different-content"">Multiple branches</a> storing different content is an interesting way to handle this.</p>
","117","72526","<git>"
"180272","1","How to preview git-pull without doing fetch?","<p>Is it even possible?</p>

<p>Basically, there's a remote repository from which I pull using just:</p>

<pre><code>git pull
</code></pre>

<p>Now, I'd like to preview what this pull would change (a diff) without touching anything on my side. The reason is that thing I'm pulling might not be ""good"" and I want someone else to fix it before making my repository ""dirty"".</p>
","106","53490","<git><version-control>"
"9616362","1","Rails which files to ignore for GIT","<p>I created a GIT repo, locally. I now see a bunch of files i rather ignore for GIT check-in.  This brings me to the question: is there any default .gitignore for Rails?  Any best practices?</p>

<p>I think of <em>tmp</em> and <em>log</em> for sure. But are there any other files or folders i should consider?</p>
","34","13398","<ruby-on-rails><git>"
"14491727","1","'git add --patch' to include new files?","<p>When I run <code>git add -p</code>, is there a way for git to select newly made files as hunks to select??</p>

<p>So if I make a new file called <code>foo.java</code>, then run git add -p, git will not let me choose that file's content to be added into the index.</p>
","32","3579","<git><git-add>"
"7231608","1","How to ignore files which are in repository?","<p>I have a file (config.php), that is already commited to Git repository, but I want to ignore locally, i.e. I want that file to remain in repository, but force Git to ignore any changes to it.</p>

<p>I put the file into .gitignore, but it is still marked as changed and Git still is attempting to commit changes to it, every time I commit something. Any idea, what am I missing or doing wrong?</p>
","43","11833","<git><gitignore><git-rm>"
"4858047","1","The following untracked working tree files would be overwritten by checkout","<p>So I added a folder to my .gitignore file.</p>

<p>Once I do a <code>git status</code> it tells me</p>

<pre><code># On branch latest
nothing to commit (working directory clean)
</code></pre>

<p>However, when I try to change branches I get the following:</p>

<pre><code>My-MacBook-Pro:webapp marcamillion$ git checkout develop
error: The following untracked working tree files would be overwritten by checkout:
    public/system/images/9/thumb/red-stripe.jpg
    public/system/images/9/original/red-stripe.jpg
    public/system/images/8/thumb/red-stripe-red.jpg
    public/system/images/8/original/red-stripe-red.jpg
    public/system/images/8/original/00-louis_c.k.-chewed_up-cover-2008.jpg
    public/system/images/7/thumb/red-stripe-dark.jpg
    public/system/images/7/original/red-stripe-dark.jpg
    public/system/images/7/original/DSC07833.JPG
    public/system/images/6/thumb/red-stripe-bw.jpg
    public/system/images/6/original/website-logo.png
    public/system/images/6/original/red-stripe-bw.jpg
    public/system/images/5/thumb/Guy_Waving_Jamaican_Flag.jpg
    public/system/images/5/original/logocompv-colored-squares-100px.png
    public/system/images/5/original/Guy_Waving_Jamaican_Flag.jpg
    public/system/images/4/thumb/DSC_0001.JPG
    public/system/images/4/original/logo.png
    public/system/images/4/original/DSC_0001.JPG
    public/system/images/4/original/2-up.jpg
    public/system/images/3/thumb/logo2.gif
    public/system/images/3/original/logo2.gif
    public/system/images/3/original/Guy_Waving_Jamaican_Flag.jpg
    public/system/images/3/original/11002000962.jpg
    public/system/images/2/thumb/Profile Pic.jpg
    public/system/images/2/original/Profile Pic.jpg
    public/system/images/2/original/02 Login Screen.jpg
    public/system/images/1/original/Argentina-2010-World-Cup.jpg
Please move or remove them before you can switch branches.
Aborting
</code></pre>

<p>This is what my .gitignore file looks like:</p>

<pre><code>.bundle
.DS_Store
db/*.sqlite3
log/*.log
tmp/**/*
public/system/images/*
public/system/avatars/*
</code></pre>

<p>How do I get this working so I can switch branches without deleting those files?</p>

<p>If I make a change, will it affect those files? In other words, if I came back to this branch afterwards would everything be perfect as up to my latest commit?</p>

<p>I don't want to lose those files, I just don't want them tracked.</p>
","365","378331","<git><git-merge>"
"14500240","1","How can I generate a diff for a single file between two branches in github","<p>I need to generate a diff for a single file that will show the differences between two versions, which are actually tags in github. I then want to send this diff to someone via email so a github URL for the diff would be ideal. The github compare view will allow me to do this for all changed files, but that's no good as there are thousands of files in my repo.</p>

<p>I can do this in the command line as follows, but this doesn't help as I need to send the diff to someone via email:</p>

<pre><code>git diff tag1 tag2 -- path/to/file
</code></pre>

<p>I found the command line version discussed here:
<a href=""http://stackoverflow.com/questions/10611112/how-can-i-see-the-differences-in-a-designated-file-between-a-local-branch-and-a"">how can I see the differences in a designated file between a local branch and a remote branch?</a></p>
","49","25725","<git><github>"
"231211","1","Using Git how do I find changes between local and remote","<p>Here are two different questions but I think they are related.</p>

<ol>
<li><p>When using Git, how do I find which changes I have committed locally, but haven't yet pushed to a remote branch? I'm looking for something similar to the Mercurial command <code>hg outgoing</code>.</p></li>
<li><p>When using Git, how do I find what changes a remote branch has prior to doing a pull? I'm looking for something similar to the Mercurial command <code>hg incoming</code>.</p></li>
</ol>

<p>For the second: is there a way to see what is available and then cherry-pick the changes I want to pull?</p>
","131","79734","<git><mercurial>"
"2445003","1","How do I enable msysgit colored output when using console2","<p>I'm having a hard time enabling git colored output on windows when using console2. </p>

<p>To trick git I've already SET TERM = 'cygwin'. This enabled the colors from a standard cmd.exe prompt but not in console2. I've verified that console2 can see the env var as well. </p>

<p>Anyone know how to get this working?</p>
","35","9039","<git><msysgit><console2><output-formatting>"
"7275508","1","Is there a way to squash a number of commits non-interactively?","<p>I'm trying to squash a range of commits - HEAD to HEAD~3.  Is there a quick way to do this, or do I need to use rebase --interactive?</p>
","56","11784","<git><interactive><rebase><squash>"
"14046122","1","github locks up mac terminal when using pull command","<p>I'm in the process of learning github on mac (command-line) and whenever I do <code>git pull origin master</code> i get this</p>

<pre><code># Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#
# Lines starting with '#' will be ignored, and an empty message aborts
# the commit.
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
~                                                                               
"".git/MERGE_MSG"" 7L, 293C
</code></pre>

<p>the terminal seems to lock up  and doesn't allow me to enter anything immediately, then when it finally does allow me to enter text it seems like it doesn't recognize git commands.</p>

<p>Is this a bug in git or am i missing something?  </p>
","50","19520","<git><github><terminal>"
"11816424","1","Understanding the basics of Git and GitHub","<p>I don't fully understand the purpose of using Git or Github; I know it helps to keep track of your changes and it's helpful for people collaborating with other people, but I don't collaborate with anybody so I don't know if this would be helpful for me.</p>

<p>I usually work as a web designer/developer but I never have to collaborate. I know in Git you have create, push, commit, create branches etc for every repository but...</p>

<ol>
<li><p>What is the difference between Git and GitHub?</p></li>
<li><p>Is git saving every repository locally (in the user's machine) and in GitHub?</p></li>
<li><p>Can you use Git without GitHub? If yes, what would be the benefit for using GitHub?</p></li>
<li><p>How does Git compare to a backup system such as Time Machine?</p></li>
<li><p>Is this a manual process, in other words if you don't commit you wont have a new version of the changes made?</p></li>
<li><p>If are not collaborating and you are already using a backup system why would you use Git?</p></li>
</ol>
","145","65218","<git><github>"
"14330050","1","How to get Git 1.8 in Cygwin?","<p>According to <a href=""http://cygwin.com/packages/git/"">http://cygwin.com/packages/git/</a> the latest available Cygwin package is 1.7.9-1.</p>

<p>I would like to update git to at least 1.8.0.</p>

<p>Can I do this?</p>
","39","13552","<git><cygwin>"
"11950037","1","View git history for folder","<p>How can I view git log history for all files within a folder ?</p>

<p>I have found several posts on how to show log for a specific file, but haven't found for a specific folder.</p>
","39","15166","<git>"
"11928561","1","Where is git.exe located?","<p>I have PyCharm and I am looking around trying to find git.exe to set it up with my repo. </p>

<p>What is the PATH to git.exe?</p>
","159","139924","<git><github-for-windows>"
"14337945","1","How do I resolve cherry-pick conflicts using their changes?","<p>My <code>git cherry-pick FOO</code> produced a conflict.</p>

<p>I could go through the conflicting files and delete the lines between <code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;</code> and <code>=======</code>, and the conflict markers themselves, but I'm hoping there's an easier way.</p>

<p>I think the <code>svn</code> equivalent was choosing <code>theirs-conflict</code> to resolve.</p>

<p>How do I do this in <code>git</code>?</p>

<p>I don't want <code>git checkout --theirs &lt;file&gt;</code> as that seems to produce the same result as <code>git checkout foo &lt;file&gt;</code> instead of just getting <code>git diff FOO~..FOO &lt;file&gt;</code> applied.</p>
","36","20609","<git>"
"11935043","1","git error when trying to push to remote branch","<p>I've cloned repository A's master branch from git and created my own branch called Li.
I've made some changes a while ago and pushed the contents of local Li to remote Li.</p>

<p>Now I've pulled some updates from remote master to my local master branch and from the local master branch to the local Li, and I'm trying to push the updates from local Li to remote Li.
However, when I try to run:</p>

<pre><code>git checkout Li
git push origin Li
</code></pre>

<p>I get the following error:</p>

<pre><code>error: failed to push some refs to 'git@github.com:anodejs/system.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<p>Note that my local master branch is updated (I invoked git pull origin master) and merged into the local Li branch. I did, however, add local Li a new file, so local Li is not identical to local master (but this shouldn't matter, right?)</p>

<p>Thanks,
Li</p>
","33","47091","<git><push>"
"14342553","1","git push heroku master permission denied","<p>I am following the ruby.railstutorial. I run the command ""git push heroku master"" and it spits out this error.</p>

<pre><code>Permission denied (publickey).
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>I am inside my rails app ""/Users/lexi87/rails_projects/first_app"". Any solutions?</p>
","48","26218","<ruby-on-rails><git><heroku>"
"21609781","1","Why call git branch --unset-upstream to fixup?","<p>I'm more of a novice when it comes to advanced operations in GIT. I maintain my <a href=""http://jatinganhotra.com"">blog</a> using the blogging framework <a href=""http://octopress.org/"">Octopress</a>. Though Octopress is not under any development since 2011, it serves my purpose well and so I haven't thought of changing anything so far.</p>

<p>FYI, My blog is hosted on Github Pages.<br>
Today, while working on a new post and called <code>git status</code>, it showed the following message:</p>

<pre><code>On branch source
Your branch is based on 'origin/master', but the upstream is gone.
  (use ""git branch --unset-upstream"" to fixup)
</code></pre>

<p>The same message repeated for all the subsequent commands such as <code>git add .</code>, <code>git commit -m 'message'</code> and <code>git push origin source</code>.  </p>

<ul>
<li>What does the message mean?  </li>
<li>Is something broken?  </li>
<li>If yes, what?  </li>
<li>Do I need to fix it? </li>
</ul>

<p>If possible, please point me to a pdf/web article where I can read up on this and understand it for future?</p>

<p>More details:</p>

<pre><code>bash-3.2$ git branch -a
* source
  remotes/octopress/2.1
  remotes/octopress/HEAD -&gt; octopress/master
  remotes/octopress/gh-pages
  remotes/octopress/linklog
  remotes/octopress/master
  remotes/octopress/refactor_with_tests
  remotes/octopress/rubygemcli
  remotes/octopress/site
  remotes/origin/source
</code></pre>

<p>Please let me know if more information is needed. Thanks.</p>
","46","30020","<git><git-branch><github-pages>"
"14348874","1","Git repository URL - SSH syntax without absolute path","<p>I'm running a git repository server accessible via SSH, on a custom port (let's say 12345). I have found that in this case the repository URLs need to be specified using SSH syntax:</p>

<pre><code>git clone ssh://login@server.com:12345/absolute/path/to/repository
</code></pre>

<p>I'd like to setup it in such a way that it would be possible for users to clone repositories without specifying the <strong>absolute</strong> path.</p>

<pre><code>git clone ssh://login@server.com:12345/repository.git
</code></pre>

<p>I have researched the topic and found the following options:</p>

<ol>
<li>Remove the custom port from the URL and make the users add it to their <code>~/.ssh/config</code> file (a last-resort workaround rather than a solution).</li>
<li>Drop SSH and use <code>git-daemon</code> and specify its <code>--base-path</code> parameter (still a workaround...)</li>
<li>Use an utility like <code>gitosis</code> or <code>gitolite</code> - but wouldn't it be an overkill to use it for this purpose only? Gitosis is discontinued, gitolite is a quite huge piece of software...</li>
</ol>

<p>All I want is a ""prettier"" SSH URL with custom port (so I can distribute the whole <code>git clone</code> command and require nothing more from the remote user). Which one of the above solutions would be the most viable in my case?</p>
","34","23464","<git><ssh>"
"14167335","1","find commit by hash sha in git","<p>I need to find a commit in Git by given hash SHA. For example, if I have ""a2c25061"" hash, and I need to get the author and the committer of this commit. </p>

<p>What is the command to get that?</p>
","94","47067","<git>"
"14168677","1","Merge development branch with master","<p>I have two branches namely <code>master</code> and <code>development</code> in a GitHub Repository. I am doing all my  development in development branch as shown.</p>

<pre><code>git branch development
git add *
git commit -m ""My initial commit message""
git push -u origin development
</code></pre>

<p>Now I want to merge all the changes on the <code>development</code> branch into the <code>master</code>. My current approach is:</p>

<pre><code>git checkout master 
git merge development
git push -u origin master 
</code></pre>

<p>Please let me know if the procedure I am following is correct.</p>
","78","48406","<git>"
"16736856","1","What should be in my .gitignore for an Android Studio project?","<p>What files should be in my .gitignore for an Android Studio project?</p>

<p>I have seen several examples that all include .iml but IntelliJ docs say that .iml must be included in your source control.</p>
","684","224724","<git><android-studio><gitignore>"
"11947587","1","Is there a naming convention for git repositories?","<p>For example, I have a RESTful service called Purchase Service. Should I name my repository</p>

<ol>
<li><code>purchaserestservice</code></li>
<li><code>purchase-rest-service</code></li>
<li><code>purchase_rest_service</code></li>
<li>or something else?</li>
</ol>

<p>What's the convention? How about in github? Should public repos follow some standard?</p>
","81","29018","<git><github><naming-conventions>"
"4319486","1","git - merge conflict when local is deleted but file exists in remote","<p>I am very new to git and wondered how I should go about a merge where in the local repo I have deleted several files on the master branch but these files exist within the remote master branch.</p>

<p>After doing git-merge it shows the conflicts that have occured.</p>

<p>Using git gui it shows that the local file is deleted, while the remote branch file has contents.</p>

<p>How do you stop these files from being conflicted?
Is there a simple way using git gui?</p>

<p>Many thanks</p>
","64","45267","<git>"
"9537392","1","Git fetch remote branch","<p>My colleague and I are working on the same repository we've branched it into two branches each technically for different projects, but they have similarities so we'll sometimes want to commit back to the *master from the branch.</p>

<p>However, I have the branch, how can my colleague pull that branch specifically. A git clone of the repo does not seem to create the branches locally for him, though I can see them live on unfuddle after a push my end.</p>

<p>Any help would be greatly appreciated.</p>

<p>*Edit, also when I originally made the branch I did -b checkout. Not sure if that makes much difference?</p>

<p>*Edit 2</p>

<pre><code>iMac:test_solar dave$ git branch -r
origin/HEAD -&gt; origin/master
origin/daves_branch
origin/discover
origin/master

git fetch origin discover
git checkout discover
</code></pre>

<p>This is the commands I ran. But definitely no workey. I want to be able to check out that branch and then push and commit back just that branches changes from various collaborators or workstations.</p>
","817","726783","<git><branch><git-branch><git-fetch>"
"871","1","Why is Git better than Subversion?","<p>I've been using <a href=""http://en.wikipedia.org/wiki/Apache_Subversion"" rel=""nofollow"">Subversion</a> for a few years and after using <a href=""http://en.wikipedia.org/wiki/Microsoft_Visual_SourceSafe"" rel=""nofollow"">SourceSafe</a>, I just love Subversion.  Combined with <a href=""http://en.wikipedia.org/wiki/TortoiseSVN"" rel=""nofollow"">TortoiseSVN</a>, I can't really imagine how it could be any better.  </p>

<p>Yet there's a growing number of developers claiming that Subversion has problems and that we should be moving to the new breed of distributed version control systems, such as <a href=""http://git.or.cz/"" rel=""nofollow"" title=""Git Distributed Version Control System"">Git</a>.  </p>

<p>How does Git improve upon Subversion?</p>
","393","551421","<svn><git>"
"11956710","1","git recover deleted file where no commit was made after the delete","<p>I deleted some files.  </p>

<p>I did NOT commit yet.  </p>

<p>I want to reset my workspace to recover the files.  </p>

<p>I did a </p>

<pre><code>  git checkout .
</code></pre>

<p>But the deleted files are still missing.</p>

<p>And <code>git status</code> shows:</p>

<pre><code># On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   deleted:    cc.properties
#   deleted:    store/README
#   deleted:    store/cc.properties
#
</code></pre>

<p>Why doesn't git checkout . reset the workspace to HEAD?</p>
","319","174804","<git>"
"2658","1","Getting started with Version Control","<p>I need to implement version control, even for just the developing I do at home.  I have read about how great Subversion is for the past couple years and was about to dedicate myself to learning this on the side until I heard about Git being the up and coming version control system.</p>

<p>Given the situation, should I hold off and see which one comes out on top?  What are their relative advantages?  </p>

<p>One issue I noticed with Git is there are not many full featured GUIs, which is important to many users on my team.</p>

<p>Also, wouldn't mind suggestions on how to get started with one or the other. (tutorials, etc.)</p>
","67","6647","<git><svn><version-control><language-agnostic><dvcs>"
"9539067","1","What exactly does git rebase --skip do?","<p>I just did a <code>git pull --rebase origin master</code> and there was a conflict.</p>

<p>Firstly, this conflict was in a file that I hadnt touched, and was about 10 commits back. Why does this happen?</p>

<p>I then accidently typed <code>git rebase --skip</code>, and it 'skipped that patch'.</p>

<p>Worried that I had skipped a commit, I checked out a new version of the master branch and did a diff between the branch that I did the rebase on, and the new master branch.  The only changes that show up in the diff are the latest commit, and looking at the log, the patch that was 'skipped', shows up in the commit history.</p>

<p>Can anyone explain what is going on here?</p>
","39","17838","<git>"
"5473","1","How can I undo git reset --hard HEAD~1?","<p>Is it possible to undo the changes caused by the following command? If so, how?</p>

<pre><code>git reset --hard HEAD~1
</code></pre>
","663","186492","<git><version-control><git-reset>"
"6009","1","How do you deal with configuration files in source control?","<p>Let's say you have a typical web app and with a file configuration.whatever. Every developer working on the project will have one version for their dev boxes, there will be a dev, prod and stage versions. How do you deal with this in source control? Not check in this file at all, check it with different names or do something fancy altogether?</p>","66","7452","<svn><git><version-control><cvs>"
"14418352","1","Ignore new commits for git submodule","<h1>Background</h1>

<p>Using Git 1.8.1.1 on Linux. The repository looks as follows:</p>

<pre><code>master
  book
</code></pre>

<p>The submodule was created as follows:</p>

<pre><code>$ cd /path/to/master
$ git submodule add https://user@bitbucket.org/user/repo.git book
</code></pre>

<p>The <code>book</code> submodule is clean:</p>

<pre><code>$ cd /path/to/master/book/
$ git status
# On branch master
nothing to commit, working directory clean
</code></pre>

<h1>Problem</h1>

<p>The master, on the other hand, shows there are ""new commits"" for the book submodule:</p>

<pre><code>$ cd /path/to/master/
$ git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   book (new commits)
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>I would like git to ignore the submodule directory completely, so that the master is also clean:</p>

<pre><code>$ cd /path/to/master/
$ git status
# On branch master
nothing to commit, working directory clean
</code></pre>

<h1>Failed Attempt #1 - dirty</h1>

<p>Inside the file <code>master/.gitmodules</code> is the following, as per this <a href=""http://stackoverflow.com/a/5542452/59087"">answer</a>:</p>

<pre><code>[submodule ""book""]
        path = book
        url = https://user@bitbucket.org/user/repo.git
        ignore = dirty
</code></pre>

<h1>Failed Attempt #2 - untracked</h1>

<p>I have also tried changing <code>master/.gitmodules</code> to the following, as per this <a href=""http://stackoverflow.com/a/5127213/59087"">answer</a>:</p>

<pre><code>[submodule ""book""]
        path = book
        url = https://user@bitbucket.org/user/repo.git
        ignore = untracked
</code></pre>

<h1>Failed Attempt #3 - showUntrackedFiles</h1>

<p>I have also tried editing <code>master/.git/config</code> to the following, as per this <a href=""http://stackoverflow.com/a/4345788/59087"">answer</a>:</p>

<pre><code>[status]
   showUntrackedFiles = no
</code></pre>

<h1>Failed Attempt #4 - ignore</h1>

<p>I tried adding the book directory to the master ignore file:</p>

<pre><code>$ cd /path/to/master/
$ echo book &gt; .gitignore
</code></pre>

<h1>Failed Attempt #5 - clone</h1>

<p>I tried adding the book directory to the master as follows:</p>

<pre><code>$ cd /path/to/master/
$ rm -rf book
$ git clone https://user@bitbucket.org/user/repo.git book
</code></pre>

<h1>Question</h1>

<p>How do I keep the <code>book</code> submodule as a repository directory under the <code>master</code> repository yet have git ignore the <code>book</code> submodule? That is, I don't want to see the following:</p>

<pre><code>#
#       modified:   book (new commits)
#
</code></pre>

<p>How do I suppress that message when executing <code>git status</code> in the master repository?</p>

<p>I've also read an article about <a href=""http://codingkilledthecat.wordpress.com/2012/04/28/why-your-company-shouldnt-use-git-submodules/"">git submodule pitfalls</a> and am wondering: is this an inappropriate submodule usage?</p>
","35","16487","<git><status><git-submodules><ignore>"
"9672319","1",".gitignore file, where should I put it in my xcode project?","<p>I want git to ignore my <code>UserInterfaceState.xcuserstate</code> file in my XCode4 project, but where should I put the <code>.gitignore</code> file?, is it inside the <code>.git</code> folder? or out? The <code>.git</code> is in same folder with the <code>ProjectName.xcodeproj</code> file</p>
","96","42231","<xcode><git><gitignore>"
"2476718","1","How to I add something to the .gitignore so that the match is not recursive?","<p>How to I add something to the <code>.gitignore</code> so that the match is not recursive?</p>

<p>For example, I wish to ignore the directory <code>foo</code> and the file <code>bar.txt</code> in the current directory, but not any that exist in subdirectories.</p>

<p>I have tried this for my <code>.gitignore</code> file:</p>

<pre><code>foo/
bar.txt
</code></pre>

<p>But unfortunately git applies this recursively, so that <code>otherdir/bar.txt</code> and <code>otherdir/foo/</code> also get ignored, which is not what I want.</p>

<p>(Is there a command in git that shows me all ignored files, and reference the <code>.gitignore</code> file that is responsible for the file being ignored?  This would be useful for debugging.)</p>
","44","12512","<git><ignore><gitignore>"
"313924","1","Project management to go with GitHub","<p>(EDIT: This question is now outdated for my particular issue, as Google Code supports git now and I've converted Protocol Buffers to Mercurial anyway. However, it's still of general interest, IMO.)</p>

<p>My <a href=""http://github.com/jskeet/dotnet-protobufs/tree/master"">C# Protocol Buffers Port</a> uses github for its source control, and I'm beginning to really enjoy using git. However, as far as I can tell, github doesn't provide any project management tools: defect and feature tracking, discussions, feature requests, docs etc. Given my affiliations, <a href=""http://code.google.com"">Google Code</a> would be a natural choice, but it would seem odd to create a project there but host the source on github.</p>

<p><a href=""http://stackoverflow.com/questions/39186/should-i-use-githubfogbugz-or-assembla"">This question about Fogbugz/Assembla</a> seems to mostly focus on the defect tracking. I was wondering what experiences others have had when it comes to a more ""complete"" project management solution. Does Fogbugz actually do everything I need? (Using a wiki for docs has its advantages, although I also want to be able to distribute documentation with the code.) Beyond the explicit features mentioned in the first paragraph, are there other project aspects I <em>should</em> be considering which I may have missed?</p>

<p>This will definitely stay an open source project, and although I'd rather not pay I don't mind if a small fee is required. Currently I'm the only developer, but that may change and there may very well be lots of people filing bugs and feature requests. (In other words, I  hope and expect it to be popular, but with me doing most of the work.)</p>

<p>Previously I've <em>contributed</em> to various open source projects, but haven't done much in the way of running a very visible and active one. (<a href=""http://pobox.com/~skeet/csharp/miscutil"">MiscUtil</a> is currently still ""hosted"" on my website, with occasional releases - the actual source control is on my local NAS.)</p>

<p>Anyone care to share their experiences?</p>

<p>EDIT: Another option I'm now considering is a Google Code project (I really would like to be loyal to my employer) and an occasional merge from git to svn (at the very least, every time I do a release). This would allow non-git users to get hold of the source easily too.</p>
","88","21272","<git><open-source><project-management><github><fogbugz>"
"332528","1","Is it possible to exclude specific commits when doing a git merge?","<p>Let's say that I want to merge from a release branch to the master branch and there are some commits in the release branch that I don't want to include in the master branch.  Is there a way to do the merge so that one or more of those commits will not be merged?</p>

<p>My strategy so far is to do the following (in master):</p>

<pre><code>git merge --no-commit release-branch
# Resolve conflicts and apply reverse patch of the commits that I don't want included
git commit # Edit commit message so that it lists the commits that have been reverse-patched
</code></pre>

<p>Is there a better way to do this?</p>
","43","25150","<git>"
"2505096","1","Cloning a private Github repo","<p>I have a private repository on Github for a project I'm working on.  Until now I had only worked on my home desktop, but I just bought a laptop, and am trying to set it up so that I can work on the project from either computer, and push / pull changes.  </p>

<p>I added a new SSH key to my Github account for the laptop, and was successful in cloning and making changes to a public test repo that I set up.  However, I couldn't clone the private repo.  Is there anything special I need to do in the command line in order to clone a private repo?  Do I need to set up a new GitHub account for my laptop and set myself up as a collaborator?</p>

<p>The command I used was <code>git clone git://github.com/myusername/reponame.git</code></p>
","76","66867","<git><github><private>"
"7318918","1","fatal: does not appear to be a git repository","<p>Why am I getting this error when my git repository url is correct?</p>

<p><img src=""http://i.stack.imgur.com/vy0JX.jpg"" alt=""fatal: &#39;git@skarp.beanstalkapp.com/gittest.git&#39; does not appear to be a git repository // fatal: The remote end hung up unexpectedly""></p>
","37","86809","<git><git-remote>"
"24294034","1","How do I push a local repo to Bitbucket using SourceTree without creating a repo on bitbucket first?","<p>Is there a way to import my local git repos to SourceTree and push them to my Bitbucket account, having new repos identical to my local repos be created on my account? Or do I have to make a repo online first and push to that? Github has a way to publish your local repos directly from it's client, and it creates it automatically when you publish, but it has limited private repos. I'm just doing homework so there's no reason for it to be public, hence why I'm trying to use bitbucket.</p>
","52","55328","<git><bitbucket>"
"392332","1","Retroactively Correct Authors with Git SVN?","<p>I have a repository which I have <em>already</em> cloned from SVN.  I've been doing some work in this repository in its Git form and I would hate to lose that structure by cloning again.  However, when I originally cloned the repository, I failed to correctly specify the <code>svn.authors</code> property (or a semantically-similar option).  Is there any way I can specify the SVN author mappings now that the repository is fully Git-ified?  Preferably, I would like to correct all of the old commit authors to represent the Git author rather than the raw SVN username.</p>
","46","8027","<svn><git><git-svn>"
"2573905","1","Do all git commands have a dry-run option?","<p>Do all git commands have a --dry-run option, or one which would indicate what the command would do without actually doing them?</p>
","41","26571","<git>"
"5032374","1","Accidentally pushed commit: change git commit message","<p>In my local repo I have one commit with an incorrect commit message.</p>

<p>I've already published the incorrect commit message with <code>git push</code>.</p>

<p>Now the remote repo (which is GitHub-hosted) has the incorrect commit message, too.</p>

<p>I've already tried <code>git commit --amend</code>, but found that it will not work for me in this situation because I've made additional commits since the incorrect one.</p>

<p>How would you fix this situation?</p>
","53","25822","<git><git-commit><amend>"
"9790448","1","How to update a pull request","<p>So I first forked a repo and then made a commit to that forked repo. I then opened a pull request. The pull request listed all the changes I wanted. This was great.</p>

<p>After reviewing my pull request, there were a number of changes that the repo owner wanted me to make before he accepted it. I have made those changes in my fork, now how do I update the pull request with those changes (or is this not how I should handle it?).</p>
","192","43421","<git><version-control><github>"
"2613525","1","What makes merging in DVCS easy?","<p>I read at <a href=""http://www.joelonsoftware.com/items/2010/03/17.html"" rel=""nofollow"">Joel on Software</a>:</p>

<blockquote>
  <p>With distributed version control, the
  distributed part is actually not the
  most interesting part.</p>
  
  <p>The interesting part is that these
  systems think in terms of changes, not
  in terms of versions.</p>
</blockquote>

<p>and at <a href=""http://hginit.com/00.html"" rel=""nofollow"">HgInit</a>:</p>

<blockquote>
  <p>When we have to merge, Subversion
  tries to look at both revisions—my
  modified code, and your modified
  code—and it tries to guess how to
  smash them together in one big unholy
  mess. It usually fails, producing
  pages and pages of “merge conflicts”
  that aren’t really conflicts, simply
  places where Subversion failed to
  figure out what we did.</p>
  
  <p>By contrast, while we were working
  separately in Mercurial, Mercurial was
  busy keeping a series of changesets.
  And so, when we want to merge our code
  together, Mercurial actually has a
  whole lot more information: it knows
  what each of us changed and can
  reapply those changes, rather than
  just looking at the final product and
  trying to guess how to put it
  together.</p>
</blockquote>

<p>By looking at the SVN's repository folder, I have the impression that Subversion is maintaining each revisions as <em>changeset</em>. And from what I know, Hg is using both <em>changeset</em> and <em>snapshot</em> while Git is purely using <em>snapshot</em> to store the data.</p>

<p>If my assumption is correct, then there must be other ways that make merging in DVCS easy. What are those?</p>

<p><strong>* Update:</strong>  </p>

<ul>
<li>I am more interested in the technical perspective, but answers from non-technical perspective are acceptable</li>
<li>Corrections:
<ol>
<li>Git's <em>conceptual</em> model is purely based on snapshots. The snapshots can be stored as diffs of other snapshots, it's just that the diffs are purely for storage optimization. – <a href=""http://stackoverflow.com/users/12166/rafal-dowgird"">Rafał Dowgird</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#comment2626335_2613525"">comment</a>  </li>
</ol></li>
<li>From non-technical perspective:
<ol>
<li>It's simply cultural: a DVCS wouldn't work at all if merging were hard, so DVCS developers invest a lot of time and effort into making merging easy. CVCS users OTOH are used to crappy merging, so there's no incentive for the developers to make it work. (Why make something good when your users pay you equally well for something crap?)<br>
...<br>
To recap: the whole point of a DVCS is to have many decentralized repositories and constantly merge changes back and forth. Without good merging, a DVCS simply is useless. A CVCS however, can still survive with crappy merging, especially if the vendor can condition its users to avoid branching. – <a href=""http://stackoverflow.com/users/2988/"">Jörg W Mittag</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#2613595"">answer</a></li>
</ol></li>
<li>From technical perspective:
<ol>
<li>recording a real DAG of the history does help! I think the main difference is that CVCS didn't always record a merge as a changeset with several parents, losing some information. – <a href=""http://stackoverflow.com/users/148532/tonfa"">tonfa</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#comment2624709_2613595"">comment</a></li>
<li>because of <strong><em>merge tracking</em></strong>, and the more fundamental fact that <strong><em>each revisions knows its parents</em></strong>. ... When each revision (each commit), including merge commits, know its parents (for merge commits that means having/remembering more than one parent, i.e. merge tracking), you can reconstruct diagram (DAG = Direct Acyclic Graph) of revision history. If you know graph of revisions, you can find common ancestor of the commits you want to merge. And when your DVCS knows itself how to <strong><em>find common ancestor</em></strong>, you don't need to provide it as an argument, as for example in CVS.<br>
.<br>
Note that there might be more than one common ancestor of two (or more) commits. Git makes use of so called ""recursive"" merge strategy, which merges merge bases (common ancestor), till you are left with one virtual / effective common ancestor (in some simplification), and can the do simple 3-way merge. – <a href=""http://stackoverflow.com/users/46058/jakub-narebski"">Jakub Narębski</a>'s <a href=""http://stackoverflow.com/questions/2613525/what-makes-merging-in-dvcs-easy#2614937"">answer</a></li>
</ol></li>
</ul>

<p>Check as well <a href=""http://stackoverflow.com/questions/2471606/how-and-or-why-is-merging-in-git-better-than-in-svn"">How and/or why is merging in Git better than in SVN?</a></p>
","45","3379","<svn><git><version-control><mercurial><dvcs>"
"17131690","1","Magit revert single file","<p><em>The question is about Magit major mode for Emacs function and less so about how to do this via command line interface.</em></p>

<p>I only have a local Git repository. How would I restore a selected file to its previous version? I believe that the Git command for this must be something like <code>git checkout HEAD^ path/to/file</code> but I may be wrong here too, just guessing really.</p>

<p>What I'm looking for is essentially the same thing as <kbd>C-x v u</kbd> in <code>vc-dir</code> buffer.</p>

<p>Essentially, what I was hoping to do was:</p>

<ul>
<li><p>delete the modified file.</p></li>
<li><p>pull from local repo.</p></li>
</ul>

<p>But <strong>Magit</strong> doesn't seem to be able to do that, it seems to prefer to just delete the file, instead of restoring it.</p>
","44","7067","<git><emacs><magit>"
"2613903","1","Does deleting a branch in git remove it from the history?","<p>Coming from svn, just starting to become familiar with git.</p>

<p>When a branch is deleted in git, is it removed from the history? </p>

<p>In svn, you can easily recover a branch by reverting the delete operation (reverse merge). Like all deletes in svn, the branch is never really deleted, it's just removed from the current tree.</p>

<p>If the branch is actually deleted from the history in git, what happens to the changes that were merged from that branch? Are they retained?</p>
","86","28748","<git><version-control><branch><revision-history>"
"5074136","1","Git rebase fails, 'Your local changes to the following files would be overwritten by merge'. No local changes?","<p>Here is my transcript from trying to merge my bugfix branch onto my master branch in preparation to push it upstream. There have been some upstream changes pulled into master since the bugfix branch was created, and it now refuses to rebase.</p>

<p>The files it throws errors on are not diffed when opened. no files have been added, removed or renamed. Nothing is ignored and nothing is untracked or staged or unstaged. I'm completely stumped as to why the rebase is failing.</p>

<p>I'm on OS X 10.6.6 and git 1.7.4</p>

<pre><code>.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git rebase bug586-test master-test
First, rewinding head to replay your work on top of it...
Applying: - comiitting code related to api permissions
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
error: Your local changes to the following files would be overwritten by merge:
    inc/data.inc
    templates/apipermissions_tpl.inc
    templates/currencies_tpl.inc
Please, commit your changes or stash them before you can merge.
Aborting
Failed to merge in the changes.
Patch failed at 0001 - comiitting code related to api permissions

When you have resolved this problem run ""git rebase --continue"".
If you would prefer to skip this patch, instead run ""git rebase --skip"".
To restore the original branch and stop rebasing run ""git rebase --abort"".



.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git status
# Not currently on any branch.
nothing to commit (working directory clean)



.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git rebase --abort
HEAD is now at 5efccf1 - comiitting code related to api permissions



.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git log -n10 --oneline
5efccf1 - comiitting code related to api permissions
a8a5ee4 Style changes for IE
cfca618 Style changes for IE
8a69de6 Style changes for IE
8946585 - comiitting code related to api permissions - fixed an html error in the currencies template
5fba0a9 Merges the 1.11b branch bugfixes and changes into trunk
ef57049 Andrew Commiting on Blakes behalf on changes he made to transfers; Also an Indue GW balance fix; debitcarupload fix for LSN
69e4313 Fixed an issue with Support From email
9058fb6 Sets the svn property svn:eol-style to LF, to enforce unix style line endings
240839e Fixes up a lot of the whitespace issues.



.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git checkout bug586-test 
Switched to branch 'bug586-test'



.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git log -n10 --oneline  
b7b1f8a Resolves #586, Postback on deposit
5fba0a9 Merges the 1.11b branch bugfixes and changes into trunk
ef57049 Andrew Commiting on Blakes behalf on changes he made to transfers; Also an Indue GW balance fix; debitcarupload fix for LSN
69e4313 Fixed an issue with Support From email
9058fb6 Sets the svn property svn:eol-style to LF, to enforce unix style line endings
240839e Fixes up a lot of the whitespace issues.
cf27b6f - bug that came up with transferring. The transfer page had a hidden field called to, which was taking precedence over cards and usercard which would throw the system out a bit
7c21a81 Fixes #603, new add transaction form, journalled.
01e6292 Removes a pile of resource forks
880c5bc - bug that came up with transferring. The transfer page had a hidden field called to, which was taking precedence over cards and usercard which would throw the system out a bit



.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git rebase master-test bug586-test
First, rewinding head to replay your work on top of it...
Applying: Resolves #586, Postback on deposit
Using index info to reconstruct a base tree...
&lt;stdin&gt;:52: trailing whitespace.
                'name' =&gt; 'Invoice Transfer Out', 
&lt;stdin&gt;:175: trailing whitespace.

warning: 2 lines add whitespace errors.
Falling back to patching base and 3-way merge...
error: Your local changes to the following files would be overwritten by merge:
    templates/deposit_tpl.inc
Please, commit your changes or stash them before you can merge.
Aborting
Failed to merge in the changes.
Patch failed at 0001 Resolves #586, Postback on deposit

When you have resolved this problem run ""git rebase --continue"".
If you would prefer to skip this patch, instead run ""git rebase --skip"".
To restore the original branch and stop rebasing run ""git rebase --abort"".



.-(/Volumes/joshua/www/txfunds)-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------(joshua@Kusanagi)-
`--&gt; git rebase --abort
HEAD is now at b7b1f8a Resolves #586, Postback on deposit
</code></pre>
","70","14941","<git><git-rebase>"
"17167414","1","Which is the best git hosting sw? - Gitolite vs. Gitlab vs. Gitorius","<p>I am looking for a git hosting environment for several users. Therefore i've searched for comparisons between <strong>Gitolite</strong>, <strong>Gitlab</strong> and <strong>Gitorius</strong>. But i get nothing what could be useful.</p>

<p>Is there anybody, who has experiences with different hosting tools and could provide an advice? </p>
","50","40280","<git><hosting><gitolite><gitlab><gitorious>"
"5094293","1","git remote branch deleted but still appears in 'branch -a'","<p>Lets' say I had a branch named <code>coolbranch</code> in my repository.</p>

<p>Now, I decided to delete it (both remotely and locally) with:</p>

<pre><code>git push origin :coolbranch
git branch -D coolbranch
</code></pre>

<p>Great!
Now the branch is really deleted.</p>

<p>But when I run</p>

<pre><code>git branch -a
</code></pre>

<p>I still get:</p>

<pre><code>remotes/origin/coolbranch
</code></pre>

<p>Something to notice, is that when I clone a new repository, everything is fine and <code>git branch -a</code> doesn't show the branch.</p>

<p>I want to know - is there a way to delete the branch from the <code>branch -a</code> list without cloning a new instance?</p>
","235","36729","<git><git-branch>"
"5094524","1","GitHub - prevent collaborators from using push -f","<p>Is there a way to prevent force push into a branch or repository?   </p>

<p>I want to stop important branches from having their history rewritten either accidentally or intentionally.  How do people deal with this in larger development teams?</p>

<p>Ideally, in my view, would possible to lock few branches per repository, and prevent everyone, other than the repository owner from doing a force push into them.</p>
","31","10482","<git><github><git-push>"
"2704996","1","Describe your workflow of using version control (VCS or DVCS)","<p>I'd like to learn other people workflow when using either vcs or dvcs.  </p>

<p>Please describe your strategy to handle the following tasks:</p>

<ul>
<li>Implement a feature</li>
<li>Fixing bugs (during development and deployed app)</li>
<li>Code Review</li>
<li>Refactoring code (post code-review)</li>
<li>Incorporate patches</li>
<li>Releasing the newer version of your app (desktop, web, mobile, would you treat them differently?)</li>
</ul>

<p>Feel free to organize your answer not grouped by the tasks but grouped by whatever you think is relevant but please organize it by VCS/DVCS (please don't mix them). </p>

<p>Thank you.</p>
","49","5401","<svn><git><mercurial><dvcs>"
"620253","1","git push rejected","<p>I give up!
Whenever I try to push I get a stupid: </p>

<pre><code>! [rejected]        master -&gt; master (non-fast forward)
error: failed to push some refs to 'git@github.com:companyX/projectX.git'
</code></pre>

<p>Our team has a new git setup. Instead of making private branches I now Forked our main repository (on github) to create my own copy.</p>

<p>At some point what I did was:</p>

<pre><code>$ git fetch upstream master:upstreammaster
</code></pre>

<p>So here is my current setup::</p>

<pre><code>$ git branch
master
* upstreammaster

$ git remote -v
origin  git@github.com:userX/projectX.git
upstream    git@github.com:companyX/projectX.git
</code></pre>

<p>where userX is my private repository.</p>

<p>So I go and make some changes to my upstreammaster branch, and the PULL from ""upstream master"".
Everything merges and stuff:</p>

<pre><code>$ git pull upstream master
remote: Counting objects: 95, done.
remote: Compressing objects: 100% (60/60), done.
remote: Total 60 (delta 54), reused 0 (delta 0)
Unpacking objects: 100% (60/60), done.
From git@github.com:companyX/projectX
 * branch            master     -&gt; FETCH_HEAD
Merge made by recursive.
stuff                      |  165 ++++++++++++--------
stuff                      |   35 ++--
stuff                       |  107 ++++++++++---
stuff                       |  105 ++++++++++---
stuff             |   24 ++--
stuff               |    9 +-
stuff                   |   53 +++----
stuff            |   44 +++---
stuff              |   52 +++----
stuff |   32 +----
stuff          |    4 +-
 stuff             |  138 ++++++++---------
stuff     |   58 ++++----
stuff    |  115 ++++++++------
stuff          |    5 +-
stuff                       |   39 ++---
stuff                        |   28 ++--
 17 files changed, 560 insertions(+), 453 deletions(-)
</code></pre>

<p>but then when I try to do:</p>

<pre><code>$ git push upstream master
To git@github.com:companyX/projectX.git
 ! [rejected]        master -&gt; master (non-fast forward)
error: failed to push some refs to 'git@github.com:companyX/projectX.git'
</code></pre>

<p>Any help would be greately appreciated! If you need clarification please ask, I will reply!</p>
","41","68832","<git><push>"
"9953299","1","git submodules not updating in Jenkins build","<p>I have a submodule in a project in jenkins.  I've enabled the advanced setting to recursively update submodules.  When I run the build, I see that the workspace has the files from the submodule.  The problem is, it seems to be the first revision of the submodule.  When I push changes (repo hosted on github) jenkins doesn't seem to update the submodule to get the right changes.  Has anyone ever seen this?  </p>
","33","21773","<git><jenkins><git-submodules>"
"17267218","1","Perforce for Git users?","<p>There is a lot of ""Git for Perforce users"" documentation out there, but seemingly very little of the opposite.</p>

<p>I have only used Git previously and recently started a job where I have to use Perforce a lot, and find myself getting very confused a lot of the time. The concepts I'm used to from Git seem not to map to Perforce at all.</p>

<p>Is anyone interested in putting together a few tips for using Perforce for someone who is used to Git?</p>
","92","20590","<git><perforce>"
"673407","1","How do I clear my local working directory in git?","<p>How can I clear my working directory in git?</p>
","441","242114","<git>"
"12373733","1","Staging Deleted files","<p>Say I have a file in my git repostiory called <code>foo</code>.</p>

<p>Suppose it has been deleted with <code>rm</code> (not <code>git rm</code>).  Then git status will show:</p>

<pre><code>Changes not staged for commit:

    deleted: foo
</code></pre>

<p>How do I stage this individual file deletion?</p>

<p>If I try:</p>

<pre><code>git add foo
</code></pre>

<p>It says:</p>

<pre><code>'foo' did not match any files.
</code></pre>
","204","78631","<git><git-add><git-rm><git-stage>"
"715321","1","git status - is there a way to show changes only in a specific directory?","<p>I would like to see a list of files modified since the last commit, as 'git status' shows, but I care only about files located in a single directory. Is there a way to do this? I tried 'git status &lt;directory&gt;', but it seems this does something completely different (lists all changed files, as they would be if I wrote 'git add &lt;directory&gt;' first). </p>

<p>The documentation for git-status doesn't tell much, apart from the fact that it accepts the same options that git-commit does (but git-commit's purpose isn't to show lists of changed files...).</p>
","70","26794","<git><directory><status>"
"9976986","1","Force LF eol in git repo and working copy","<p>I have a git repository hosted on github. Many of the files were initially developed on Windows, and I wasn't too careful about line endings. When I performed the initial commit, I also didn't have any git configuration in place to enforce correct line endings. The upshot is that I have a number of files with CRLF line endings in my github repository.</p>

<p>I'm now developing partially on Linux, and I'd like to clean up the line endings. How can I ensure the files are stored correctly with LF on github, and have LF in my working copy?</p>

<p>I've set up a <code>.gitattributes</code> file containing <code>text eol=LF</code>; is that correct? With that committed and pushed, can I just <code>rm</code> my local repo and re-clone from github to get the desired effect?</p>
","59","23347","<git><github><eol>"
"2840816","1","git stash blunder: git stash pop and ended up with merge conflicts","<p>I did a <code>git stash pop</code> and ended up with merge conflicts. I removed the files from the file system and did a <code>git checkout</code> as shown below, but it thinks the files are still unmerged. I then tried replacing the files and doing a <code>git checkout</code> again and same result. I event tried forcing it with <code>-f</code> flag. Any help would be appreciated!</p>

<pre><code>chirag-patels-macbook-pro:haloror patelc75$ git status
app/views/layouts/_choose_patient.html.erb: needs merge
app/views/layouts/_links.html.erb: needs merge
# On branch prod-temp
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       modified:   db/schema.rb
#
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       unmerged:   app/views/layouts/_choose_patient.html.erb
#       unmerged:   app/views/layouts/_links.html.erb

chirag-patels-macbook-pro:haloror patelc75$ git checkout app/views/layouts/_choose_patient.html.erb
error: path 'app/views/layouts/_choose_patient.html.erb' is unmerged
chirag-patels-macbook-pro:haloror patelc75$ git checkout -f app/views/layouts/_choose_patient.html.erb
warning: path 'app/views/layouts/_choose_patient.html.erb' is unmerged
</code></pre>
","179","94427","<git><git-stash><git-checkout>"
"767147","1","Ignore the .gitignore file itself","<p>I just did a <code>git init</code> on the root of my new project.</p>

<p>Then I created a <code>.gitignore</code> file.</p>

<p>Now, when I type <code>git status</code>, <strong>.gitignore</strong> file appears in the list of untracked files. Why is that?</p>
","741","199179","<git><version-control><dvcs><gitignore>"
"12396622","1","What does ""1 line adds whitespace errors"" mean when applying a patch?","<p>I'm editing some markdown files of a cloned remote repository, and wanted to test creating and applying patches from one branch to another. However, every time I make any change at all, I get the following message during <code>git apply</code>:</p>

<pre><code>0001-b.patch:16: trailing whitespace.
warning: 1 line adds whitespace errors.
</code></pre>

<p>(This is happening on my Mac, and I don't know where the original code was created.)</p>

<p>What does the warning message mean, and do I need to care?</p>
","56","16863","<git><whitespace><patch><git-patch>"
"2845731","1","How to uncommit my last commit in git","<p>How can I uncommit my last commit in git?
I have googled it.</p>

<p>Is it </p>

<pre><code>git reset --hard HEAD
</code></pre>

<p>or </p>

<pre><code>git reset --hard HEAD^
</code></pre>

<p>Thank you.</p>
","346","246619","<git><undo><git-reset><git-index>"
"816619","1","Managing many git repositories","<p>Setting up a project is easy in git and so I can have separate repository even for small script. Now the problem is how to manage them.</p>

<p>I work in multiple places with these repositories. When I have done changes to some repository, I want to be able to update the repositories in other places.</p>

<p>So I have a directory with many repositories in it.</p>

<ol>
<li>How can I fetch all of them?</li>
<li>How can I check whether any of them have uncommitted changes?</li>
<li>How can I check whether any of them have changes to merge?</li>
</ol>

<p>And it would be nice to be able to do these with one command.</p>

<p>The output needs to be silent enough to actually notice the things to do.</p>
","36","16554","<git><multiple-repositories>"
"12420924","1","Git: Stash just a single file","<p>I'd like to be able to stash just the changes from a single file:</p>

<pre><code>git stash save -- just_my_file.txt
</code></pre>

<p>The above doesn't work though. Any alternatives?</p>
","34","27437","<git><git-stash>"
"5288172","1","git replace local version with remote version","<p>How can I tell git to ignore my local file and take the one from my remote branch without trying to merge and causing conflicts?</p>
","68","66461","<git>"
"26376832","1","Why does git say ""Pull is not possible because you have unmerged files""?","<p>When I try to pull in my project directory in the terminal, I see the following error:</p>

<pre><code>harsukh@harsukh-desktop:~/Sites/branch1$ git pull origin master
U app/config/app.php
U app/config/database.php
U app/routes.php
Pull is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'
as appropriate to mark resolution, or use 'git commit -a'.
</code></pre>

<p>Why does git say <code>""Pull is not possible because you have unmerged files""</code>, and how can I resolve it?</p>
","52","50395","<git>"
"24114676","1","git error: failed to push some refs to","<p>For some reason, I can't push now, whereas I could do it yesterday.
Maybe I messed up with configs or something.</p>

<p>This is what happens:</p>

<p>When I use the git push origin master</p>

<p><img src=""http://i.stack.imgur.com/hOuSj.png"" alt=""gitbashscr""></p>

<p>What my working directory and remote repository looks like:</p>

<p><img src=""http://i.stack.imgur.com/Sz17u.png"" alt=""enter image description here""></p>
","41","112827","<git><github>"
"861995","1","Is it possible for git-merge to ignore line-ending differences?","<p>Is it possible for <code>git merge</code> to ignore line-ending differences?</p>

<p>Maybe I'm asking the wrong question ... but:</p>

<p>I tried uisng <code>config.crlf input</code> but things got a bit messy and out of control, specially when I applied it <em>after the fact</em>.</p>

<p>For one thing, applying this config after the fact doesn't seem to affect files that were committed to the repository before applying this option. Another thing is that suddenly all commits now result in lots of annoying warning messages about CRLF being converted to LF.</p>

<p>To be honest, I don't really care what line-ending is used, I personally prefer the Unix style <code>\n</code>, but whatever. All I care about, is for <code>git merge</code> to be a bit smarter and ignore the differences in line-endings.</p>

<p>Sometimes I have two identical files, but git would mark them as being in conflict (and the conflict is the <em>whole</em> file) simply because they use a different line ending character.</p>

<h3>Update:</h3>

<p>I found out that <code>git diff</code> accepts a <code>--ignore-space-at-eol</code> option, would it be possible to let <code>git merge</code> use this option as well?</p>
","100","46061","<git><merge><git-svn><line-endings><eol>"
"2351108","1","git: merge two branches: what direction?","<p>We have the following situation:</p>

<pre><code>             A --- B --- C --- ... --- iphone
           /
  ... --- last-working --- ... --- master
</code></pre>

<p>Between last-working and iPhone, 32 commits were made. Between last-working and master, <em>a lot</em> of commits were made.</p>

<p>What I want now is a new branch where I have iphone and current master merged together. And at some later time, this should be merged into the master.</p>

<p>First, I planned to do:</p>

<pre><code>git checkout iphone -b iphone31
git merge master
</code></pre>

<p>But then I thought, if it would be better to do:</p>

<pre><code>git checkout master -b iphone31
git merge iphone
</code></pre>

<p>Now I am wondering. <strong>What would be the difference in the result?</strong> Would the merge behave different?</p>

<p>I already tried both and as I have expected, I got <em>many</em> conflicts because iphone is really old compared to master. Now I wonder about the easiest way to merge them.</p>

<p>Maybe even starting with master and merging each single commit of iphone into it would be easier? Like doing this:</p>

<pre><code>git checkout master -b iphone31
git merge A
git merge B
git merge C
...
git merge iphone
</code></pre>

<hr>

<p>At the very end, when this merge is done (i.e. all conflicts are resolved and it is working), I want to do this:</p>

<pre><code>git checkout master
git merge iphone31
</code></pre>
","40","52399","<git><merge><git-merge>"
"14894768","1","In git how is fetch different than pull and how is merge different than rebase?","<p>I just cant understand this. I been reading a lot on the web and books and something is just not staying in my head. Can someone please give me the dummy version of the following:</p>

<ul>
<li>git fetch vs pull</li>
<li>git merge vs rebase</li>
</ul>
","101","50321","<git>"
"107701","1","How can I Remove .DS_Store files from a Git repository?","<p>How can I remove those annoying Mac OS X <code>.DS_Store</code> files from a Git repository?</p>
","582","220802","<osx><git><gitignore>"
"4830856","1","Is it possible to use pip to install a package from a private github repository?","<p>As the title suggests I am trying to install a python package from a private github repo. For a public repository I can issue the following command which works fine:</p>

<pre><code>pip install git+git://github.com/django/django.git
</code></pre>

<p>However if I try this for a private repository:</p>

<pre><code>pip install git+git://github.com/echweb/echweb-utils.git
</code></pre>

<p>I get the following output:</p>

<pre><code>Downloading/unpacking git+git://github.com/echweb/echweb-utils.git
Cloning Git repository git://github.com/echweb/echweb-utils.git to /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-VRsIoo-build
Complete output from command /usr/local/bin/git clone git://github.com/echweb/echweb-utils.git /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-VRsIoo-build:
fatal: The remote end hung up unexpectedly

Cloning into /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-VRsIoo-build...

----------------------------------------
Command /usr/local/bin/git clone git://github.com/echweb/echweb-utils.git /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-VRsIoo-build failed with error code 128
</code></pre>

<p>I guess this is because I am trying to access a private repository without providing any authentication. I therefore tried to use git+ssh hoping that pip would use my ssh public key to authenticate:</p>

<pre><code>pip install git+ssh://github.com/echweb/echweb-utils.git
</code></pre>

<p>This gives the following output:</p>

<pre><code>Downloading/unpacking git+ssh://github.com/echweb/echweb-utils.git
Cloning Git repository ssh://github.com/echweb/echweb-utils.git to /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-DQB8s4-build
Complete output from command /usr/local/bin/git clone ssh://github.com/echweb/echweb-utils.git /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-DQB8s4-build:
Cloning into /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-DQB8s4-build...

Permission denied (publickey).

fatal: The remote end hung up unexpectedly

----------------------------------------
Command /usr/local/bin/git clone ssh://github.com/echweb/echweb-utils.git /var/folders/cB/cB85g9P7HM4jcPn7nrvWRU+++TI/-Tmp-/pip-DQB8s4-build failed with error code 128
</code></pre>

<p>Does anyone know if it what I am trying to achieve is even possible? If so can you please tell me how?</p>
","126","63362","<python><git><github><pip>"
"897586","1","Does Git publicly expose my e-mail address?","<p>The guides I've read so far on Git say that I should go into the config and specify my name and my e-mail address. They don't elaborate; they just say to do it.</p>

<p>Why does Git need my e-mail address? And, more importantly, if I make my repo publicly available, via GitHub for example, will my e-mail address be visible to everyone (including spambots)?</p>
","49","8250","<git><privacy>"
"7704480","1","Why does git commit not save my changes?","<p>I did a <code>git commit -m ""message""</code> like this</p>

<pre><code>&gt;git commit -m ""save arezzo files""
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   arezzo.txt
#       modified:   arezzo.jsp
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>but afterwards, when I do <code>git status</code> it shows the same modified files:</p>

<pre><code>&gt;git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   arezzo.txt
#       modified:   arezzo.jsp
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>What am I doing wrong?</p>
","177","142189","<git><version-control><git-commit>"
"4869815","1","Importing a Maven project into Eclipse from Git","<p>How can I get the effect of choosing to import from both Maven and Git and have Eclipse properly generate my project? </p>

<p>To get my project into Eclipse I can choose File->import->maven and then I get all the Maven projects imported and can build fine, or I can choose File->import->git and make a new project that ignores the pom.xml and does not generate the project properly. </p>

<p>It seems I can do one or the other but not combine both so I get a correctly generated project.</p>
","68","58444","<eclipse><git><maven>"
"2421011","1","Output of git branch in tree like fashion","<p>Right now, when I type ""git branch""</p>

<p>it lists my branches in an arbitrary order.</p>

<p>What I would prefer would be if ""git branch"" listed my output in a tree like fasion, somethign like:</p>

<pre><code>master
|-- foo
  |-- foo1
  |-- foo2
|-- bar
  |-- bar4
</code></pre>

<p>Where here, foo &amp; bar were branched from master; foo1 &amp; foo2 were branched from foo; bar4 was branched from bar.</p>

<p>Is this easy to accomplish?</p>

<p>[Command line utilities only. This needs to fit into my zsh/vim workflow.]</p>
","58","41434","<git>"
"250238","1","Collapsing a git repository's history","<p>We have a git project which has quite a big history.</p>

<p>Specifically, early in the project there were quite a lot of binary resource files in the project, these have now been removed as they're effectively external resources.</p>

<p>However, the size of our repository is >200MB (the total checkout is currently ~20MB) due to having these files previously committed.</p>

<p>What we'd like to do is ""collapse"" the history so that the repository appears to have been created from a later revision than it was. For example</p>

<pre><code>1-----2-----3-----4-----+---+---+
                   \       /
                    +-----+---+---+
</code></pre>

<ol>
<li>Repository created</li>
<li>Large set of binary files added</li>
<li>Large set of binary files removed</li>
<li>New intended 'start' of repository</li>
</ol>

<p>So effectively we want to lose the project history before a certain point. At this point there is only one branch, so there's no complication with trying to deal with multiple start points etc. However we don't want to lose all of the history and start a new repository with the current version.</p>

<p>Is this possible, or are we doomed to have a bloated repository forever?</p>
","76","25898","<git><version-control>"
"5377960","1","What's the best practice to ""git clone"" into an existing folder?","<p>I have a working copy of the project, without any source control meta data. Now, I'd like to do the equivalent of git-clone into this folder, and keep my local changes.</p>

<p>git-clone doesn't allow me to clone into an existing folder. What is the best practice here?</p>
","161","100479","<git>"
"9670745","1","How to restore a whole directory from history of git repository?","<p>I would like to restore a whole directory (recursively) from the history of my git repository.</p>

<p>There is only 1 branch (master).</p>

<p>I know the commit where errors were included.</p>

<p>Can I use the sha1 hash of the parent commit to restore the state of the directory as it was before the errors were included?</p>

<p>I thought about something like this:</p>

<pre><code>git checkout 348ce0aa02d3738e55ac9085080028b548e3d8d3 path/to/the/folder/
</code></pre>

<p>but it did not work.</p>
","33","20319","<git>"
"2459763","1","How do I remove msysgit's right click menu options?","<p>This isn't the best programming question but lets face it, the server fault guys aren't well versed in git, so I think its more towards this audience.</p>

<p>I want to switch to TortoiseGit, or PortableGit in my shell, but I'm left with these annoying context-menu options.</p>

<p>How do I get them to go away? Do I have to write a script to uninstall them?  </p>
","297","40176","<git><tortoisegit><msysgit>"
"14541253","1","Commit empty folder structure (with git)","<p>I have data directory in project's root. It has images directory and some files. Here is example:</p>

<ul>
<li>data/
<ul>
<li>images/
<ul>
<li>image1.jpg</li>
<li>image2.jpg</li>
<li>image2.jpg</li>
</ul></li>
<li>results.csv</li>
<li>r.txt</li>
</ul></li>
</ul>

<p>What to write in gitignore, to ignore files from data/ directory (that is results.csv and r.txt) and files from images/ directory (image.jpg, image2.jpg, image3.jpg)?</p>

<p>When I commit it, folder structure in repository should be:</p>

<ul>
<li>data/
<ul>
<li>images/</li>
</ul></li>
</ul>

<p>So, I just want empty folder structure to be commited.</p>
","36","43594","<git><gitignore>"
"4917871","1","Does git return specific return error codes?","<p>Like merging errors, or rebase errors. Does it have a unique error code?</p>
","40","28773","<git>"
"2474097","1","How do I finish the merge after resolving my merge conflicts?","<p>I' reading the <a href=""http://book.git-scm.com/3_basic_branching_and_merging.html"">Basic Branching and Merging</a> section of the Git Community Book.</p>

<p>So I follow it and create one branch: <code>experimental</code>.</p>

<p>Then I</p>

<ol>
<li>switch to experimental branch (git checkout experimental)</li>
<li>make a bunch of changes</li>
<li>commit it (git commit -a)</li>
<li>switch to master branch (git checkout master)</li>
<li>make some changes and commit there</li>
<li>switch back to experimental (git checkout experimental)</li>
<li>merge master change to experimental (git merge master)</li>
<li><p>there are some conflicts but after I resolve them, I did 'git add myfile'</p></li>
<li><p>And now i am stuck, I can't move back to master</p></li>
</ol>

<p>when I do </p>

<pre><code> $ git checkout master
error: Entry 'res/layout/my_item.xml' would be overwritten by merge. Cannot merge.
</code></pre>

<p>and I did:</p>

<pre><code>$ git rebase --abort
</code></pre>

<p>No rebase in progress?</p>

<p>and I did :</p>

<pre><code>$  git add res/layout/socialhub_list_item.xml
$ git checkout master
error: Entry 'res/layout/my_item.xml' would be overwritten by merge. Cannot merge.
</code></pre>

<p>What can I do so that I can go back to my master branch?</p>
","72","59564","<git><git-merge>"
"296975","1","How do I tell git-svn about a remote branch created after I fetched the repo?","<p>I'm using <code>git-svn</code> to work against my company's central <code>svn</code> repository. We've recently created a new feature branch in the central repo. How do I tell <code>git</code> about it? When I run <code>git branch -r</code> I can only see the branches that existed when I ran <code>fetch</code> against the <code>svn</code> repo to initialize my <code>git</code> repo?</p>
","157","48405","<git><git-svn>"
"2474353","1","How to copy commits from one branch to another?","<p>I've got two branches from my master:</p>

<ul>
<li><strong>v2.1</strong>: (version 2) I've been working on for several months</li>
<li><strong>wss</strong>: that I created yesterday to add one specific feature to my master (in production)</li>
</ul>

<p>Is there a way to copy yesterday's commits from wss to v2.1?</p>
","236","150745","<git><branching-and-merging>"
"9683279","1","Make the current commit the only (initial) commit in a Git repository?","<p>I  currently have a local Git repository, which I push to a Github repository.</p>

<p>The local repository has ~10 commits, and the Github repository is a synchronised duplicate of this.</p>

<p>What I'd like to do is remove ALL the version history from the local Git repository, so the current contents of the repository appear as the only commit (and therefore older versions of files within the repository are not stored). </p>

<p>I'd then like to push these changes to Github.</p>

<p>I have investigated Git rebase, but this appears to be more suited to removing specific versions.
Another potential solution is to delete the local repo, and create a new one - though this would probably create a lot of work!</p>

<p>ETA: There are specific directories / files that are untracked - if possible I would like to maintain the untracking of these files.</p>
","256","81440","<git><github>"
"14564946","1","git status shows changed files but git diff doesn't","<p>I've had a look at all similar questions however I've double checked and something strange is definitely happening.</p>

<p>On one server (Solaris with git 1.8.1) I cloned the git repository then copied the .git folder into my existing live files. This worked perfectly, I could run </p>

<pre><code>git status
</code></pre>

<p>then </p>

<pre><code>git diff [filename]
</code></pre>

<p>to check any files that were different.</p>

<p>On another server (Solaris with git 1.7.6) I'm doing exactly the same however</p>

<pre><code>git diff [filename] 
</code></pre>

<p>shows nothing, even if the contents of the file is definitely different. I have also tested adding a new file, committing it then editing. Same issue, <code>git status</code> shows the file as changed but <code>git diff</code> shows nothing. If I download the changed file and run a diff locally then I get diff output.</p>
","53","19361","<git><diff>"
"4948190","1","git repository sync between computers, when moving around?","<p>Let's say that I have a desktop pc and a laptop, 
and sometimes I work on the desktop and sometimes I work on the laptop.</p>

<p>What is the easiest way to move a git repository back and forth?</p>

<p>I want the git repositories to be identical, 
so that I can continue where I left of at the other computer.</p>

<p>I would like to make sure that I have the same branches and tags on both of the computers.</p>

<p>Thanks
Johan</p>

<p>Note: I know how to do this with SubVersion, but I'm curious on how this would work with git. If it is easier, I can use a third pc as classical server that the two pc:s can sync against.</p>

<p>Note: Both computers are running Linux.</p>

<hr>

<p><strong>Update</strong>:</p>

<p>So let's try XANI:s idea with a bare git repo on a server, 
and the push command syntax from KingCrunch.
In this example there is two clients and one server.</p>

<p>So let's create the server part first.</p>

<pre><code>ssh user@server
mkdir -p ~/git_test/workspace
cd ~/git_test/workspace
git --bare init
</code></pre>

<p>So then from one of the other computers I try to get a copy of the repo with clone:</p>

<pre><code>git clone user@server:~/git_test/workspace/
Initialized empty Git repository in /home/user/git_test/repo1/workspace/.git/
warning: You appear to have cloned an empty repository.
</code></pre>

<p>Then go into that repo and add a file:</p>

<pre><code>cd workspace/
echo ""test1"" &gt; testfile1.txt
git add testfile1.txt
git commit testfile1.txt -m ""Added file testfile1.txt""
git push origin master
</code></pre>

<p>Now the server is updated with testfile1.txt.</p>

<p>Anyway, let's see if we can get this file from the other computer.</p>

<pre><code>mkdir -p ~/git_test/repo2
cd ~/git_test/repo2
git clone user@server:~/git_test/workspace/
cd workspace/
git pull
</code></pre>

<p>And now we can see the testfile.</p>

<p>At this point we can edit it with some more content and update the server again.</p>

<pre><code>echo ""test2"" &gt;&gt; testfile1.txt
git add testfile1.txt
git commit -m ""Test2""
git push origin master
</code></pre>

<p>Then we go back to the first client and do a git pull to see the updated file.
And now I can move back and forth between the two computers, 
and add a third if I like to.</p>
","60","22700","<git><version-control>"
"4964099","1","What is a git ""Snapshot""?","<p><a href=""http://schacon.github.io/gitbook/3_comparing_commits_-_git_diff.html"" rel=""nofollow"">The official Git doc</a> says:</p>

<blockquote>
  <p><code>$ git diff test</code></p>
  
  <p>This will show you what is different between your current working directory and the snapshot on the 'test' branch</p>
</blockquote>

<p>As a newbie this is very confusing. I've never heard of the term snapshot. Do they mean the ""HEAD"" of the ""test"" branch?</p>
","41","21028","<git>"
"372506","1","How can I search Git branches for a file or directory?","<p>In Git, how could I search for a file or directory by path across a number of branches?</p>

<p>I've written something in a branch, but I don't remember which one.  Now I need to find it.</p>

<p><strong>Clarification</strong>:  I'm looking for a file which I created on one of my branches.  I'd like to find it by path, and not by its contents, as I don't remember what the contents are.</p>
","180","53859","<git><branch>"
"9739352","1","Git stash pop- needs merge, unable to refresh index","<p>I can't pop my stash because I merged a branch which apparently conflicts with my stash and now my stash is seemingly unable to be popped.</p>

<pre><code>app.coffee: needs merge
unable to refresh index
</code></pre>

<p>Anyone know how to resolve this?</p>

<p><strong>FIXED!</strong></p>

<p>Turns out the actual issue was an unresolved merge conflict from the merge, <strong>NOT</strong> that the stash would cause a merge conflict.</p>

<p>Resolution: Commit the conflicted file.</p>
","31","35004","<git><git-stash>"
"420143","1","Making git auto-commit","<p>I'd like to use git to record all the changes to a file. </p>

<p>Is there a way I can turn git 'commit' on to automatically happen every time a file is updated - so there is a new commit for every change to a file?</p>

<p>Ideally I'd like my users to not even know that git is running behind the scenes. A user could then potentially ""undo"" changes to a file - and this could be achieved by pulling a previous version out of git.</p>
","103","40237","<git>"
"5033441","1","Where does Git store the SHA1 of the commit for a submodule?","<p>I know that when you add a submodule to a git repository it tracks a particular commit of that submodule referenced by its sha1.</p>

<p>I'm trying to find where this sha1 value is stored.</p>

<p>The <code>.gitmodules</code> and <code>.git/config</code> files only show the paths for the submodule, but not the sha1 of the commit.</p>

<p>The <a href=""http://git-scm.com/docs/git-submodule"">git-submodule(1)</a> reference only speaks of a <code>gitlink</code> entry and the <a href=""http://www.kernel.org/pub/software/scm/git/docs/gitmodules.html"">gitmodules(5)</a> reference doesn't say anything about this either.</p>
","36","5820","<git><internals><git-submodules><sha>"
"462974","1","What are the differences between double-dot "".."" and triple-dot ""..."" in Git commit ranges?","<p>Some Git commands take commit ranges and one valid syntax is to separate two commit names with two dots <code>..</code>, and another syntax uses three dots <code>...</code>.</p>

<p>What are the differences between the two?</p>
","171","21553","<git><git-diff><git-log>"
"5074452","1","Git - how to force merge conflict and manual merge on selected file","<p>We maintain web application which has common master branch and many parallel branches, one for each installation, each have few specific changes. Source code is managed in git and it is terrific tool when we need transfer features and bugfixes from master branch into parallel ones. But are few files that are sensitive and automatic merging usually give bad results. So merging would be much easier if they can be somehow marked and every merge would result in conflict requiring manual merge.</p>

<p>I searched for an answer :</p>

<ol>
<li>I am using <strong>--no-commit</strong> and <strong>--no-ff</strong> merge options, but it is not the same.</li>
<li><a href=""http://kerneltrap.org/mailarchive/git/2008/11/9/4047284/thread"">Here</a> and <a href=""http://git.661346.n2.nabble.com/force-a-merge-conflict-td1477477.html"">here</a> someone asks the same question but with no solution.</li>
<li>Similar case seems to be <a href=""http://stackoverflow.com/questions/4515679/git-workflow-can-i-prevent-a-certain-file-from-being-merged-to-another-branch-bu"">how to prevent file being merged</a> using .gitattributes containing: <strong>somefile.php merge=ours</strong> . I tried to find some merge option which would generate conflict or force manual merge but found none so far.</li>
<li>.gitattributes containing: <strong>somefile.php -merge</strong> is never merged automatically and therefore forcing manual merge. It is 90% solution, but what I seek is to try automatic merge and mark it as conflict regardless it is successful or not. <strong>But this is so far closest to solution.</strong> <em>(...thanks Charles Bailey for clarification...)</em></li>
<li>Someone suggest to write custom merge driver (<a href=""http://stackoverflow.com/questions/3038185/manual-merge-on-git"">1</a>, <a href=""http://stackoverflow.com/questions/928646/how-do-i-tell-git-to-always-select-my-"">2</a>), but how to do it is far from clear to me. </li>
</ol>

<p><strong>edit:</strong> variant 4. description</p>
","53","20676","<git><merge><branch><conflict><manual>"
"5091017","1","How to track directories but not their files with Git?","<p>I've recently started using Git and am having trouble with just one thing. How can I track directories without tracking their contents?</p>

<p>For example the site I'm working on allows uploads. I want to track the uploads directory so that it is created when branching, etc. but obviously not the files within it (test files whilst in develop branch or the real files in master).</p>

<p>In my .gitignore I have the following:</p>

<pre>uploads/*.*</pre>

<p>Have also tried (which ignores the whole directory):</p>

<pre>uploads/</pre>

<p>This directory may also contain sub directories (uploads/thumbs/ uploads/videos/) I would like to be able to track these but not their files.</p>

<p>Is this possible with Git? I've searched everywhere without finding an answer.</p>
","31","10365","<git><directory><gitignore>"
"2657935","1","Checking for a dirty index or untracked files with Git","<p>How can I check if I have any uncommitted changes in my git repository:</p>

<ol>
<li>Changes added to the index but not committed</li>
<li>Untracked files</li>
</ol>

<p>from a script?</p>

<p><code>git-status</code> seems to always return zero with git version 1.6.4.2.</p>
","149","39022","<git><shell>"
"9864728","1","How to get Git to clone into current directory","<p>I'm doing:</p>

<pre><code>git clone ssh://user@host.com/home/user/private/repos/project_hub.git ./
</code></pre>

<p>I'm getting:</p>

<blockquote>
  <p>Fatal: destination path '.' already exists and is not an empty
  directory.</p>
</blockquote>

<p>I know path . already exists.
And I can assure that directory IS empty. (I do ls inside and I see nothing!)</p>

<p><strong>What am I missing here in order to clone that project into the current directory ?</strong></p>
","161","144594","<git><git-clone>"
"2706797","1","Finding what branch a git commit came from","<p>Is there any way to find out what branch a commit comes from given its sha1? </p>

<p>Bonus points if you can tell me how to accomplish this using Ruby Grit.</p>
","321","87467","<git><grit>"
"12288212","1","git update-index --assume-unchanged on directory","<p>git 1.7.12</p>

<p>I want to mark all files below a given directory as assume-unchanged.</p>

<p>1) <code>git update-index --assume-unchaged dir/</code> gives ""Ignoring path.""  </p>

<p>2) <code>git update-index --assume-unchaged dir/*</code> quickly fails because it will encounter files which are not being tracked, hence it gives ""fatal: Unable to mark file"" and quits.  </p>

<p>3) Try generating a list of files to mark.  <code>cd</code> into the desired directory and then run <code>git ls-files | tr '\n' ' ' | git update-index --assume-unchanged</code>.  This produces no error message, but it does not successfully mark the files.  The first portion of the command, <code>git ls-files | tr '\n' ' '</code>, correctly produces a space delimited list of all the files I want to mark.  If I copy and paste the output of that command onto the command-line, then the <code>git update-index</code> command works.  What is not working with the pipes?</p>

<p>No, it is not sufficient for me to add <code>dir</code> to .gitignore.  I need these files to be in the repository, but undesired changes will be made locally that need to be ignored so that users can do pulls.  </p>
","51","19336","<git><command-line><pipe>"
"5162800","1","git diff between cloned and original remote repository","<p>I have cloned a github repository and made no changes locally. Github repository moved forward with commits on the same branch.</p>

<ol>
<li>How do I find a diff between my local repository and the original github repository?</li>
<li>How do I find a diff between my working copy and the original github repository?</li>
<li>How do I find a diff between my local repository and another github repository of the same project?</li>
</ol>
","108","90558","<git><version-control><github>"
"2733873","1","Reverting a single file to a previous version in git","<p>Is there a way to go through different commits on a file. 
Say I modified a file 5 times and I want to go back to change 2, after I already committed and pushed to a repository.</p>

<p>In my understanding the only way is to keep many branches, have I got that right?
If I'm right I'm gonna have hundreds of branches in a few days, so I'm probably not understanding it really.</p>

<p>Could anyone clear that up please?</p>
","239","173891","<git><revert>"
"7548661","1","Git/GitHub can't push to master","<p>I am new to Git/GitHub and ran into an issue. I created a test project and added it to the local repository. Now I am trying to add files/project to the remote repository.</p>

<p>Here's what I did (and this worked) -</p>

<pre><code>git remote add origin git://github.com/my_user_name/my_repo.git
</code></pre>

<p>Now when I try to push the repository to GitHub, using the following command, I get the following error -</p>

<pre><code>git push origin master
</code></pre>

<p>Error -</p>

<pre><code>fatal: remote error:
You can't push to git://github.com/my_user_name/my_repo.git
Use git@github.com:my_user_name/my_repo.git
</code></pre>
","127","58799","<git><github>"
"7548926","1","Git and ""The branch 'x' is not fully merged"" Error","<p>Here are the commands I used from the master branch</p>

<pre><code>git branch experiment
git checkout experiment
</code></pre>

<p>Then I made some changes to my files, committed the changes, and pushed the new branch to GitHub.</p>

<pre><code>git commit .
git push -u origin experiment
</code></pre>

<p>Not that after <code>git commit .</code> I was prompted for a commit message, and I gave it one. Later on I decided to merge my experiment branch into the master branch.</p>

<pre><code>git checkout master
git merge experiment
</code></pre>

<p>Finally I pushed the changes to GitHub.</p>

<pre><code>git push -u origin master
</code></pre>

<p>All went well until I tried deleting my experiment branch using</p>

<pre><code>git branch -d experiment
</code></pre>

<p>I got the error message <code>error: The branch 'experiment' is not fully merged.</code> I'm a bit new to git, and I don't know how much more I could possibly merge the two branches. What am I missing here?</p>
","127","42040","<git><git-branch>"
"623130","1","Git and Trac (or similar)","<p>In the past I have really enjoyed using <a href=""http://trac.edgewall.org/"">Trac</a> with subversion repositories hosted on some of my own servers.  The integrated ticketing and online code browsing is very convenient.</p>

<p>I have used <a href=""http://github.com"">github</a> for some of my public projects but I don't have the money to shell out for an extra service, espcially when I am already paying for remote VPS hosting.</p>

<p>Does anyone know of or have any experience setting up something like Trac with git version control?  Specifically, I can already push to a remote server but I would like some web interface that allows me (and people working with me) to see that commits and current state of the codebase online without making the project public.  I am aware of <a href=""http://trac-hacks.org/wiki/GitPlugin"">GitPlugin</a> but have not been able to get it up and running successfully.  Any other suggestions?</p>

<p>Integrated ticketing (and wiki) is desired but not an absolute necessity.</p>

<p><strong>Edit:</strong></p>

<p>After playing around with GitPlugin and Trac a bit more I have been able to get it up and running.  The main problem was that I needed to explicitly enable the plugin for the trac environment by doing something like this in trac.ini:</p>

<pre><code>[components]
# for version 0.10
gitplugin.* = enabled
# for version 0.11
tracext.git.* = enabled
</code></pre>

<p>I may also try out <a href=""http://www.redmine.org/"">Redmine</a> and <a href=""http://hjemli.net/git/cgit/"">CGit</a> as this seem like other pieces of software that do what I am looking for.  Any other suggestions are welcome.</p>
","43","27900","<git><version-control><github><bug-tracking>"
"9933004","1","How to to disable Git end-of-line (CRLF to LF) across all clones/machines?","<p>As one can glean <a href=""http://stackoverflow.com/questions/2332349/best-practices-for-cross-platform-git-config"">from</a> <a href=""http://stackoverflow.com/questions/2016673/definitive-recommendation-for-git-autocrlf-settings"">other</a> <a href=""http://stackoverflow.com/questions/1249932/git-1-6-4-beta-on-windows-msysgit-unix-or-dos-line-termination"">posts</a>, Git's end-of-line normalization has its pros and cons. I have one particular Windows-only project where I think the best thing to do is to is to disable end-of-line normalization altogether. That is, I want to leave all newlines (most of which are <code>CRLF</code>) intact, rather than have git normalize them to <code>LF</code>-only behind the scenes, and I want that change to affect all clones of the repository on all machines. The question is the most effective way to do it.</p>

<p>Most discussions of Git end-of-line normalization are in terms of <code>core.autocrlf</code>, and I could accomplish my goal by setting <code>core.autocrlf=false</code>. However, this is a git-config setting, and I believe one has to set that separately on each machine by machine. If true, that seems error prone, especially since the <a href=""http://code.google.com/p/msysgit/""><code>msysgit</code></a> installer guides one into setting <code>core.autocrlf=true</code>.</p>
","50","11948","<git><newline><gitattributes><core.autocrlf>"
"2763006","1","Change the current branch to master in git","<p>I have a repository in git. I made a branch, then did some changes both to the master and to the branch.</p>

<p>Then, tens of commits later, I realized the branch is in much better state than the master, so I want the branch to ""become"" the master and disregard the changes on master. </p>

<p>I cannot merge it, because I don't want to keep the changes on master. What should I do?</p>

<p><em>Extra</em>: in this case, the 'old' master has already been <code>push</code>-ed to another repository such as github. How does this change things?</p>
","847","382107","<git>"
"2788092","1","Start a git commit message with a hashmark (#)","<p>Git treats lines starting with <code>#</code> as comment lines when committing. this is very annoying when working with a ticket tracking system, and trying to write the ticket number at the beginning of the line, e.g.</p>

<pre><code>#123 salt hashed passwords
</code></pre>

<p>git will simply remove the line from the commit message. is there any way to escape the hash? i tried <code>\</code> and <code>!</code>, but nothing works. whitespaces before <code>#</code> are preserved, so they aren't a working solution to the problem either.</p>
","111","17202","<git><commit><ticket-system><ticket-tracking>"
"5212304","1","Authenticate Jenkins CI for Github private repository","<p>I'd like for Jenkins to automagically fetch data from my private repository hosted on Github.
But I have no idea how to accomplish that task.. Tried the documentation, generating ssh-key for jenkins user and all what I can see is: ""unable to clone the repo"". I've checked URLs - they are valid.</p>

<p>Any clues, maybe you know some docs/blogs/whatever which are describing this kind of stuff?</p>
","103","69483","<git><continuous-integration><hudson><github><jenkins>"
"2318777","1","Undo a particular commit in Git that's been pushed to remote repos","<p>What is the simplest way to undo a particular commit that is:</p>

<ul>
<li>not in the head or HEAD</li>
<li>Has been pushed to the remote.</li>
</ul>

<p>Because if it is not the latest commit, </p>

<pre><code>git reset HEAD
</code></pre>

<p>doesn't work. And because it has been pushed to a remote,</p>

<pre><code>git rebase -i
</code></pre>

<p>and</p>

<pre><code>git rebase --onto
</code></pre>

<p>will cause some problem in the remotes. </p>

<p>More so, I don't want to modify the history really. If there was bad code, it was there in the history and can be seen. I just want it out in the working copy, and I don't mind a reverse merge commit.</p>

<p>In other words, what is the <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> equivalent of the following svn commands:</p>

<pre><code>svn merge -r 303:295 http://svn.example.com/repos/calc/trunk
</code></pre>

<p>which removes all changes from 295 to 302 by reverse merging all changes in those revisions, as a new commit.</p>

<pre><code>svn merge -c -302 ^/trunk
</code></pre>

<p>which undoes the 302 commit, of course by adding another commit that reverse merges the changes from that respective commit.</p>

<p>I thought it should be a fairly simple operation in Git and a fairly common use case. What else is the point of atomic commits? </p>

<p>We have staging <a href=""http://en.wikipedia.org/wiki/Git_%28software%29#Stash"">stashing</a> and all to ensure the commits are perfectly atomic, shouldn't you be able to undo one or more of those atomic commits easily?</p>
","379","124408","<git><version-control><git-reset><git-revert>"
"7151311","1","Using git, how could I search for a string across all branches?","<p>Using git, how could I search within all files in all local branches for a given string ?</p>

<p>Github specific : is it possible to perform the above search across all github branches ? (There are several remote branches on my remote github repo that ideally I wouldn't have to bring down for this search..)</p>
","44","10755","<git><search><github><branch>"
"21848","1","Switch branch names in git","<p>There may be more than one way to ask this question, so here's a desciption of the problem. I was working on master and committed some stuff and then decided I wanted to put that work on hold. I backed up a few commits and then branched from before I started my crap work. Practically this works fine, I just now have a different branch as my main development branch. I'm wondering how I could change things around so I'm working on master again but it doesn't have my junk work and said work is on a different branch.</p>

<p>Some ways this could be asked/solved:
How do I rename my master branch to something else and then rename something else to master?
How do I back up master and then cause all commits I've backed up past to be on a different branch?</p>

<p>Thanks for all the (quick) answers! They're all good.</p>
","93","39003","<git><branch>"
"43995","1","Why is branching and merging easier in Mercurial than in Subversion?","<p>Handling multiple merges onto branches in Subversion or CVS is just one of those things that has to be experienced. It is inordinately easier to keep track of branches and merges in Mercurial (and probably any other distributed system) but I don't know why. Does anyone else know?</p>

<p>My question stems from the fact that with Mercurial you can adopt a working practice similar to that of Subversions/CVSs central repository and everything will work just fine. You can do multiple merges on the same branch and you won't need endless scraps of paper with commit numbers and tag names.</p>

<p>I know the latest version of Subversion has the ability to track merges to branches so you don't get quite the same degree of hassle but it was a huge and major development on their side and it still doesn't do everything the development team would like it to do.</p>

<p>There must be a fundamental difference in the way it all works.</p>
","87","10985","<svn><git><version-control><mercurial>"
"7623278","1","Showing branch hierarchy at the command line?","<p>I'm curious if there is a way to show branch hierarchy on the command line? For instance if I use <code>git branch</code>, instead of seeing output like this:</p>

<pre><code>* master
joes_work
refactoring
experiment
</code></pre>

<p>You see output like this:</p>

<pre><code>* master
    joes_work
    refactoring
        experiment
</code></pre>

<p>That way it's easy to see which branch a particular branch.. branched off of. Even if there's no specific command that outputs a tree structure, is there a command that outputs information on which branch came from which branch? I can use a perl script to format the output.</p>
","33","14126","<git>"
"2342821","1","Git branch deletion","<p>In Git, what does ""deletion"" of a branch mean?</p>

<p>Will it be gone from the repository?  Or will it still be navigable to via <code>git branch</code>?</p>

<p>What I really want to do is mark a branch as ""dead end"", i.e., the branch is so far from master, that nobody should use it as a starting point, though there were some good ideas down that branch, so we'd like to keep it, for reference.</p>
","59","18719","<git><branch><git-branch>"
"14848274","1","Git log to get commits only for a specific branch","<p>I want to list all commits that are only part of an specific branch. </p>

<p>With the following,it lists all the commits from the branch, but also from the parent (master)</p>

<pre><code>git log mybranch
</code></pre>

<p>The other option I found, was to excludes the commits reachable by master and gives me what I want BUT I would like to avoid the need of knowing the other branches names.</p>

<pre><code>git log mybranch --not master
</code></pre>

<p>Was trying to use <code>git for-each-ref</code> but it also listing mybranch so actually is excluding all</p>

<pre><code>git log mybranch --not $(git for-each-ref --format '^%(refname:short)' refs/heads/)
</code></pre>

<p><strong>Update:</strong></p>

<p>I'm testing a new option that I found a while ago, till now seams that could be what I was looking for:</p>

<pre><code>git log --walk-reflogs mybranch
</code></pre>

<p><strong>Update (02/13/13 15:08):</strong></p>

<p>The --walk-reflogs option is good but I checked that there is an expiration for reflogs.
(default 90 days, <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-gc.html"">gc.reflogExpire</a>)</p>

<p>I think I find the answer I was looking for:</p>

<pre><code>git log mybranch --not $(git for-each-ref --format='%(refname)' refs/heads/ | grep -v ""refs/heads/mybranch"")
</code></pre>

<p>I'm just removing the current branch from list of branches availables and using that list to be excluded from the log, this way I only get the commits that are <strong>only reached by mybranch</strong>.</p>
","54","38011","<git>"
"4822321","1","Remove all git files from a directory?","<p>I have a folder under version control.  I want to make a copy of it to send around, but don't want to include all the .git directories and the files underneath it. </p>

<p>Is there a way to remove all the git files instead of manually deleting all of them?</p>
","42","46098","<git>"
"820178","1","How do you push just a single Git branch (and no other branches)?","<p>I am working on a local git repository. There are two branches, <code>master</code> and <code>feature_x</code>.</p>

<p>I want to push <code>feature_x</code> to the remote repo, but I do not want to push the changes on the <code>master</code> branch.</p>

<p>Will a <code>git push origin feature_x</code> from my <code>feature_x</code> branch (<code>feature_x</code> branch already exists on remote) work?</p>

<p>I do not want to test this on my box, because I cannot push to master right now.</p>
","148","138341","<git><git-push>"
"14872486","1","Retrieve specific commit from a remote Git repository","<p>Is there any way to retrieve only one specific commit from a remote Git repo without cloning it on my PC? The structure of remote repo is absolutely same as that of mine and hence there won't be any conflicts but I have no idea how to do this and I don't want to clone that huge repository.</p>

<p>I am new to git, is there any way?</p>
","91","138901","<git><git-fetch>"
"4822471","1","Count number of lines in a git repository","<p>How would I count the total number of lines present in all the files in a git repository?</p>

<p><code>git ls-files</code> gives me a list of files tracked by git.</p>

<p>I'm looking for a command to <code>cat</code> all those files. Something like</p>

<pre><code>git ls-files | [cat all these files] | wc -l
</code></pre>
","353","122078","<git><bash><shell>"
"5290444","1","Why does git hash-object return a different hash than openssl sha1?","<p>Context: I downloaded <a href=""http://code.google.com/p/audirvana/downloads/detail?name=Audirvana%200.7.1.zip&amp;can=2&amp;q="">a file (Audirvana 0.7.1.zip)</a> from code.google to my Macbook Pro (Mac OS X 10.6.6).</p>

<p>I wanted to verify the checksum, which for that particular file is posted as 862456662a11e2f386ff0b24fdabcb4f6c1c446a (SHA-1).  <code>git hash-object</code> gave me a different hash, but <code>openssl sha1</code> returned the expected 862456662a11e2f386ff0b24fdabcb4f6c1c446a.</p>

<p>The following experiment seems to rule out any possible download corruption or newline differences and to indicate that there are actually two different algorithms at play:</p>

<pre><code>$ echo A &gt; foo.txt
$ cat foo.txt
A
$ git hash-object foo.txt 
f70f10e4db19068f79bc43844b49f3eece45c4e8
$ openssl sha1 foo.txt 
SHA1(foo.txt)= 7d157d7c000ae27db146575c08ce30df893d3a64
</code></pre>

<p>What's going on?</p>
","32","4608","<git><openssl><sha1>"
"2874873","1","Migrating from TFS to Git","<p>Is it possible to migrate from TFS 2008 to Git, and still preserve all the history, etc?
I've seen some references that talk about doing it through SVN, but that seems rather complicated, and complicates my mission to introduce Git at my job.</p>
","43","11589","<git><tfs>"
"9617336","1","How to resolve ""git did not exit cleanly (exit code 128)"" error on TortoiseGit?","<p>I've run into this serious error while committing, and <a href=""https://tortoisegit.org/issue/1101"">created a bug report</a>.</p>

<p>I keep getting this error on TortoiseGit operations:</p>

<blockquote>
  <p>git did not exit cleanly (exit code 128)</p>
</blockquote>

<p>I've reinstalled the program, rebooted, and tried to clone a fresh repo from github - nothing seems to work. I also deleted %appdata%\Tortoise git folder ... I'm at a loss now. Any advice on how to proceed?</p>
","47","144577","<git><tortoisegit>"
"215718","1","Reset or revert a specific file to a specific revision using Git?","<p>I have made some changes to a file which has been committed a few times as part of a group of files, but now want to reset/revert the changes on it back to a previous version. </p>

<p>I have done a <code>git log</code> along with a <code>git diff</code> to find the revision I need, but just have no idea how to get the file back to its former state in the past.</p>
","2035","745313","<git><version-control>"
"233421","1","Hosting Git Repository in Windows","<p>Is there currently a way to host a shared Git repository in Windows?  I understand that you can configure the Git service in Linux with:</p>

<pre><code>git daemon
</code></pre>

<p>Is there a native Windows option, short of sharing folders, to host a Git service?</p>

<p>EDIT:
I am currently using the cygwin install of git to store and work with git repositories in Windows, but I would like to take the next step of hosting a repository with a service that can provide access to others.</p>
","97","66555","<windows><git>"
"7244321","1","How do I update a GitHub forked repository?","<p>I recently forked a project and applied several fixes. I then created a pull request which was then accepted.</p>

<p>A few days later another change was made by another contributor. So my fork doesn't contain that change... How can I get that change into my fork?</p>

<p>Do I need to delete and re-create my fork when I have further changes to contribute? Or is there an update button?</p>
","1610","280973","<git><github>"
"900560","1","Git: checking out a file from a previous commit and amending it to HEAD","<p>I recently committed a file to the HEAD of my branch which has errors in it. I need to do the following things:</p>

<ul>
  <li> Get that file from one commit previous to HEAD </li><br />
  <li> Commit that file back into HEAD </li><br />
</ul>

<p>What's the best way of going about that?</p>
","52","26458","<git><version-control>"
"936249","1","Stop tracking and ignore changes to a file in Git","<p>I have cloned a project that includes some <code>.csproj</code> files. I don't need/like my local <code>csproj</code> files being tracked by Git (or being brought up when creating a patch), but clearly they are needed in the project.</p>

<p>I have added <code>*.csproj</code> to my LOCAL <code>.gitignore</code>, but the files are already in the repo.</p>

<p>When I type git status, it shows my changes to <code>csproj</code> which I am not interested in keeping track of or submitting for patches.</p>

<p>How do I remove the ""tracking of"" these files from my personal repo (but keep them in the source so I can use them) so that I don't see the changes when I do a status (or create a patch)?</p>

<p>Is there a correct/canonical way to handle this situation?</p>
","975","353136","<git><gitignore><git-rm>"
"14950355","1","git command could not be found and could not find ssh-agent","<p>I was on GitHub today and realized I was behind on updates from a repo. I tried to <em>fetch</em> updates, but it failed from the outset. I received two messages when I started up Git Shell (from GitHub for Windows):</p>

<blockquote>
  <p>Warning: git command could not be found. Please create an alias or add it to your PATH.</p>
  
  <p>Warning: Could not find ssh-agent.</p>
</blockquote>

<p>When I attempted to enter ""$ git fetch origin"", I got the following error message:</p>

<blockquote>
  <p>The term '$' is not recognized as the name of a cmdlet, function, script file,
  or operable program. Check the spelling of the name, or if a path was included,
   verify that the path is correct and try again.</p>
</blockquote>

<p>I also tried omitting the $ sign, but that didn't change anything.</p>

<p>I have no clue what's going on, the last time I used the Shell (beginning of this month), it did not do this. I have tried adding the path to git.exe to the PATH environment variable, but that did not work - nothing appeared to change. I have not restarted my computer after doing so, is that the problem? I have also never set up Git to use SSH.</p>
","55","28718","<git><github-for-windows>"
"266395","1","git-svn: how do I create a new svn branch via git?","<p>I have a git repository which tracks an svn repository. I cloned it using <code>--stdlayout</code>.</p>

<p>I created a new local branch via <code>git checkout -b foobar</code></p>

<p>Now I want this branch to end up in <code>…/branches/foobar</code> in the svn repository.</p>

<p>How do I go about that?</p>

<p>(snipped lots of investigative text. see question history if you care)</p>
","178","39042","<git><version-control><git-svn>"
"5379986","1","Why doesn't my bash prompt update?","<p>I'm new to git and I'm trying to add the current git branch to my already existing prompt, which is defined as follows :</p>

<pre><code>RESET=""\[\017\]""
NORMAL=""\[\033[0m\]""
RED=""\[\033[31;1m\]""
YELLOW=""\[\033[33;1m\]""
WHITE=""\[\033[37;1m\]""
SMILEY=""${WHITE}:)${NORMAL}""
FROWNY=""${RED}:(${NORMAL}""
SELECT=""if [ \$? = 0 ]; then echo \""${SMILEY}\""; else echo \""${FROWNY}\""; fi""

export PS1=""${RESET}${YELLOW}\u@\h${NORMAL} \`${SELECT}\` ${YELLOW}\w $(__git_ps1) &gt;${NORMAL} ""
</code></pre>

<p>I tried it (by sourcing my <code>.bashrc</code> file again) and it seemed to work, but then I went on another branch and it did not update. How can I make sure the <code>$(__git_ps1)</code> is not cached?</p>
","55","9735","<git><bash><ps1>"
"12084227","1","gitignore - fatal: no files added","<p>I have an issue with git, more precisely with gitignore.</p>

<p>I have created an empty folder
Initialized git</p>

<pre><code>mkdir fold
cd fold
git init
</code></pre>

<p>Updated gitignore (as below)</p>

<pre><code> *.prjx
</code></pre>

<p>Committed gitignore</p>

<pre><code>git add .gitignore
git commit -m ""update gitignore""
</code></pre>

<p>Now I have several files (among them a .prjx) and folders in my root (fold) and I'd like to add all of them, but when I run</p>

<pre><code>git add *
</code></pre>

<p>I get the message below</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
ftc.prjx
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>I don't want to add it, I simply want add all the other files and folders.
From my understanding .gitignore should handle exactly that so why I get the message above?
Am I missing something?</p>

<p>Thanks and have a nice day. </p>
","44","10081","<git>"
"1057564","1","Pretty git branch graphs","<p>I've seen some books and articles have some really pretty looking graphs of git branches and commits. Is there any tool that can make high-quality printable images of git history?</p>
","582","245023","<git><directed-acyclic-graphs>"
"298314","1","Find files in git repo over x megabytes, that don't exist in HEAD","<p>I have a Git repository I store random things in. Mostly random scripts, text files, websites I've designed and so on.</p>

<p>There are some large binary files I have deleted over time (generally 1-5MB), which are sitting around increasing the size of the repository, which I don't need in the revision history.</p>

<p>Basically I want to be able to do..</p>

<pre><code>me@host:~$ [magic command or script]
aad29819a908cc1c05c3b1102862746ba29bafc0 : example/blah.psd : 3.8MB : 130 days old
6e73ca29c379b71b4ff8c6b6a5df9c7f0f1f5627 : another/big.file : 1.12MB : 214 days old
</code></pre>

<p>..then be able to go though each result, checking if it's no longer required then removing it (probably using <code>filter-branch</code>)</p>
","53","14005","<git>"
"315911","1","Git for beginners: The definitive practical guide","<p>Ok, after seeing <a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/2678236#2678236"">this post by PJ Hyett</a>, I have decided to skip to the end and go with <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a>.</p>

<p>So what I need is a beginner's <strong>practical</strong> guide to Git.  ""Beginner"" being defined as someone who knows how to handle their compiler, understands to some level what a <a href=""http://en.wikipedia.org/wiki/Make_%28software%29"">Makefile</a> is, and has touched source control without understanding it very well.</p>

<p>""Practical"" being defined as this person doesn't want to get into great detail regarding what Git is doing in the background, and doesn't even care (or know) that it's distributed.  Your answers might hint at the possibilities, but try to aim for the beginner that wants to keep a 'main' repository on a 'server' which is backed up and secure, and treat their local repository as merely a 'client' resource.</p>

<p>So:</p>

<h2>Installation/Setup</h2>

<ul>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323764"">How to install Git</a></li>
<li>How do you set up Git?  Try to cover Linux, Windows, Mac, think 'client/server' mindset.
<ul>
<li><a href=""http://stackoverflow.com/questions/1482824/setup-git-server-with-msysgit-on-windows"">Setup GIT Server with Msysgit on Windows</a></li>
</ul></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#320140"">How do you create a new project/repository?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#316062"">How do you configure it to ignore files (.obj, .user, etc) that are not really part of the codebase?</a></li>
</ul>

<h2>Working with the code</h2>

<ul>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/1350157#1350157"">How do you get the latest code?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323906"">How do you check out code?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#316055"">How do you commit changes?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#319465"">How do you see what's uncommitted, or the status of your current codebase?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323898"">How do you destroy unwanted commits?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/1762631#1762631"">How do you compare two revisions of a file, or your current file and a previous revision?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/2114836#2114836"">How do you see the history of revisions to a file?</a></li>
<li>How do you handle binary files (visio docs, for instance, or compiler environments)?</li>
<li>How do you merge files changed at the ""same time""?</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/323898#323898"">How do you undo (revert or reset) a commit?</a></li>
</ul>

<h2>Tagging, branching, releases, baselines</h2>

<ul>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#322967"">How do you 'mark' 'tag' or 'release' a particular set of revisions for a particular set of files so you can always pull that one later?</a></li>
<li>How do you pull a particular 'release'?</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/816614#816614"">How do you branch?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/816636#816636"">How do you merge branches?</a></li>
<li>How do you resolve conflicts and complete the merge?</li>
<li>How do you merge parts of one branch into another branch?</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/5985070#5985070"">What is rebasing?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/1590791#1590791"">How do I track remote branches?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/1590803#1590803"">How can I create a branch on a remote repository?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/5977604#5977604"">How do I delete a branch on a remote repository?</a></li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/5968622#5968622"">Git workflow examples</a></li>
</ul>

<h2>Other</h2>

<ul>
<li>Describe and link to a good GUI, IDE plugin, etc. that makes Git a non-command line resource, but please list its limitations as well as its good.
<ul>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323559"">msysgit</a> - Cross platform, included with Git</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323559"">gitk</a> - Cross platform history viewer, included with Git</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323559"">gitnub</a> - Mac OS X</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323559"">gitx</a> - Mac OS X history viewer</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323559"">smartgit</a> - Cross platform, commercial, beta</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/322989#322989"">tig</a> - console GUI for Linux</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/644129#644129"">qgit</a> - GUI for Windows, Linux</li>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide#323559"">Git Extensions</a> - package for Windows, includes friendly GUI</li>
</ul></li>
<li>Any other common tasks a beginner should know?
<ul>
<li><a href=""http://stackoverflow.com/questions/315911/git-for-beginners-the-definitive-practical-guide/319465#319465"">Git Status tells you what you just did, what branch you have, and other useful information</a></li>
</ul></li>
<li>How do I work effectively with a subversion repository set as my source control source?</li>
</ul>

<h2>Other Git beginner's references</h2>

<ul>
<li><a href=""http://www.sourcemage.org/Git_Guide"">Git guide</a></li>
<li><a href=""http://book.git-scm.com/"">Git book</a></li>
<li><a href=""http://www-cs-students.stanford.edu/~blynn/gitmagic/"">Git magic</a></li>
<li><a href=""http://www.gitcasts.com/"">gitcasts</a></li>
<li><a href=""http://github.com/guides/home"">GitHub guides</a></li>
<li><a href=""http://www.kernel.org/pub/software/scm/git/docs/gittutorial.html"">Git tutorial</a></li>
<li><a href=""http://progit.org/book"">Progit - book by Scott Chacon</a></li>
<li><a href=""http://git.or.cz/course/svn.html"" title=""Git - SVN Crash Course"">Git - SVN Crash Course</a></li>
<li><a href=""http://www.newartisans.com/2008/04/git-from-the-bottom-up.html"">Git from the bottom up</a></li>
<li><a href=""http://www.gitready.com"">Git ready</a></li>
<li><a href=""http://gitref.org/"">gitref.org</a></li>
<li><a href=""http://www.ndpsoftware.com/git-cheatsheet.html"">Git visual cheatsheet</a></li>
</ul>

<h2>Delving into Git</h2>

<ul>
<li><a href=""http://www.eecs.harvard.edu/~cduan/technical/git/"">Understanding Git conceptually</a></li>
<li><a href=""http://eagain.net/articles/git-for-computer-scientists/"">Git for computer scientists</a> (and <a href=""http://sitaramc.github.com/gcs/"">another version</a>) </li>
</ul>

<p>I will go through the entries from time to time and 'tidy' them up so they have a consistent look/feel and it's easy to scan the list - feel free to follow a simple ""header - brief explanation - list of instructions - gotchas and extra info"" template.  I'll also link to the entries from the bullet list above so it's easy to find them later.</p>
","855","598134","<git><version-control>"
"2490794","1","Git-svn: create & push a new branch/tag?","<p>After cloning an SVN repository using git-svn with the <code>-s</code> option (<code>git svn clone <a href=""http://server/repo"">http://server/repo</a> -s</code>), how does one create a branch or tag and have pushed to the relevant branch/tag directory in the repository when <code>dcommit</code>ing?</p>

<p>For instance; if I were to use git to create a <code>foobar</code> branch locally (<code>git checkout -b foobar</code>) how can I have git-svn <strong>create</strong> the branch on the server (<code>http://server/repo/branches/foobar</code>)?</p>

<p><strong>I'm using Git 1.5.5.6.</strong></p>

<hr>

<p><strong>Please Note:</strong></p>

<p>The accepted method below <strong>does not work with Git 1.5.5.6</strong> as there is no <code>git svn branch</code> method. I'm still looking for a solution to this that doesn't involve resolving to working with svn directly.</p>
","46","17490","<git><git-svn>"
"5440610","1","Git and DiffTool problems : What do LOCAL and REMOTE point to?","<p>Ive been working on getting tortoisemerge working as the difftool option in Git with my .gitconfig file currently showing :</p>

<pre><code>   [diff]
        tool = tortoise

    [difftool ""tortoise""]
        cmd = tortoisemerge.exe -mine:$LOCAL -base:$REMOTE

    [difftool]
        prompt = false
</code></pre>

<p>According to <a href=""http://tortoisesvn.net/docs/release/TortoiseMerge_en/tme-automation.html"">tortoise merge docs</a> the 'mine' command states which file will be shown on the right, in a two way diff.</p>

<p>My question is, what do the LOCAL and REMOTE variables as provided by GIT actually point to? The <a href=""http://git-scm.com/docs/git-config"">documentation</a> is a little vague stating that </p>

<blockquote>
  <p>LOCAL is set to the name of the temporary file containing the contents of the diff pre-image and REMOTE is set to the name of the temporary file containing the contents of the diff post-image.</p>
</blockquote>

<p>The problem arises when I modify a file, and then enter 'git difftool' tortoisemerge is started with the working directory file on the LEFT and not the right as I assume.
I know I can merely switch  the 'mine' and 'local' commands but I was trying to figure out what the local/remote points to and the best way to resolve this issue </p>
","40","24727","<git><difftool>"
"1123344","1","Merging between forks in GitHub","<p>I forked a GitHub repository. Then I pushed some changes to my fork. Then the original repository merged my changes and some others. Now, I want to merge those changes I'm missing. I tried a simple pull followed by push, but this yield my commits in duplicate. What's the best way to do it?</p>
","211","58255","<git><github>"
"4950725","1","how do I get git to show me which branches are tracking what?","<p>I know I can do <code>git branch --all</code> and that shows me both local and remote branches, but it's not that useful in showing me the relationships between them.</p>

<p>How do I list branches in a way that shows which local branch is tracking which remote?</p>
","376","97720","<git>"
"1125476","1","Retrieve a single file from a repository","<p>What is the most efficient mechanism (in respect to data transferred and disk space used) to get the contents of a single file from a remote git repository?</p>

<p>So far I've managed to come up with:</p>

<pre><code>git clone --no-checkout --depth 1 git@github.com:foo/bar.git &amp;&amp; cd bar &amp;&amp; git show HEAD:path/to/file.txt
</code></pre>

<p>This still seems overkill.</p>

<p>What about getting multiple files from the repo?</p>
","110","85509","<git><file><checkout>"
"10168449","1","Git update submodule recursive","<p>My project struture</p>

<pre><code>ProjectA
-FrameworkA (submodule)
--Twig (submodule of FrameworkA)
</code></pre>

<p>How I can update submodule recursive? I already tried some git commands (on ProjectA root)</p>

<pre><code>git submodule foreach git pull origin master
or
git submodule foreach --recursive git pull origin master
</code></pre>

<p>but cannot pull files of Twig</p>
","118","54428","<git>"
"9725160","1","Aborting commit due to empty commit message","<p>As a newbie git user; when I try to commit my work with</p>

<pre><code>git commit -a -v
</code></pre>

<p>and after I make the necessary changes, I close the file and get this</p>

<pre><code>Aborting commit due to empty commit message.
</code></pre>

<p>error. I have read nearly all the topics addressing to this issue, changed editors, basically tried everything but nothing helps. What should I do?</p>

<p>One thing I noticed, while trying the whole process with notepad++, the file couldn't be saved. </p>

<p>A possible workaround is this:</p>

<pre><code>git commit -am ""SomeComment""
</code></pre>

<p>But by doing so I feel I am little nullifying the purpose of using git. I want to properly documentate the changes.</p>
","35","21048","<git>"
"1125968","1","Force Git to overwrite local files on pull","<p>How do I force an overwrite of local files on a <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> pull?</p>

<p>The scenario is following:</p>

<ul>
<li>A team member is modifying the templates for a website we are working on</li>
<li>They are adding some images to the images directory (but forgets to add them under source control)</li>
<li>They are sending the images by mail, later, to me</li>
<li>I'm adding the images under the source control and pushing them to Github together with other changes</li>
<li>They cannot pull updates from Github because git doesn't want to overwrite their files.</li>
</ul>

<p>The errors I'm getting are:</p>

<blockquote>
  <p>error: Untracked working tree file 'public/images/icon.gif' would be overwritten by merge.</p>
</blockquote>

<p>How do I force Git to overwrite them? The person is a designer - usually I resolve all the conflicts by hand so the server has the most recent version that they just needs to update on their computer.</p>
","2945","1577945","<git><version-control><overwrite><git-pull><git-fetch>"
"373812","1","Rollback file to much earlier version using Git","<p>Is there a way in Git to rollback to a much earlier version of a file? I can roll back to the previous version with REVERT, but what if I want to go back to earlier versions? </p>
","208","162123","<git>"
"2557706","1","Gitosis alternative?","<p>Are there alternatives to <a href=""http://wiki.dreamhost.com/Gitosis"">gitosis</a> that are easier to use? </p>

<p>I currently run gitosis  on a Ubuntu server for my lab.  We regularly  add new users and repos. I find the <code>gitosis.conf</code> syntax non-intuitive, and if I make even a minor mistake the whole gitosis system fails, see for example <a href=""http://stackoverflow.com/questions/1300275/how-do-i-recover-from-pushing-a-gitosis-conf-file-with-parsing-errors-due-to-line"">this question on SO.</a>  When gitosis fails it also kills access to the git repository that contains <code>gitosis.conf</code>...  go figure... There must be a better way.</p>

<p>I've thought about private GitHub accounts, but is there anything else that I could host locally?</p>
","46","35875","<git><version-control><gitosis>"
"14635672","1","git rebase a single commit","<p>Is there a way to rebase a single commit from a branch onto another branch?  </p>

<p>So I have </p>

<pre><code>-- -- -- -- -- (Master)
            \
              -- -- -- -- -- XX (Feature-branch)
</code></pre>

<p>and all I want to do is rebase the last commit of Feature-branch onto master and rollback Feature-branch one commit.  </p>

<pre><code>-- -- -- -- -- XX (Master)
            \
              -- -- -- -- -- (Feature-branch)
</code></pre>

<p>How do I do that?  </p>
","41","13733","<git><rebase>"
"2596805","1","How do I make git use the editor of my choice for commits?","<p>I would prefer to write my commit messages in <code>vim</code>, but it is opening in <code>emacs</code>.</p>

<p>How do I configure git to always use <code>vim</code>?  Note that I want to do this globally, not just for a single project.</p>
","1056","313485","<git><vim><emacs><editor><commit-message>"
"2615378","1","How to use Git properly with XCode?","<p>I have been an iphone developer for a while, and I have recently been including git in my workflow.  I have used git settings found on <a href=""http://shanesbrain.net/2008/7/9/using-xcode-with-git"">http://shanesbrain.net/2008/7/9/using-xcode-with-git</a> for my workflow so far.</p>

<p>Those settings tell git to exclude *.pbxproj from merges?  Is there a real reason for doing this?  For example, when I add a file to the project and push to origin, my fellow developers will not have that file added to their xcode project when they pull.  Then if one of them builds a release this file may not be included.  Shouldn't I just let git handle the merges for the project file?  Could someone please explain why or why not this file should be in merges and how to properly handle the situation when files are added to the project.  Thanks.</p>
","77","32462","<iphone><objective-c><xcode><git>"
"466764","1","Show ignored files in git","<p>I am getting my feet wet on git and have the following issue:</p>

<p>My project source tree:</p>

<pre><code>/
|
+--src/
+----refs/
+----...
|
+--vendor/
+----...
</code></pre>

<p>I have code (currently MEF) in my vendor branch that I will compile there and then move the references into <code>/src/refs</code> which is where the project picks them up from.</p>

<p>My issue is that I have my <code>.gitignore</code> set to ignore <code>*.dll</code> and <code>*.pdb</code>.  I can do a <code>git add -f bar.dll</code> to force the addition of the ignored file which is ok, the problem is I can not figure out to list what files exist that are ignored.</p>

<p>I want to list the ignored files to make sure that I don't forget to add them.</p>

<p>I have read the man page on <code>git ls-files</code> and can not make it work.  It seems to me that <code>git ls-files --exclude-standard -i</code> should do what I want.  What am I missing?</p>

<p><strong>UPDATE:</strong></p>

<p><code>git ls-files -i</code> will not work, you get the error: </p>

<pre><code>ls-files: --ignored needs some exclude pattern
</code></pre>

<p><code>git ls-files --others -i --exclude-from=.git/info/exclude</code> as VonC suggested below is indeed the answer.  The <code>--exclude-standard</code> option also works instead of <code>--exclude-from</code>.</p>

<p>Summary of what works:</p>

<pre><code>git ls-files --others -i --exclude-from=.git/info/exclude
git ls-files --others -i --exclude-standard
</code></pre>
","290","106574","<git>"
"9823692","1","Resolving a 'both added' merge conflict in git?","<p>I'm rebasing in git, and one conflict I get is 'both added' - that is, exactly the same filename has been added independently in my branch, and in the branch I'm rebasing on.  <code>git status</code> tells me:</p>

<pre><code># Unmerged paths:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#   (use ""git add/rm &lt;file&gt;..."" as appropriate to mark resolution)
#
#       both added:         src/MyFile.cs
</code></pre>

<p>My question is, how do I resolve this?  Must I use a merge tool or is there a way I can do it just from the commandline?  If I <code>git rm src/MyFile.cs</code>, how does git know which file version I want to remove and which I want to keep?</p>
","69","22850","<git><merge><rebase>"
"5072693","1","How to ""git show"" a merge commit with combined diff output even when every changed file agrees with one of the parents?","<p>After doing a ""simple"" merge (one without conflicts), <code>git show</code> usually only shows something like</p>

<pre><code>commit 0e1329e551a5700614a2a34d8101e92fd9f2cad6 (HEAD, master)
Merge: fc17405 ee2de56
Author: Tilman Vogel &lt;email@email&gt;
Date:   Tue Feb 22 00:27:17 2011 +0100

Merge branch 'testing' into master
</code></pre>

<p>This is because, for merges, <code>git show</code> uses the combined diff format which omits files that agree with either of the parent versions.</p>

<p>Is there a way to force git to still show all differences in combined diff mode? </p>

<p>Doing <code>git show -m</code> will show the differences (using pairwise diffs between the new and all parent versions respectively) but I would prefer to have that with the differnces marked by +/- in the respective columns like in combined mode.</p>
","93","42557","<git><merge>"
"540535","1","Managing large binary files with git","<p>I am looking for opinions of how to handle large binary files on which my source code (web application) is dependent. We are currently discussing several alternatives:</p>

<ol>
<li>Copy the binary files by hand.
<ul>
<li>Pro: Not sure.</li>
<li>Contra: I am strongly against this, as it increases the likelihood of errors when setting up a new site/migrating the old one. Builds up another hurdle to take.</li>
</ul></li>
<li>Manage them all with <em>git</em>. 
<ul>
<li>Pro: Removes the possibility to 'forget' to copy a important file</li>
<li>Contra: Bloats the repository and decreases flexibility to manage the code-base and checkouts/clones/etc will take quite a while.</li>
</ul></li>
<li>Separate repositories. 
<ul>
<li>Pro: Checking out/cloning the source code is fast as ever, and the images are properly archived in their own repository.</li>
<li>Contra: Removes the simpleness of having <em>the one and only</em> git repository on the project. Surely introduces some other things I haven't thought about.</li>
</ul></li>
</ol>

<p>What are your experiences/thoughts regarding this? </p>

<p>Also: Does anybody have experience with multiple git repositories and managing them in one project? </p>

<p><strong>Update</strong>: The files are images for a program which generates PDFs with those files in it. The files will not change very often(as in years) but are very relevant to a program. The program will not work without the files.</p>
","461","156834","<git><version-control><large-files><binaryfiles>"
"5139290","1","How to check if there's nothing to be committed in the current branch?","<p>all.
  how can we get the status result in shell?
  I tried <code>git status</code> but it always return 0, even we have commit.</p>

<pre><code>git status
echo $?  #this is always 0
</code></pre>

<p>I have an idea but I think it is rather a bad idea.</p>

<pre><code>if [ git status | grep -i -c ""[a-z]""&gt; 2 ];
then
 code for change...
else
  code for nothing change...
fi
</code></pre>

<p>any other way?</p>

<hr>

<p><strong>update,and now this solve see Mark Longair 's post</strong></p>

<p>I tried this ,  but cause an problem.</p>

<pre><code>if [ -z $(git status --porcelain) ];
then
    echo ""IT IS CLEAN""
else
    echo ""PLEASE COMMIT YOUR CHANGE FIRST!!!""
    echo git status
fi
</code></pre>

<p>when the </p>

<p>it will get some error , [: ??: binary operator expected</p>

<p>now , I am looking at man and try the git diff.</p>

<p>===================code for my hope, and hope better answer======================</p>

<pre><code>#if [ `git status | grep -i -c ""$""` -lt 3 ];
# change to below code,although the above code is simple, but I think it is not strict logical
if [ `git diff --cached --exit-code HEAD^ &gt; /dev/null &amp;&amp; (git ls-files --other --exclude-standard --directory | grep -c -v '/$')` ];
then
        echo ""PLEASE COMMIT YOUR CHANGE FIRST!!!""
    exit 1

else
    exit 0
fi
</code></pre>
","79","20431","<git>"
"2732020","1","GIT repository layout for server with multiple projects","<p>One of the things I like about the way I have Subversion set up is that I can have a single main repository with multiple projects. When I want to work on a project I can check out just that project. Like this</p>

<pre><code>\main
    \ProductA
    \ProductB
    \Shared
</code></pre>

<p>then</p>

<pre><code>svn checkout http://.../main/ProductA
</code></pre>

<p>As a new user to git I want to explore a bit of best practice in the field before committing to a specific workflow. From what I've read so far, git stores everything in a single .git folder at the root of the project tree. So I could do one of two things.</p>

<ol>
<li>Set up a separate project for each Product.</li>
<li>Set up a single massive project and store products in sub folders.</li>
</ol>

<p>There are dependencies between the products, so the single massive project seems appropriate. We'll be using a server where all the developers can share their code. I've already got this working over SSH &amp; HTTP and that part I love. However, the repositories in SVN are already many GB in size so dragging around the entire repository on each machine seems like a bad idea - especially since we're billed for excessive network bandwidth.</p>

<p>I'd imagine that the Linux kernel project repositories are equally large so there must be a proper way of handling this with Git but I just haven't figured it out yet.</p>

<p>Are there any guidelines or best practices for working with very large multi-project repositories?</p>
","79","45011","<git>"
"591923","1","Make git automatically remove trailing whitespace before committing","<p>I'm using git with my team and would like to remove whitespace changes from my diffs, logs, merges, etc. I'm assuming that the easiest way to do this would be for git to automatically remove trailing whitespace (and other whitespace errors) from all commits as they are applied.</p>

<p>I have tried to add the following to by <code>~/.gitconfig</code> file but it doesn't do anything when I commit. Maybe it's designed for something different. What's the solution?</p>

<pre><code>[core]
    whitespace = trailing-space,space-before-tab
[apply]
    whitespace = fix
</code></pre>

<p>I'm using ruby in case anyone has any ruby specific ideas. Automatic code formatting before committing would be the next step, but that's a hard problem and not really causing a big problem.</p>
","174","81827","<git><whitespace><githooks>"
"7144811","1","Git SSH error: ""Connect to host: Bad file number""","<p>I followed the <a href=""http://help.github.com/win-set-up-git/"" rel=""nofollow"">git guide</a> but I have this strange issue when trying to connect to github:</p>

<pre><code>$ ssh -v git@github.com
OpenSSH_4.6p1, OpenSSL 0.9.8e 23 Feb 2007
debug1: Reading configuration data /c/Documents and Settings/mugues/.ssh/config
debug1: Applying options for github.com
debug1: Connecting to github.com [207.97.227.239] port 22.
debug1: connect to address 207.97.227.239 port 22: Attempt to connect timed out without establishing a connection
ssh: connect to host github.com port 22: Bad file number
</code></pre>

<p>This is my config file under .ssh</p>

<pre><code>Host github.com
    User git
    Hostname github.com
    PreferredAuthentications publickey
    IdentityFile ""C:\Documents and Settings\mugues\.ssh\id_rsa""
    TCPKeepAlive yes
    IdentitiesOnly yes
</code></pre>

<p>Any idea?</p>
","137","152225","<git><github><ssh>"
"623518","1","msysgit on windows -- what should I be aware of, if any?","<p>This is related to another <a href=""http://stackoverflow.com/questions/623018/git-without-bash-cygwin"">question I asked</a> recently.</p>

<p>When installing msysgit, the installer presents 3 options related to system path:</p>

<ol>
<li><p>Never change windows environment. With this option, you have to use the ""bash"" shell to work with git.</p></li>
<li><p>Add the git\bin directory to the PATH environment variable, but without overriding some builtin windows tools. Fellow stackoverflow-ian Gabe Moothart <a href=""http://stackoverflow.com/questions/623018/git-without-bash-cygwin/623169#623169"">told me in a comment</a> that this option will make some git operations fail! What are these operations? Should I worry about them?</p></li>
<li><p>Same as 2 but override some default system tools. What are these tools? What parts of windows depend on them? and will this hurt in practice?</p></li>
</ol>

<p>Another issue has come to my mind, unrelated to the system PATH.</p>

<p>What if I have symbolic links and hard links inside my project directory? Does git know how to deal with these? or, will it suffer from infinite recursion, if say, the directory structure was such that some folder was actually a symbolic link to one of its parents?</p>
","37","18402","<windows><git><version-control><msysgit>"
"5188274","1","How do I interactively unstage a particular hunk in git?","<p>In git, if I have a couple of hunks from the same file staged in my index, how can I interactively unstage one of them?</p>

<p>Is there any alternative to unstaging the entire file, and then re-staging the hunks I want to keep, or manually undoing the changes to the working copy, and then interactively adding those undone changes?</p>
","50","4402","<git><staging>"
"5188320","1","How can I get a list of git branches, ordered by most recent commit?","<p>I want to get a list of all the branches in a Git repository with the ""freshest"" branches at the top, where the ""freshest"" branch is the one that's been committed to most recently (and is, therefore, more likely to be one I want to pay attention to).</p>

<p>Is there a way I can use Git to either (a) sort the list of branches by latest commit, or (b) get a list of branches together with each one's last-commit date, in some kind of machine-readable format?</p>

<p>Worst case, I could always run <code>git branch</code> to get a list of all the branches, parse its output, and then <code>git log -n 1 branchname --format=format:%ci</code> for each one, to get each branch's commit date. But this will run on a Windows box, where spinning up a new process is relatively expensive, so launching the git executable once per branch could get slow if there are a lot of branches. Is there a way to do all this with a single command?</p>
","456","141163","<git><version-control><branch>"
"4786972","1","List of all git commits?","<p>Let's say that I have a graph like this:</p>

<pre><code>A---B---C---D (master)
     \
      \-E---F (HEAD)
</code></pre>

<p>If I do <code>git log --all --oneline</code>, I will get all six of my commits.</p>

<p>But if the graph is</p>

<pre><code>A---B---C---D (master, HEAD)
     \
      \-E---F
</code></pre>

<p>I will not see E and F. Can I get git to tell me all the commits, including those on branches which are not named?</p>

<p>Thanks</p>
","33","27546","<git><git-log>"
"2765421","1","Push a new local branch to a remote Git repository and track it too","<p>I want to be able to do the following:</p>

<ol>
<li><p>Create a local branch based on some other (remote or local) branch (via <code>git branch</code> or <code>git checkout -b</code>)</p></li>
<li><p>Push the local branch
to the remote repository (publish), but make it
trackable so <code>git pull</code> and <code>git push</code> will work immediately.</p></li>
</ol>

<p>How do I do that?</p>

<p>I know about <code>--set-upstream</code> in Git 1.7, but that is a post-creation action. I want to find a way to make a similar change when pushing the branch to the remote repository.</p>
","2148","1276915","<git><repository><git-branch><git-push>"
"7550376","1","How can sbt pull dependency artifacts from git?","<p>I've heard (and I know I've seen examples too, if only I can remember where) that <code>sbt</code> can obtain dependencies from a git repo.</p>

<p>I am looking to obtain the dependency <a href=""https://github.com/harrah/up"">harrah/up</a> from github. The repository does not provide any artifact JAR files, only a source tree which is set up to be built using <code>sbt</code>. The process that I am imagining is that <code>sbt</code> will download the source repo, build it, and then use that as the dependency artifact.</p>

<p>I may be imagining that <code>sbt</code> can in fact do something like this. Can it? And if so, how?</p>
","70","14273","<git><scala><build><sbt><build-dependencies>"
"5188914","1","How to show first commit by 'git log'?","<p>I have a project which has long history. I want to show the first commit on git. </p>

<p>How do I do this?</p>
","102","32496","<git>"
"5189560","1","Squash my last X commits together using Git","<p>How can I squash my last X commits together into one commit using Git?</p>
","1008","309436","<git>"
"9955713","1","git: dangling blobs","<p>I recently ran <code>git fsck --lost-found</code> on my repository.  </p>

<p>I expected to see a couple dangling commits, where I had reset <code>HEAD</code>.</p>

<p>However, I was surprised to see likely over several thousand dangling blob messages.</p>

<p>I don't believe anything is wrong with my repository, but I'm curious as to what causes these dangling blobs? There's only two people working on the repository, and we haven't done anything out of the ordinary.</p>

<p>I wouldn't think they were created by an older version of a file being replaced by a new one, since git would need to hold onto both blobs so it can display history.</p>

<p>Come to think of it, at one point we did add a VERY large directory (thousands of files) to the project by mistake and then remove it.  Might this be the source of all the dangling blobs?</p>

<p>Just looking for insight into this mystery.</p>
","43","13497","<git><git-dangling>"
"4795600","1","Reverting part of a commit with git","<p>I want to revert a particular commit in git.  Unfortunately, our organization still uses CVS as a standard, so when I commit back to CVS multiple git commits are rolled into one.  In this case I would love to single out the original git commit, but that is impossible.</p>

<p>Is there an approach similar to <code>git add --patch</code> that would allow me to selectively edit diffs to decide which parts of a commit to revert?</p>
","70","10751","<git><git-cvs>"
"7180099","1","Including js from raw.github.com","<p>I have a github.com demo page that is linking to <strong>https://raw.github.com/.../master/.../file.js</strong> so that I don't need to always copy the <code>.js</code> file over to the <code>gh-pages</code> branch every time it's changed.  This works in every browser except IE which complains:</p>

<blockquote>
  <p>SEC7112: Script from <a href=""https://raw.github.com/cwolves/jQuery-iMask/master/dist/jquery-imask-min.js"">https://raw.github.com/cwolves/jQuery-iMask/master/dist/jquery-imask-min.js</a> was blocked due to mime type mismatch</p>
</blockquote>

<p>This complaint is coming from the fact that the file is transferred with:</p>

<pre><code>X-Content-Type-Options: nosniff
Content-Type: text/plain
</code></pre>

<p>which I can't change.</p>

<p>Anyone have any ideas how to accomplish this same thing?  Somehow allowing me to link to the file in the <code>master</code> branch without having to always push it to the <code>gh-pages</code> branch?</p>

<p>Actual page: <a href=""http://cwolves.github.com/jQuery-iMask/"">http://cwolves.github.com/jQuery-iMask/</a></p>

<p>(Minor update -- I changed the gh-pages in this exact instance to include the .js file, so IE is no longer broken, but would still like any feedback :))</p>
","46","12513","<javascript><git><internet-explorer><github>"
"677436","1","How to get the git commit count?","<p>I'd like to get the number of commits of my git repository, a bit like SVN revision numbers.
The goal is to use it as a unique, incrementing build number.</p>

<p>I currently do like that, on Unix/Cygwin/msysGit:</p>

<pre><code>git log --pretty=format:'' | wc -l
</code></pre>

<p>But I feel it's a bit of a hack.</p>

<p>Is there a better way to do that?
It would be cool if I actually didn't need wc or even git, so it could work on a bare Windows. Just read a file or a directory structure ...</p>
","383","118314","<git><build-process><revision>"
"7575363","1","Proper Way To Use Git/GitHub - PHP System with Dev/Testing/Production servers","<p>I apologize if this is obvious or easy, I have looked at a good number of git/github tutorials and read other articles, but I want to make sure what I'm doing is right.</p>

<p>I want to incorporate VC (for obvious reasons) into my development team and process.</p>

<p>Current development process (using Dreamweaver):<br>
 * Receive a ticket (or work order)<br>
 * Download file on Development server<br>
 * Make changes to the file<br>
 * Upload file back to development server<br>
 * Changes tested/verified<br>
 * Send to production server  </p>

<hr>

<p>I'm trying to figure out how to make our new development process with using Git.</p>

<p>I am switching over to PHPStorm (which is an actual PHP IDE with direct integration with Git).</p>

<p>Would it be something like</p>

<ul>
<li>Receive a ticket (or work order)  </li>
<li>Checkout/Update/Download file(s)  </li>
<li>Change Files  </li>
<li>Upload file (which I assume is also the current working directory...?)  </li>
<li>At the end of the day, do a commit  </li>
<li>Have build script send data to testing server (nightly build)  </li>
</ul>

<p>Or would it be better to do something like </p>

<ul>
<li>Receive a ticket (or work order)  </li>
<li>Checkout/Update/Download file(s)  </li>
<li>Change Files  </li>
<li>Upload file/commit</li>
<li>Have build script send data to testing server (nightly build) </li>
</ul>

<p>Or is there another way? Having a bit of trouble understanding what would be the optimal flow?</p>

<p>Any help would be greatly appreciated.</p>

<hr>

<p><strong>Edit</strong></p>

<p>I'm trying see if it is best to have a version of the server locally (every developer), and if so, how does that work if you have 7 or so branches?</p>

<p>If not, how do you deal with 7 or so branches with them on the web? Do you FTP files up or use Git Hooks to make them auto update?</p>

<p><strong>Update 07/26/2012</strong>  </p>

<p>After working successfully with Git for quite a while now I've been following this branching model with great success:
<a href=""http://nvie.com/posts/a-successful-git-branching-model/"">A Successful Git Branching Model</a></p>

<p>The answer to the above was yes -- should definitely have a local version of the server.</p>
","42","17727","<php><git><github><workflow>"
"128035","1","How do I pull from a Git repository through an HTTP proxy?","<p>Note: while the use-case described is about using submodules within a project, the same applies to a normal <code>git clone</code> of a repository over HTTP.</p>

<p>I have a project under Git control.  I'd like to add a submodule:</p>

<pre><code>git submodule add http://github.com/jscruggs/metric_fu.git vendor/plugins/metric_fu
</code></pre>

<p>But I get</p>

<pre><code>...
got 1b0313f016d98e556396c91d08127c59722762d0
got 4c42d44a9221209293e5f3eb7e662a1571b09421
got b0d6414e3ca5c2fb4b95b7712c7edbf7d2becac7
error: Unable to find abc07fcf79aebed56497e3894c6c3c06046f913a under http://github.com/jscruggs/metri...
Cannot obtain needed commit abc07fcf79aebed56497e3894c6c3c06046f913a
while processing commit ee576543b3a0820cc966cc10cc41e6ffb3415658.
fatal: Fetch failed.
Clone of 'http://github.com/jscruggs/metric_fu.git' into submodule path 'vendor/plugins/metric_fu'
</code></pre>

<p>I have my HTTP_PROXY set up:</p>

<pre><code>c:\project&gt; echo %HTTP_PROXY%
http://proxy.mycompany:80
</code></pre>

<p>I even have a global Git setting for the http proxy:</p>

<pre><code>c:\project&gt; git config --get http.proxy
http://proxy.mycompany:80
</code></pre>

<p>Has anybody gotten HTTP fetches to consistently work through a proxy?  What's really strange is that a few project on GitHub work fine (<a href=""http://github.com/collectiveidea/awesome_nested_set/""><code>awesome_nested_set</code></a> for example), but others consistently fail (<a href=""http://github.com/rails/rails/"">rails</a> for example).</p>
","336","417527","<git><proxy>"
"2816369","1","Git push error '[remote rejected] master -> master (branch is currently checked out)'","<p>Yesterday, I posted a question on how to clone a <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> repository from one of my machines to another, <em><a href=""http://stackoverflow.com/questions/2808177/how-can-i-git-clone-from-another-machine/2809612#2809612"">How can I 'git clone' from another machine?</a></em>.</p>

<p>I am now able to successfully clone a Git repository from my source (192.168.1.2) to my destination (192.168.1.1).</p>

<p>But when I did an edit to a file, a <code>git commit -a -m ""test""</code> and a <code>git push</code>, I get this error on my destination (192.168.1.1):</p>

<pre><code>git push                                                
hap@192.168.1.2's password: 
Counting objects: 21, done.
Compressing objects: 100% (11/11), done.
Writing objects: 100% (11/11), 1010 bytes, done.
Total 11 (delta 9), reused 0 (delta 0)
error: refusing to update checked out branch: refs/heads/master
error: By default, updating the current branch in a non-bare repository
error: is denied, because it will make the index and work tree inconsistent
error: with what you pushed, and will require 'git reset --hard' to match
error: the work tree to HEAD.
error: 
error: You can set 'receive.denyCurrentBranch' configuration variable to
error: 'ignore' or 'warn' in the remote repository to allow pushing into
error: its current branch; however, this is not recommended unless you
error: arranged to update its work tree to match what you pushed in some
error: other way.
error: 
error: To squelch this message and still keep the default behaviour, set
error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.
To git+ssh://hap@192.168.1.2/media/LINUXDATA/working
! [remote rejected] master -&gt; master (branch is currently checked out)
error: failed to push some refs to 'git+ssh://hap@192.168.1.2/media/LINUXDATA/working'
</code></pre>

<p>I'm using two different versions of Git (1.7 on the remote and 1.5 on the local machine). Is that a possible reason?</p>
","745","268964","<git><git-push>"
"17291995","1","Push existing project into Github","<p>I have a folder with my project sources. How I can push this project into Github's repository? </p>

<p>I tried using this steps:</p>

<ol>
<li>I created empty repository on GitHub. </li>
<li>I run git-bash and typed <code>git init</code>, so inside project root appeared <code>.git</code> folder. </li>
<li>I added some files to version control using <code>git add sourcesFolderName</code></li>
<li>I committed files added in previous step using <code>git commit -m ""initial commit""</code></li>
<li>I specified remote repository using <code>git remote add MyProject &lt;url&gt;</code></li>
<li>Finally <code>git push</code>, but nothing is pushed to remote repo... (no authorization failure)</li>
</ol>

<p>So how I can push existing sources into newly created github repo? </p>
","49","40998","<git><github>"
"7206801","1","Is there any way to git checkout previous branch?","<p>I sort of want the equivalent of <code>cd -</code> for git. If I am in branch <code>master</code> and I checkout <code>foo</code>, I would love to be able to type something like <code>git checkout -</code> to go back to <code>master</code>, and be able to type it again to return to <code>foo</code>.</p>

<p>Does anything like this exist? Would it be hard to implement?</p>
","222","16254","<git>"
"2816628","1","Version control of Mathematica notebooks","<p>Mathematica notebooks are, of course, plaintext files -- it seems reasonable to expect that they should play nice with a version-control system (git in my case, although I doubt the specific system matters).  But the fact is that any .nb file is full of cache information, timestamps, and other assorted metadata.  Scads of it.</p>

<p>Which means that limited version control is possible -- commits and rollbacks work fine.  Merging, though, is a <em>disaster</em>.  Mathematica won't open a file with merge markers in it, and a text editor is no way to go through a .nb file.</p>

<p>Has anyone had any luck putting a notebook under version control?  How?</p>
","58","4483","<git><version-control><wolfram-mathematica>"
"7599014","1","Git Bash gets stuck on diff / log, spontaneously repeats same command over and over","<p>I'm having an odd problem with Git Bash on Windows 7 / XP. It used to work fine, but recently I find that after I perform a <code>git diff</code> or <code>git log</code>, Git Bash becomes unusable: following the diff/log, even after I return to the command prompt, Bash keeps suddenly and apparently spontaneously repeating the same command, unprompted and while I'm in the middle of typing a subsequent command. </p>

<p>Has anyone else had this problem? Any advice would be much appreciated, because this is really limiting Git Bash's usefulness at the moment.</p>
","33","7272","<git><git-bash>"
"2816715","1","Branch from a previous commit using git","<p>If I have n commits, how can I branch from the n-3 commit? I can see the hash of every commit. </p>
","759","183606","<git><branch><git-branch>"
"19859486","1","Un-commit last un-pushed git commit without losing the changes","<p>Is there a way to revert a commit so that my local copy <em>keeps</em> the changes made in that commit, but they become non-committed changes in my working copy? Rolling back a commit takes you to the previous commit - I want to keep the changes made but I committed them to the wrong branch.</p>

<p>edit: Should have mentioned this has not been pushed, only committed.</p>
","79","25409","<git>"
"2993902","1","How do I check the date and time of the latest `git pull` that was executed?","<p>How do I check the date and time of the latest <code>git pull</code> that was executed? I frequently need to know when the code changed on a server when something goes wrong.</p>
","38","14310","<git>"
"1064361","1","Unable to show a Git tree in terminal","<p><a href=""http://killswitchcollective.com/articles/36_git_it_got_it_good"">Killswitchcollective.com's old article, 30 June 2009</a>, has the following inputs and outputs</p>

<pre><code>git co master
git merge [your_branch]
git push

upstream    A-B-C-D-E            A-B-C-D-E-F-G
                 \        ----&gt;               \
your branch       C-D-E                        G
</code></pre>

<p>I am interested how you get the tree like-view of commits in your terminal without using Gitk or Gitx in OS/X.</p>

<p><strong>How can you get the tree-like view of commits in terminal?</strong></p>
","206","121609","<git><terminal><tree><console><revision-history>"
"1064499","1","How to get a list of all Git tags?","<p>The tags have been created with commands like:</p>

<pre><code>git tag v1.0.0 -m 'finally a stable release'
git tag v2.0.0 -m 'oops, there was still a major bug!'
</code></pre>

<p>How to list all tags?</p>
","128","113261","<git><tags>"
"771897","1","Selectively revert or checkout changes to a file in Git?","<p>Is there a command that allows you to partially undo the changes to a file (or files) in the working directory?</p>

<p>Suppose you have edited a file a lot but you realize that you want to undo some of the changes back to the committed state, but not the other changes.</p>

<p>I'm envisioning an option for <code>git checkout</code> that works a lot like <code>git add -p</code>, i.e. it goes through the file hunk by hunk and asks if you want to keep it or not.</p>
","66","26413","<git>"
"2411031","1","How do I clone into a non-empty directory?","<p>I have directory A with files matching directory B. Directory A may have other needed files. Directory B is a git repo.</p>

<p>I want to clone directory B to directory A but git-clone won't allow me to since the directory is non-empty.</p>

<p>I was hoping it would just clone .git and since all the files match I could go from there?</p>

<p>I can't clone into an empty directory because I have files in directory A that are not in directory B and I want to keep them.</p>

<p>Copying .git is not an option since I want refs to push/pull with and I don't want to set them up manually.</p>

<p>Is there any way to do this?</p>

<p>Update: I think this works, can anyone see any problems? --></p>

<pre><code>cd a
git clone --no-hardlinks --no-checkout ../b a.tmp 
mv a.tmp/.git .
rm -rf a.tmp
git unstage # apparently git thinks all the files are deleted if you don't do this
</code></pre>
","260","106151","<git>"
"10002239","1","Difference between git checkout --track origin/branch and git checkout -b branch origin/branch","<p>Does anybody know the difference between these two commands to switch and track a remote branch?</p>

<pre><code>git checkout -b branch origin/branch
git checkout --track origin/branch
</code></pre>

<p>I think both keep track of the remote branch so I can push my changes to the branch on origin, right?</p>

<p>Is there any practical differences??</p>

<p>Thanks!</p>
","68","31341","<git><branch><checkout><git-branch>"
"7624790","1","What is the git equivalent of of hg outgoing (hg out) or hg incoming (hg in)?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1331385/how-can-i-see-incoming-commits-in-git"">How can I see incoming commits in git?</a>  </p>
</blockquote>



<p>What is the git equivalent of of ""hg outgoing"" or ""hg incoming""?</p>

<p>In Mercurial, <code>hg outgoing</code> lists the changesets that are newer than what's on the server and will be sent if I were to do <code>hg push</code>. Same in reverse for <code>hg incoming</code> and <code>hg pull</code>.</p>
","70","15947","<git><mercurial>"
"7650797","1","Stashing only un-staged changes in Git","<p>I'd like to do the following work flow:</p>

<ol>
<li>Add changes to the stage. </li>
<li>Stash all the other changes that were not staged. </li>
<li>Do some stuff with the things in stage (i.e. build, run tests, etc)</li>
<li>Apply the stash. </li>
</ol>

<p>Is there a way to do step 2?</p>

<p>Example</p>

<pre><code> echo ""123"" &gt; foo
 git add foo # Assumes this is a git directory
 echo ""456"" &gt;&gt; foo
 git stash
 cat foo # Should yield 123
</code></pre>
","64","15658","<git><git-stash>"
"821895","1","Exclude .svn folders within git","<p>I'm trying to exclude subversion's folders from being tracked by git. I tried a couple different setups for .git/info/exclude, but it doesn't seem to work. I would use git-svn, but it's a pain to request access to get that to work, so I'd rather just work around this by excluding the folders.</p>

<p>I want to exclude "".svn/entries""</p>

<p>I've tried adding the following lines to .git/info/exlude:
.svn
entries
.svn/entries
<em>entries</em>
<em>svn</em></p>

<p>No matter what I try, .svn entries shows up when I run git status</p>
","61","29615","<svn><git>"
"822811","1","Showing which files have changed between two revisions","<p>I want to merge two branches that have been separated for a while and wanted to know which files have been modified.</p>

<p>Came across this link: <a href=""http://linux.yyz.us/git-howto.html"">http://linux.yyz.us/git-howto.html</a> which was quite useful.</p>

<p>The tools to compare branches I've come across are:</p>

<ul>
<li><code>git diff master..branch</code></li>
<li><code>git log master..branch</code></li>
<li><code>git shortlog master..branch</code></li>
</ul>

<p>Was wondering if there's something like ""git status master..branch"" to only see those files that are different between the two branches.</p>

<p>Without creating a new tool, I think this is the closest you can get to do that now (which of course will show repeats if a file was modified more than once):</p>

<ul>
<li><code>git diff master..branch | grep ""^diff""</code></li>
</ul>

<p>Was wondering if there's something I missed...</p>
","1329","418314","<git><branch><git-branch><git-diff>"
"866218","1","Git: How to rebase many branches (with the same base commit) at once?","<p>I have a master branch in my project, that I use to pull changes from other people. From that, I usually have several topic branches on which I'm currently working.</p>

<p>My question is: Is there a way for me to pull new changes into my master and then rebase ALL of my topic branches onto that at once?</p>

<p>This is the situation:</p>

<pre><code>        D--E topic1
       /
A--B--C  master
       \
        F--G topic2
</code></pre>

<p>And I want to accomplish this with one single command (H came from upstream) :</p>

<pre>
               D'--E' topic1
              /
    A--B--C--H  master
              \
               F'--G' topic2
</pre>

<p>Now, I know I can accomplish this by rebasing topic1 and topic2 onto master, and I could even write a script to automate this. But what if I have several other branches, create new ones and delete others frequently and I receive upstream changes all the time?</p>

<p>This operation (several rebases), when done by hand, is both tiring and error-prone.</p>

<p>Is there an easier way?</p>

<p>Thanks!</p>
","44","8790","<git><rebase><git-rebase>"
"7677736","1","Git diff against a stash","<p>How can I see the changes un-stashing will make to the current working tree? I would like to know what changes will be made before applying them!</p>
","612","115711","<git><git-stash>"
"7764914","1","hg equivalent of git add -p?","<p>Is there a mercurial equivalent of <code>git add -p</code>?</p>

<p>Quoting from man, git-add with the option -p (or --patch) does the following:</p>

<blockquote>
  <p>Interactively choose hunks of patch between the index and the work
  tree and add them to the index. This gives the user a chance to
  review the difference before adding modified contents to the index.</p>
</blockquote>
","33","2779","<git><mercurial><git-add>"
"2475831","1","Merging: Hg/Git vs. SVN","<p>I often read that Hg (and Git and...) are better at merging than SVN but I have never seen practical examples of where Hg/Git can merge something where SVN fails (or where SVN needs manual intervention). Could you post a few step-by-step lists of branch/modify/commit/...-operations that show where SVN would fail while Hg/Git happily moves on? Practical, not highly exceptional cases please...</p>

<p>Some background: we have a few dozen developers working on projects using SVN, with each project (or group of similar projects) in its own repository. We know how to apply release- and feature-branches so we don't run into problems very often (i.e., we've been there, but we've learned to overcome <a href=""http://hginit.com/00.html"">Joel's problems</a> of ""one programmer causing trauma to the whole team"" or ""needing six developers for two weeks to reintegrate a branch""). We have release-branches that are very stable and only used to apply bugfixes. We have trunks that should be stable enough to be able to create a release within one week. And we have feature-branches that single developers or groups of developers can work on. Yes, they are deleted after reintegration so they don't clutter up the repository. ;)</p>

<p>So I'm still trying to find the advantages of Hg/Git over SVN. I'd love to get some hands-on experience, but there aren't any bigger projects we could move to Hg/Git yet, so I'm stuck with playing with small artificial projects that only contain a few made up files. And I'm looking for a few cases where you can feel the impressive power of Hg/Git, since so far I have often read about them but failed to find them myself.</p>
","134","20497","<git><svn><mercurial><merge><dvcs>"
"5408475","1","Moving a git repository up one hierarchy level","<p>Git beginner question:</p>

<p>I have a small private webproject which is versioned locally with msysgit. There is no exterior repository, as it's only for me, so i can bascially do whatever I want.</p>

<p>I've had this set up in the project directory, ie in ""webroot"".</p>

<p>Now a second directory had to be created, placed parallel to webroot. Let's call it assets.</p>

<p>So structure is now as follows:</p>

<pre><code>\ project directory
----\webroot
----\assets
</code></pre>

<p>I'd love to include this new directory in the git repository, so that I'd also version changes to files stored there, but of course I can't use ""git add ../assets"". Neither am I inclined to create a new git project in project_directory, as this would loose all my previous commits.</p>

<p>So how do I go about moving the repository out of ""webroot"" up into ""project_directory"", while keeping my commits and then being able to include ""assets""?</p>
","34","11772","<git><repository><hierarchy>"
"21839651","1","Git - What is the difference between push.default ""matching"" and ""simple""","<p>I have been using git for a while now, but I have never had to set up a new remote repo myself and I have been curious on doing so. I have been reading tutorials and I am confused on how to get ""git push"" to work. </p>

<p>If I simply use <code>git push</code> it asks me to see up a default branch(?) to point to? What is the difference between these two options it supplies me with?</p>

<pre><code>git config --global push.default matching
git config --global push.default simple
</code></pre>

<p>Matching just pushes whatever branches I have on my local repo, and if they don't match I have to then manually tell it to push whatever new local branches I have, correct? Is this best practice to use or is simple best?</p>
","72","28830","<git><git-push><git-pull><git-remote>"
"10054318","1","How to provide username and password when run ""git clone git@remote.git""?","<p>I know how to provide a username and password to an https request like this:</p>

<pre><code>git clone https://username:password@remote
</code></pre>

<p>But I'd like to know how to provide a username and password to the remote like this:</p>

<pre><code>git clone git@remote.git
</code></pre>

<p>I've tried like this:</p>

<pre><code>git clone username:password@git@remote.git
git clone git@username:password@remote.git
git clone git@remote.git@username:password
</code></pre>

<p>But they haven't worked.
Thanks.</p>
","231","303752","<git>"
"867831","1","Merge changes from remote github repository to your local repository","<p>I have forked a repository on github some time ago, made a small change and pushed the change back to my github fork. The original repository has changed since. I would like to merge the changes from the original repository to my fork.</p>

<p>I am new to both git and github, and I need specific commands how to do it.</p>
","90","55178","<git><merge><repository><github>"
"2998832","1","git pull fails ""unable to resolve reference"" ""unable to update local ref""","<p>When I do a <code>git pull</code> I get this error: </p>

<pre><code>error: unable to resolve reference refs/remotes/origin/LT558-optimize-sql: No such file or directory
From git+ssh://remoteserver/~/misk5
 ! [new branch]      LT558-optimize-sql -&gt; origin/LT558-optimize-sql  (unable to update local ref)
error: unable to resolve reference refs/remotes/origin/split-css: No such file or directory
 ! [new branch]      split-css  -&gt; origin/split-css  (unable to update local ref)
</code></pre>

<p>I've tried git <code>remote prune origin</code>, but it didn't help.</p>
","171","72479","<git>"
"1070496","1","Having a hard time understanding git-fetch","<p>I am having a hard time understanding the nuances of git-fetch. I understand that doing a <code>fetch</code>, fetches the remote refs into a local tracking branch.</p>

<p>I have a few questions though:</p>

<ol>
<li><p>Can it be possible that a local tracking branch does not exist? If so, will it then be created automatically?</p></li>
<li><p>What will happen if I do a <code>fetch</code> and specify a non tracking branch as the destination?</p></li>
<li><p>The man page for git-fetch specifies:</p>

<pre><code>git-fetch &lt;options&gt; &lt;repository&gt; &lt;refspec&gt;
</code></pre></li>
</ol>

<p>How would I use the refspec to fetch contents from my remote master into its remote tracking branch? I believe this may be possible if my current HEAD is on master and I run</p>

<p><code>git fetch origin master</code></p>

<p>However, can I use the <code>&lt;+?src:dest&gt;</code> refspec to achieve the same thing? I think this will help me understand the concepts better.</p>

<p>And one more question:</p>

<p>My .git/config file has the following line for fetching (showing only relevant lines):</p>

<pre><code>fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>Can someone please explain what this line exactly means?</p>
","41","22429","<git><git-fetch>"
"2999353","1","How do you hide .git project directories?","<p>Now that I have nginx setup I need to be able to hide my <code>.git</code> directories. What kind of rewrite would I need to stop prying eyes? And where in the <code>server {}</code> or <code>http {}</code> block would it go?</p>
","38","8181","<regex><git><nginx>"
"7303687","1","Why Git use the colon (:<branch>) to delete remote branch","<p>I am thinking about why the Git command use </p>

<p><code>git push &lt;remote&gt; :&lt;branch&gt;</code>
like
<code>git push origin :featureA</code> to delete featureA branch in the remote server. I am interest that why make the colon as the delete flag. It is so difference from</p>

<p><code>git branch -d &lt;localbranch&gt;</code></p>

<p>Why don't make something like</p>

<p><code>git branch -d --remote origin &lt;branchname&gt;</code></p>

<p>or there are deep meaning of colon symbol that I never know before?</p>
","43","5131","<git>"
"1072171","1","How do you remove an invalid remote branch reference from Git?","<p>In my current repo I have the following output:</p>

<pre><code>$ git branch -a
* master
  remotes/origin/master
  remotes/public/master
</code></pre>

<p>I want to delete <code>remotes/public/master</code> from the branch list:</p>

<pre><code>$ git branch -d remotes/public/master
error: branch 'remotes/public/master' not found.
</code></pre>

<p>Also, the output of <code>git remote</code> is strange, since it does not list <code>public</code>:</p>

<pre><code>$ git remote show 
origin
</code></pre>

<p><strong>How can I delete 'remotes/public/master' from the branch list?</strong></p>

<p>Update, tried the <code>git push</code> command:</p>

<pre><code>$ git push public :master
fatal: 'public' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>
","543","180723","<git><branch><remote-branch>"
"1072261","1","Push and pull branches in Git","<p>I have a local repository I'm working on and its remote is hosted on GitHub. I recently created a branch and started working on it, making several commits and now wish to push the branch to GitHub and be able to pull it to another cloned repository.</p>

<p>What needs to be done to accomplish this?</p>

<p>If this is not possible using GitHub, I'd be happy to know how to do it normally.</p>
","33","34212","<git><branch><github><git-push><git-pull>"
"354312","1","Why is ""origin/HEAD"" shown when running ""git branch -r""?","<p>When you run <code>git branch -r</code> why the blazes does it list <code>origin/HEAD</code>? For example, there's a remote repo on GitHub, say, with two branches: master and awesome-feature. If I do <code>git clone</code> to grab it and then go into my new directory and list the branches, I see this:</p>

<pre><code>$ git branch -r
origin/HEAD
origin/master
origin/awesome-feature
</code></pre>

<p>Or whatever order it would be in (alpha? I'm faking this example to keep the identity of an innocent repo secret). So what's the <code>HEAD</code> business? Is it what the last person to <code>push</code> had their <code>HEAD</code> pointed at when they pushed? Won't that always be whatever it was they <code>push</code>ed? <code>HEAD</code>s move around... why do I care what someone's <code>HEAD</code> pointed at on another machine?</p>

<p>I'm just getting a handle on remote tracking and such, so this is one lingering confusion. Thanks!</p>

<p>EDIT: I was under the impression that dedicated remote repos (like GitHub where no one will ssh in and work on that code, but only pull or push, etc) didn't and shouldn't have a HEAD because there was, basically, no working copy. Not so?</p>
","107","28281","<git><version-control><github>"
"4965639","1","Rollback to last git commit","<p>I just did a </p>

<pre><code>git commit -m ""blah""
</code></pre>

<p>then I added some files, how do I rollback and remove what is in my current files that have not yet been added/committed?</p>
","40","52112","<git>"
"4981126","1","How to amend several commits in Git to change author","<p>I have made a series of commits in Git and I realise now that I forgot to set my user name and user email properties correctly (new machine).  I have not yet pushed these commits to my repository, so how can I correct these commits before I do so (only the 3 latest commits on the master branch)?</p>

<p>I have been looking at <code>git reset</code> and <code>git commit -C &lt;id&gt; --reset-author</code>, but I don't think I'm on the right track.</p>
","35","7933","<git><git-commit><git-rewrite-history>"
"10169328","1","git - Your branch is ahead of 'origin/master' by 1 commit","<p>I am newbie in git and I am working on git.  </p>

<p>I added some files in git :  </p>

<pre><code>git add &lt;file1&gt;
git add &lt;file2&gt;
</code></pre>

<p>then I wanted to push that for review, but mistakenly I did</p>

<pre><code>git commit
</code></pre>

<p>so the files which I have changed don't go for reviews.<br>
Now if I enter the command :</p>

<pre><code>git status
</code></pre>

<p>it says </p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
nothing to commit (working directory clean)
</code></pre>

<p>I want to revert that commit and I want to push those files for review rather than commit.
Can anyone let me know how I can do that?</p>
","54","84724","<git><push><commit>"
"2969214","1","git: programmatically know by how much the branch is ahead/behind a remote branch","<p>I would like to extract the information that is printed after a <code>git status</code>, which looks like:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 2 commits.
</code></pre>

<p>Of course I can parse the output of <code>git status</code> but this is not recommended since this human readable output is liable to change.</p>

<p>There are two problems:</p>

<ol>
<li>How to know the remote tracked branch? It is often <code>origin/branch</code> but need not be.</li>
<li>How to get the numbers? How to know whether it is ahead/behind? By how many commits? And what about the diverged branch case?</li>
</ol>
","35","10618","<git><git-status>"
"1128496","1","To get a prompt which indicates Git-branch in Zsh","<p>I run the following codes separately as my prompt unsuccessfully in .zshrc. This suggests me that apparently I do not have a program called __git_ps1. It is not in MacPorts.</p>

<h2>#1</h2>

<pre><code>PROMPT=""$(__git_ps1 "" \[\033[1;32m\] (%s)\[\033[0m\]"")\$""$
</code></pre>

<h2>#2     </h2>

<pre><code>PROMPT=""$(__git_ps1 "" (%s)"")\$""$
</code></pre>

<h2><a href=""http://pastie.org/325104"">#3</a></h2>

<pre><code># Get the name of the branch we are on
git_prompt_info() {
  branch_prompt=$(__git_ps1)
  if [ -n ""$branch_prompt"" ]; then
    status_icon=$(git_status)
    echo $branch_prompt $status_icon
  fi
}

# Show character if changes are pending
git_status() {
  if current_git_status=$(git status | grep 'added to commit' 2&gt; /dev/null); then
    echo ""☠""
  fi
}
autoload -U colors
colors
setopt prompt_subst
PROMPT='
%~%{$fg_bold[black]%}$(git_prompt_info)
→ %{$reset_color%}'
</code></pre>

<p><strong>How can you get a prompt which shows the name of a Git-branch?</strong></p>
","38","24894","<git><zsh><prompt>"
"5382255","1","How to read git log graph","<p>In the git community book, it says</p>

<blockquote>
  <p>Another interesting thing you can do is visualize the commit graph with the '--graph' option, like so:</p>

<pre><code>$ git log --pretty=format:'%h : %s' --graph
* 2d3acf9 : ignore errors from SIGCHLD on trap
*   5e3ee11 : Merge branch 'master' of git://github.com/dustin/grit
|\
| * 420eac9 : Added a method for getting the current branch.
* | 30e367c : timeout code and tests
* | 5a09431 : add timeout protection to grit
* | e1193f8 : support for heads with slashes in them
|/
* d6016bc : require time for xmlschema
</code></pre>
  
  <p>It will give a pretty nice ASCII representation of the commit history lines.</p>
</blockquote>

<p>How should I read this graph? How does <code>420eac9</code> differ from the rest?</p>
","37","10423","<git><git-branch><git-log>"
"14620863","1","Git add all subdirectories","<p>I'm having trouble adding a folder and all of it's subdirectories to my git repository. I realized this is a very popular question after doing some googling and I've tried each suggestion with no luck, specifically the suggestion from the <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-add.html"" rel=""nofollow"">man page on git-add</a>. I even tried <code>git add -A</code> with no success. For simplicity sake, say I initialized my git repository as <code>Dir1</code>. Then I have the following directory structure of files.</p>

<pre><code>Dir1/file1-1.txt
Dir1/file1-2.txt
Dir1/Dir2/file2-1.txt
Dir1/Dir2/Dir3/file3-1.txt
</code></pre>

<p>My real files have subdirectories that span 5-6 levels deep, so is there a git command to add all the files in each subdirectory to my repository? Right now, when I do the suggestion from the man page <code>git add Dir1/\*</code> I can see <code>Dir2</code> in my repo, but it shows up as a green folder and I can't open it, which leads me to believe that all the files/folders in <code>Dir2</code> did not get added. Any help would be greatly appreciated. I'm a new git user (less than a week of using it), so try and keep your instructions at a beginner's level.</p>
","32","51118","<git><repository><git-add>"
"17083502","1","How to perform better document version control on Excel files and SQL schema files","<p>I am in charge of several Excel files and SQL schema files. How should I perform better document version control on these files? I need to know the part modified (different part) in these file and keep all the versions for reference. Currently I am appending the time stamp on the file name, but I found it seemed to be inefficient.</p>

<p>Is there any way or good practice to do better document version control?</p>

<p>By the way, editors send me the files via email.</p>
","34","23685","<git><version-control><ms-office><versioning>"
"3001888","1","How do gitignore exclusion rules actually work?","<p>I'm trying to solve a gitignore problem on a large directory structure, but to simplify my question I have reduced it to the following.</p>

<p>I have the following directory structure of two files (foo, bar) in a brand new git repository (no commits so far):</p>

<pre><code>a/b/c/foo
a/b/c/bar
</code></pre>

<p>Obviously, a 'git status -u' shows:</p>

<pre><code># Untracked files:
...
#       a/b/c/bar
#       a/b/c/foo
</code></pre>

<p>What I want to do is create a .gitignore file that ignores everything inside a/b/c but does not ignore the file 'foo'.</p>

<p>If I create a .gitignore thus:</p>

<pre><code>c/
</code></pre>

<p>Then a 'git status -u' shows both foo and bar as ignored:</p>

<pre><code># Untracked files:
...
#       .gitignore
</code></pre>

<p>Which is as I expect.</p>

<p>Now if I add an exclusion rule for foo, thus:</p>

<pre><code>c/
!foo
</code></pre>

<p>According to the gitignore manpage, I'd expect this to to work. But it doesn't - it still ignores foo:</p>

<pre><code># Untracked files:
...
#       .gitignore
</code></pre>

<p>This doesn't work either:</p>

<pre><code>c/
!a/b/c/foo
</code></pre>

<p>Neither does this:</p>

<pre><code>c/*
!foo
</code></pre>

<p>Gives:</p>

<pre><code># Untracked files:
...
#       .gitignore
#       a/b/c/bar
#       a/b/c/foo
</code></pre>

<p>In that case, although foo is no longer ignored, bar is also not ignored.</p>

<p>The order of the rules in .gitignore doesn't seem to matter either.</p>

<p>This also doesn't do what I'd expect:</p>

<pre><code>a/b/c/
!a/b/c/foo
</code></pre>

<p>That one ignores both foo and bar.</p>

<p>One situation that does work is if I create the file a/b/c/.gitignore and put in there:</p>

<pre><code>*
!foo
</code></pre>

<p>But the problem with this is that eventually there will be other subdirectories under a/b/c and I don't want to have to put a separate .gitignore into every single one - I was hoping to create 'project-based' .gitignore files that can sit in the top directory of each project, and cover all the 'standard' subdirectory structure.</p>

<p>This also seems to be equivalent:</p>

<pre><code>a/b/c/*
!a/b/c/foo
</code></pre>

<p>This might be the closest thing to ""working"" that I can achieve, but the full relative paths and explicit exceptions need to be stated, which is going to be a pain if I have a lot of files of name 'foo' in different levels of the subdirectory tree.</p>

<p>Anyway, either I don't quite understand how exclusion rules work, or they don't work at all when directories (rather than wildcards) are ignored - by a rule ending in a /</p>

<p>Can anyone please shed some light on this?</p>

<p>Is there a way to make gitignore use something sensible like regular expressions instead of this clumsy shell-based syntax?</p>

<p>I'm using and observe this with git-1.6.6.1 on Cygwin/bash3 and git-1.7.1 on Ubuntu/bash3.</p>
","94","36912","<git><gitignore>"
"1078146","1","Re-doing a reverted merge in Git","<p>I have run into a bit of a problem here: I had a problem-specific branch '28s' in git, that I merged in the general 'develop' branch. Turns out I had done it too fast, so I used git-revert to undo the merge. Now, however, the time has come to merge '28s' into 'develop', but git-merge command sees the original merge, and happily announces that all is well and branches have been already merged. What do I do now? Create a 'Revert ""Revert ""28s -> develop"""" ' commit? Doesn't seem to be a good way to do it, but I can't imagine any other at the moment.</p>

<p>What the tree structure looks like:</p>

<p><img src=""http://imgur.com/uhvLD.png"" alt=""alt text"" /></p>
","83","23780","<git><version-control><merge><revert>"
"1183769","1","Git Status Takes a Long Time to Complete","<p>I'm using <code>git</code> to manage files in a local directory on a Windows machine - no network is involved here, I'm not pushing or pulling to/from another machine.  My directory has maybe 100 files in it, all test files, pretty small.  When I run <code>git status</code>, it regularly takes 20-30 seconds to complete.  Is this normal?  Is there anything I can do to speed it up, or a better way to see what the state of my repository is (changed files, untracked files, etc)?  Other <code>git</code> commands seem to complete much faster.</p>
","31","19539","<windows><git>"
"5480069","1","autosetuprebase vs autosetupmerge","<p>I was just knocking around in my global <code>.gitconfig</code> file and I noticed that I've managed to end up with this:</p>

<pre><code>[branch]
  autosetupmerge = always
  autosetuprebase = always
</code></pre>

<p>That seemed more than a little counterintuitive, but after doing some reading, I still have no idea whether I need both or whether it's sufficient to remove <code>autosetupmerge</code> and just retain <code>autosetuprebase</code>. Most projects that I'm working have a straight downstream->upstream flow, so rebasing is generally preferred when dealing with branches.</p>
","33","20846","<git>"
"5480258","1","How to delete a remote tag?","<p>How do you delete a tag that has already been pushed?</p>
","815","157952","<git><git-tag>"
"1184518","1","Getting existing git branches to track remote branches","<p>My usual workflow when working with git, is something like this:</p>

<ol>
<li>create a local repository</li>
<li>do some work in that repository, add/change files etc.</li>
<li>decide that I want a central remote location for the repository, and create one</li>
<li>push all the commits from my local repository to this new remote repository</li>
</ol>

<p>Now, however, I want to be able to <code>push</code> and <code>pull</code> from this remote repository without having to specify where I'm pushing to or pulling from; I want my local master to track the remote master.</p>

<p>The <em>proper</em> way to do this isn't clear to me, and I've been unable to determine it from the documentation, even though it shouldn't really be more than one command.</p>

<p>Because it's something that's only ever done once per repository, I've generally employed one of two simple, but hacky, solutions:</p>

<ol>
<li>used <code>git clone</code> to make a new local repository, and deleted the old one. After git cloning, the new repository is setup to track the origin.</li>
<li>manually edited .git/config to make master track origin.</li>
</ol>

<p>I think I should be able to run a command, probably some form of <code>git remote</code> to setup an existing repository to have master track a remote master. Can anyone tell me what that command is?</p>
","69","30666","<git>"
"7832770","1","How to get certain commit from GitHub project","<p>I need to download the Facebook API from <a href=""https://github.com/facebook/facebook-ios-sdk"">GitHub</a>. Normally, I just click on the 'Downloads"" tab to download the latest source code. In this case, I need an older commit: <a href=""https://github.com/facebook/facebook-ios-sdk/commit/91f256424531030a454548693c3a6ca49ca3f35a"">91f256424531030a454548693c3a6ca49ca3f35a</a>, but I have no idea how to get the entire project from that commit...</p>

<p>Can someone please tell me how to do this?</p>

<p>(BTW, im on a mac. Don't know if that makes any difference).</p>
","44","50186","<git><github>"
"9807393","1","Git - show history of a file?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/278192/view-the-change-history-of-a-file-using-git-versioning"">View the change history of a file using Git versioning</a>  </p>
</blockquote>



<p>Sometimes I want to step through the history of a particular file. In the past I used P4V and this was very quick and intuitive. </p>

<ol>
<li>Right click on a file and select history.</li>
<li>Scrolling through the dates and see a nice diff of exactly what changed in <strong>that</strong> file on <strong>that</strong> date. Simple.</li>
</ol>

<p>Switching to git this is now a grueling task. </p>

<ol>
<li>""git log filename""</li>
<li>Look at history and pick a date, copy hash</li>
<li>""git diff hash""</li>
<li>Scroll through diff for the stuff that changed in the file I am interested in.</li>
<li>Nope, that's not it, lets try a different date - back to step 2, rinse and repeat.</li>
</ol>

<p>I've searched SO, and I've tried a few of the commonly suggested guis: github, gitk, gitg, git-gui.</p>

<p>These all remove the need to manually run commands, but the workflow is the same for this. View history of file; view commit; search through diff of lots of irrelevant files. It's slow and repetitive.</p>

<p>All the data is in the repo so I see no reason this simple common use case could not be more streamlined.</p>

<p>Can anyone recommend a tool that does this - or a more efficient way to utilize the command line to do what I want?</p>

<p>Thanks for any suggestions.</p>
","49","45010","<git><version-control><github>"
"465042","1","Is it possible to have a Subversion repository as a Git submodule?","<p>Is there a way to add a Subversion repository as a Git submodule in my Git repository?</p>

<p>Something like:</p>

<pre><code>git-svn submodule add https://svn.foo.com/svn/proj --stdlayout svn-project
</code></pre>

<p>Where <code>https://svn.foo.com/svn/proj</code> points to a Subversion repository.</p>

<p>I know there is <code>git-svn</code> which allows one to interact with a Subversion repository. So I am thinking, maybe there is a way to checkout a Subversion repository with <code>git-svn</code> and then use it as a submodule.</p>
","139","28835","<svn><git><git-svn>"
"1186535","1","How to modify a specified commit in git?","<p>I usually submit a list of commits for review. If I have:</p>

<ul>
<li><strong><code>HEAD</code></strong>  </li>
<li><strong><code>Commit3</code></strong>  </li>
<li><strong><code>Commit2</code></strong>  </li>
<li><strong><code>Commit1</code></strong></li>
</ul>

<p>I know that I can modify head commit with <code>git commit --amend</code>, but how can I modify <strong><code>Commit1</code></strong>, given that it is not the <strong><code>HEAD</code></strong> commit?</p>
","1095","306886","<git><git-rewrite-history>"
"5483213","1","fatal: git-write-tree: error building trees","<p>I did a pull from a shared git repository, but something went really wrong, after I tried a git revert. Here is the situation now:</p>

<pre><code>$ git stash
Source/MediaStorageAndFileFormat/gdcmImageCodec.cxx: needs merge
Source/MediaStorageAndFileFormat/gdcmJPEGLSCodec.cxx: needs merge
Source/MediaStorageAndFileFormat/gdcmPNMCodec.cxx: needs merge
Testing/Source/DataStructureAndEncodingDefinition/Cxx/TestDS.cxx: needs merge
Utilities/socketxx/socket++/sockstream.cpp: needs merge
Source/MediaStorageAndFileFormat/gdcmImageCodec.cxx: needs merge
Source/MediaStorageAndFileFormat/gdcmJPEGLSCodec.cxx: needs merge
Source/MediaStorageAndFileFormat/gdcmPNMCodec.cxx: needs merge
Testing/Source/DataStructureAndEncodingDefinition/Cxx/TestDS.cxx: needs merge
Utilities/socketxx/socket++/sockstream.cpp: needs merge
Source/MediaStorageAndFileFormat/gdcmImageCodec.cxx: unmerged (2aafac967c35fa4e77c3086b83a3c102939ad168)
Source/MediaStorageAndFileFormat/gdcmImageCodec.cxx: unmerged (78cc95e8bae85bf8345a7793676e878e83df167b)
Source/MediaStorageAndFileFormat/gdcmImageCodec.cxx: unmerged (2524db713fbde0d7ebd86bfe2afc4b4d7d48db33)
Source/MediaStorageAndFileFormat/gdcmJPEGLSCodec.cxx: unmerged (4bb4ba78973091eaa854b03c6ce24e8f4af9e7cc)
Source/MediaStorageAndFileFormat/gdcmJPEGLSCodec.cxx: unmerged (ad0982b8b8b4c4fef23e69bbb639ca6d0cd98dd8)
Source/MediaStorageAndFileFormat/gdcmJPEGLSCodec.cxx: unmerged (4868371b7218c6e007fb6c582ad4ab226167a80a)
Source/MediaStorageAndFileFormat/gdcmPNMCodec.cxx: unmerged (f7a1b386b5b13b8fa8b6a31ce1258d2d5e5b13c5)
Source/MediaStorageAndFileFormat/gdcmPNMCodec.cxx: unmerged (6ce299c416fbb3bb60e11ef1e54962ffd3449a4c)
Source/MediaStorageAndFileFormat/gdcmPNMCodec.cxx: unmerged (75c8043a60a56a1130a34cdbd91d130bc9343c1c)
Testing/Source/DataStructureAndEncodingDefinition/Cxx/TestDS.cxx: unmerged (79c2843f2649ea9c87fa57662dafd899a5fa39ee)
...
fatal: git-write-tree: error building trees
Cannot save the current index state
</code></pre>

<p>Is there a way to reset all that ?</p>

<p>Thanks</p>
","85","39656","<git>"
"7438313","1","Pushing to Git returning Error Code 403 fatal: HTTP request failed","<p>I was able to clone a copy of this repo over HTTPS authenticated. I've made some commits and want to push back out to the GitHub server. Using Cygwin on Windows 7 x64.</p>

<pre><code>C:\cygwin\home\XPherior\Code\lunch_call&gt;git push
Password:
error: The requested URL returned error: 403 while accessing https://MichaelDrog
alis@github.com/derekerdmann/lunch_call.git/info/refs

fatal: HTTP request failed
</code></pre>

<p>Also set it up with verbose mode. I'm still pretty baffled.</p>

<pre><code>C:\cygwin\home\XPherior\Code\lunch_call&gt;set GIT_CURL_VERBOSE=1

C:\cygwin\home\XPherior\Code\lunch_call&gt;git push
Password:
* Couldn't find host github.com in the _netrc file; using defaults
* About to connect() to github.com port 443 (#0)
*   Trying 207.97.227.239... * 0x23cb740 is at send pipe head!
* Connected to github.com (207.97.227.239) port 443 (#0)
* successfully set certificate verify locations:
*   CAfile: C:\Program Files (x86)\Git/bin/curl-ca-bundle.crt
  CApath: none
* SSL connection using AES256-SHA
* Server certificate:
*        subject: 2.5.4.15=Private Organization; 1.3.6.1.4.1.311.60.2.1.3=US; 1.
3.6.1.4.1.311.60.2.1.2=California; serialNumber=C3268102; C=US; ST=California; L
=San Francisco; O=GitHub, Inc.; CN=github.com
*        start date: 2011-05-27 00:00:00 GMT
*        expire date: 2013-07-29 12:00:00 GMT
*        subjectAltName: github.com matched
*        issuer: C=US; O=DigiCert Inc; OU=www.digicert.com; CN=DigiCert High Ass
urance EV CA-1
*        SSL certificate verify ok.
&gt; GET /derekerdmann/lunch_call.git/info/refs?service=git-receive-pack HTTP/1.1
User-Agent: git/1.7.4.3282.g844cb
Host: github.com
Accept: */*
Pragma: no-cache

&lt; HTTP/1.1 401 Authorization Required
&lt; Server: nginx/1.0.4
&lt; Date: Thu, 15 Sep 2011 22:44:41 GMT
&lt; Content-Type: text/plain
&lt; Connection: keep-alive
&lt; Content-Length: 55
&lt; WWW-Authenticate: Basic realm=""GitHub""
&lt;
* Ignoring the response-body
* Expire cleared
* Connection #0 to host github.com left intact
* Issue another request to this URL: 'https://MichaelDrogalis@github.com/dereker
dmann/lunch_call.git/info/refs?service=git-receive-pack'
* Couldn't find host github.com in the _netrc file; using defaults
* Re-using existing connection! (#0) with host github.com
* Connected to github.com (207.97.227.239) port 443 (#0)
* 0x23cb740 is at send pipe head!
* Server auth using Basic with user 'MichaelDrogalis'
&gt; GET /derekerdmann/lunch_call.git/info/refs?service=git-receive-pack HTTP/1.1
Authorization: Basic XXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
User-Agent: git/1.7.4.3282.g844cb
Host: github.com
Accept: */*
Pragma: no-cache

&lt; HTTP/1.1 401 Authorization Required
&lt; Server: nginx/1.0.4
&lt; Date: Thu, 15 Sep 2011 22:44:41 GMT
&lt; Content-Type: text/plain
&lt; Connection: keep-alive
&lt; Content-Length: 55
* Authentication problem. Ignoring this.
&lt; WWW-Authenticate: Basic realm=""GitHub""
* The requested URL returned error: 401
* Closing connection #0
* Couldn't find host github.com in the _netrc file; using defaults
* About to connect() to github.com port 443 (#0)
*   Trying 207.97.227.239... * 0x23cb740 is at send pipe head!
* Connected to github.com (207.97.227.239) port 443 (#0)
* successfully set certificate verify locations:
*   CAfile: C:\Program Files (x86)\Git/bin/curl-ca-bundle.crt
  CApath: none
* SSL re-using session ID
* SSL connection using AES256-SHA
* old SSL session ID is stale, removing
* Server certificate:
*        subject: 2.5.4.15=Private Organization; 1.3.6.1.4.1.311.60.2.1.3=US; 1.
3.6.1.4.1.311.60.2.1.2=California; serialNumber=C3268102; C=US; ST=California; L
=San Francisco; O=GitHub, Inc.; CN=github.com
*        start date: 2011-05-27 00:00:00 GMT
*        expire date: 2013-07-29 12:00:00 GMT
*        subjectAltName: github.com matched
*        issuer: C=US; O=DigiCert Inc; OU=www.digicert.com; CN=DigiCert High Ass
urance EV CA-1
*        SSL certificate verify ok.
* Server auth using Basic with user 'MichaelDrogalis'
&gt; GET /derekerdmann/lunch_call.git/info/refs HTTP/1.1
Authorization: Basic xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
User-Agent: git/1.7.4.3282.g844cb
Host: github.com
Accept: */*
Pragma: no-cache

* The requested URL returned error: 403
* Expire cleared
* Closing connection #0
error: The requested URL returned error: 403 while accessing https://MichaelDrog
alis@github.com/derekerdmann/lunch_call.git/info/refs

fatal: HTTP request failed
</code></pre>

<p>These are the versions of git and curl that I have:</p>

<pre><code>C:\Users\XPherior&gt;git --version
git version 1.7.4.msysgit.0

C:\Users\XPherior&gt;curl --version
curl 7.21.7 (amd64-pc-win32) libcurl/7.21.7 OpenSSL/0.9.8r zlib/1.2.5
Protocols: dict file ftp ftps gopher http https imap imaps ldap pop3 pop3s rtsp
smtp smtps telnet tftp
Features: AsynchDNS GSS-Negotiate Largefile NTLM SSL SSPI libz
</code></pre>
","369","288913","<git><github><dvcs>"
"2660977","1","What does it mean when git says a file ""needs update""?","<p>I can't for the life of me find any decent explanation of the ""[file]: needs update"" message that git sometimes spits out from time to time.  Even the official git FAQ has explaining this marked as a TODO.  If someone could explain A) what it means; and B) how to fix it, I would be extremely grateful.</p>
","112","28901","<git>"
"3119850","1","Is there a way to clean up git?","<p>Seems like my project is getting bigger and bigger with every git <code>commit/push</code>. Is there a way to clean up my git folder?</p>
","79","79708","<git>"
"1274057","1","Making git ""forget"" about a file that was tracked but is now in .gitignore","<p>There is a file that was being tracked at one time by <code>git</code>, but now the file is on the <code>.gitignore</code> list.</p>

<p>However, that file keeps showing up in <code>git status</code> after it's edited. How do you force <code>git</code> to completely forget about it?</p>
","1458","286435","<git><gitignore><git-rm>"
"5120038","1","Is it possible to cherry-pick a commit from another git repository?","<p>I'm working with a git repository that needs a commit from another git repository that knows nothing of the first.</p>

<p>Typically I would cherry-pick using the <code>HEAD@{x}</code> in the reflog, but because this <code>.git</code> knows nothing of this reflog entry (different physical directory), how can I cherry-pick this, or can I?</p>

<p>I'm using <code>git-svn</code>. My first branch is using <code>git-svn</code> of the <code>trunk</code> of a Subversion repo, and the next branch is using <code>git-svn</code> on a Subversion branch.</p>
","299","80796","<git><cherry-pick>"
"5563564","1","Completely remove files from Git repo and remote on GitHub","<p>I accidentally added a folder of images and committed. Then, I made one more commit.
Then I removed those files using <code>git rm -f ./images</code> and committed again. </p>

<p>Right now, I have made a lot more commits in that branch (master). In my HEAD, I don't have that <code>./static/images</code> folder.</p>

<p>Due to this, my repo size has increased a lot. How can I remove those blobs completely? And I want to remove it from my remote GitHub repo too.</p>
","72","58790","<git><git-remote><git-filter-branch><git-rm>"
"3161204","1","Find the parent branch of a git branch","<p>Lets say I have the following local repository with a commit tree like this:</p>

<pre><code>master --&gt; a
            \
             \
      develop c --&gt; d
               \
                \
         feature f --&gt; g --&gt; h
</code></pre>

<p>master is my <code>this is the latest stable release code</code>, develop is my <code>this is the 'next' release code</code>, and feature is <code>a new feature being prepared for 'develop'</code>.</p>

<p>What I want to be able to do on my remote repo using hooks, is for pushes to <code>feature</code> to be refused unless commit <code>f</code> is a direct decendant of <code>develop</code> HEAD. i.e. the commit tree looks like this because feature has been <code>git rebase</code> on <code>d</code>.</p>

<pre><code>master --&gt; a
            \
             \
      develop c --&gt; d
                     \
                      \
               feature f --&gt; g --&gt; h
</code></pre>

<p>So is it possible to:</p>

<ul>
<li>identify the parent branch of <code>feature</code>?</li>
<li>identify the commit in parent branch which <code>f</code> is a decendant of?</li>
</ul>

<p>From there I would check what HEAD of parent branch is, and see if <code>f</code> predecessor matches the parent branch HEAD, to determine if feature needs to be rebased. </p>
","116","75379","<git>"
"12661306","1","git rm --cached file vs git reset file","<p>I'm trying to learn Git. I'm confused between </p>

<pre><code>git rm --cached file
</code></pre>

<p>and</p>

<pre><code>git reset file
</code></pre>

<p>both of the commands seem to take the file from staged to un-staged area. How do the commands differ?</p>
","34","38510","<git><git-reset><git-rm>"
"4766391","1","What is the CouchDB replication protocol? Is it like Git?","<p>Is there technical documentation describing how replication between two Couches works?</p>

<p>What is the basic overview of CouchDB replication? What are some noteworthy characteristics about it?</p>
","53","5615","<git><couchdb>"
"22053757","1","Git - checkout another branch when there are uncommitted changes on the current branch","<p>Most of the time when I try to checkout another existing branch, git doesn't allow me if I have some uncommitted changes on the current branch. So I'll have to commit or stash those changes first. However, occasionally git does allow me to checkout another branch without committing or stashing those changes, and it will carry those changes to the branch I checkout. What is the rule here? Does it matter whether the changes are staged or unstaged? Carrying the changes to another branch doesn't make any sense to me, why does git allow it sometimes? i.e. is it helpful in some situations?</p>
","45","12860","<git>"
"7527982","1","Applying .gitignore to committed files","<p>I have committed loads of files that I now want to ignore. How can I tell git to now ignore these files from future commits? </p>

<p>EDIT: I do want to remove them from the repository too. They are files created after ever build or for user-specific tooling support.</p>
","158","45084","<git>"
"7949956","1","Why does git diff on Windows warn that the ""terminal is not fully functional""?","<p>I'm using <strong>msysgit 1.7.7.1</strong> on Windows. I get an error when using <code>git diff</code>. What is causing this? Is there no diff tool included in msysgit? What should I do?</p>

<blockquote>
  <p>WARNING: terminal is not fully functional</p>
</blockquote>
","97","21222","<windows><git><diff><msysgit>"
"594757","1","How do I do a 'git status' so it doesn't display untracked files without using .gitignore?","<p>How do I do a <code>git status</code> so it doesn't display untracked files without using <code>.gitignore</code>?  I want to get modification status information on tracked files only.</p>
","161","36722","<git><version-control>"
"5605347","1","Git diff --name-only and copy that list","<p>Hope someone can help me. I just wanna get list of changed files between to revisions, and its simple:</p>

<pre><code>git diff -–name-only commit1 commit2 &gt; /path/to/my/file
</code></pre>

<p>But what should i write, if i want copy all that listed files to another place? And i need completely identical directory structure for copied files.</p>

<p>For example, i have modified and added files:</p>

<pre><code>/protected/texts/file1.txt
/protected/scripts/index.php
/public/pics/pic1.png
</code></pre>

<p>I want to have in /home/changes/ all than changed and added files:</p>

<pre><code>/home/changes/protected/texts/file1.txt
/home/changes/protected/scripts/index.php
/home/changes/public/pics/pic1.png
</code></pre>
","56","53677","<git>"
"35284","1","How do I restore files to previous states in git?","<p>Given the following interaction:</p>

<pre><code>$ git add foo 
$ git commit -m ""Initial import of 'foo'""
$ rm foo # This could be any destructive action on foo, like editing it.
</code></pre>

<p>How do I restore 'foo' in my working copy? I'm looking for something like:</p>

<pre><code>$ git &lt;magic&gt; foo
Restored foo to revision &lt;blah&gt;.
</code></pre>
","83","76648","<git>"
"4781405","1","Git - how do I view the change history of a method/function?","<p>So I found the question about how to view the change history of a file, but the change history of this particular file is huge and I'm really only interested in the changes of a particular method. So would it be possible to see the change history for just that particular method?</p>

<p>I know this would require git to analyze the code and that the analysis would be different for different languages, but method/function declarations look very similar in most languages, so I thought maybe someone has implemented this feature.</p>

<p>The language I'm currently working with is Objective-C and the SCM I'm currently using is git, but I would be interested to know if this feature exists for any SCM/language.</p>
","37","6214","<objective-c><git><function><methods><history>"
"9935379","1","Git: Show all of the various changes to a single line in a specified file over the entire git history","<p>I've looked around, and am not sure if this is possible, but here goes:</p>

<p>I have a (javascript) file (say /lib/client.js) in which I have a unique identifier assigned to a variable, like so:
   <code>var identifier = ""SOME_IDENTIFIER"";</code></p>

<p>You can think of the identifier like a version number:  Periodically, we'll change this variable to a new identifier.</p>

<p>What I'd like to do is find all of the unique identifiers we've ever used.  How can I do this with git?</p>

<p>I imagine there might be a way to search through the git history, and print the line matching <code>""var identifier =""</code>.  I could de-dupe this list manually.</p>

<p>Anyway, I'd appreciate any insight here.  Thanks.</p>
","41","13077","<git>"
"5606048","1","Git merge from someone else's fork","<p>I have a repository on github, and someone else has forked it and made changes.</p>

<p>I want to:</p>

<ol>
<li>Create a new branch</li>
<li>Merge their changes into my branch</li>
</ol>

<p>I have created the new branch:</p>

<pre><code>git commit -b my_new_branch
</code></pre>

<p>How do I merge their code into this new branch? </p>

<p>This is the branch that I have created: <a href=""https://github.com/poundifdef/VirginMobileMinutesChecker/tree/widget_toast"">https://github.com/poundifdef/VirginMobileMinutesChecker/tree/widget_toast</a></p>

<p>This is the branch that I want to merge:
<a href=""https://github.com/xbakesx/VirginMobileMinutesChecker"">https://github.com/xbakesx/VirginMobileMinutesChecker</a></p>

<p>What is the best way to do this? I've tried a ""pull"" and it won't work. I honestly have no idea what I'm doing in gitland, so if there is a better way to accomplish this (besides my creating a branch and trying to merge) then I am all ears!</p>
","32","8551","<git><github><git-branch>"
"5190188","1","Why can't I use TortoiseMerge as my git merge tool on Windows?","<p>I'm trying to perform my first Git merge ever (exciting!), but can't get Git Gui (0.13.GITGUI from Git 1.7.4.msysgit.0) to recognize TortoiseMerge (1.6.11.20210 x64) on Windows 7.  Based on <a href=""http://stackoverflow.com/questions/426026/git-on-windows-how-do-you-set-up-a-mergetool/436040#436040"">an answer to a similar question</a>, I've made the following configuration changes:</p>

<pre><code>$ git config --global merge.tool tortoisemerge
$ git config --global mergetool.tortoisemerge.cmd 'TortoiseMerge.exe -base:""$BASE"" -mine:""$LOCAL"" -theirs:""$REMOTE"" -merged:""$MERGED""'
$ git config --global --list
...snip...
merge.tool=tortoisemerge
mergetool.tortoisemerge.cmd=TortoiseMerge.exe -base:""$BASE"" -mine:""$LOCAL"" -theirs:""$REMOTE"" -merged:""$MERGED""
$
</code></pre>

<p>Unfortunately, when I start Git Gui and attempt to ""Run Merge Tool"", I receive the error <code>Unsupported merge tool 'tortoisemerge'</code>.</p>

<p>Can anyone tell me what I've done wrong?  Here's the relevant sections of my <code>~/.gitconfig</code>:</p>

<pre><code>[merge]
        tool = tortoisemerge
[mergetool ""tortoisemerge""]
        cmd = TortoiseMerge.exe -base:\""$BASE\"" -mine:\""$LOCAL\"" -theirs:\""$REMOTE\"" -merged:\""$MERGED\""
</code></pre>

<p><strong>Update</strong></p>

<p>TortoiseMerge works fine with the above config when running <code>git mergetool</code> from the command line.  It seems that only Git Gui has problems with it.  :-/</p>
","36","21866","<windows><git><user-interface><mergetool><tortoisemerge>"
"3203228","1","git ignore exception","<p>I have a gitignore file that makes git ignore <code>*.dll</code> files, and that is actually the behavior I want. However, if I want an exception ( i.e. to be able to commit <code>foo.dll</code>), how can I achieve this?</p>
","120","30451","<git><gitignore>"
"2337281","1","How do I do an initial push to a remote repository with Git?","<p>I've read through countless tutorials and I keep coming up short.  Here's what I've got:</p>

<p>-- I'm running RubyMine on my Windows desktop<br/>
-- I've installed Git on my WebFaction hosting account per their <a href=""http://docs.webfaction.com/software/git.html?highlight=git#create-a-place-to-store-git-repositories"">instructions</a><br/>
-- Git appears to be working fine on both machines</p>

<p>Here's what I'm doing:<br/>
1. On server:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a. mkdir <em>project</em><br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b. git init<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c. git add .<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;d. git commit   &lt;--- ""nothing to commit""<br/>
2. On client:<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;a. Create new project in RubyMine.<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;b. ""git init"" in top directory of project<br/>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;c. ""Push changes"" to server   &lt;---- ""failed to push some refs to..."".<br/></p>

<p>What steps am I missing?</p>
","59","59369","<git><version-control>"
"61002","1","How can I generate a git diff of what's changed since the last time I pulled?","<p>I'd like to script, preferably in rake, the following actions into a single command:</p>

<ol>
<li>Get the version of my local git repository.</li>
<li>Git pull the latest code.</li>
<li>Git diff from the version I extracted in step #1 to what is now in my local repository.</li>
</ol>

<p>In other words, I want to get the latest code form the central repository and immediately generate a diff of what's changed since the last time I pulled.</p>
","52","37095","<git><diff><rake><pull>"
"3206843","1","How line ending conversions work with git core.autocrlf between different operating systems","<p>I've read a lot of different questions and answers on Stack Overflow as well as <strong>git</strong> documentation on how the <strong>core.autocrlf</strong> setting works.</p>

<p>This is my understanding from what I've read:</p>

<p>Unix and Mac OSX (pre-OSX uses CR) clients use LF line endings.<br>
Windows clients use CRLF line endings.</p>

<p>When core.autocrlf is set to true on the client, the git repository always stores files in LF line ending format and line endings in files on the client are converted back and forth on check out / commit for clients (i.e. Windows) that use non-LF line endings, no matter what format the line endings files are on the client (this disagrees with Tim Clem's definition - see update below).</p>

<p>Here is a matrix that tries to document the same for the 'input' and 'false' settings of core.autocrlf with question marks where I'm not sure of line ending conversion behavior.</p>

<p>My questions are:</p>

<ol>
<li><strong>What should the question marks be?</strong></li>
<li><strong>Is this matrix correct for the ""non-question marks""?</strong></li>
</ol>

<p>I'll update the question marks from the answers as consensus appears to be formed.</p>

<pre>
                       core.autocrlf value
            true            input              false
----------------------------------------------------------
commit   |  convert           ?                  ?
new      |  to LF      (convert to LF?)   (no conversion?)

commit   |  convert to        ?                 no 
existing |  LF         (convert to LF?)     conversion

checkout |  convert to        ?                 no
existing |  CRLF       (no conversion?)     conversion

</pre>

<p>I'm not really looking for opinions on the pros and cons of the various settings.  I'm just looking for data which makes it clear how to expect git to operate with each of the three settings.</p>

<p>--</p>

<p><strong>Update 04/17/2012</strong>: After reading <a href=""http://timclem.wordpress.com/2012/03/01/mind-the-end-of-your-line/"">the article by Tim Clem</a> linked by JJD in the comments, I have modified some of the values in the ""unknown"" values in the table above, as well as changing ""checkout existing | true to convert to CRLF instead of convert to client"".  Here are the definitions he gives, which are more clear than anything I've seen elsewhere:</p>

<p><strong>core.autocrlf = false</strong></p>

<blockquote>
  <p>This is the default, but most people are encouraged to change this
  immediately. The result of using false is that Git doesn’t ever mess
  with line endings on your file. You can check in files with LF or CRLF
  or CR or some random mix of those three and Git does not care. This
  can make diffs harder to read and merges more difficult. Most people
  working in a Unix/Linux world use this value because they don’t have
  CRLF problems and they don’t need Git to be doing extra work whenever
  files are written to the object database or written out into the
  working directory.</p>
</blockquote>

<p><strong>core.autocrlf = true</strong></p>

<blockquote>
  <p>This means that Git will process all text files and make sure that
  CRLF is replaced with LF when writing that file to the object database
  and turn all LF back into CRLF when writing out into the working
  directory. This is the recommended setting on Windows because it
  ensures that your repository can be used on other platforms while
  retaining CRLF in your working directory.</p>
</blockquote>

<p><strong>core.autocrlf = input</strong></p>

<blockquote>
  <p>This means that Git will process all text files and make sure that
  CRLF is replaced with LF when writing that file to the object
  database. It will not, however, do the reverse. When you read files
  back out of the object database and write them into the working
  directory they will still have LFs to denote the end of line. This
  setting is generally used on Unix/Linux/OS X to prevent CRLFs from
  getting written into the repository. The idea being that if you pasted
  code from a web browser and accidentally got CRLFs into one of your
  files, Git would make sure they were replaced with LFs when you wrote
  to the object database.</p>
</blockquote>

<p>Tim's article is excellent, the only thing I can think of that is missing is that he assumes the repository is in LF format, which is not necessarily true, especially for Windows only projects.</p>

<p>Comparing Tim's article to the highest voted answer to date by jmlane shows perfect agreement on the true and input settings and disagreement on the false setting.</p>
","107","50518","<git><newline><core.autocrlf>"
"7556155","1","Git: Set up a fetch-only remote?","<p>When I run <code>git remote -v</code> in one of my Git repositories that has a remote(s) configured, I see that each remote has both fetch and push specs:</p>

<pre><code>$ git remote -v
&lt;remote-name&gt; ssh://host/path/to/repo (fetch)
&lt;remote-name&gt; ssh://host/path/to/repo (push)
</code></pre>

<p>For remotes that point to peer developers there's no need to push, and Git will refuse to push to a non-bare repository anyway. Is there any way to configure these remotes as ""fetch-only"" with no push address or capabilities?</p>
","46","9259","<git><workflow>"
"1365541","1","How to move files from one git repo to another (not a clone), preserving history","<p>Our Git repositories started out as parts of a single monster SVN repository where the individual projects each had their own tree like so:</p>

<pre><code>project1/branches
        /tags
        /trunk
project2/branches
        /tags
        /trunk
</code></pre>

<p>Obviously, it was pretty easy to move files from one to another with <code>svn mv</code>. But in Git, each project is in its own repository, and today I was asked to move a subdirectory from <code>project2</code> to <code>project1</code>. I did something like this:</p>

<pre><code>$ git clone project2 
$ cd project2
$ git filter-branch --subdirectory-filter deeply/buried/java/source/directory/A -- --all
$ git remote rm origin  # so I don't accidentally the repo ;-)
$ mkdir -p deeply/buried/different/java/source/directory/B
$ for f in *.java; do 
&gt;  git mv $f deeply/buried/different/java/source/directory/B
&gt;  done
$ git commit -m ""moved files to new subdirectory""
$ cd ..
$
$ git clone project1
$ cd project1
$ git remote add p2 ../project2
$ git fetch p2
$ git branch p2 remotes/p2/master
$ git merge p2 # --allow-unrelated-histories for git 2.9
$ git remote rm p2
$ git push
</code></pre>

<p>But that seems pretty convoluted. Is there a better way to do this sort of thing in general? Or have I adopted the right approach?</p>
","266","63511","<git><repository>"
"110205","1","Want to download a Git repository, what do I need (windows machine)?","<p>I want to download this open source application, and they are using Git.  What do I need to download the code base?</p>

<p><b>Update</b>
How do I change the working directory when I am using Git Bash?  (I want to download the repo at a certain directory, using pwd tells me I will be downloading the repo where I don't want it.</p>
","66","113302","<windows><git>"
"5648330","1","Combining mingw and git","<p>I have installation of <strong>MinGW</strong> in D:\mingw. I have <strong>Git</strong> installation in C:\Program Files\git. I want to develop/compile using MinGW and use git for versioning.</p>

<p>I guess I have to use correct paths but some paths are hardcoded. Like msys mount script calls /bin/msysmnt.exe</p>

<p>So I have 2 options:
1. use git's shell (to be able to show me branch at prompt)
2. use mingw(msys)'s shell - to have correct paths</p>

<p>Whichever I choose I must make the other functionality work under it.</p>
","36","27942","<git><shell><mingw>"
"158514","1","Is it possible to make git svn dcommit result in a single svn commit?","<p>According to <a href=""http://git-scm.com/docs/git-svn"">the manual</a>, <code>git dcommit</code> “will create a revision in SVN for each commit in git.” But is there a way to avoid multiple Subversion revisions? That is, to have git merge all changes prior to performing the <code>svn commit</code>?</p>
","40","13861","<svn><git><git-svn>"
"24162687","1","git diff algorithm that does not rip functions apart? (language-aware diff)","<p>Is it possible to configure git diff to respect indentation and syntax?
I am not talking about ignoring indentation and spaces, but rather to use blank lines, indentation levels and possibly brackets, to help matching the old lines to new lines.</p>

<p>E.g. git diff often cuts through functions and their docblock, like this:</p>

<pre><code> class C {

   /**
+   * Goes to the bar.
+   */
+  function bar() {
+    return 'bar';
+  }
+
+  /**
    * Gets your foo up to date.
    */
   function foo() {
</code></pre>

<p>When I would prefer</p>

<pre><code> class C {
+
+  /**
+   * Goes to the bar.
+   */
+  function bar() {
+    return 'bar';
+  }

   /**
    * Gets your foo up to date.
    */
   function foo() {
</code></pre>

<p>In this example it is still quite harmless, but there are examples where functions and their docblock are really ripped apart due to the greedy and naive diff implementation.</p>

<p>Note: I already configured <code>*.php diff=php</code> in <code>~/.gitattributes</code>.</p>

<p>EDIT: Another example:
Here git diff mixes a property docblock with a method docblock:</p>

<pre><code>   /**
-   * @var int
+   * @param string $str
    */
</code></pre>
","39","851","<git><language-agnostic><diff><semantic-diff>"
"161541","1","Should I use SVN or Git?","<p>I am starting a new distributed project. Should I use SVN or Git, and why?</p>
","312","263994","<git><svn><version-control>"
"16955980","1","Git merge master into feature branch","<p>Lets say we have the following situation in git:</p>

<ol>
<li><p>A created repository:</p>

<pre><code>mkdir GitTest2
cd GitTest2
git init
</code></pre></li>
<li><p>Some modifications in the master take place and get commited.</p>

<pre><code>echo ""On Master"" &gt; file
git commit -a -m ""Initial commit""
</code></pre></li>
<li><p>Feature1 branched off master and some work is done:</p>

<pre><code>git branch feature1
git checkout feature1
echo ""Feature1"" &gt; featureFile
git commit -a -m ""Commit for feature1""
</code></pre></li>
<li><p>Meanwhile, a bug is discovered in the master-code and a hotfix-branch is established</p>

<pre><code>git checkout master
git branch hotfix1
git checkout hotfix1
</code></pre></li>
<li><p>The bug is fixed in the hotfix branch and merged back into the master (perhaps after a pull request/code review):</p>

<pre><code>echo ""Bugfix"" &gt; bugfixFile
git commit -a -m ""Bugfix Commit""
git checkout master
git merge --no-ff hotfix1
</code></pre></li>
<li><p>Development on feature1 continues:</p>

<pre><code>git checkout feature1
</code></pre></li>
</ol>

<p><strong>Now my question: Say I need the hotfix in my feature branch, maybe because the bug also occurs there. How can I achieve this without duplicating the commits into my feature branch? I want to prevent to get two new commits on my feature branch which have no relation to the feature implementation. This especially seems important for me if I use Pull Requests: All these commits will also be included in the Pull Request and have to be reviewed although this has already been done (as the hotfix is already in the master).</strong></p>

<p>I can not do a <code>git merge master --ff-only</code>: ""fatal: Not possible to fast-forward, aborting."", but I am not sure if this helped me.   </p>
","271","231967","<git>"
"725749","1","How would you go about reverting a single file to previous commit state using git?","<p>I wonder why isn't it implemented in the GUI?
I know git has a content approach vs. single file approach but sometimes single file reverting is crucial.</p>

<p>For instance an .png graphics file from a few commits before is needed.</p>

<p>Probably I need to do a checkout but I'm still not sure as the concepts sometimes escape me.</p>
","91","30125","<git>"
"4850717","1","How to cancel a local git commit","<p>My issue is I have changed a file eg: README, added a new line '<em>this for my testing line</em>' and saved the file, then I issued the following commands</p>

<pre><code> git status

 # On branch master
 # Changed but not updated:
 #   (use ""git add &lt;file&gt;..."" to update what will be committed)
 #   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
 #
 #  modified:   README
 #
 no changes added to commit (use ""git add"" and/or ""git commit -a"")


 git add README

 git commit -a -m 'To add new line to readme'
</code></pre>

<p>I didn't push the code to github, Now I want to cancel this commit.</p>

<p>For this I used </p>

<pre><code>   git reset --hard HEAD~1
</code></pre>

<p>But I lost the newly added line '<em>this for my testing line</em>' from the README file.
This should not happen. I need the content to be there. <strong>Is there a way to retain the content and cancel my local commit?</strong></p>
","218","197420","<git><git-reset><git-commit>"
"5689960","1","How do I create a commit without a parent in Git?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1384325/in-git-is-there-a-simple-way-of-introducing-an-unrelated-branch-to-a-repository"">In git, is there a simple way of introducing an unrelated branch to a repository?</a>  </p>
</blockquote>



<p>I have a small project I was working on without any kind of version control software, and I ended up with three different versions of the same script, where each one does something slightly different from the others. I initialized a git repo with one of the versions, and I'd really like to commit each of the other two without parents. That way, I can merge the differences as though each of the three versions of the script were the tips of different branches.</p>

<p>I'm not even sure whether this is necessarily a sane or reasonable way to go about solving this problem... Any advice on how to do things this way, or advice on a better way to handle this situation would be much appreciated.</p>
","54","13992","<git>"
"1413049","1","Managing user configuration files across multiple computers","<p>I commonly work on multiple computers. I have various configuration files, eg, <code>.bashrc</code>, <code>.gitconfig</code>, <code>.irbrc</code>, <code>.vimrc</code> and configuration folders, eg, <code>.vim/</code> that contain valuable customizations.
Sometimes I want small variations in configuration between the different computers.</p>

<p>I want to use version control to manage these different files.</p>

<ul>
<li>do others use version control to manage their configuration files?</li>
<li>what are some hints that might make this easier?</li>
<li>what's the most elegant way of dealing with variations between the computers?</li>
<li>I'm comfortable with <code>git</code>; any other suggestions?</li>
</ul>
","34","7777","<linux><git><version-control><configuration>"
"3290512","1","Can I make git diff ignore permission changes","<p>I unadvertedly change the permissions of my entire tree and commit that change alone with other content changes.</p>

<p>I use something like : <pre>tar -czf deploy.tar <code>git diff --name-only v1 v2</code></pre></p>

<p>to generate  a tar with the modified files between two tags, the problem is that now because of the permissions change almost all my tree is listed as modified.</p>

<p>Is there a way that i could tell <code>git diff</code> to ignore those files which only has the permissions changed?</p>
","43","23099","<git><diff>"
"12054223","1","git - new user trying to do pull and getting some confusing messages","<p>I am pretty new to git. I have been primarily checking stuff into a repository, but now I want to get the latest changes from another developer.</p>

<p>I tried to simply do a command like <code>git pull</code> something ran, but it came back with a message like this:</p>

<pre><code>There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream develop origin/&lt;branch&gt;
</code></pre>

<p>So then I did <code>git pull my_branch_name</code></p>

<p>and it came back with this:</p>

<pre><code>fatal: 'develop' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>but I had done <code>git checkout my_branch</code> right before that.</p>

<p>Could someone please let me know what I did wrong and how I can simply get the latest files that had been checked in?</p>

<p>Thanks!</p>
","50","35550","<git>"
"777949","1","Can I make git recognize a UTF-16 file as text?","<p>I'm tracking a Virtual PC virtual machine file (*.vmc) in git, and after making a change git identified the file as binary and wouldn't diff it for me.  I discovered that the file was encoded in UTF-16.</p>

<p>Can git be taught to recognize that this file is text and handle it appropriately?</p>

<p>I'm using git under Cygwin, with core.autocrlf set to false.  I could use mSysGit or git under UNIX, if necessary.</p>
","87","31607","<git><unicode><character-encoding><diff><utf-16>"
"3290908","1","Which files generated by Autotools should I keep in version control repository?","<p>I am new to autotools and I am working on a C project. I want to add my project to a git repository. Which files generated by the autotools I need to track in my version control system and which should be ignored?</p>
","39","3672","<git><version-control><autotools>"
"12055198","1","Find out git branch creator","<p>I want to find out who created a branch.</p>

<p>I am sort-of able to do so with:</p>

<pre><code>git branch -a | xargs -L 1 bash -c 'echo ""$1 `git log --pretty=format:""%H %an"" $1^..$1`""' _
</code></pre>

<p>However, this returns the last committer per branch, not necessarily the person who created the branch.</p>
","42","22513","<git><git-branch>"
"5691557","1","How can I keep my branch up to date with master with git?","<p>I have a bug fix in my master, and I also want my branch to get that bug fix.  What <code>git</code> command do I use?</p>
","51","22691","<git><github>"
"253055","1","How do I push amended commit to the remote git repo?","<p>When I've worked a bit with my source code, I do my usual thing commit and then I push to a remote repo. But then I noticed I forgot to organize my imports in the source code. So I do the amend command to replace the previous commit:</p>

<pre><code>&gt; git commit --amend
</code></pre>

<p>Unfortunately the commit can't be pushed back to the repository. It is rejected like this:</p>

<pre><code>&gt; git push origin
To //my.remote.repo.com/stuff.git/
 ! [rejected]        master -&gt; master (non-fast forward)
error: failed to push some refs to '//my.remote.repo.com/stuff.git/'
</code></pre>

<p>What should I do? (I can access the remote repo)</p>
","387","179527","<git><git-commit><amend>"
"20151158","1","Using git repository as a database backend","<p>I'm doing a project that deals with structured document database. I have a tree of categories (~1000 categories, up to ~50 categories on each level), each category contains several thousands (up to, say, ~10000) of structured documents. Each document is several kilobytes of data in some structured form (I'd prefer YAML, but it may just as well be JSON or XML).</p>

<p>Users of this systems do several types of operations:</p>

<ul>
<li>retrieving of these documents by ID</li>
<li>searching for documents by some of the structured attributes inside them</li>
<li>editing documents (i.e. adding/removing/renaming/merging); each edit operation should be recorded as a transaction with some comment</li>
<li>viewing a history of recorded changes for particular document (including viewing who, when and why changed the document, getting earlier version - and probably reverting to this one if requested)</li>
</ul>

<p>Of course, the traditional solution would be using some sort of document database (such as CouchDB or Mongo) for this problem - however, this version control (history) thing tempted me to a wild idea - why shouldn't I use <code>git</code> repository as a database backend for this application?</p>

<p>On the first glance, it could be solved like this:</p>

<ul>
<li>category = directory, document = file</li>
<li>getting document by ID => changing directories + reading a file in a working copy</li>
<li>editing documents with edit comments => making commits by various users + storing commit messages</li>
<li>history => normal git log and retrieval of older transactions</li>
<li>search => that's a slightly trickier part, I guess it would require periodic export of a category into relational database with indexing of columns that we'll allow to search by</li>
</ul>

<p>Are there any other common pitfalls in this solution? Have anyone tried to implement such backend already (i.e. for any popular frameworks - RoR, node.js, Django, CakePHP)? Does this solution have any possible implications on performance or reliability - i.e. is it proven that git would be much slower than traditional database solutions or there would be any scalability/reliability pitfalls? I presume that a cluster of such servers that push/pull each other's repository should be fairly robust &amp; reliable.</p>

<p>Basically, tell me <em>if</em> this solution will work and <em>why</em> it will or won't do?</p>
","53","6200","<database><git><database-performance><database-replication><document-database>"
"3336995","1","Git will not init/sync/update new submodules","<p>Here's part of the contents of my <code>.gitmodules</code> file:</p>

<pre><code>[submodule ""src/static_management""]
        path = src/static_management
        url = git://github.com/eykd/django-static-management.git
[submodule ""external/pyfacebook""]
        path = external/pyfacebook
        url = http://github.com/sciyoshi/pyfacebook.git
</code></pre>

<p>However, <code>.git/config</code> only contains the first:</p>

<pre><code>[submodule ""src/static_management""]
        url = git://github.com/eykd/django-static-management.git
</code></pre>

<p>The second submodule (<code>external/pyfacebook</code>) was added by another developer in a feature branch. I've inherited the development now, and have checked out the feature branch. However, Git will not pull the submodule for me. I've tried:</p>

<ul>
<li><code>git submodule init</code></li>
<li><code>git submodule update</code></li>
<li><code>git submodule update --init</code></li>
<li><code>git submodule sync</code></li>
<li>Removing all submodule definitions from <code>.git/config</code> and running <code>git submodule init</code>. It only copies over the previously existing submodule and ignores the new one.</li>
<li>Entering new submodule definitions in <code>.git/config</code> manually and running <code>git submodule update</code>. Only the previously existing submodules bother to update.</li>
</ul>

<p>in various combinations, but git simply will not update <code>.git/config</code> based on the new contents of <code>.gitmodules</code>, nor will it create the <code>external/pyfacebook</code> folder and pull the submodule's contents. </p>

<p>What am I missing? Is manual intervention (adding a submodule entry by hand to <code>.git/config</code>) truly required, and why?</p>

<p><strong>Edit:</strong> Manual intervention does not work. Manually adding the new submodule entry to <code>.git/config</code> doesn't do a thing. The new submodule is ignored.</p>
","44","21294","<git><git-submodules>"
"1463340","1","Revert multiple git commits","<p>I have a git repository that looks like this:</p>

<pre><code>A -&gt; B -&gt; C -&gt; D -&gt; HEAD
</code></pre>

<p>I want the head of the branch to point to A, i.e. I want B, C, D, and HEAD to disappear and I want head to be synonymous with A.</p>

<p>It sounds like I can either try to rebase (doesn't apply, since I've pushed changes in between), or revert. But how do I revert multiple commits? Do I revert one at a time? Is the order important?</p>
","326","129703","<git><commit><git-revert>"
"268736","1","git-svn: what's the equivalent to `svn switch --relocate`?","<p>An svn repository I'm mirroring through git-svn has changed URL.</p>

<p>In vanilla svn you'd just do <code>svn switch --relocate old_url_base new_url_base</code>.</p>

<p>How can I do this using git-svn? </p>

<p>Simply changing the svn url in the config file fails.</p>
","72","15712","<git><version-control><git-svn>"
"826715","1","How do I manage conflicts with git submodules?","<p>I have a git superproject that references several submodules and I am trying to lock down a workflow for the rest of the my project members to work within.</p>

<p>For this question, lets say my superproject is called <code>supery</code> and the submodule is called <code>subby</code>. (Then is a simplification of what I'm trying to do...I'm not actually using the branches for versions, but I thought it would be easiest to lay out as a question.)</p>

<p>My master branch of <code>supery</code> has the tag <code>v1.0</code> of the git project <code>subby</code> referenced as a submodule. The branch of <code>supery</code> called <code>one.one</code> and changed the reference of the submodule to point to the tag <code>v1.1</code> of <code>subby</code>.</p>

<p>I can work  within each of these branches without a hitch, but if I try to update the <code>one.one</code> branch with changes from the <code>master</code> branch I receive some conflicts and I don't how to resolve them.</p>

<p>Basically after running a <code>git pull . master</code> while in the <code>subby</code> branch, it looks like it creates additional submodules.</p>

<p>Before the pull/merge, I get the desired response from <code>git submodule</code> from the <code>one.one</code> branch:</p>

<pre><code>$ git checkout master
$ git submodule
qw3rty...321e subby (v1.0)
$ git checkout one.one
$ git submodule
asdfgh...456d subby (v1.1)
</code></pre>

<p>But after the pull, it adds additional submodules when I run <code>git submodule</code>:</p>

<pre><code>$ git pull . master
Auto-merged schema
CONFLICT (submodule): Merge conflict in subby - needs qu3rty...321e
Automatic merge failed; fix conflicts and then commit the results.

$ git submodule
qw3rty...321e subby (v1.0)
asdfgh...456d subby (v1.1)
zxcvbn...7890 subby (v1.1~1)
</code></pre>

<p>How do I delete/ignore the unwanted submodule references and commit my conflicts and changes? Or is there a parameter I can use with my original <code>git pull</code> that will ignore my submodules?</p>
","47","30524","<git><branch><git-submodules><conflict>"
"284514","1","What is a git topic branch?","<p>What is a git topic branch?  Does it differ from an ordinary branch in some way?  Are there any branches that are not topic branches?</p>
","95","20003","<git><version-control><branch>"
"827351","1","Push origin master error on new repository","<p>I just started using git with github. I followed their instructions and ran into errors on the last step. I'm checking in an existing directory that isn't currently source-controlled (project about a week old). Other than that, my use case should be pretty run of the mill.</p>

<p>Here's what's happening:</p>

<pre><code>$ git push origin master
error: src refspec master does not match any.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to 'git@github.com:{username}/{projectname}.git'
</code></pre>

<p>Github's instructions:</p>

<pre><code>Global setup:

  Download and install Git
  git config --global user.name ""Your Name""
  git config --global user.email {username}@gmail.com

Next steps:

  mkdir projectname
  cd projectname
  git init
  touch README
  git add README
  git commit -m 'first commit'
  git remote add origin git@github.com:{username}/{projectname}.git
  git push origin master
</code></pre>
","163","153445","<git><github>"
"7279196","1","Git: How to edit/reword a merge commit's message?","<p>How do I edit or reword a merge commit's message?</p>

<p><code>git commit --amend</code> works if it's the last commit made (<code>HEAD</code>), but what if it comes before <code>HEAD</code>?</p>

<p><code>git rebase -i HEAD~5</code> doesn't list the merge commits.</p>
","61","24515","<git><commit><amend>"
"3338126","1","How to diff the same file between two different commits on the same branch?","<p>On git, how could I compare the same file between two different commits (not contiguous) on the same branch (master for example)?</p>

<p>I'm searching for a <strong><em>Compare</em></strong> feature like the one in VSS or TFS, is it possible in Git? </p>
","572","334433","<git><git-diff>"
"17017335","1","No submodule mapping found in .gitmodules for path and missing .gitmodules file","<p>When I run <code>git submodule init</code>, I get the following error:</p>

<pre><code>No submodule mapping found in .gitmodules for path 'xxx'
</code></pre>

<p>I searched for a <code>.gitmodules</code> file and I cannot find it anywhere.</p>

<p>I have read <a href=""http://stackoverflow.com/questions/4185365/no-submodule-mapping-found-in-gitmodule-for-a-path-thats-not-a-submodule"">this</a> most popular SO question on the same topic. 
But unfortunately, I cannot solve the problem. Especially given that I no longer have <code>.gitmodules</code>.</p>

<p>According to my GitHub private repo, I still have submodules for my repository. Just that I cannot find the <code>.gitmodules</code> file anywhere.</p>
","35","22700","<git><git-submodules>"
"5737002","1","How to delete a stash created with git stash create?","<p>Git stash seems to do a lot of what I want, except that it is a little hard to script, as the if you have no changes, then <code>git stash; git stash pop</code> will do something different than if you do have changes in your repository.</p>

<p>It appears that <code>git stash create</code> is the answer to that problem, and everything works, except for one thing… I can't get rid of the created stash. Is there any way to get rid of the stash?</p>

<p>To make it 100% clear what I am doing:</p>

<p>Create the stash:</p>

<pre><code>~/tmp/a(master) $ git stash create 
60629375d0eb12348f9d31933dd348ad0f038435
~/tmp/a(master) $ git st
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   new file:   b
#
~/tmp/a(master) $ git reset --hard
HEAD is now at 555d572 log message
</code></pre>

<p>Use the stash:</p>

<pre><code>~/tmp/a(master) $ git apply 60629375d0eb12348f9d31933dd348ad0f038435
fatal: can't open patch '60629375d0eb12348f9d31933dd348ad0f038435': No such file or directory
~/tmp/a(master) $ git stash apply 60629375d0eb12348f9d31933dd348ad0f038435
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   new file:   b
#
</code></pre>

<p>Delete the stash: (except that this last bit doesn't work)</p>

<pre><code>~/tmp/a(master) $ git stash drop !$
git stash drop 60629375d0eb12348f9d31933dd348ad0f038435
'60629375d0eb12348f9d31933dd348ad0f038435' is not a stash reference
</code></pre>
","224","157909","<git>"
"12479742","1","Why does git-bisect have to be run from the top level directory of the working tree?","<p>If one tries to run any of the git-bisect commands from anywhere other than the root directory of the repository, one is told:</p>

<blockquote>
  <p>You need to run this command from the toplevel of the working tree.</p>
</blockquote>

<p>Why is that? I know of no other git command that has this requirement, and I see no obvious reason that bisect should be special. The man page makes no mention of this restriction, either.</p>

<p>It's really not a big deal. I'm mostly just curious.</p>
","32","2812","<git><git-bisect>"
"12123633","1","Differences for a certain folder between git branches","<p>As in the title, I want to have a diff file for a certain folder between the master branch and a branch I have created.</p>
","34","13082","<git><version-control><diff><git-diff>"
"2510276","1","Undoing git reset?","<p>What's the simplest way to undo the</p>

<pre><code>git reset HEAD~
</code></pre>

<p>command?
Currently, the only way I can think of is doing a ""git clone http://..."" from a remote repo.</p>
","474","118788","<git>"
"14593538","1","Make Heroku run non-master Git branch","<p>I have a project hosted on Heroku and it's gotten to the point where I want to make an alternate test server (so I can test Heroku workers without messing up production).</p>

<p>I have already set up my main Heroku remote running my trunk and a Heroku-dev remote on which I wish to run an alternate branch.</p>

<p>My problem is that since my alternate branch isn't master, Heroku won't build it.</p>

<pre><code>$ git push heroku-dev test
counting objects ...
...
Pushed to non-master branch, skipping build.
To git@heroku.com:example-dev.git
* [new branch]      test -&gt; test
</code></pre>

<p>Switching this build to master is not an option at the moment. Obviously one option is to create a whole new git repo that's a clone of my test branch, but that doesn't sound very ideal.</p>
","101","14299","<git><heroku>"
"5784329","1","How can I make Jenkins CI with git trigger on pushes to master?","<p>I'm trying to set up Jenkins-ci for a project using github. I've already set up jenkins with the appropriate plugins. I want jenkins to run build scripts only whenever someone on the project pushes to master. So far I've been able to set it up so that a build will be triggered anytime anyone pushes to anywhere, but that is too broad. I've done this with post-receive service hooks on git.</p>

<p>I've read the jenkins wiki, and a couple of tutorials, but this particular detail is missing... is it something to do with polling maybe? Or should work be done on the git side, so that git only triggers jenkins when Master is changed?</p>

<p>Thanks for your help!</p>
","130","102287","<git><github><jenkins>"
"2936652","1","Git push won't do anything (Everything up-to-date)","<p>I'm trying to update a git repository on github. I made a bunch of changes, added them, committed then attempted to do a git push. The response tells me that everything is up to date, but clearly it's not. </p>

<pre><code>git remote show origin 
</code></pre>

<p>responds with the repository I'd expect.</p>

<p>Why is git telling me the repository is up to date when there are local commits that aren't visible on the repository?</p>

<pre><code>  [searchgraph]  git status
# On branch develop
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       Capfile
#       config/deploy.rb
nothing added to commit but untracked files present (use ""git add"" to track)

  [searchgraph]  git add .

  [searchgraph]  git status
# On branch develop
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       new file:   Capfile
#       new file:   config/deploy.rb
#

  [searchgraph]  git commit -m ""Added Capistrano deployment""
[develop 12e8af7] Added Capistrano deployment
 2 files changed, 26 insertions(+), 0 deletions(-)
 create mode 100644 Capfile
 create mode 100644 config/deploy.rb

  [searchgraph]  git push
Everything up-to-date

  [searchgraph]  git status
# On branch develop
nothing to commit (working directory clean)
</code></pre>
","59","54306","<git><dvcs>"
"356126","1","How can you automatically remove trailing whitespace in vim","<p>I am getting 'trailing whitespace' errors trying to commit some files in git.</p>

<p>I want to remove these trailing whitespace characters automatically right before I save python files.</p>

<p>Can you configure vim to do this?  If so, how?</p>
","151","44869","<git><vim><automation><whitespace><removing-whitespace>"
"1516720","1","Git GUI client for Linux","<p>Which is the best gui client on Linux for Git.</p>

<p>Update: After checking out all of the GUIs mentioned here, </p>

<p><code>git cola</code> seems to work well for committing/pushing </p>

<p><code>gitk</code> seem to work the best for examining history and</p>

<p><code>giggle</code> is awesome for watching the diffs.</p>

<p>I use command line for committing, web trac interface for viewing history, in a rare occasions, and accept <code>giggle</code> as <code>giggle</code> is what, I think, one needs as a desktop git gui, with occasional <code>git cola</code> and <code>gitk</code>.</p>
","756","413876","<linux><git><user-interface><client>"
"2541545","1","Is there a difference between ""git reset --hard hash"" and ""git checkout hash""?","<p>While <code>reset</code> and <code>checkout</code> have different usages most of the time, I can't see what difference there is between these two.</p>

<p>There probably is one or nobody would have bothered adding a <code>--hard</code> option to do something the basic <code>checkout</code> can do.</p>

<p>Maybe there is a difference is the way you will see the history?</p>
","37","9560","<git><git-checkout><git-reset>"
"14607584","1","Using vim for git commit messages broken after updating janus","<p>After updating the janus vim distribution there appears to be a problem with using vim for commit messages. The best example of this is when doing a <code>git pull</code> to get someone else's changes. The vim editor is displayed, I type my commit message, I enter <kbd>:</kbd><kbd>w</kbd><kbd>q</kbd> but instead of the commit working, I get the following error message:</p>

<pre><code>error: There was a problem with the editor 'vi'.
Not committing merge; use 'git commit' to complete the merge.
</code></pre>

<p>I then have to manually commit :(</p>

<p>How do I get git to play nicely with vim?</p>
","31","4493","<osx><git><vim>"
"3392392","1","When is the right time to delete a git feature branch?","<p>I don't want to end up with <a href=""http://stackoverflow.com/questions/2353804/list-git-branches-that-can-safely-be-deleted"">82 feature branches hanging around</a>, so I'm wondering what the potential drawbacks are to simply deleting the feature branch as soon as I merge it to master.</p>

<p>Workflow:</p>

<pre><code>git co -b feat-xyz
hack hack
git ci
hack some more
git ci
git co master
git merge feat-xyz
smoke test
git br -d feat-xyz
</code></pre>

<p>Any issues here?</p>
","44","8885","<git><branch>"
"5383609","1","Using Git with an existing XCode project","<p>I am trying to figure out how to use git in my project workflow, and I have an existing XCode project that I want to put into the repository. I think I have the repository set up correctly under organizer, but the Source Control menu is grayed out.<br>
Apparently, it's easy to do if you start a new project, but how do I import an existing project with snapshots and everything?</p>

<p>I'm using XCode 4 and git 1.7.4</p>

<p>Also, if there are any good walkthroughs on git configuration and best practices, that would be nice. I'm a little late to the game, so anything that can get me up to speed would be cool.</p>
","87","58263","<xcode><git>"
"945654","1","Git checkout: updating paths is incompatible with switching branches","<p>My problem is related to <a href=""http://stackoverflow.com/questions/180064"">Fatal Git error when switching branch</a>.</p>

<p>I try to fetch a remote branch with the command</p>

<pre><code>git checkout -b local-name origin/remote-name
</code></pre>

<p>but I get this error message:</p>

<blockquote>
  <p>fatal: git checkout: updating paths is incompatible with switching branches.<br>
  Did you intend to checkout 'origin/remote-name' which can not be resolved as commit?</p>
</blockquote>

<p>If I manually create a branch and then pull the remote branch, it works, just as making a new clone and checking the branch out.</p>

<p>Why does it not work on the repository I work with?</p>
","413","181406","<git><git-checkout><remote-branch>"
"377213","1","Git serve: I would like it that simple","<p>I want to know how to simply publish over http = much like <a href=""http://en.wikipedia.org/wiki/Mercurial"">Mercurial</a>'s hg serve! On the Windows/work box do this:</p>

<pre><code>git serve 
</code></pre>

<p>and then on the Linux box SIMPLY go:</p>

<pre><code>git clone http://project project 
</code></pre>

<p>finished. </p>
","128","17634","<windows><git><mercurial>"
"2971550","1","how to push different local git branches to heroku/master","<p>Heroku has a policy of ignoring all branches but 'master'. </p>

<p>While I'm sure Heroku's designers have excellent reasons for for this policy (I'm guessing for storage and performance optimization), the consequence to me as a developer is that whatever local topic branch I may be working on, I would like an easy way to switch Heroku's master to that local topic branch and do a ""git push heroku -f"" to over-write master on Heroku. </p>

<p>What I got from reading the ""Pushing Refspecs"" section of <a href=""http://progit.org/book/ch9-5.html"">http://progit.org/book/ch9-5.html</a> is</p>

<pre>git push -f heroku local-topic-branch:refs/heads/master</pre>

<p>What I'd really like is a way to set this up in the config file so that ""git push heroku"" always does the above, replacing <em>local-topic-branch</em> with the name of whatever my current branch happens to be.  If anyone knows how to accomplish that, please let me know!</p>

<p>The caveat for this, of course, is that this is only sensible if I am the only one who can push to that Heroku app/repository.  A test or QA team might manage such a repository to try out different candidate branches, but they would have to coordinate so that they all agree on what branch they are pushing to it on any given day.</p>

<p>Needless to say, it would also be a very good idea to have a separate remote repository (like Github) without this restriction for backing everything up to. I'd call that one ""origin"" and use ""heroku"" for Heroku so that ""git push"" always backs up everything to origin, and ""git push heroku"" pushes whatever branch I'm currently on to Heroku's master branch, overwriting it if necessary.</p>

<p>Can anybody tell me if this would work?  </p>

<pre>
[remote ""heroku""]
    url = git@heroku.com:my-app.git
    push = +refs/heads/*:refs/heads/master
</pre>

<p>I'd like to hear from someone more experienced before I begin to experiment, although I suppose I could create a dummy app on Heroku and experiment with that.</p>

<p>As for fetching, I don't really care if the Heroku repository is write-only.   I still have a separate repository, like Github, for backup and cloning of all my work.</p>

<p>Footnote: This question is similar to, but not quite the same as <a href=""http://stackoverflow.com/questions/1489393/good-git-deployment-using-branches-strategy-with-heroku"">http://stackoverflow.com/questions/1489393/good-git-deployment-using-branches-strategy-with-heroku</a></p>
","205","51096","<git><heroku><git-push>"
"5834014","1","LF will be replaced by CRLF in git - What is that and is it important?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1967370/git-replacing-lf-with-crlf"">git replacing LF with CRLF</a>  </p>
</blockquote>



<p>When I create a new rails application I'm seeing a warning in git about LF replacement. I do 
    git init
    git add .</p>

<p>and then boom! I see this pop up for almost all files. I usually just keep going and build my application and it disappears after many changes to files. </p>

<p><strong>Example:</strong></p>

<blockquote>
  <p>The file will have its original line endings in your working directory.
  warning: LF will be replaced by CRLF in Gemfile.</p>
  
  <p>The file will have its original line endings in your working directory.
  warning: LF will be replaced by CRLF in Gemfile.lock.</p>
  
  <p>The file will have its original line endings in your working directory.
  warning: LF will be replaced by CRLF in README.</p>
</blockquote>

<p>What's the difference between LF and CRLF?</p>

<p>Should I be concerned about this in the long run or just ignore it and keep going as I usually do?</p>
","422","260822","<git>"
"1570535","1","Guide to understanding gitk?","<p>I am introducing git to a team of developers and i find gitk to be an amazing tool. It's also quite hard to understand, since understanding gitk requires an understanding of both git history and the viewer tool itself. </p>

<p>Does anyone have any good references to something like a ""beginner's guide to git history with gitk"" ?</p>
","57","40819","<git><gitk>"
"26881441","1","Can you get the number of lines of code from a Github repository?","<p>In a Github repository you can see ""language statistics"", which displays the <em>percentage</em> of the project that's written in a language. It doesn't, however, display how many lines of code the project consists of. Often, I want to quickly get an impression of the scale and complexity of a project, and the count of lines of code can give a good first impression. 500 lines of code implies a relatively simple project, 100,000 lines of code implies a very large/complicated project.</p>

<p>So, is it possible to get the lines of code written in the various languages from a Github repository, preferably without cloning it?</p>

<hr>

<p>This question (<a href=""http://stackoverflow.com/q/4822471/388916"">Count number of lines in a git repository</a>) asks how to count the lines of code in a local Git repository, but:</p>

<ol>
<li>You have to clone the project, which could be massive. Cloning a project like Wine, for example, takes ages.</li>
<li>You would count lines in files that wouldn't necessarily be code, like i13n files.</li>
<li>If you count <em>just</em> (for example) Ruby files, you'd potentially miss massive amount of code in other languages, like Javascript. You'd have to know beforehand which languages the project uses. You'd also have to repeat the count for every language the project uses.</li>
</ol>

<p>All in all, this is potentially far too time intensive for ""quickly checking the scale of a project"".</p>
","72","33343","<git><github>"
"8170436","1","Git Remote: Error: fatal: protocol error: bad line length character: Unab","<p>I set up a git server and want now to push initially my repo from the client.
I used <code>git push origin master</code> and get this error message:</p>

<pre><code>fatal: protocol error: bad line length character: Unab
</code></pre>

<p>I don't know what's wrong. I don't know what ""Unab"" is. I tried tu resize the shell but it is still ""Unab"".
I cannot find a solution for this error message.</p>

<p>I setup the server with ""authorized_keys"" and SSH. (I can connect to it, using SSH.)</p>

<p>It seems to be a git problem?</p>

<p>BTW: The server is set up in a Windows 7 VM</p>
","40","50787","<git><ssh><authorized-keys>"
"10144149","1","git status returns fatal: Not a git repository but .git exists and HEAD has proper permissions","<p>When I run git status on my repo I get <code>fatal: Not a git repository: /my repo/.git/modules/docs</code></p>

<p>I've checked and .git exists and contains HEAD with the proper permissions. I can run various other commands fine. If I run git gui it opens fine and will list a couple of the changed files, but is missing a lot of them.</p>

<p>I'm guessing there may be some sort of corruption in HEAD, not sure though. Any idea how to fix this without wiping out the whole repo? </p>

<p>Update: I realized that I had changed the name of the repo's directory. The directory being referenced in the error is the old name of the directory. So my current repo is at <code>/new dir/.git</code> but the error is saying <code>Not a git repository: /old dir/.git/modules/docs</code>. So maybe git is confused?</p>
","36","35829","<git>"
"3491270","1","git merge: apply changes to code that moved to a different file","<p>I am attempting a pretty beefy git merge maneuver right now.  One problem that I am coming across is that I made some changes to some code in my branch, but my colleague moved that code to a new file in his branch.  So when I did <code>git merge my_branch his_branch</code>, git did not notice that the code in the new file was the same as the old, and so none of my changes are there.  </p>

<p>What's the easiest way to go about applying my changes again to the code in the new files.  I won't have too many problems finding out which commits need to be reapplied (I can just use <code>git log --stat</code>).  But as far as I can tell, there is no way to get git to reapply the changes into the new files.  The easiest thing I am seeing right now is to manually reapply the changes, which is not looking like a good idea. </p>

<p>I know that git recognizes blobs, not files, so surely there must be a way to tell it, ""apply this exact code change from this commit, except not where it was but where it now is in this new file"".</p>
","45","11971","<git>"
"3005392","1","How can I tell if one commit is a descendant of another commit?","<p>With Git, how can I tell if one commit in my branch is a descendant of another commit?</p>
","47","10421","<git>"
"5884784","1","How to pull remote branch from somebody else's repo","<p>I've got a project hosted on GitHub which somebody has forked. On their fork, they've created a new branch ""foo"" and made some changes.  How do I pull their ""foo"" into a new branch also named ""foo"" in my repo?</p>

<p>I understand they could submit a pull request to me, but I'd like to initiate this process myself.</p>

<p>Assume the following:</p>

<ol>
<li>Because they forked my project, both our repos share the same 'history'</li>
<li>Although GitHub shows their project was forked from mine, my local repository doesn't have any references to this person's project. Do I need to add theirs as a remote?</li>
<li>I don't have a branch called ""foo"" yet - dunno if I need to manually create this first or what.</li>
<li>I definitely want this pulled into a separate branch and not my master.</li>
</ol>

<p>I hope that makes some sense.</p>
","75","33394","<git><github><git-branch><git-pull><git-remote>"
"17857723","1","What's the difference between git reflog and log?","<p>The man page says that log shows the commit logs and reflog manages reflog information. What is exactly reflog information and what does it have that the log doesn't? The log seems far more detailed.</p>
","41","10651","<git><git-log><git-reflog>"
"3492536","1","Point branch to new commit","<p><em>(This question is the opposite of <a href=""http://stackoverflow.com/questions/1628563/git-move-recent-commit-to-a-new-branch"">this one</a>)</em></p>

<p>How can I go from this</p>

<pre><code>dev            C - D
             /
master A - B 
</code></pre>

<p>to this?</p>

<pre><code>dev                D
                 /
master A - B - C 
</code></pre>

<p>I know I'm going to kick myself when I see the answer, but for the moment I'm a bit stuck...</p>
","41","4698","<git>"
"12214746","1","How to review someone's code, given a commit hash","<p>I am fairly new to Github and have come across an amateur-ish problem.</p>

<p>I have been asked to do a code review and have been provided with a commit hash, however I have tried looking in Git if I can search using commit hashes but couldn't find anything.</p>

<p>Is there a way I can find the changed code just by using the commit hash?</p>
","96","35224","<git><github>"
"1138990","1","git equivalent of svn status -u","<p>What's the git equivalent of <code>svn status -u</code> or more verbose <code>svn status --show-updates</code>. 
The <code>svn status --show-updates</code> command shows the updates that the <code>svn update</code> command will bring from the server.</p>

<p>Thanks!</p>
","44","14501","<git><svn>"
"1139762","1","Ignore files that have already been committed to a Git repository","<p>I have an already initialized Git repository that I added a <code>.gitignore</code> file to. How can I refresh the file index so the files I want ignored get ignored?</p>
","1588","387112","<git><version-control><gitignore><git-rm>"
"1628088","1","Reset local repository branch to be just like remote repository HEAD","<p>How do I reset my local branch to be just like the branch on the remote repository?</p>

<p>I did:</p>

<pre><code>git reset --hard HEAD
</code></pre>

<p>But when I run a <code>git status</code>,</p>

<pre><code>On branch master
Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)
      modified:   java/com/mycompany/TestContacts.java
      modified:   java/com/mycompany/TestParser.java
</code></pre>

<p>Can you please tell me why I have these 'modified'? I haven't touched these files? If I did, I want to remove those.</p>
","1267","827613","<git><undo>"
"1628563","1","Move the most recent commit(s) to a new branch with Git","<p>I'd like to move the last several commits I've committed to master to a new branch and take master back to before those commits were made. Unfortunately, my Git-fu isn't strong enough yet, any help?</p>

<p>I.e. How can I go from this</p>

<pre><code>master A - B - C - D - E
</code></pre>

<p>to this?</p>

<pre><code>newbranch     C - D - E
             /
master A - B 
</code></pre>
","2256","330397","<git><git-branch><branching-and-merging>"
"1143796","1","Remove a file from a Git repository without deleting it from the local filesystem","<p>My initial commit contained some log files. I've added <code>*log</code> to my <code>.gitignore</code>, and now I want to remove the log files from my repository.</p>

<pre><code>git rm mylogfile.log
</code></pre>

<p>will remove a file from the repository, but will also remove it from the local file system.</p>

<p>How can I remove this file from the repo <strong>without</strong> deleting my local copy of the file?</p>
","1564","355231","<git><repository><remote-server><delete-file><git-rm>"
"2641146","1","Handling file renames in git","<p>I'd read that when <a href=""http://blog.bauermann.eng.br/2008/01/03/take-care-when-renaming-files-in-git/"">renaming files in git</a>, you should commit any changes, perform your rename and then stage your renamed file. Git will recognise the file from the contents, rather than seeing it as a new untracked file, and keep the change history.</p>

<p>However, doing just this tonight I ended up reverting to <code>git mv</code>.</p>

<pre><code>&gt; $ git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   index.html
#
</code></pre>

<p>Rename my stylesheet in Finder from <code>iphone.css</code> to <code>mobile.css</code></p>

<pre><code>&gt; $ git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   index.html
#
# Changed but not updated:
#   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   deleted:    css/iphone.css
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   css/mobile.css
</code></pre>

<p>So git now thinks I've deleted one CSS file, and added a new one. Not what I want, lets undo the rename and let git do the work.</p>

<pre><code>&gt; $ git reset HEAD .
Unstaged changes after reset:
M   css/iphone.css
M   index.html
</code></pre>

<p>Back to where I began.</p>

<pre><code>&gt; $ git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   index.html
#
</code></pre>

<p>Lets use <code>git mv</code> instead.</p>

<pre><code>&gt; $ git mv css/iphone.css css/mobile.css
&gt; $ git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   renamed:    css/iphone.css -&gt; css/mobile.css
#
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   index.html
#
</code></pre>

<p>Looks like we're good. So why didn't git recognise the rename the first time around when I used Finder?</p>
","315","242864","<git><git-mv>"
"3498035","1","Git add all files modified, deleted, and untracked?","<p>Is there a way to add all files no matter what you do to them whether it be deleted, untracked, etc? like for a commit. I just don't want to have to <code>git add</code> or <code>git rm</code> all my files every time I commit, especially when I'm working on a large product.</p>
","149","124539","<git><git-add><git-rm>"
"491554","1","How do I convert a git repository to mercurial?","<p>I've been developing a java application using git as source code repository. I'd like to share the project with other java developers and hg seems to be most used by them. </p>

<p>My question is how do I convert a git repository to hg?</p>

<p>If I tried googling ""convert git to hg"" and every search hit is about converting from hg to git. I'm also using <a href=""http://tortoisehg.sourceforge.net/"">TortoiseHg</a>.</p>
","95","22892","<git><version-control><mercurial><tortoisehg>"
"5096268","1","git reports - get changed files","<p>due to bureaucracy, I need to get a list of all changed files in my repository(I started with existing source code).</p>

<p>What should I run to get this list?</p>
","66","50337","<git>"
"543346","1","List all the files that ever existed in a Git repository","<p>Do you have a clean way to list all the files that ever existed in specified branch?</p>
","70","14136","<git>"
"1191282","1","How to see the changes between two commits without commits in-between?","<p>How do you make <code>git diff</code> only show the difference between two commits, excluding the other commits in-between?</p>
","318","258673","<git>"
"7484199","1","git merge test first","<p>Is there any way of simulating a git merge between two branches (current working branch and the master), but without making any changes?</p>

<p>I often have conflicts when I have to make a git merge. Is there any way of simulating the merge first?</p>
","70","31878","<git><merge>"
"5526366","1","Remove git from project in Xcode 4","<p>I just created a new project in Xcode 4 and I guess I left the ""Create local git repository for this project"" box checked. Now, I would like to remove this version control since I want to run the project with svn only. Is this possible or do I have to create a new project from scratch?</p>
","40","26142","<xcode><git>"
"5143795","1","How can I check in a bash script if my local git repo has changes","<p>There are some scripts that do not work correctly if they check for changes.</p>

<p>I tried it like this:  </p>

<pre><code>VN=$(git describe --abbrev=7 HEAD 2&gt;/dev/null)  

git update-index -q --refresh  
CHANGED=$(git diff-index --name-only HEAD --)  
if [ ! -z $CHANGED ];  
    then VN=""$VN-mod""   
fi
</code></pre>

<p>Is there some kind of boolean check if there has been changes since last commit, or how can I really test if there are new changes to my local repository</p>

<p>I'm doing all this for a version creation script (that I found somewhere here)</p>
","62","21790","<git>"
"595106","1","Best practices for using git with CVS","<p>What are your best practices and tips for using git to interface with a CVS repository?</p>
","47","36341","<git><git-cvs>"
"19298600","1","“tag already exists in the remote"" error after recreating the git tag","<p>I get the following error after I run the steps below:</p>

<pre><code>To git@provider.com:username/repo-name.git
 ! [rejected]        dev -&gt; dev (already exists)
error: failed to push some refs to 'git@provider.com:username/repo-name.git'
hint: Updates were rejected because the tag already exists in the remote.
</code></pre>

<ol>
<li>Created the repository</li>
<li>Cloned the repo on the local machine.</li>
<li>Modified the README file, commited the changes and pushed the commit.</li>
<li>Created tag <code>dev</code>: <code>git tag dev</code></li>
<li>Pushed tags: <code>git push --tags</code></li>
<li>Modified the README file, commited the changes and pushed the commit.</li>
<li><p>Deleted tag <code>dev</code> , created it again and pushed tags:</p>

<pre><code>git tag -d dev
git tag dev
git push --tags
</code></pre></li>
</ol>

<p>Why is this happening?</p>

<p>I am on Mac. My friends that use Linux (Ubuntu) don't have this problem. I know that I can use <code>git push --tags -f</code> to force the tag update, but this is dangerous (e.g. rewriting a commit made by mistake only in the tag, not in the branch). </p>
","66","30425","<git><tags><repository>"
"5167367","1","How can I make git do the ""did you mean"" suggestion?","<p>I type </p>

<pre><code>git puhs
</code></pre>

<p>And git says:</p>

<pre><code>kristian@office:~/myrepo$ git puhs
git: 'puhs' is not a git command. See 'git --help'

Did you mean this?
      push
</code></pre>

<p>What is the config setting to make git just do the suggested command if it only has one suggestion ?</p>
","66","6083","<git>"
"35837","1","What is the Difference Between Mercurial and Git?","<p>I've been using git for some time now on Windows (with msysGit) and I like the idea of distributed source control. Just recently I've been looking at Mercurial (hg) and it looks interesting. However, I can't wrap my head around the differences between hg and git.</p>

<p>Has anyone made a side-by-side comparison between git and hg? I'm interested to know what differs hg and git without having to jump into a fanboy discussion.</p>
","730","440019","<git><version-control><mercurial><comparison><dvcs>"
"2336580","1","Sparse checkout in Git 1.7.0?","<p>With the new <a href=""http://schacon.github.com/git/git-read-tree.html#_sparse_checkout"">sparse checkout feature</a> in Git 1.7.0, is it possible to just get the contents of a subdirectory like how you can in SVN? I found <a href=""http://vmiklos.hu/blog/sparse-checkout-example-in-git-1-7"">this example</a>, but it preserves the full directory structure. Imagine that I just wanted the contents of the 'perl' directory, without an actual directory named 'perl'.</p>

<p><strong>-- EDIT --</strong></p>

<p>Example:</p>

<p>My git repository contains the following paths</p>

<pre><code>repo/.git/
repo/perl/
repo/perl/script1.pl
repo/perl/script2.pl
repo/images/
repo/images/image1.jpg
repo/images/image2.jpg
repo/doc/
repo/doc/readme.txt
repo/doc/help.txt
</code></pre>

<p>What I want is to be able to produce from the above repository this layout:</p>

<pre><code>repo/.git/
repo/script1.pl
repo/script2.pl
</code></pre>

<p>However with the current sparse checkout feature, it seems like it is only possible to get</p>

<pre><code>repo/.git/
repo/perl/script1.pl
repo/perl/script2.pl
</code></pre>

<p>which is NOT what I want.</p>
","59","35113","<git><version-control><sparse-checkout>"
"24124140","1","SSH Agent Forwarding with Ansible","<p>I’m using Ansible 1.5.3 and Git with ssh agent forwarding (<a href=""https://help.github.com/articles/using-ssh-agent-forwarding"">https://help.github.com/articles/using-ssh-agent-forwarding</a>).  I can log into the server that I am managing with Ansible and test that my connection to git is correctly configured:</p>

<pre><code>ubuntu@test:~$ ssh -T git@github.com
Hi gituser! You've successfully authenticated, but GitHub does not provide shell access.
</code></pre>

<p>I can also clone and update one of my repos using this account so my git configuration looks good and uses ssh forwarding when I log into my server directly via ssh.</p>

<p>The problem:  When I attempt the same test shown above using the Ansible command module. It fails with “Permission denied”.  Part of the Ansible output (with verbose logging) looks like this:</p>

<pre><code>failed: [xxx.xxxxx.com] =&gt; {""changed"": true, ""cmd"": [""ssh"", ""-T"", ""git@github.com""], ""delta"": ""0:00:00.585481"", ""end"": ""2014-06-09 14:11:37.410907"", ""rc"": 255, ""start"": ""2014-06-09 14:11:36.825426""}
stderr: Permission denied (publickey).
</code></pre>

<p>Here is the simple playbook that runs this command:</p>

<pre><code>- hosts: webservers
  sudo: yes
  remote_user: ubuntu

  tasks:

  - name: Test that git ssh connection is working.
    command: ssh -T git@github.com
</code></pre>

<p>The question:  why does everything work correctly when I manually log in via ssh and run the command but fail when the same command is run as the same user via Ansible?</p>

<p>I will post the answer shortly if no one else beats me to it.  Although I am using git to demonstrate the problem, it could occur with any module that depends on ssh agent forwarding.  It is not specific to Ansible but I suspect many will first encounter the problem in this scenario.</p>
","33","10036","<git><ssh><ansible><ssh-agent>"
"60278","1","Git commit opens blank text file, for what?","<p>In all the Git tutorials I've read they say that you can do:</p>

<pre><code>git init
git add .
git commit
</code></pre>

<p>When I do that I get a big text file opened up. None of the tutorials seem to address this, so I don't know what to do with the file or what to put in it if anything.</p>
","76","62008","<git><git-commit>"
"21738647","1","Change date of git tag (or GitHub Release based on it)","<p>I'm adding <a href=""https://help.github.com/articles/creating-releases"">Releases</a> to my projects on GitHub by adding tags to various commits in the Main branch. </p>

<p>In one of my projects I did not add the tags to the commits in chronological order. (I found obvious commits and tagged them, and then I found less obvious, <em>older</em> commits and tagged them.)</p>

<p>Now <a href=""https://github.com/Phrogz/docubot/releases"">GitHub is showing</a> v1.0.1 as current, with v0.7.0 preceding it, and v1.1.2 preceding <em>that</em>. </p>

<p>It appears to use the date on a tag's creation as the Release date instead of the commit that is being tagged. How can I edit my tags so that their dates are the same as the commit they are tagging?</p>

<p><a href=""http://i.stack.imgur.com/9cLWb.png""><img src=""http://i.stack.imgur.com/9cLWb.png"" alt=""mapping of releases and dates between gitk and GitHub""></a></p>
","44","2349","<git><github><tags>"
"2363197","1","Can I get a list of files marked --assume-unchanged?","<p>What have I marked as <code>--assume-unchanged</code>? Is there any way to find out what I've tucked away using that option?</p>

<p>I've dug through the <code>.git/</code> directory and don't see anything that looks like what I'd expect, but it must be somewhere. I've forgotten what I marked this way a few weeks ago and now I need to document those details for future developers.</p>
","191","20184","<git>"
"86402","1","How can I get git to follow symlinks?","<p>I've had a google for how to do this, but not had any luck.</p>

<p>Is my best be going to be a shell script which replaces symlinks with copies, or is there another way of telling git to follow symlinks?</p>

<p>PS: I know it's not very secure, but I only want to do it in a few specific cases.</p>
","130","57461","<git><symlink>"
"4824188","1","git ignore vim temporary files","<p>What is the correct way to make git ignore temporary files produced by vim in all directories (either globally across the system or locally for a single project)?</p>
","144","58450","<git><vim><ignore><temporary-files>"
"685319","1","Git pull error: unable to create temporary sha1 filename","<p>I've got a small git repo setup with the only real purpose to be able to develop locally on several machines (work, home, laptop). Thus I have one branch and I commit/push once I leave a computer, pull once I sit down at the next. Has worked fine, up to now that is. Now when I pull on my 'live test' machine, I get the following:</p>

<pre><code>remote: Counting objects: 38, done.
remote: Compressiremote: ng objects: 100% (20/20), done.
remote: Total 20 (delta 17), reused 0 (delta 0)
error: unable to create temporary sha1 filename .git/objects/ed: File exists

fatal: failed to write object
fatal: unpack-objects failed
</code></pre>

<p>Searching around the net the only real answer I could find was the following: <a href=""http://marc.info/?l=git&amp;m=122720741928774&amp;w=2"">http://marc.info/?l=git&amp;m=122720741928774&amp;w=2</a> which basically states that this is a bogus error that's on top of the pile and thus says nothing about what really is wrong.</p>

<p>Where do I go from here to find out what is wrong?</p>

<p>Edit: Removed the local copy and re-cloned</p>
","34","40558","<git>"
"2820255","1","How do negated patterns work in .gitignore?","<p>I am attempting to use a .gitignore file with negated patterns (lines starting with !), but it's not working the way I expect.</p>

<p>As a minimal example, I have the folllowing directory structure:</p>

<pre><code>C:/gittest
 -- .gitignore
 -- aaa/
   -- bbb/
     -- file.txt
   -- ccc/
     -- otherfile.txt
</code></pre>

<p>and in my gitignore file, I have this:</p>

<pre><code>aaa/
!aaa/ccc/
</code></pre>

<p>My understanding (based on this: <a href=""http://ftp.sunet.se/pub//Linux/kernel.org/software/scm/git/docs/gitignore.html"">http://ftp.sunet.se/pub//Linux/kernel.org/software/scm/git/docs/gitignore.html</a>) is that the file aaa/ccc/otherfile.txt should not be ignored, but in fact git is ignoring everything under aaa.</p>

<p>Am I misunderstanding this sentence: ""An optional prefix ! which negates the pattern; any matching file excluded by a previous pattern will become included again.""?</p>

<p>BTW, this is on Windows with msysgit 1.7.0.2.</p>
","42","11487","<git>"
"160608","1","Do a ""git export"" (like ""svn export"")?","<p>I've been wondering whether there is a good ""git export"" solution that creates a copy of a tree without the <code>.git</code> repository directory. There are at least three methods I know of:</p>

<ol>
<li><code>git clone</code> followed by removing the <code>.git</code> repository directory.</li>
<li><a href=""http://www.kernel.org/pub/software/scm/git/docs/git-checkout-index.html""><code>git checkout-index</code></a> alludes to this functionality but starts with ""Just read the desired tree into the index..."" which I'm not entirely sure how to do.</li>
<li><a href=""http://code.google.com/p/git-export/""><code>git-export</code></a> is a third party script that essentially does a <code>git clone</code> into a temporary location followed by <code>rsync --exclude='.git'</code> into the final destination.</li>
</ol>

<p>None of these solutions really strike me as being satisfactory. The closest one to <code>svn export</code> might be option 1, because both those require the target directory to be empty first. But option 2 seems even better, assuming I can figure out what it means to read a tree into the index.</p>
","1772","422280","<git><export><git-archive><svn-export>"
"5241644","1","Using .gitignore to ignore everything but specific directories","<p>My issue is that I have a bunch of WordPress websites in my git repo, of which I want to selectively commit only the content of my <code>themes</code> folders, while ignoring the rest of the redundant files found in WordPress.  </p>

<p>I've used .gitignore files to ignore file types before, but can it be used the other way around- that is to ignore everything BUT a certain folder path?</p>

<blockquote>
  <p>root (git repo)<br>
  - / wordpress<br> 
  - - / (WordPress Site 1)/wp-content/themes<br> 
  - - / (WordPress Site 2)/wp-content/themes<br> 
  - - / (WordPress Site 3)/wp-content/themes<br></p>
</blockquote>

<p>Thanks-</p>

<p><strong>UPDATE:</strong> </p>

<p>Based on the answers I did the following, but it's not working.  Any ideas?</p>

<pre><code># Ignore everything:
*
# Except for wordpress themes:
!*/wp-content/themes/*
</code></pre>

<p>I've also tried the following variations:</p>

<pre><code>!*/wp-content/themes*
!*wp-content/themes/*
!wp-content/themes/*
!/wordpress/*/wp-content/themes*
!wordpress/*/wp-content/themes*
</code></pre>

<p>None of these read my <code>themes</code> folders.</p>
","54","27472","<git><gitignore><glob>"
"7953806","1","Github (SSH) via public WIFI, port 22 blocked","<p>I'm currently on a public WIFI spot and I'm unable to use SSH (they probably blocked that port). However, I need that connection to do a <code>git push</code>.</p>

<pre><code>➜ ssh -T git@github.com
ssh: connect to host github.com port 22: Connection refused
</code></pre>

<p>Is it possible to bypass this restriction by setting up a SSH tunnel via port 80 and tell <code>github push</code> to use that connection? How to do that? I'm on OSX (lion). This must be a common problem?</p>
","89","25841","<git><ssh><github><wifi><public>"
"727994","1","git - skipping specific commits when merging","<p>I've been using Git for about a year now and think it's fantastic, but I've just started on a second version of the project and started a new branch for it. I'm struggling a little with the best way to handle things going forward.</p>

<p>I have two branches called say master10 (for v1) and master20 (for v2). I've been making bug fixes in v1 on branch master10, and developing new stuff of master20. Whenever I make a bug fix I merge it into v2 by checking out master20 and doing <code>git merge master10</code>. So far so good.</p>

<p>Now however, I've made a change in v1 that I don't want in v2, but I want to continue merging other bug fixes. How do I tell Git to skip that particular commit (or a range of commits), but that going forward I still want to merge other bug fixes.</p>

<p>I thought <code>git rebase</code> might be what I need but read the doc and my head nearly exploded.</p>

<p>I think what I want is something like a ""git sync"" command that tells git that two branches are now in-sync and in future only merge the commits from this sync-point on.</p>

<p>Any help appreciated.</p>
","114","22687","<git><version-control>"
"7225313","1","How does git compute file hashes?","<p>The SHA1 hashes stored in the tree objects (as returned by <code>git ls-tree</code>) do not match the SHA1 hashes of the file content (as returned by <code>sha1sum</code>)</p>

<pre><code>$ git cat-file blob 4716ca912495c805b94a88ef6dc3fb4aff46bf3c | sha1sum
de20247992af0f949ae8df4fa9a37e4a03d7063e  -
</code></pre>

<p>How does git compute file hashes? Does it compress the content before computing the hash?</p>
","75","22730","<git><hash><sha1><checksum><git-hash>"
"2412450","1","Git pre-commit hook : changed/added files","<p>I am writing a pre-commit hook. I want to run <code>php -l</code> against all files with .php extension. However I am stuck.</p>

<p>I need to obtain a list of new/changed files that are staged. deleted files should be excluded.</p>

<p>I have tried using <code>git diff</code> and <code>git ls-files</code>, but I think I need a hand here.</p>
","31","16455","<git><hook><pre-commit-hook><pre-commit>"
"3248779","1","Which is faster, ssh or git protocol?","<p>Which is effecient? SSH:// or Git://  (File compression)</p>

<p>I understand in Git , git protocol is smart because there is a protocol agent on both end of commumnication to compress the file transfer resulting in faster clone by effeciently using the network bandwidth.</p>

<p>From an O'Reilly book I found the following statements.</p>

<pre><code>For secure, authenticated connections, the Git native 
protocol can be tunneled over an SSH connection using
the following URL templates:

ssh: ///[user@]example.com[:port]/path/to/repo.git
ssh: //[user@]example.com/path/to/repo.git
ssh: //[user@]example.com/~user2/path/to/repo.git
ssh: //[user@]example.com/~/path/to/repo.git*
</code></pre>

<p>I'm not sure if the author means what he says. He talks of git protocol getting tunneled over SSH. </p>

<p>From my perspective, unless you connect to the git port (agent port), the protocol is not in effect. And SSH is mere uncompressed file transfer.<br>
But as per the author, if we use SSH he says the git protocol is tunneled over it. So is SSH smarter in GIT?</p>

<p>Von C,
Thanks for your answer. ""Network protocols (HTTP and Git) are generally read-only"" Git can be made rw when you run the deamon with --enable=receive-pack. </p>

<p>Following are my concerns.
When they say git protocol is smart, they mean when you execute git clone , git server agent compresses the data that is sent back to the client , so the clone should be faster. Im my usecase i will be setting the git server in hongkong and using it on sanjose and other countries as well , So i want to be efficient over network due to latency concerns.</p>

<p>So my question is when i use git clone ssh://user@server/reposloc do i get the benefits of git protocol also . As per Orelly author book he means git is tunneled over ssh, then how does git protocol work when i dont have git daeomon running on the server.</p>

<p>So using SSh://xyz... does it give both the benefit of ssh  and git protocols ?</p>

<p>appreciate your answers in advance.</p>
","35","25224","<git><github><msysgit>"
"2423777","1","Is it possible to create a remote repo on GitHub from the CLI without opening browser?","<p>I created a new local Git repository:</p>

<pre><code>~$ mkdir projectname
~$ cd projectname
~$ git init
~$ touch file1
~$ git add file1
~$ git commit -m 'first commit'
</code></pre>

<p><strong>Is there any git command to create a new <em>remote</em> repo and push my commit to GitHub from here?</strong> I know it's no big deal to just fire up a browser and head over to <a href=""https://github.com/new"">Create a New Repository</a>, but if there is a way to achieve this from the CLI I would be happy.</p>

<p>I read a vast amount of articles but none that I found mention how to create a remote repo from the CLI using git commands. Tim Lucas's nice article <a href=""http://toolmantim.com/thoughts/setting_up_a_new_remote_git_repository"">Setting up a new remote git repository</a> is the closest I found, <em>but GitHub does not provide shell access</em>.</p>
","192","75133","<git><github><ssh><command-line-interface>"
"17683458","1","How do I commit case-sensitive only filename changes in Git?","<p>I have changed a few files name by  de-capitalize the first letter, as in <code>Name.jpg</code> to <code>name.jpg</code>. Git does not recognize this changes and I had to delete the files and upload them again. Is there a way that Git can be case-sensitive when checking for changes in file names? I have not made any changes to the file itself. </p>
","369","63970","<git><case-sensitive><git-commit><git-config>"
"4908336","1","Can Git really track the movement of a single function from 1 file to another? If so, how?","<p>Several times, I have come across the statement that, if you move a single function from one file to another file, Git can track it. For example, <a href=""http://stackoverflow.com/questions/1598759/git-and-mercurial-compare-and-contrast/1598812#1598812/"">this entry</a> says, ""Linus says that if you move a function from one file to another, Git will tell you the history of that single function across the move.""</p>

<p>But I have a little bit of awareness of some of Git's under-the-hood design, and I don't see how this is possible. So I'm wondering ... is this is a correct statement? And if so, how is this possible?</p>

<p>My understanding is that Git stores each file's contents as a Blob, and each Blob has a globally unique identity which arises from the SHA hash of its contents and size. Git then represents folders as Trees. Any filename information belongs to the Tree, not to the Blob, so a file rename for example shows up as a change to a Tree, not to a Blob.</p>

<p>So if I have a file called ""foo"" with 20 functions in it, and a file called ""bar"" with 5 functions in it, and I move one of the functions from foo into bar (resulting in 19 and 6, respectively), how can Git detect that I moved that function from one file to another?</p>

<p>From my understanding, this would cause 2 new blobs to exist (one for the modified foo and one for the modified bar). I realize a diff could be calculated to show that the function was moved from one file to the other. But I don't see how history about the function could possibly become associated with bar instead of foo (not automatically, anyway).</p>

<p>If Git were to actually look <em>inside</em> of single files, and compute a <em>blob per function</em> (which would be crazy / infeasible, because you'd have to know how to parse any possible language), then I could see how this might be possible.</p>

<p>So ... is the statement correct or not? And if it is correct, then what is lacking in my understanding?</p>
","47","4981","<git><git-branch><branching-and-merging>"
"14877493","1","git-svn rejected Basic challenge now that VPN is required","<p>I have been using <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-svn.html"">git-svn</a> for a few months now as an interface to the SVN repository for my company.</p>

<p>However, about a week ago my company changed their policy such that SVN is only reachable if connected by way of Cisco VPN.</p>

<p>I have no trouble connecting to VPN on my Linux Mint VM (which is where I do my coding), but I am now no longer able to pass authentication when I, for example, run <code>git svn dcommit</code> to checkin code changes.</p>

<p>I have tried:</p>

<ul>
<li><code>rm -rf ~/.subversion</code>, to get rid of any saved SVN authentication credentials and force it to take new ones, but this seems to have no effect, nor does it ever prompt me for fresh credentials, surprisingly.</li>
<li>starting in a freshly created directory and running <code>git svn clone</code> to initiate a new link to the SVN repository, but with the same authentication failures.</li>
</ul>

<p>Here is what I see when running <code>git svn dcommit</code> or <code>git svn clone</code>:</p>

<pre><code>$ git svn dcommit
Committing to https://&lt;redacted&gt;:2443/svn/LS/branches/PRODUCTION-SUPPORT-1/ls-policygen ...
WARNING: gnome-keyring:: couldn't connect to: /tmp/keyring-wCQwzG/pkcs11: No such file or directory
Authorization failed: OPTIONS of 'https://&lt;redacted&gt;:2443/svn/LS/branches/PRODUCTION-SUPPORT-1/ls-policygen': authorization failed: Could not authenticate to server: ignored NTLM challenge, rejected Basic challenge (https://&lt;redacted&gt;:2443) at /usr/local/libexec/git-core/git-svn line 943
</code></pre>

<p>The <code>gnome-keyring</code> warning has always been present, and never stopped commits before VPN was required.</p>
","31","1167","<linux><git><svn><git-svn><vpn>"
"15214762","1","How can I sync documentation with Github Pages?","<p>I have a project together with several people and we have a <code>README.md</code> file with a bunch of GitHub Flavored Markdown that is rendered on our GitHub page. We also set up a GitHub Pages branch which is hosted under our GitHub Organization's subdomain, and used the <a href=""https://help.github.com/articles/creating-pages-with-the-automatic-generator""><strong>Automatic Page Generator</strong></a> simply loading in our <code>README.md</code> file when we created our page. However, I notice that when I update our <code>README.md</code> file, it does not update the project page. Instead, we must go to the GitHub settings tab and recreate the project page, reloading the <code>README.md</code> file when we do it. </p>

<p>Also, after reading about <a href=""https://github.com/blog/1395-relative-links-in-markup-files""><strong>relative linking</strong></a> working between documentation files on the GitHub project directory pages. I very much like the markdown as it saves tons of time from having to write all the HTML out by hand for our documentation. What I would like however is to be able to have one <code>README.md</code> file which is able to include relative links to other documentation files located at <code>docs/*.md</code>. I was hoping there was an easy solution so that my other documentation files might also be included in my gh-pages branch and be hosted under my GitHub Pages subdomain and be rendered and/or themed.</p>

<p>In other words, my questions are:</p>

<ul>
<li>Is there a way to have my README.md file automatically update on my Github Page subdomain?

<ul>
<li><strong>[ EDIT ] :</strong> No appears to be the answer if using the Automatic Page Generator. You must go to the settings page for the repo and reload it every time there is a change in order to update it.<br>
&nbsp;</li>
</ul></li>
<li>Is there a way I can have my relative links to my documentation on my README.md file work on my Github Pages, perhaps my somehow syncing my <code>/docs/*.md</code> to my Github Pages and somehow rendering and/or theming them?

<ul>
<li><strong>[ EDIT ] :</strong> From what I've learned since writing this question it appears that this is only possible on GitHub pages through the use of a <a href=""http://www.mzlinux.org/?q=node/415""><strong>static site generator</strong></a> like the ruby gem <a href=""https://github.com/mojombo/jekyll""><strong>Jekyll</strong></a> and probably some uses of the <a href=""https://help.github.com/articles/post-receive-hooks""><strong>webhooks supported by GitHub</strong></a> that are mentioned in the comments below. I am trying currently trying to find an optimal solution.<br>
&nbsp;</li>
</ul></li>
<li>Better yet, is there an even easier way I can do this and perhaps have just one copy of my README.md and documentation that is used on both gh-pages and my main branch and makes everything easiest?

<ul>
<li><strong>[ EDIT ] :</strong> It seems this one is almost definitely a no. I was thinking about the possibility of something built into GitHub to allow this. It seems that better support for this kind of thing may could be built into GitHub Pages in the future, or at least I definitely hope it will be.<br>
&nbsp;</li>
</ul></li>
</ul>
","61","5545","<git><github><github-pages><webhooks>"
"3292792","1","Git (or Hg) plugin for dealing with Microsoft Word and/or OpenOffice files","<p>Has anyone come across a Git or Hg plugin for ""meaningful"" diffs/merging/branching of OpenOffice or Microsoft word files.</p>

<p>I know I can 'checkin' .doc files but both Git and Hg treat them as binary blobs.  I'd like to be able to do all (or at least many) of the normal revision based operations on the text of the file.</p>

<p>And yes, I do know that I should be using Latex or converting files back-and-forth between RTF.  I'm just looking for a more ""native"" solution since I'm trying to manage collaboration between techies and ""management people"".</p>

<p>This is related to my question on Biostar here: <a href=""http://biostar.stackexchange.com/questions/1749/writing-collaboration-with-source-control-and-microsoft-word"">http://biostar.stackexchange.com/questions/1749/writing-collaboration-with-source-control-and-microsoft-word</a></p>

<p>Thanks.</p>
","37","17291","<git><version-control><plugins><mercurial><openoffice.org>"
"7654822","1","Remove refs/original/heads/master from git repo after filter-branch --tree-filter?","<p>I had the same question as asked here: <a href=""http://stackoverflow.com/questions/7193507/new-git-repository-in-root-directory-to-subsume-an-exist-repository-in-a-sub-dire"">New git repository in root directory to subsume an exist repository in a sub-directory</a></p>

<p>I followed this answer here: <a href=""http://stackoverflow.com/questions/7193507/new-git-repository-in-root-directory-to-subsume-an-exist-repository-in-a-sub-dire/7194124#7194124"">New git repository in root directory to subsume an exist repository in a sub-directory</a></p>

<p>Now, <code>gitk --all</code> shows two histories: one culminating in the current <code>master</code>, and one named <code>original/refs/heads/master</code>.</p>

<p>I don't know what this second history is, or how to remove it from the repo. I don't need two histories in my repository.</p>

<p>How do I get rid of it?</p>

<p>To reproduce yourself:</p>

<pre><code>mkdir -p project-root/path/to/module
cd project-root/path/to/module
mkdir dir1 dir2 dir3 
for dir in * ; do touch $dir/source-file-$dir.py ; done
git init
git add .
git commit -m 'Initial commit'
</code></pre>

<p>Now we have the original poster's problem. Let's move the root of the git repo to project-root using the answer linked above:</p>

<pre><code>git filter-branch --tree-filter 'mkdir -p path/to/module ; git mv dir1 dir2 dir3 path/to/module' HEAD
rm -rf path
cd ../../../ # Now PWD is project-root
mv path/to/module/.git .
git reset --hard
</code></pre>

<p>Now, see my current problem:</p>

<pre><code>gitk --all &amp;
git show-ref
</code></pre>

<p>How do I get rid of <code>refs/original/heads/master</code> and all associated history?</p>
","85","12977","<git><git-rewrite-history><git-plumbing>"
"3293531","1","Git: permanently remove few commits from remote branch","<p>I know that's rewriting of history which is bad yada yada.</p>

<p>But - how to do that?</p>
","98","54846","<git>"
"5322901","1","Import existing Android project in Eclipse: no gen source folder?","<p>I'm trying to import an android project into Eclipse (from Git, but I don't think it's relevant), and I can't run or compile it because I get these errors:</p>

<pre><code>Android requires compiler compliance level 5.0. Please fix project properties.  Serval-Video-Discovery      line 1  Android ADT Problem 
Project 'Serval-Video-Discovery' is missing required source folder: 'gen'   Serval-Video-Discovery      Build path  Build Path Problem
</code></pre>

<p>I think the first one isn't really a big problem, even if I don't really understand the warning.</p>

<p>The funny thing is that the ""gen"" folder exists on the filesystem; furthermore, I can't try to create it because it already exists !</p>

<p>What should I do to solve this issue?</p>

<p>Here is the GitHub repo I'm trying to import from: <a href=""https://github.com/rbochet/Serval-Video-Discovery"">https://github.com/rbochet/Serval-Video-Discovery</a></p>
","32","38788","<android><eclipse><git><project><adt>"
"4936778","1","Git merge commits","<p>I'm new to git (and enjoying it a lot!). While developing in a new branch, I kept committing the various development 'states' of my application. Now I have to check it in for review but didn't want everything to go in different commits (different comments and ids).</p>

<p>How can I do a push of all changes as if it was the first time?</p>
","38","16830","<git><code-review>"
"1417957","1","Show just the current branch in Git","<p>I tried looking for a special git command for this but couldn't find one. Can anyone suggest anything shorter or faster than:</p>

<pre><code>git branch | awk '/\*/ { print $2; }'
</code></pre>
","103","27327","<git><branch><git-branch>"
"5694389","1","Get the short git version hash","<p>Is there a cleaner way to get the short version hash of <code>HEAD</code> from <code>git</code>?</p>

<p>I want to see the same output as I get from</p>

<pre><code> git log -n 1 | head -n 1 | sed -e 's/^commit //' | head -c 8
</code></pre>

<hr>

<p><strong>UPDATE</strong>: I originally used this to generate a version string, but this is even better:</p>

<pre><code>git describe --tags
</code></pre>

<p>It will output strings like <code>0.1.12</code> (tagged commit) or <code>0.1.11-5-g0c85fbc</code> (5 commits after the tag).</p>
","124","51114","<git>"
"12481639","1","Remove files from Git commit","<p>I am using Git and I have committed few files using </p>

<pre><code>git commit -a
</code></pre>

<p>Later, I found that a file had mistakenly been added to the commit.</p>

<p>How can I remove a file from the last commit?</p>
","498","336549","<git><git-commit>"
"338436","1","Is there a quick git command to see an old version of a file?","<p>Is there a command in git to see (either dumped to stdout, or in <code>$PAGER</code> or <code>$EDITOR</code>) a particular version of a particular file?</p>
","748","171935","<git>"
"7711727","1","Avoid orphaned .orig files after resolving conflicts from a Git merge","<p>After I perform a Git merge and resolve the conflicts, there are leftover .orig versions of the conflicting files. How can I automatically delete those after the conflict is successfully resolved?</p>
","31","3733","<git><merge>"
"2938301","1","Remove specific commit","<p>I was working with a friend on a project, and he edited a bunch of files that shouldn't have been edited. Somehow I merged his work into mine, either when I pulled it, or when I tried to just pick the specific files out that I wanted. I've been looking and playing for a long time, trying to figure out how to remove the commits that contain the edits to those files, it seems to be a toss up between revert and rebase, and there are no straightforward examples, and the docs assume I know more than I do.</p>

<p>So here is a simplified version of the question:</p>

<p>Given the following scenario, how do I remove commit 2?</p>

<pre><code>$ mkdir git_revert_test &amp;&amp; cd git_revert_test

$ git init
Initialized empty Git repository in /Users/josh/deleteme/git_revert_test/.git/

$ echo ""line 1"" &gt; myfile

$ git add -A

$ git commit -m ""commit 1""
[master (root-commit) 8230fa3] commit 1
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 myfile

$ echo ""line 2"" &gt;&gt; myfile

$ git commit -am ""commit 2""
[master 342f9bb] commit 2
 1 files changed, 1 insertions(+), 0 deletions(-)

$ echo ""line 3"" &gt;&gt; myfile

$ git commit -am ""commit 3""
[master 1bcb872] commit 3
 1 files changed, 1 insertions(+), 0 deletions(-)
</code></pre>

<p>The expected result is</p>

<pre><code>$ cat myfile
line 1
line 3
</code></pre>

<p>Here is an example of how I have been trying to revert</p>

<pre><code>$ git revert 342f9bb
Automatic revert failed.  After resolving the conflicts,
mark the corrected paths with 'git add &lt;paths&gt;' or 'git rm &lt;paths&gt;'
and commit the result.
</code></pre>
","80","71127","<git><commit><revert>"
"7335420","1","Global Git ignore","<p>I want to set up Git to globally ignore certain files.</p>

<p>I have added a <code>.gitignore</code> file to my user root directory (<code>Users/me/</code>) and I have added the following line:</p>

<pre><code>*.tmproj
</code></pre>

<p>But it is not ignoring this file time, any idea what I am doing wrong?</p>
","401","127661","<git><global><gitignore>"
"5738797","1","How can I push a local Git branch to a remote with a different name easily?","<p>I've been wondering if there's an easy way to push and pull a local branch with a remote branch with a different name without always specifying both names.</p>

<p>For example:</p>

<pre><code>$ git clone myrepo.git
$ git checkout -b newb
$ ...
$ git commit -m ""Some change""
$ git push origin newb:remote_branch_name
</code></pre>

<p>Now if someone updates remote_branch_name, I can:</p>

<pre><code>$ git pull
</code></pre>

<p>And everything is merged / fast-forwarded. However, if I make changes in my local ""newb"", I can't:</p>

<pre><code>$ git push
</code></pre>

<p>Instead, I have to:</p>

<pre><code>% git push origin newb:remote_branch_name
</code></pre>

<p>Seems a little silly. If <code>git-pull</code> uses <code>git-config branch.newb.merge</code> to determine where to pull from, why couldn't <code>git-push</code> have a similar config option? Is there a nice shortcut for this or should I just continue the long way?</p>
","111","38719","<git><version-control><git-push><git-remote>"
"24919907","1","Visual Studio 2013 git, only Master branch listed","<p>I'm using Visual Studio 2013's Git support to work on a private GitHub repository. I have permission to commit to it. I want to switch branches, but when I go to the Branches view, the only branch in any of the lists (branch drop-down, published branches, merge tool) is master. Other branches show up in GitHub, GitHub for Windows, and TortoiseGit. So I know they're there and I have access.</p>

<p>Any ideas why I can't see other branches in Visual Studio?</p>

<p><img src=""http://i.stack.imgur.com/zkWYt.png"" alt=""enter image description here""></p>

<p>I'm running Visual Studio 2013 Update 2.</p>
","81","23930","<git><visual-studio-2013><git-branch>"
"2526593","1","Git as mercurial client? Why no git-hg?","<p>This is a question that's been bothering me for a while. I've done my homework and checked stackoverflow and found at least these two topics about my question:
<a href=""http://stackoverflow.com/questions/1714015/git-for-mercurial-like-git-svn"">Git for Mercurial like git-svn</a> and
<a href=""http://stackoverflow.com/questions/883452/git-interoperability-with-a-mercurial-repository"">Git interoperability with a Mercurial repository</a></p>

<p>I've done some serious googling to solve this issue, but so far with no luck. I've also read the <a href=""http://peepcode.com/products/git-internals-pdf"">Git Internals</a> book, and the <a href=""http://hgbook.red-bean.com/read/behind-the-scenes.html"">Mercurial Definitive Behind the Scenes</a> to try to figure this out. I'm still a bit puzzled why I haven't been able to find any suitable git-hg type of a tool. </p>

<p>From my perspective git-svn is one of the main features, why I've chosen to use git over mercurial also at work. It allows me to use a workflow I like, and nobody else needs to bother, if they don't care. I just don't see the point in using the intermediate hg repo to convert back and forth, as suggested in one of the chains. </p>

<p>So anyway, from what I've read hg and git seem very similar in conceptual design. There are <a href=""http://stackoverflow.com/questions/1598759/git-and-mercurial-compare-and-contrast"">differences under the hood</a>, but none of those should prevent creating a git client for hg. As it seems to me, remote tracking branches and octopus merges make git even more powerful than hg is. </p>

<p>So, the real question, is there any real reason why git-hg does not exist (or at least is very hard to find)? 
Is there some animosity from git users (and developers) towards their hg counterparts that has caused the lack of the git-hg tool?
Do any of you have any plans to develop something like this, and go public with it? I could volunteer (although with very feeble C-skills) to participate to get this done. I just don't possess the full knowledge to start this up myself.</p>

<p>Could this be the tool to end all DVCS wars for good? </p>
","67","18522","<git><mercurial><interop>"
"948354","1","Default behavior of ""git push"" without a branch specified","<p>I use the following command to push to my remote branch:</p>

<pre><code>git push origin sandbox
</code></pre>

<p>If I say</p>

<pre><code>git push origin
</code></pre>

<p>does that push changes in my other branches too, or does it only update my current branch? I have three branches: <code>master</code>, <code>production</code> and <code>sandbox</code>.</p>

<p>The <code>git push</code> documentation is not very clear about this, so I'd like to clarify this for good.</p>

<p>Which branches and remotes do the following <code>git push</code> commands update exactly?</p>

<pre><code>git push 
git push origin
</code></pre>

<p><code>origin</code> above is a remote.</p>

<p>I understand that <code>git push [remote] [branch]</code> will push only that branch to the remote.</p>
","911","481223","<git><branch><git-branch><git-push>"
"5385567","1","How to cancel a pull request on github?","<p>How can a pull request on github be cancelled?  </p>

<p><strong>UPDATE</strong>
The accepted answer didn't detail the steps in the answer and in any case, github has made this dead simple since this question was asked, so here are the steps:</p>

<ol>
<li>Visit the pull request page</li>
<li>Tap the ""close pull request button""</li>
</ol>
","89","58454","<git><github>"
"949314","1","How to retrieve the hash for the current commit in Git?","<p>I would like to retain (for now) the ability to link Git changesets to workitems stored in TFS.</p>

<p>I already wrote a tool (using a hook from Git) in which I can inject workitemidentifiers into the message of a Git changeset. </p>

<p>However, I would also like to store the identifier of the Git commit (the hash) into a custom TFS workitem field. This way I can examine a workitem in TFS and see what Git changesets are associated with the workitem.</p>

<p>How can I easily retrieve the hash from the current commit from Git?</p>
","842","302078","<git>"
"2973996","1","git rebase without changing commit timestamps","<p>Would it make sense to perform <code>git rebase</code> while preserving the commit timestamps?</p>

<p>I believe a consequence would be that the new branch will not necessarily have commit dates chronologically. Is that <em>theoretically</em> possible at all? (e.g. using plumbing commands; just curious here)</p>

<p>If it is theoretically possible, then is it possible in practice with rebase, not to change the timestamps?</p>

<p>For example, assume I have the following tree:</p>

<pre><code>master &lt;jun 2010&gt;
  |
  :
  :
  :     oldbranch &lt;feb 1984&gt;
  :     /
oldcommit &lt;jan 1984&gt;
</code></pre>

<p>Now, if I rebase <code>oldbranch</code> on <code>master</code>, the date of the commit changes from feb 1984 to jun 2010. Is it possible to change that behaviour so that the commit timestamp is not changed? In the end I would thus obtain:</p>

<pre><code>      oldbranch &lt;feb 1984&gt;
      /
 master &lt;jun 2010&gt;
    |
    :
</code></pre>

<p>Would that make sense at all? Is it even allowed in git to have a history where an old commit has a more recent commit as a parent?</p>
","64","15984","<git><timestamp><git-rebase>"
"2974106","1","How to lookup the latest git commit hash from an ant build script","<p>How can I lookup the latest git commit hash from an ant build script?</p>

<p>I am currently working on a new open source project which I store on github. I would like to extend my existing ANT build file to allow me to create numbered builds. I am imagining that I would launch the build with something like ""ant buildnum -Dnum=12"".</p>

<p>I would like the resulting jar to have two crucial bits of information in it's manifest file:</p>

<ul>
<li>build.number=12</li>
<li>build.gitcommit=</li>
</ul>

<p>I know how to create the build.number line. However, I am unsure of the best ant plumbing to lookup the latest git commit hash which is the value I want to fill in for .</p>
","41","14863","<git><ant>"
"10116373","1","Git Push ERROR: Repository not found","<p>I am having a very strange problem with <code>git</code> and <code>github</code>. When I try and push, I am getting:</p>

<pre><code>git push -u origin master
ERROR: Repository not found.
fatal: The remote end hung up unexpectedly
</code></pre>

<p>I added the remote:</p>

<pre><code>git remote add origin git@github.com:account-name/repo-name.git
</code></pre>

<p>Any ideas?</p>
","61","77578","<git><github><git-push>"
"5785549","1","Able to push to all git remotes with the one command?","<p>Instead of doing:</p>

<pre><code>git push origin --all &amp;&amp; git push nodester --all &amp;&amp; git push duostack --all
</code></pre>

<p>Is there a way to do that with just one command?</p>

<p>Thanks :)</p>
","90","12269","<git>"
"12866832","1","What's the difference between git-tf and git-tfs?","<p>I've recently been getting really fed up with TFS. I've heard that there is a light at the end of the tunnel though. Apparently I can use either git-tf or git-tfs and treat my code as if it was managed by git, but be able to push/pull to/from a central TFS server.</p>

<p>My main question is I'm not sure which one of these I should use. There is git-tf which is officially supported by Microsoft, and there is git-tfs which has been around a lot longer. What's the differences between these and which should I try out first?</p>
","55","8226","<git><version-control><tfs><git-tfs><git-tf>"
"952651","1","git equivalent to hg mq?","<p>I just started using Git alongside Mercurial to familiarize myself with Git.</p>

<p>I use the mq extension in Mercurial extensively to manage local patches, and I'm looking for a Git equivalent.</p>

<p>Should I just use Git branch?  Or are there better ways to manage local patches that enable easily applying and removing the patches?</p>

<p>Thanks,</p>
","47","8220","<git><mercurial><mercurial-queue>"
"8123674","1","How to git commit nothing without an error?","<p>I'm trying to write a fabric script that does a <code>git commit</code>; however, if there is nothing to commit, git exits with a status of <code>1</code>. The deploy script takes that as unsuccessful, and quits. I do want to detect <em>actual</em> failures-to-commit, so I can't just give fabric a blanket ignore for <code>git commit</code> failures. How can I allow empty-commit failures to be ignored so that deploy can continue, but still catch errors caused when a real commit fails?</p>

<pre><code>def commit():
    local(""git add -p &amp;&amp; git commit"")
</code></pre>
","36","5814","<python><git><fabric>"
"7772190","1","Passing ssh options to git clone","<p>I'm trying to run <code>git clone</code> without ssh checking the repository host's key. I can do it from ssh like that:</p>

<pre><code>ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no user@host
</code></pre>

<p>Is there any way to pass the same ssh options to the git clone command?</p>

<p>Edit: There is a restriction that I can't modify <code>~/.ssh/config</code> or any other files on that machine.</p>
","32","13896","<git><ssh>"
"1519006","1","How do you create a remote Git branch?","<p>I created a local branch which I want to 'push' upstream. There is a similar question here on Stack Overflow on how to track a newly created remote branch. </p>

<p>However, my workflow is slightly different. <strong>First</strong> I want to create a local branch, and I will only push it upstream when I'm satisfied and want to share my branch.</p>

<ul>
<li>How would I do that? (my google searches did not seem to come up with anything).</li>
<li>How would I tell my colleagues to pull it from the upstream repository?</li>
</ul>

<p><strong>UPDATE With Git 2.0 there is a simpler answer</strong> I have written below: <a href=""http://stackoverflow.com/a/27185855/109305"">http://stackoverflow.com/a/27185855/109305</a></p>
","1868","978735","<git><branch><git-branch>"
"8124411","1","Change Git stash message","<p>I have a stash saved for the future that I want to give a meaningful name. While it's possible to pass a message as argument to <code>git stash save</code>, is there a way to add a message to an existing stash?</p>
","40","4655","<git><git-stash>"
"12538130","1","Can't clone a github repo on Linux via HTTPS","<p>I'm trying to do a simple <code>git clone https://github.com/org/project.git</code> on a CentOS box but get:</p>

<blockquote>
  <p>error: The requested URL returned error: 401 while accessing
  <a href=""https://github.com/org/project.git/info/refs"">https://github.com/org/project.git/info/refs</a></p>
  
  <p>fatal: HTTP request failed</p>
</blockquote>

<p>It never prompts me for my username/password, just fails.</p>

<p>I can make the exact same call on my Mac no problem- what am I missing?</p>
","47","52704","<linux><git><github>"
"7773181","1","Git keeps prompting me for password","<p>I've been using Git for a while now, but the constant requests for a password are starting to drive me up the wall.</p>

<p>I'm using OSX and Github, and I set up Git and my SSH keys as instructed by GitHub's  <a href=""http://help.github.com/mac-set-up-git/"">Set Up Git page</a> . I've also added the github SSH key to my Mac OSX keychain, as mentioned on <a href=""http://help.github.com/ssh-key-passphrases/"">GitHub's SSH key passphrases page</a> . My public key is registered with Git.</p>

<p>Nevertheless, every time I try to git pull, I have to enter my username and password. Is there something other than an SSH key that I need to set up for this?</p>
","318","134085","<git><github>"
"2600230","1","How to setup a private Git repository on GitHub? Is it even possible?","<p>I intend to share my source code on an invite-only basis to a few dozen users maybe. The source code itself should not be public. Participants are allowed and encouraged to submit their changes. So i need source control, preferably Git, hosted on a public server with private access level for multiple users.</p>

<p>I learned that it is possible to set up private git repositories on GitHub which use https:// links. On GitHub itself such a project does not show up in searches. For participating users the project shows a ""lock"" icon. So there are obviously private repositories, i just don't know how set one up. A lot of tutorials use SSH to set up private repositories but they all require you to have ""your own server"".</p>

<p>I don't care about secure connections when pushing/pulling source code nor do i have trust issues with GitHub. All i care about is private repository with access only to users i invite. Maybe i'm naive and such a solution is only available via commercial hosting (eg Unfuddle, Assembla) but if not, i'd really like to know how it's done!</p>
","54","66910","<git><github>"
"5787937","1","Git status shows files as changed even though contents are the same","<p>I received a git checkout from someone else and am trying to commit the unstaged changes to the local repository. However, a <em>lot</em> (if not every) file appears as <em>modified</em> even though the contents are exactly the same.</p>

<p>I already set <code>core.fileMode</code> to false and also set <code>core.autocrlf</code> to false, without success.</p>

<p>Worth mentioning is that the Git repo I received was from someone using Windows, while I use Linux.</p>

<p><strong>What can I do to commit the <em>actual</em> changes?</strong></p>

<p><strong>EDIT: output of <code>git config -l</code>:</strong></p>

<pre><code>user.name=Aron Rotteveel
user.email=&lt;removed&gt;
color.diff=auto
color.status=auto
color.branch=auto
color.interactive=auto
color.ui=true
color.pager=true
color.branch.current=yellow reverse
color.branch.local=yellow
color.branch.remote=green
color.diff.meta=yellow bold
color.diff.frag=magenta bold
color.diff.old=red bold
color.diff.new=green bold
color.status.added=yellow
color.status.changed=green
color.status.untracked=cyan
core.pager=less -FRSX
core.whitespace=fix,-indent-with-non-tab,trailing-space,cr-at-eol
alias.co=checkout
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
core.hidedotfiles=dotGitOnly
core.autocrlf=false
remote.origin.url=&lt;removed&gt;
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
</code></pre>

<p><strong>Update: added some random example files. These files are just plaintext, so are the easiest to include.</strong></p>

<p>Original files are located here: <a href=""https://gist.github.com/c3c5302430935155ef3d"">https://gist.github.com/c3c5302430935155ef3d</a>. Hexdumps definately indicate that the files are different, but I have no clue what causes this, and how to fix it.</p>

<p>HEAD version:</p>

<pre><code>0000000: 4854 4d4c 2e53 6166 654f 626a 6563 740d  HTML.SafeObject.
0000010: 0a54 5950 453a 2062 6f6f 6c0d 0a56 4552  .TYPE: bool..VER
0000020: 5349 4f4e 3a20 332e 312e 310d 0a44 4546  SION: 3.1.1..DEF
0000030: 4155 4c54 3a20 6661 6c73 650d 0a2d 2d44  AULT: false..--D
0000040: 4553 4352 4950 5449 4f4e 2d2d 0d0a 3c70  ESCRIPTION--..&lt;p
0000050: 3e0d 0a20 2020 2057 6865 7468 6572 206f  &gt;..    Whether o
0000060: 7220 6e6f 7420 746f 2070 6572 6d69 7420  r not to permit 
0000070: 6f62 6a65 6374 2074 6167 7320 696e 2064  object tags in d
0000080: 6f63 756d 656e 7473 2c20 7769 7468 2061  ocuments, with a
0000090: 206e 756d 6265 7220 6f66 2065 7874 7261   number of extra
00000a0: 0d0a 2020 2020 7365 6375 7269 7479 2066  ..    security f
00000b0: 6561 7475 7265 7320 6164 6465 6420 746f  eatures added to
00000c0: 2070 7265 7665 6e74 2073 6372 6970 7420   prevent script 
00000d0: 6578 6563 7574 696f 6e2e 2054 6869 7320  execution. This 
00000e0: 6973 2073 696d 696c 6172 2074 6f0d 0a20  is similar to.. 
00000f0: 2020 2077 6861 7420 7765 6273 6974 6573     what websites
0000100: 206c 696b 6520 4d79 5370 6163 6520 646f   like MySpace do
0000110: 2074 6f20 6f62 6a65 6374 2074 6167 732e   to object tags.
0000120: 2020 596f 7520 7368 6f75 6c64 2061 6c73    You should als
0000130: 6f20 656e 6162 6c65 0d0a 2020 2020 254f  o enable..    %O
0000140: 7574 7075 742e 466c 6173 6843 6f6d 7061  utput.FlashCompa
0000150: 7420 696e 206f 7264 6572 2074 6f20 6765  t in order to ge
0000160: 6e65 7261 7465 2049 6e74 6572 6e65 7420  nerate Internet 
0000170: 4578 706c 6f72 6572 0d0a 2020 2020 636f  Explorer..    co
0000180: 6d70 6174 6962 696c 6974 7920 636f 6465  mpatibility code
0000190: 2066 6f72 2079 6f75 7220 6f62 6a65 6374   for your object
00001a0: 2074 6167 732e 0d0a 3c2f 703e 0d0a 2d2d   tags...&lt;/p&gt;..--
00001b0: 2320 7669 6d3a 2065 7420 7377 3d34 2073  # vim: et sw=4 s
00001c0: 7473 3d34 0d0a                           ts=4..
</code></pre>

<p>Copied version:</p>

<pre><code>0000000: 4854 4d4c 2e53 6166 654f 626a 6563 740a  HTML.SafeObject.
0000010: 5459 5045 3a20 626f 6f6c 0a56 4552 5349  TYPE: bool.VERSI
0000020: 4f4e 3a20 332e 312e 310a 4445 4641 554c  ON: 3.1.1.DEFAUL
0000030: 543a 2066 616c 7365 0a2d 2d44 4553 4352  T: false.--DESCR
0000040: 4950 5449 4f4e 2d2d 0a3c 703e 0a20 2020  IPTION--.&lt;p&gt;.   
0000050: 2057 6865 7468 6572 206f 7220 6e6f 7420   Whether or not 
0000060: 746f 2070 6572 6d69 7420 6f62 6a65 6374  to permit object
0000070: 2074 6167 7320 696e 2064 6f63 756d 656e   tags in documen
0000080: 7473 2c20 7769 7468 2061 206e 756d 6265  ts, with a numbe
0000090: 7220 6f66 2065 7874 7261 0a20 2020 2073  r of extra.    s
00000a0: 6563 7572 6974 7920 6665 6174 7572 6573  ecurity features
00000b0: 2061 6464 6564 2074 6f20 7072 6576 656e   added to preven
00000c0: 7420 7363 7269 7074 2065 7865 6375 7469  t script executi
00000d0: 6f6e 2e20 5468 6973 2069 7320 7369 6d69  on. This is simi
00000e0: 6c61 7220 746f 0a20 2020 2077 6861 7420  lar to.    what 
00000f0: 7765 6273 6974 6573 206c 696b 6520 4d79  websites like My
0000100: 5370 6163 6520 646f 2074 6f20 6f62 6a65  Space do to obje
0000110: 6374 2074 6167 732e 2020 596f 7520 7368  ct tags.  You sh
0000120: 6f75 6c64 2061 6c73 6f20 656e 6162 6c65  ould also enable
0000130: 0a20 2020 2025 4f75 7470 7574 2e46 6c61  .    %Output.Fla
0000140: 7368 436f 6d70 6174 2069 6e20 6f72 6465  shCompat in orde
0000150: 7220 746f 2067 656e 6572 6174 6520 496e  r to generate In
0000160: 7465 726e 6574 2045 7870 6c6f 7265 720a  ternet Explorer.
0000170: 2020 2020 636f 6d70 6174 6962 696c 6974      compatibilit
0000180: 7920 636f 6465 2066 6f72 2079 6f75 7220  y code for your 
0000190: 6f62 6a65 6374 2074 6167 732e 0a3c 2f70  object tags..&lt;/p
00001a0: 3e0a 2d2d 2320 7669 6d3a 2065 7420 7377  &gt;.--# vim: et sw
00001b0: 3d34 2073 7473 3d34 0a                   =4 sts=4.
</code></pre>
","47","37224","<git>"
"5788037","1","Recover from git reset --hard?","<p>Is there any way to recover uncommitted changes to the working directory from a <code>git reset --hard HEAD</code>? </p>
","76","27817","<git>"
"9810050","1","git tag vs. release/beta branches?","<p>I've been using git for about a year and would like to use tagging to, well, tag commits at different versions. I've found lots of info on the commands to use to work with tags, but what I'd like to know is why use tagging at all if I can just create a new branch called ""1.1.0"" and not have to cloud my mind with a whole new set of git commands?</p>

<p>There has got to be a lot of good reasons for tagging rather than branching but I'd like to know what those advantages are.</p>
","47","15794","<git><tags><branch>"
"12912985","1","git visual diff between branches","<p>This answer is great for seeing a visual diff between two files that are checked into git:
<a href=""http://stackoverflow.com/questions/255202/how-do-i-view-git-diff-output-with-a-visual-diff-program/949242#949242"">How do I view &#39;git diff&#39; output with a visual diff program?</a> </p>

<p>However, I'd like to see a visual diff between two branches. So far, my best bet seems to be: </p>

<pre><code>git diff --name-status master dev
</code></pre>

<p>which isn't very informative and not very visual.</p>

<p>Is there anything better out there?</p>
","81","85595","<git><diff>"
"1146973","1","How do I revert all local changes in Git managed project to previous state?","<p>I have a project in which I ran <code>git init</code>.
After several commits, I did <code>git status</code> which told me everything was up to date and there were no local changes. </p>

<p>Then I made several consecutive changes and realized I wanted to throw everything away and get back to my original state. Will this command do it for me?</p>

<pre><code>git reset --hard HEAD
</code></pre>
","1002","597150","<git><revert><git-checkout>"
"3040833","1","Stash only one file out of multiple files that have changed with Git?","<p>How can I stash only one of multiple changed files on my branch?</p>
","1469","267924","<git>"
"10176601","1","git diff file against its last change","<p>Is it possible to get git to produce a diff between a specific file as it exists now, and as it existed before the last commit that changed it?</p>

<p>That is, if we know:</p>

<pre><code>$ git log --oneline myfile
123abc Fix some stuff
456def Frobble the foos
789dba Initial commit
</code></pre>

<p>Then <code>git diff 456def myfile</code> shows the last change to myfile. Is is possible to do the same without the knowledge produced by the <code>git log</code>; what changed in 123abc? </p>
","105","79674","<git>"
"10176875","1","Add .gitignore to gitignore","<p>Is it possible to add the <code>.gitignore</code> file to <code>.gitignore</code> itself?</p>

<pre><code>.gitignore
</code></pre>

<p>Doesn't work though</p>

<p>I don't want to see it in edited files</p>
","39","13918","<git><gitignore>"
"20243214","1","How to change the license for a project at Github?","<p>I have created a simple list API in C and I want to release it via Github. I am not yet sure which license to choose, as MIT and GPL seem to be good for me.</p>

<p>Is there any way to change the license after the creation of the repository?</p>

<p><em>As a sidenote: What can help me to choose a licensing model?</em></p>
","46","13799","<git><api><github><licensing>"
"492558","1","Removing multiple files from a Git repo that have already been deleted from disk","<p>I have a Git repo that I have deleted four files from using <code>rm</code> (<strong>not</strong> <code>git rm</code>), and my Git status looks like this:</p>

<pre><code>#    deleted:    file1.txt
#    deleted:    file2.txt
#    deleted:    file3.txt
#    deleted:    file4.txt
</code></pre>

<p>How do I remove these files from Git without having to manually go through and add each file like this:</p>

<pre><code>git rm file1 file2 file3 file4
</code></pre>

<p>Ideally, I'm looking for something that works in the same way that <code>git add .</code> does, if that's possible.</p>
","977","297145","<git><git-commit><git-add><git-rm>"
"3080509","1","List Git commits not pushed to the origin yet","<blockquote>
  <p><strong>This question already has answers here:</strong><br>
  <a href=""http://stackoverflow.com/questions/2016901/viewing-unpushed-git-commits"">Viewing Unpushed Git Commits</a>  </p>
</blockquote>



<p>How do I list all commits which have not been pushed to the origin yet?</p>

<p>Alternatively, how to determine if a commit with particular hash have been pushed to the origin already?</p>
","148","96756","<git>"
"3442874","1","In Git, how can I write the current commit hash to a file in the same commit","<p>I'm trying to do a fancy stuff here with Git hooks, but I don't really know how to do it (or if it's possible).</p>

<p>What I need to do is: in every commit I want to take its hash and then update a file in the commit with this hash.</p>

<p>Any ideas?</p>
","71","17148","<git><hook>"
"9848347","1","Can I make git diff only show the changed file names and line numbers?","<p>Basically, I don't want to see the changed content, just the file names and line numbers.</p>
","77","32431","<git><git-diff>"
"5097456","1","Throw away local commits in git","<p>Due to some bad cherry-picking, my local git repository is currently 5 commits ahead of the origin, and not in a good state. I want to get rid of all these commits and start over again.</p>

<p>Obviously, deleting my working directory and re-cloning would do it, but downloading everything from github again seems like overkill, and not a good use of my time.</p>

<p>Maybe <code>git revert</code> is what I need, but I don't want to end up <em>10</em> commits ahead of the origin (or even 6), even if it does get the code itself back to the right state. I just want to pretend the last half-hour never happened.</p>

<p>Is there a simple command that will do this? It seems like an obvious use case, but I'm not finding any examples of it.</p>
","468","205775","<git>"
"2688251","1","What is the difference between `git fetch origin` and `git remote update origin`?","<p>In response to <a href=""http://stackoverflow.com/questions/2680426/how-to-pull-one-commit-at-a-time-from-a-remote-git-repository"">a question about pulling one commit at a time from a git repository</a>, I was recommended to use <code>git remote update</code> instead of <code>git fetch</code>.  I have read both man pages but cannot say I understood either in its entirety.</p>

<p>Can anyone explain to me how <code>git fetch origin</code> and <code>get remote update origin</code> behave differently?</p>
","93","32394","<git>"
"3496037","1","How to specify which SSH key to use within git for git push in order to have gitorious as a mirror?","<p>I have a project hosted on git.debian.org (alioth) and I'd like to configure a post-receive hook to update a mirror of the repository on <a href=""http://gitorious.org"">http://gitorious.org</a></p>

<p>I suppose I'll have to use <code>git push --mirror gitorious</code></p>

<p>Now, I'll need to have Alioth authorized on gitorious for the push to succeed. How do I do that?</p>

<p>I suppose I need to configure a user on gitorious and create a ssh key for it. And then when I do the git push in the post-receive hook, make sure this ssh key is used.</p>

<p>I could use a <code>~/.ssh/config</code> but the problem is that many users can push on alioth, and everyone would have to log in and configure the <code>~/.ssh/config</code>. Instead, I'd like to have a command line option or an environment variable to tell ssh which key to use. Can I do that?</p>

<p>Also, do you have other ideas how mirroring can be achieved? And, is it possible to configure it the other way around (gitorious pushing on alioth)?</p>
","36","31269","<git><hook><mirroring><git-push><gitorious>"
"2689265","1","Can git undo a checkout of unstaged files","<p>I accidentially discard my changes on files in my local working tree via git checkout. The files aren't staged at this time. Is it posible to ""undo"" this checkout?</p>
","73","29259","<git>"
"571232","1","SVN:externals equivalent in GIT?","<p>I have two SVN projects in use from another SVN using <a href=""http://svnbook.red-bean.com/en/1.0/ch07s03.html"">svn:externals</a>. </p>

<p>How can I have the same repository layout structure in GIT?</p>
","132","45602","<svn><git>"
"2712421","1","R and version control for the solo data analyst","<p>Many data analysts that I respect use version control.
For example: </p>

<ul>
<li><a href=""http://github.com/hadley/"">http://github.com/hadley/</a></li>
<li>See comments on <a href=""http://permut.wordpress.com/2010/04/21/revision-control-statistics-bleg/"">http://permut.wordpress.com/2010/04/21/revision-control-statistics-bleg/</a></li>
</ul>

<p>However, I'm evaluating whether adopting a version control system such as git would be worthwhile.</p>

<p><b>A brief overview:</b>
I'm a social scientist who uses R to analyse data for research publications.
I don't currently produce R packages.
My R code for a project typically includes a few thousand lines of code for data input, cleaning, manipulation, analyses, and output generation.
Publications are typically written using LaTeX.</p>

<p>With regards to version control there are many benefits which I have read about, yet they seem to be less relevant to the solo data analyst.</p>

<ul>
<li><b>Backup:</b> I have a backup system already in place. </li>
<li><b>Forking and rewinding:</b> I've never felt the need to do this, 
   but I can see how it could be useful (e.g., you are preparing multiple 
  journal articles based on the same dataset; you are preparing a report 
  that is updated monthly, etc)</li>
<li><b>Collaboration:</b> Most of the time I am
analysing data myself, thus, I
wouldn't get the collaboration
benefits of version control.</li>
</ul>

<p>There are also several potential costs involved with adopting version control:</p>

<ul>
<li>Time to evaluate and learn a version control system</li>
<li>A possible increase in complexity over my current file management system</li>
</ul>

<p>However, I still have the feeling that I'm missing something.
General guides on version control seem to be addressed more towards computer scientists than data analysts.</p>

<p>Thus, specifically <b>in relation to data analysts</b> in circumstances similar to those listed above:</p>

<ol>
<li>Is version control worth the effort?</li>
<li>What are the main pros and cons of adopting version control? </li>
<li>What is a good strategy for getting started with version control
 for data analysis with R (e.g., examples, workflow ideas, software, links to guides)?</li>
</ol>
","120","26919","<git><version-control><r>"
"12961514","1","How to use bitbucket and github at the same time for one project","<p>I have one repository in which I want to keep it in both bitbucket and github. Is it viable to make my respo. hosted by both and when I push my respo. it'll be uploaded to both? Or in git structure is it a must to use one host for each respo folder?</p>
","38","9520","<git><github><bitbucket>"
"12961752","1","GIT merge error ""commit is not possible because you have unmerged files""","<p>so I forgot to pull my code before editing it and then when I committed the new code and tried to push, I got the error push is not possible, at that point I did a ""git pull"" which made some files with conflict highlighted. I removed the conflicts but I don't what to do from here. </p>

<p>I tried to git commit again but it says ""commit is not possible because you have unmerged files""</p>
","46","51311","<git><git-merge>"
"3497123","1","Run git pull over all subdirectories","<p>How can I update  multiple git repositories from their shared parent's directory without <code>cd</code>'ing into each repo's root directory? I have the following which are all separate git repositories (<strong>not</strong> submodules):</p>

<pre><code>/plugins/cms
/plugins/admin
/plugins/chart
</code></pre>

<p>I want to update them all at once or at least simplify my current workflow:</p>

<pre><code>cd ~/plugins/admin
git pull origin master
cd ../chart
git pull
</code></pre>

<p>etc.</p>
","71","19894","<git><bash>"
"5889878","1","Color in git-log","<p>When you run <code>git log --decorate --pretty=oneline</code> the output will have entries like <code>(HEAD, refs/published/master, master)</code> with coloration.</p>

<p>I also have the following in my gitconfig:</p>

<pre><code>[color ""branch""]
    current = yellow reverse
    local = yellow
    remote = green
</code></pre>

<p>How do you replicate those colors when doing a custom format like the following?</p>

<pre><code>git log --decorate --stat --graph --pretty=format:""%d %Cgreen%h%Creset (%ar - %Cred%an%Creset), %s%n""
</code></pre>
","78","24349","<git><git-log>"
"572549","1","Difference between ""git add -A"" and ""git add .""","<p>The command <code>git add [--all|-A]</code> appears to be identical to <code>git add .</code>. Is this correct? If not, how do they differ?</p>
","1562","737822","<git><git-add>"
"8223103","1","Merge up to a specific commit","<p>I created a new branch named <code>newbranch</code> from the <code>master</code> branch in git. Now I have done some work and want to merge <code>newbranch</code> to <code>master</code>; however, I have made some extra changes to <code>newbranch</code> and I want to merge <code>newbranch</code> up to the fourth-from-the-last commit to <code>master</code>.</p>

<p>I used <code>cherry-pick</code> but it shows the message to use the right options:</p>

<pre><code>git checkout master    
git cherry-pick ^^^^HEAD newbranch
</code></pre>

<p>Can I use git <code>merge</code> to do it instead?</p>

<pre><code>git merge newbranch &lt;commitid&gt;
</code></pre>
","146","41922","<git><git-merge><git-cherry-pick>"
"572893","1","Cloning a Non-Standard Svn Repository with Git-Svn","<p>I'm relatively new to Git, but I've found it so easy to work with at home that I'd like to use it at work where our projects are stored in Svn repositories. Unfortunately, the repositories are slightly non-standard and I'm having trouble getting them cloned. Sure, they all have trunk, branches/ and tags/, but branches/ and tags/ have subdirectories before hitting the <em>real</em> project directories:</p>

<pre><code>trunk/
branches/maintenance/release1
branches/maintenance/release2
...
branches/development/feature1
branches/development/feature2
...
tags/build/build1
tags/build/build2
...
tags/release/release1
tags/release/release2
</code></pre>

<p>After cloning:</p>

<pre><code>$ git svn clone -s --prefix=svn/ https://mydomain.com/svnproject
$ git branch -r
  development
  development@1340
  maintenance
  maintenance@1340
  tags/build
  tags/build@1340
  tags/release
  tags/release@1340
  trunk
  trunk@1340 
</code></pre>

<p>I get none of the actual project branches or tags. I actually need to be able to work on the trunk, one maintenance branch and one development branch. I've tried this approach in addition to several hacks at modifying the config, but nothing is working for me.</p>

<p>Is there any way I can get the key components of my non-standard Svn project into a local git repository so that I can easily move between them?</p>

<p>Many thanks.</p>

<p><strong>UPDATE: I should add that I can't do a wholesale switch to Git (yet). There are other team members involved and an international presence. The logistics of the transition are more than I'm willing to undertake until I'm much more comfortable with Git; as I mentioned, I'm still pretty new. I've barely scratched the surface of its capabilities.</strong></p>
","34","14699","<svn><git><git-svn><clone>"
"5167957","1","Is there a better way to find out if a local git branch exists?","<p>I am using the following command to find out if a <em>local</em> git branch with <code>branch-name</code> exists in my repository. Is this correct? Is there a better way?</p>

<p>Please note that I am doing this inside a script. For this reason I'd like to stay away from porcelain commands if possible. </p>

<pre><code>git show-ref --verify --quiet refs/heads/&lt;branch-name&gt;
# $? == 0 means local branch with &lt;branch-name&gt; exists. 
</code></pre>

<p><strong>Update</strong></p>

<p>Turns out there is <a href=""http://stackoverflow.com/a/28776049/140185"">another way</a>. Thanks <a href=""http://stackoverflow.com/users/1442899/jhuynh"">@jhuynh</a>. </p>

<pre><code>git rev-parse --verify &lt;branch_name&gt;
# $? == 0 means local branch with &lt;branch-name&gt; exists.
</code></pre>
","79","22388","<git><git-branch><git-commands>"
"1192180","1","Deleting a badly named git branch","<p>I know this isn't strictly a programming question, but it is related to git. I accidentally have created a branch in git called <code>--track</code> (I got the order of options wrong when merging a remote branch)</p>

<p>The regular command doesn't work:</p>

<pre><code>git branch -D ""--track""  
</code></pre>

<p>I have tried to escape with quotes and backward slashes, however neither work.</p>

<p>Any ideas?</p>
","42","5025","<git><git-branch>"
"634546","1","Git merge reports ""Already up-to-date"" though there is a difference","<p>I have a git repository with 2 branches: master and test.</p>

<p>There are differences between master and test branches.</p>

<p>Both branches have all changes committed.</p>

<p>If I do:</p>

<pre>
git checkout master<br>
git diff test
</pre>

<p>A screen full of changes appears showing the differences. I want to merge the changes in the test branch and so do:</p>

<pre>git merge test</pre>

<p>But get the message ""Already up-to-date""</p>

<p>However, examining files under each different branch clearly shows differences.</p>

<p>What's the problem here and how do I resolve it?</p>
","100","42758","<git><merge>"
"3082445","1","Where does Git store files?","<p>I just ran the following commands on my <a href=""http://en.wikipedia.org/wiki/Ruby_on_Rails"">Ruby on Rails</a> project:</p>

<pre><code>git init
git add .
git commit -a -m 'Initial'
</code></pre>

<p>Where does <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> actually store this repository? (It's on my local machine, but where?)</p>
","39","42011","<git>"
"15034390","1","How to create a new (and empty!) ""root"" branch?","<p>I would like to define a new ""root"" branch in this git repository.  By ""root"" branch I mean a branch that is entirely independent of all the other branches in the repository<sup>1</sup>.</p>

<p>Unfortunately, even the commit (let's call it <code>A</code>) at the very base of the repo's commit tree contains a lot of files (this was a repository that was initialized on an already fairly mature project).</p>

<p>This means that even if I gave <code>A</code> as the new branch's <code>&lt;start-point&gt;</code>, this new branch would not start from a ""clean slate"", but rather it would contain all the files that were committed in <code>A</code>.</p>

<p>Is there some way I can create a completely bare branch in this repository, with <code>&lt;start-point&gt;</code> as close to <code>A</code> as possible?</p>

<hr>

<p><sup>1</sup>BTW, this is <strong>not</strong> equivalent to creating a new repo.  Separate repos would be less convenient for a lot of reasons.</p>

<hr>

<p><strong>EDIT</strong>: OK, this is what I did, based on <strong><em>vcsjones</em></strong>' answer:</p>

<pre><code># save rev of the current earliest commit
OLDBASE=$(git rev-list --max-parents=0 HEAD)

# create a new orphan branch and switch to it
git checkout --orphan newbranch
# make sure it's empty
git rm -rf .

# create a new empty commit in the new branch, and
# save its rev in NEWBASE
git commit --allow-empty -m 'base commit (empty)'
NEWBASE=$(git rev-list HEAD)

# specify $NEWBASE as the new parent for $OLDBASE, and
# run filter-branch on the original branch
echo ""$OLDBASE $NEWBASE"" &gt; .git/info/grafts
git checkout master
git filter-branch

# NOTE: this assumes that the original repo had only one
# branch; if not, a git-filter-branch -f &lt;branch&gt; command
# need to be run for each additional branch.

rm .git/info/grafts
</code></pre>

<p>Although this procedure is a bit involved, the end result is an <strong><em>empty</em></strong> base commit that can serve as the <code>&lt;start-point&gt;</code> for any new ""clean-slate branch""; all I'd need to do then is</p>

<pre><code>git checkout -b cleanslate $(git rev-list --max-parents=0 HEAD)
</code></pre>

<p>In the future I will always create new repositories like this:</p>

<pre><code>git init
git commit --allow-empty -m 'base commit (empty)'
</code></pre>

<p>...so that the first commit is <strong>empty</strong>, and always available for starting a new independent branch.  (This would be, I know, a very rarely needed facility, but it is quite effortless to make it readily available.)</p>
","57","13272","<git>"
"7555551","1","Adding files to a GitHub repository","<p>How do I add files to my GitHub repository? I'm using Windows and all my project files are in one folder and I just need to upload it to my repo.</p>
","50","108257","<windows><git><github>"
"10248137","1","Git: How to list commits on this branch but not from merged branches","<p>Suppose your git commit history looks like this:</p>

<pre><code>A---B---C---D---E---F master
     \         /
      X---Y---Z topic
</code></pre>

<p>Is it possible to have git list only the commits on master, A-F? In other words, if the commit was on a merged-in branch, I don't want it show.</p>
","44","13222","<git><branch><git-branch><git-log>"
"1750997","1","Eclipse git checkout (aka, revert)","<p>Is it possible to do the equivalent of <code>git checkout</code> from within Eclipse using the EGit plugin?</p>

<p>I have a file that's been modified. I want to discards the changes and revert the file back to what's in the source repository. In Subversion this is called revert. In git the equivalent is checkout.</p>

<p>I can't find any menu item under Team that looks like checkout or revert. I'm using EGit 0.6.0.</p>
","122","55354","<eclipse><git><eclipse-plugin><egit>"
"13059991","1","update package.json version automatically","<p>Before I do a small release and tag it, I'd like to update the package.json to reflect the new version of the program.</p>

<p>Is there a way to edit the file <code>package.json</code> automatically?</p>

<p>Would using a <code>git pre-release hook</code> help?</p>
","50","19116","<git><node.js><npm><githooks>"
"10564","1","How can I set up an editor to work with Git on Windows?","<p>I'm trying out <strong>Git on Windows</strong>. I got to the point of trying ""git commit"" and I got this error:</p>

<blockquote>
  <p>Terminal is dumb but no VISUAL nor
  EDITOR defined. Please supply the
  message using either -m or -F option.</p>
</blockquote>

<p>So I figured out I need to have an environment variable called EDITOR. No problem. I set it to point to Notepad. That worked, almost. The default commit message opens in Notepad. But Notepad doesn't support bare line feeds. I went out and got <a href=""http://notepad-plus.sourceforge.net/uk/site.htm"">Notepad++</a>, but I can't figure out how to get Notepad++ set up as the <code>%EDITOR%</code> in such a way that it works with Git as expected.</p>

<p>I'm not married to Notepad++. At this point I don't mind what editor I use. I just want to be able to <strong>type commit messages in an editor</strong> rather than the command line (with <code>-m</code>).</p>

<p>Those of you using Git on Windows: What tool do you use to edit your commit messages, and what did you have to do to make it work?</p>
","370","155795","<windows><git><editor>"
"23907","1","How can I graph the Lines of Code history for git repo?","<p>Basically I want to get the number of lines-of-code in the repository after each commit.</p>

<p>The only (really crappy) ways I have found is to use git filter-branch to run ""wc -l *"", and a script that run git reset --hard on each commit, then ran wc -l</p>

<p>To make it a bit clearer, when the tool is run, it would output the lines of code of the very first commit, then the second and so on.. This is what I want the tool to output (as an example):</p>

<pre><code>me@something:~/$ gitsloc --branch master
10
48
153
450
1734
1542
</code></pre>

<p>I've played around with the ruby 'git' library, but the closest I found was using the .lines() method on a diff, which seems like it should give the added lines (but does not.. it returns 0 when you delete lines for example)</p>

<pre><code>require 'rubygems'
require 'git'

total = 0
g = Git.open(working_dir = '/Users/dbr/Desktop/code_projects/tvdb_api')


last = nil
g.log.each do |cur|
  diff = g.diff(last, cur)
  total = total + diff.lines
  puts total
  last = cur
end
</code></pre>
","34","12068","<python><ruby><git><lines-of-code><sloc>"
"3124601","1","Git: getting changes from another branch","<p>I have a project under git. I'd like to start a new branch to add a major new feature. Under the main branch, I'll continue to add bug fixes and minor features. At regular intervals I'd like to pull the changes from the main branch into my ""major new feature"" branch. What's the best way to do this? Eventually, I'll merge the ""major new feature"" branch into the main branch.   </p>
","35","29708","<git>"
"1753070","1","git ignore files only locally","<p>Can I ignore files locally without polluting the global git config for everyone else? I have untracked files that are spam in my git status but I don't want to commit git config changes for every single little random untracked file I have in my local branches.</p>
","562","120700","<git><ignore><gitignore>"
"6000919","1","How to check the differences between local and github before the pull","<p>Before using pull, I want to check if there are any differences between my local and github master.</p>

<p>How can I do it?</p>

<p>Thanks in advance.</p>
","43","40532","<git><github>"
"1279533","1","Is there a way to tell git to only include certain files instead of ignoring certain files?","<p>My programs generally generate huge output files (~1 GB) which I do not want to be backing up to the git repository.  So instead of being able to do</p>

<pre><code>git add .
</code></pre>

<p>I have to do something like</p>

<pre><code>git add *.c *.cc *.f *.F *.C *.h *.cu
</code></pre>

<p>which is a little bit cumbersome...</p>

<p>I feel fairly confident I could write a quicky perl script ls the directory contents into .gitignore and then remove files based on a .gitinclude (or some similar name) file, but that seems a little too hackish.  Is there a better way?</p>
","83","24345","<git><gitignore>"
"3611256","1","Forking vs. Branching in GitHub","<p>I'd like to know more about the advantages and disadvantages of forking a github project vs. creating a branch of a github project.</p>

<p>Forking makes my version of the project more isolated from the original one because I don't have to be on the collaborators list of the original project. Since we're developing a project in house, there is no problem in adding people as collaborators. But, we'd like to understand if forking a project would make merge changes back to the main project harder. That is, I wonder if branching makes keeping the two projects in sync easier. In other words, is it easier to merge and push changes between my version of the main project and the main project when I branch? </p>
","134","75152","<git><branch><github>"
"783731","1","Git merge flattening","<p>If I am working in multiple branches on a single feature, I use <code>git pull branch1 branch2 branch3</code> to pull all the changes into my master branch. However, all the commit logs of each branch are copied as well. How do I flatten the commit log down to a single message?</p>
","37","27352","<git><git-pull><git-push><git-merge>"
"783811","1","Getting git to work with a proxy server","<p>How do I get git to use a proxy server?</p>

<p>I need to check out code from a git server, it shows ""Request timed out"" every time. How do I get around this? </p>

<p>Alternatively, how can I set a proxy server?</p>
","424","410493","<git><proxy>"
"783906","1","Git under windows: MSYS or Cygwin?","<p>I plan to migrate my projects over to git, and I'm currently wondering which is the best and / or most stable option under windows.</p>

<p>From what I gather I basically have 2.5 options:</p>

<ol>
<li><a href=""http://code.google.com/p/msysgit/"">MSYSgit</a></li>
<li>git under <a href=""http://www.cygwin.com/"">Cygwin</a></li>
<li>(aka 2.5) MSYSgit from a Cygwin prompt (given that Cygwin git is already installed).</li>
</ol>

<p>Note: IMO Cygwin in itself is a big plus as you can have access to pretty much all the *nix command line tools, as where with MSYSgit bash, you only have access to a rather small subset of these tools.</p>

<p>Given that, what option would you suggest?</p>
","77","55238","<git><cygwin><msysgit><dvcs>"
"2850369","1","Why does git fast-forward merges by default?","<p>Coming from mercurial, I use branches to organize features.
Naturally, I want to see this work-flow in my history as well.</p>

<p>I started my new project using git and finished my first feature. When merging the feature, I realized git uses fast-forward, i.e. it applies my changes directly to the master branch if possible and forgets about my branch.</p>

<p>So to think into the future: I'm the only one working on this project. If I use git's default approach (fast-forward merging), my history would result in one giant master branch.
Nobody knows I used a separate branch for every feature, because in the end I'll have only that giant master branch. Won't that look unprofessional?</p>

<p>By this reasoning, I don't want fast-forward merging and can't see why it is the default. What's so good about it?</p>
","544","108529","<git><git-branch><git-merge><fast-forward>"
"2364147","1","How to get just one file from another branch","<p>I am using git and working on master branch. This branch has a file called <code>app.js</code>.</p>

<p>I have an <code>experiment</code> branch in which I made a bunch of changes and tons of commits. Now I want to bring all the changes done only to <code>app.js</code> from <code>experiment</code> to <code>master</code> branch.</p>

<p>How do I do that?</p>

<p>Once again I do not want a merge. I just want to bring all the changes in <code>app.js</code> from <code>experiment</code> branch to <code>master</code> branch.</p>
","379","122863","<git><git-checkout>"
"7199496","1","Git Checkout warning: unable to unlink files, permission denied","<p>I am aware that there are similar issues about git relating to the 'unable to unlink' warning, but I have not been able to use them.</p>

<p>The main difference is that this happened when I have not been dealing with submodules in any way (I have never dealt with them before).  I created a branch called 'upgrade', deleted my old framework files, and copied in the new ones.  I used git add -A, then committed everything.  When I tried to checkout the trunk branch, it responded with the following errors:</p>

<pre><code>warning: unable to unlink requirements/views/sk/index.php: Permission denied
warning: unable to unlink requirements/views/sv/index.php: Permission denied
warning: unable to unlink requirements/views/zh/index.php: Permission denied
warning: unable to unlink requirements/views/zh_cn/index.php: Permission denied
warning: unable to unlink requirements/views/zh_tw/index.php: Permission denied
</code></pre>

<p>...etc.  There are hundreds of them.</p>

<p>At first I thought this was simply a permissions problem, and so I added group write permissions to the entire requirements directory recursively, but there was no change.</p>

<p>Edit: As suggested in an answer below, I attempted to do the same thing but with everything else closed.  I had no more luck than before.</p>

<p>This issue is particularly debilitating as I cannot move to trunk to get back to normal development.</p>

<p>Thanks a lot,</p>

<p>Daniel Moniz</p>
","51","61593","<git>"
"3207029","1","Git unmerged path issue","<p>I merged branch dog into animal.  When I go to commit, I get the following:</p>

<pre><code>Unmerged paths:
(use ""git reset HEAD &lt;file&gt;..."" to unstage)
(use ""git add &lt;file&gt;..."" to mark resolution
both deleted:       ../public/images/originals/dog.ai
added by them:      ../public/images/original_files/dog.ai
</code></pre>

<p>To make a long story short, I had different directory names and file names in each branch.  Animal branch has the changes that I want.</p>

<p>When I go to reset the head, it doesn't work.  And when I go to take any other git action (remove, checkout, etc), I get a path not found error.</p>

<p>What commands do I need to execute?</p>
","39","55914","<git><merge>"
"3670355","1","Can you delete multiple branches in one command with Git?","<p>I'd like to clean up my local repository which has a ton of old branches, let's say 3.2, 3.2.1, 3.2.2, etc.</p>

<p>I was hoping for a sneaky way to remove a lot of them at once and since they mostly follow a dot release convention, I thought maybe there was a shortcut to say:</p>

<pre><code>git branch -D 3.2.*
</code></pre>

<p>and kill all 3.2.x branches</p>

<p>I tried that command and it of course didn't work...  :(</p>
","101","26135","<git>"
"10032461","1","Git keeps asking me for my ssh key passphrase","<p>I created keys as instructed in the github tutorial, registered them with github, and tried using ssh-agent explicitly — yet git continues to ask me for my passphrase every time I try to do a pull or a push.</p>

<p>What could be the cause?</p>
","104","36166","<git><github>"
"20038056","1","Undo Git Stash Pop","<p>I did a git stash pop and now I have a ton of conflicts. I had committed all my recent code before the <code>git stash pop</code>, so is there a way to go back to the last commit and get rid of all the conflicts and code the <code>git stash pop</code> injected?</p>
","52","24668","<git>"
"137102","1","What's the best visual merge tool for Git?","<p>Title says it. What's the best tool for viewing and editing a merge in Git? I'd like to get a 3-way merge view, with ""mine"", ""theirs"" and ""ancestor"" in separate panels, and a fourth ""output"" panel.</p>

<p>Also, instructions for invoking said tool would be great. (I still haven't figure out how to start kdiff3 in such a way that it doesn't give me an error)</p>

<p>edit: My OS is Ubuntu.</p>
","351","202706","<git><version-control><merge>"
"161813","1","Fix merge conflicts in Git?","<p>Is there a good way to explain how to resolve merge conflicts in Git?</p>
","3043","1338619","<git><git-merge><merge-conflict-resolution><git-conflict-resolution>"
"161928","1","What are .git/info/grafts for?","<p>I am trying to figure out what is the 'grafts' in the Git.</p>

<p>For example, in one of the latest comments <a href=""http://web.archive.org/web/20080930112610/http://log.emmanuelebassi.net/archives/2007/09/when-the-levee-breaks/"">here</a>, Tobu suppose to use <b>git-filter-branch</b> and <b>.git/info/grafts</b> to join two repositories.</p>

<p>But I don't understand why I need these <em>grafts</em>? It seems, that all work without last two commands.</p>
","40","9507","<git><version-control>"
"835501","1","How do you stash an untracked file?","<p>I have changes to a file, plus a new file, and would like to use git stash to put them away while I switch to another task.  But git stash by itself stashes only the changes to the existing file; the new file remains in my working tree, cluttering up my future work.  How do I stash this untracked file?</p>
","573","112506","<git><git-stash>"
"14486122","1","How does git merge after cherry-pick work?","<p>Let's imagine that we have a <code>master</code> branch.</p>

<p>Then we create a <code>newbranch</code></p>

<pre><code>git checkout -b newbranch
</code></pre>

<p>and make two new commits to <code>newbranch</code>: <em>commit1</em> and <em>commit2</em></p>

<p>Then we switch to master and make <code>cherry-pick</code></p>

<pre><code>git checkout master
git cherry-pick hash_of_commit1
</code></pre>

<p>Looking into <code>gitk</code> we see that <em>commit1</em> and its cherry-picked version have different hashes, so technically they are two different commits.</p>

<p>Finally we merge <code>newbranch</code> into <code>master</code>:</p>

<pre><code>git merge newbranch
</code></pre>

<p>and see that these two commits with different hashes were merged without problems although they imply that the same changes should be applied twice, so one of them should fail.</p>

<p>Does git really do a smart analysis of commit's content while merging and decide that changes shouldn't be applied twice or these commits are marked internally as linked together?</p>
","71","9258","<git><git-merge><cherry-pick>"
"3207728","1","Retaining file permissions with Git","<p>I want to version control my web server as described in  <a href=""http://stackoverflow.com/questions/3154227/version-control-for-my-web-server"">Version control for my web server</a>, by creating a git repo out of my <code>/var/www directory</code>.  My hope was that I would then be able to push web content from our dev server to github, pull it to our production server, and spend the rest of the day at the pool.  </p>

<p>Apparently a kink in my plan is that Git won't respect file permissions (I haven't tried it, only reading about it now.)  I guess this makes sense in that different boxes are liable to have different user/group setups.  But if I wanted to force permissions to propagate, knowing my servers are configured the same, do I have any options? Or is there an easier way to approach what I'm trying to do?</p>
","54","59169","<linux><git><file-permissions>"
"190431","1","Is git-svn dcommit after merging in git dangerous?","<p>My motivation for trying out git-svn is the effortless merging and branching. Then I noticed that man git-svn(1) says: </p>

<blockquote>
  <p>Running git-merge or git-pull is NOT recommended on a branch you plan
  to dcommit from. Subversion does not represent merges in any
  reasonable or useful fashion; so users using Subversion cannot see any
  merges you've made. Furthermore, if you merge or pull from a git
  branch that is a mirror of an SVN branch, dcommit may commit to the
  wrong branch.</p>
</blockquote>

<p>Does this mean I cannot create a local branch from svn/trunk (or a branch), hack away, merge back into svn/trunk, then dcommit? I understand that svn users will see the same mess that merges in svn pre 1.5.x have always been, but are there any other drawbacks? That last sentence worries me, too. Do people routinely do these kinds of things?</p>
","131","32087","<svn><git><merge><branch><git-svn>"
"15141338","1","Embed git commit hash in a .Net dll","<p>I'm building a C# application, using Git as my version control.</p>

<p>Is there a way to automatically embed the last commit hash in the executable when I build my application?</p>

<p>For example, printing the commit hash to console would look something like:</p>

<pre><code>class PrintCommitHash
{
    private String lastCommitHash = ?? // What do I put here?
    static void Main(string[] args)
    {
        // Display the version number:
        System.Console.WriteLine(lastCommitHash );
    }
}
</code></pre>

<p>Note that this has to be done at <strong>build</strong> time, not <strong>runtime</strong>, as my deployed executable will not have the git repo accessible.</p>

<p>A related question for C++ can be found <a href=""http://stackoverflow.com/questions/13428403/how-to-embed-an-updated-git-hash-into-version-hpp"">here</a>.
<br><br>
<strong>EDIT</strong>
<br><br>
Per @mattanja's request, I'm posting the git hook script I use in my projects. The setup:</p>

<ul>
<li>The hooks are linux shell scripts, which are placed under: <em>path_to_project\.git\hooks</em></li>
<li>If you are using <a href=""http://msysgit.github.io/"">msysgit</a>, the <em>hooks</em> folder already contains some sample scripts. In order to make git call them, remove the '.sample' extension from the script name.</li>
<li>The names of the hook scripts match the event that invokes them. In my case, I modified <em>post-commit</em> and <em>post-merge</em>.</li>
<li>My <em>AssemblyInfo.cs</em> file is directly under the project path (same level as the <em>.git</em> folder). It contains 23 lines, and I use git to generate the 24th.</li>
</ul>

<p>As my linux-shelling a bit rusty, the script simply reads the first 23-lines of <em>AssemblyInfo.cs</em> to a temporary file, echos the git hash to the last line, and renames the file back to <em>AssemblyInfo.cs</em>. I'm sure there are better ways of doing this:</p>

<pre><code>#!/bin/sh
cmt=$(git rev-list --max-count=1 HEAD)
head -23 AssemblyInfo.cs &gt; AssemblyInfo.cs.tmp
echo [assembly: AssemblyFileVersion\(\""$cmt\""\)] &gt;&gt; AssemblyInfo.cs.tmp
mv AssemblyInfo.cs.tmp AssemblyInfo.cs
</code></pre>

<p>Hope this helps.</p>
","36","10999","<c#><git>"
"1817370","1","Using ediff as git mergetool","<p>I would like to be able to use ediff with ""git mergetool"".</p>

<p>I found some patches that alter the source code, which I don't want to do. Instead, I'd like to add ediff support with my .gitconfig.</p>

<p>I know git has builtin support for emerge, but I prefer ediff.</p>

<p>I attempted to add these lines to my .gitconfig:</p>

<pre><code>[mergetool ""ediff""]
    cmd = emacs --eval ""(ediff-merge-files-with-ancestor \""$LOCAL\"" \""$REMOTE\"" \""$BASE\"" nil \""$MERGED\"")""
</code></pre>

<p>But when I try to run this with ""git mergetool --tool=ediff"", I get this:</p>

<pre><code>eval: 1: Syntax error: ""("" unexpected
</code></pre>

<p>What am I doing wrong?</p>
","47","20168","<git><emacs><merge>"
"13114781","1","bower registering local git package","<p>How can I register a local git package in bower?</p>

<p>My current component.json is as follows</p>

<pre><code>{
  ""name"": ""myproject"",
  ""version"": ""1.0.0"",
  ""dependencies"": {
    ""jquery"": ""1.8.0"",
    ""twitter/bootstrap"": ""2.1.1""
  }
}
</code></pre>

<p>However I also would like to add a package I have created at <code>C:/mypackage</code> which is a git repository with versions tagged.
When I do <code>bower install --save C:/mypackage</code> it properly adds it to project but it doesn't add it to my component.json.</p>

<p>I am trying <code>bower register mypackage C:/mypackage</code> but it keeps giving me </p>

<pre><code>bower error Incorrect format
</code></pre>

<p>What am I doing wrong?</p>
","43","29144","<javascript><git><package><bower><bower-register>"
"872565","1","Remove sensitive files and their commits from Git history","<p>I would like to put a Git project on GitHub but it contains certain files with sensitive data (usernames and passwords, like /config/deploy.rb for capistrano).</p>

<p>I know I can add these filenames to <strong>.gitignore</strong>, but this would not remove their history within Git.</p>

<p>I also don't want to start over again by deleting the /.git directory.</p>

<p>Is there a way to remove <strong>all</strong> traces of a particular file in your Git history?</p>
","213","51964","<git><git-commit><git-filter-branch><git-rewrite-history>"
"1817766","1","How to revert to origin's master branch's version of file","<p>I'm in my local computer's master branch of a cloned master-branch of a repo from a remote server.</p>

<p>I updated a file, and I want to revert back to the original version from the remote master branch.</p>

<p>How can I do this?</p>
","116","73012","<git>"
"5324799","1","Git - remove commits with empty changeset using filter-branch","<p>How do I remove commits which have no changeset using git filter-branch?</p>

<p>I rewrote my git history using:</p>

<pre class=""lang-bash prettyprint-override""><code>git filter-branch --tree-filter 'rm -r -f my_folder' -f HEAD
</code></pre>

<p>this worked out well but now I have lots of commits with empty changesets. I would like to remove those commits. Preferably in msysgit.</p>

<p>Rebasing is not really an option because I have over 4000 commits and half of them must be removed.</p>
","51","11219","<git><git-filter-branch>"
"3672073","1","How to merge the current branch into another branch","<p>I have two branches, master and dev. I always work on dev and only check code into the master branch once it's been approved for production use. When I do so, I have to do the following:</p>

<pre><code>git checkout master
git merge dev
git checkout dev
</code></pre>

<p>That's awfully verbose, and since I do it frequently, I'd like to minimize it. Is there any one git command I can use to merge from my current branch dev to the other branch master without having to checkout the master branch first? Something maybe like:</p>

<pre><code>git merge dev to master
</code></pre>

<p>would be awesome. I looked through the git documentation and didn't see anything.</p>
","110","32678","<git><version-control>"
"3672272","1","msysGit vs Git for Windows","<p>I am having trouble determining the <a href=""http://msysgit.github.com/"">difference between msysGit and Git for Windows</a>.  How are they different?  Why would I choose one over the other?</p>
","99","38408","<windows><git><msysgit>"
"222782","1","GIT vs. Perforce- Two VCS will enter... one will leave","<p>So I'm in the process of getting GIT sold at work. First thing I need is to convince everyone that GIT is better at what they're already used to doing. We currently use Perforce. Anybody else go through a similar sale? Any good links/advice?</p>

<p>One of the big wins is that we can work with it disconnected from the network. Another win IMO is the way adds/checkouts are handled. More points are welcome! Also we have about 10-20 devs total.</p>
","85","67024","<git><perforce><process-management>"
"3212485","1","How do I Re-root a git repo to a parent folder while preserving history?","<p>I have a git repo in <code>/foo/bar</code> with a large commit history and multiple branches.</p>

<p>I now want <code>/foo/baz</code> to be in the same repo as <code>/foo/bar</code>, which (I think) means that I need to create a new repo in <code>/foo</code>.  However, I want to preserve history of changes that I've made to <code>/foo/bar</code>.</p>

<p>I first thought of git format-patch followed by apply, but commit messages aren't preserved.</p>
","37","6260","<git>"
"17369254","1","Is there a way to cause git-reflog to show a date alongside each entry?","<p>The git-reflog command doesn't by default show a date alongside each entry, which strikes me as a strange oversight; I think this would be very helpful.</p>

<p>Are there any command-line options, or other tweaks, which can be employed to cause it to show when each reflog entry was added? The <a href=""https://www.kernel.org/pub/software/scm/git/docs/git-reflog.html"">manpage</a> isn't forthcoming...</p>
","65","8627","<git><git-reflog><reflog>"
"21808341","1","Unable to Authenticate with Git Bash to Visual Studio Online","<p>I am unable to run any commands against my remote repository at Visual Studio online because authentication fails.</p>

<p>I am able to do Pulls etc through VS. But only through VS. Not through GIT bash, or any other tool like SourceTree.</p>
","82","18238","<git><visual-studio-2013><vs-team-services>"
"1889559","1","git-diff to ignore ^M","<p>In a project where some of the files contains ^M as newline separators. Diffing these files are apparently impossible, since git-diff sees it as the entire file is just a single line.</p>

<p>How does one diff with the previous version?</p>

<p>Is there an option like ""treat ^M as newline when diffing"" ?</p>

<pre><code>prompt&gt; git-diff ""HEAD^"" -- MyFile.as 
diff --git a/myproject/MyFile.as b/myproject/MyFile.as
index be78321..a393ba3 100644
--- a/myproject/MyFile.cpp
+++ b/myproject/MyFile.cpp
@@ -1 +1 @@
-&lt;U+FEFF&gt;import flash.events.MouseEvent;^Mimport mx.controls.*;^Mimport mx.utils.Delegate
\ No newline at end of file
+&lt;U+FEFF&gt;import flash.events.MouseEvent;^Mimport mx.controls.*;^Mimport mx.utils.Delegate
\ No newline at end of file
prompt&gt;
</code></pre>

<p><hr></p>

<p>UPDATE:</p>

<p>now I have written a script that checks out the latest 10 revisions and converts CR to LF.</p>

<pre><code>require 'fileutils'

if ARGV.size != 3
  puts ""a git-path must be provided""
  puts ""a filename must be provided""
  puts ""a result-dir must be provided""
  puts ""example:""
  puts ""ruby gitcrdiff.rb project/dir1/dir2/dir3/ SomeFile.cpp tmp_somefile""
  exit(1)
end

gitpath = ARGV[0]
filename = ARGV[1]
resultdir = ARGV[2]

unless FileTest.exist?("".git"")
  puts ""this command must be run in the same dir as where .git resides""
  exit(1)
end

if FileTest.exist?(resultdir)
  puts ""the result dir must not exist""
  exit(1)
end
FileUtils.mkdir(resultdir)

10.times do |i|
  revision = ""^"" * i
  cmd = ""git show HEAD#{revision}:#{gitpath}#{filename} | tr '\\r' '\\n' &gt; #{resultdir}/#{filename}_rev#{i}""
  puts cmd 
  system cmd
end
</code></pre>
","184","102840","<git><diff><newline><git-diff>"
"17647936","1","How do I edit an incorrect commit message with TortoiseGit?","<p>How I can edit commit message with tortoiseGIT? The question is very similar to <a href=""http://stackoverflow.com/questions/179123/how-do-i-edit-an-incorrect-commit-message-in-git"">this</a> but I want to do this with TortoiseGit not with console, is it possible?</p>
","43","14860","<git><tortoisegit>"
"8446218","1","How to see an html page on github as a normal rendered html page to see preview in browser, without downloading?","<p>On <a href=""http://github.com"">http://github.com</a> developer keep the html, csss , javascript and images files of the project. How i can see html output in browser?</p>

<p>for example this <a href=""https://github.com/necolas/css3-social-signin-buttons/blob/master/index.html"">https://github.com/necolas/css3-social-signin-buttons/blob/master/index.html</a></p>

<p>when i open this it doesn't show the rendered html of the code of author. it shows the page as a source code.</p>

<p>Is it possible to see as rendered HTML directly? otherwise i always need download the whole zipt to just to see the result</p>
","93","51610","<html><css><git><github><github-pages>"
"914939","1","Simple tool to 'accept theirs' or 'accept mine' on a whole file using git","<p>I don't want a visual merge tool, and I also don't want to have to vi the conflicted file and manually choose the between HEAD (mine) and the imported change (theirs).  Most of the time I either want all of their changes or all of mine.  Commonly this is because my change made it upsteam and is coming back to me through a pull, but may be slightly modified in various places.</p>

<p>Is there a command line tool which will get rid of the conflict markers and choose all one way or another based on my choice?  Or a set of git commands which I can alias myself to do each one.</p>

<pre><code># accept mine
alias am=""some_sequence;of;commands""
alias at=""some_other_sequence;of;commands""
</code></pre>

<p>Doing this is rather annoying.
For 'accept mine' I have tried: </p>

<pre><code>randy@sabotage ~/linus $ git merge test-branch
Auto-merging Makefile
CONFLICT (content): Merge conflict in Makefile
Automatic merge failed; fix conflicts and then commit the result.

randy@sabotage ~/linus $ git checkout Makefile 
error: path 'Makefile' is unmerged

andy@sabotage ~/linus $ git reset --hard HEAD Makefile 
fatal: Cannot do hard reset with paths.
</code></pre>

<p>How am I supposed to get rid of these change markers?</p>

<p>I can do: </p>

<pre><code>git reset HEAD Makefile; rm Makefile; git checkout Makefile
</code></pre>

<p>But this seems rather round about, there must be a better way.  And at this point, I'm not sure if git even thinks the merge happened, so I don't think this necessarily even works.</p>

<p>Going the other way, doing 'accept theirs' is equally messy.
The only way I can figure it out is do:</p>

<pre><code>git show test-branch:Makefile &gt; Makefile; git add Makefile;
</code></pre>

<p>This also gives me a messed up commit message, which has Conflicts: Makefile in it twice.</p>

<p>Can someone please point out how to do the above two actions in a simpler way?  Thanks</p>
","232","101436","<git><merge>"
"2945344","1","How do I select a merge strategy for a git rebase?","<p><code>git-rebase</code> man page mentions <code>-X&lt;option&gt;</code> can be passed to <code>git-merge</code>. When/how exactly?</p>

<p>I'd like to rebase by applying patches with <em>recursive</em> strategy and <em>theirs</em> option (apply whatever sticks, rather than skipping entire conflicting commits). I don't want merge, I want to make history linear.</p>

<p>I've tried:</p>

<pre class=""lang-sh prettyprint-override""><code>git rebase -Xtheirs
</code></pre>

<p>and</p>

<pre class=""lang-sh prettyprint-override""><code>git rebase -s 'recursive -Xtheirs'
</code></pre>

<p>but git rejects <code>-X</code> in both cases.</p>

<hr>

<p><code>git rebase -Xtheirs</code> works in recent versions, except tree conflicts need to be resolved manually. You need to run <code>git rebase -Xtheirs --continue</code> (with <code>-X</code> repeated) after resolving those conflicts.</p>
","61","31750","<git><git-rebase>"
"7293008","1","How to read last commit comment?","<p>Often during a commit (<code>$ git -commit -m """"</code>), I wish to read my last comment to remember what progress I have made. Is there an easy way to directly access the last commit message through command-line? (I'm using Windows.)</p>
","124","41471","<git>"
"953481","1","Find and restore a deleted file in a Git repository","<p>Say I'm in a Git repository. I delete a file and commit that change. I continue working and make some more commits. Then, I find I need to restore that file.</p>

<p>I know I can checkout a file using <code>git checkout HEAD^ foo.bar</code>, but I don't really know when that file was deleted.</p>

<ol>
<li>What would be the quickest way to find the commit that deleted a given filename?</li>
<li>What would be the easiest way to get that file back into my working copy?</li>
</ol>

<p>I'm hoping I don't have to manually browse my logs, checkout the entire project for a given SHA and then manually copy that file into my original project checkout.</p>
","1651","497244","<git><file-io><git-checkout>"
"302089","1","How stable is the git plugin for eclipse?","<p>I was intending to have a play with git, and was wondering if anyone had used the <a href=""http://www.eclipse.org/egit/"">git plugin for eclipse</a></p>

<p>I see it's at version 0.3.1, and was wondering if anyone knew how stable it was / any gotchas?</p>

<hr>

<p>Update:</p>

<p>If you are using a recent version of Eclipse, your Help menu has an 'Eclipse Marketplace...' link. </p>

<p>Enter 'git' in the Find field. This shows me EGit. </p>

<p>This is also very high in the Popular plugins list.</p>

<p>Click install. Much easier than having to add update site locations by hand.</p>
","163","125837","<eclipse><git><version-control>"
"7744049","1","Git: How to rebase to a specific commit?","<p>I'd like to rebase to a specific commit, not to a HEAD of the other branch:</p>

<pre><code>A --- B --- C          master
 \
  \-- D                topic
</code></pre>

<p>to</p>

<pre><code>A --- B --- C          master
       \
        \-- D          topic
</code></pre>

<p>instead of </p>

<pre><code>A --- B --- C          master
             \
              \-- D    topic
</code></pre>

<p>How can I achieve that?</p>
","44","31362","<git><version-control><rebase><git-rebase>"
"954560","1","How does git handle symbolic links?","<p>If I have a file or directory that is a symbolic link and I commit it to a git repo what happens to it?</p>

<p>I would assume that it leaves it as a symbolic link until the file is deleted and then if you pull the file back from an old version it just creates a normal file.</p>

<p>What does it do when I delete the file it references? Does it just commit the dangling link?</p>
","897","169981","<git><version-control><symlink>"
"4924002","1","git - pulling from specific branch","<p>I have cloned a git repository to my dev server and then switched to the dev branch but now I can't do a git pull to update the branch.</p>

<p>How do I update the code on the server ?</p>
","58","68164","<git>"
"9701238","1","Git - how delete file from remote repository","<p>How can I delete file from remote git repository?
I have a file that is just deleted from working copy local repository, and I want delete it from corresponding remote repository</p>
","33","57136","<git>"
"1419498","1","Git nested submodules and dependencies","<p>Let's say I have four projects named <strong>Core</strong>, <strong>A</strong>, <strong>B</strong>, <strong>Super</strong>. The dependency tree is like this:</p>

<pre><code>Super ---&gt; Core
       |-&gt; A -&gt; Core
       |-&gt; B -&gt; Core
</code></pre>

<p>I want each project to be stand-alone, that is, I want to be able to check-out and compile each project on its own (each with its dependencies of course). </p>

<p>I thought about mapping each project to a repository and then referring dependencies with submodules, but I see the following issues with that approach:</p>

<ol>
<li>When checking out <strong>Super</strong> with all its dependencies, I'd end up with three copies of <strong>Core</strong>.</li>
<li>Since submodules are fully independent, each of these three copies could be pointing to different revisions of <strong>Core</strong> and that would be a mess.</li>
</ol>

<p>So... Am I missing something? Did I misunderstand git submodules or misusing them? Is there any other solution to this problem (other than resorting to binary dependencies)?</p>
","38","10127","<git><git-submodules>"
"1419623","1","How to list branches that contain a given commit?","<p>How can I query git to find out which branches contain a given commit? gitk will usually list the branches, unless there are too many, in which case it just says ""many (38)"" or something like that. I need to know the full list, or at least whether certain branches contain the commit.</p>
","547","124418","<git><version-control>"
"15606955","1","How can I make git show a list of the files that are being tracked?","<p>Using command line git, how can I make git show a list of the files that are being tracked in the repository?</p>
","153","43747","<git>"
"6127328","1","How can I delete all git branches which have been merged?","<p>I have many git branches. How do I delete branches which have already been merged? Is there an easy way to delete them all instead of deleting them one by one?</p>
","660","141305","<git><version-control><feature-branch>"
"1994463","1","How to cherry pick a range of commits and merge into another branch","<p>I have the following repository layout:</p>

<ul>
<li>master branch (production)</li>
<li>integration</li>
<li>working</li>
</ul>

<p>What I want to achieve is to cherry pick a range of commits from the working branch and merge it into the integration branch. I pretty new to git and I can't figure out how to exactly do this (the cherry picking of commit ranges in one operation not the merging) without messing the repository up. Any pointers or thoughts on this? Thanks!</p>
","331","151497","<git><git-merge><git-cherry-pick>"
"10147445","1","github: Adding commits to existing pull request","<p>I opened a pull request to <a href=""https://github.com/rails/rails"">rails</a> repo on github by using <strong>Fork &amp; Edit this file</strong> file button.</p>

<p>Now, 
After getting feedback on my PR, I wanted to add some more commits. so here is what I ended by doing</p>

<pre><code>$ git clone git@github.com:gaurish/rails.git #my forked repo
$ git rebase -i 785a2e5 #commit hash of my commit using which PR was opened
$ git checkout patch-3 #branch name I had to send my commits under to be shown in that PR
$ git commit -am ""Changes done as per feedback""
$ git push origin patch-3
</code></pre>

<p>This worked fine but seems quite a complex workflow. Maybe I am wrong something wrong here? </p>

<p>my question is:
Am I doing this the correct way? if not, then what is the proper way to do this?</p>
","59","22700","<git><github><pull-request>"
"10147475","1","git checkout tag, git pull fails in branch","<p>I have cloned a git repository and then checked out a tag:</p>

<pre><code># git checkout 2.4.33 -b my_branch
</code></pre>

<p>This is OK, but when I try to run <code>git pull</code> in my branch, git spits out this error: </p>

<blockquote>
  <p>There is no tracking information for the current branch. Please
  specify which branch you want to merge with. See git-pull(1) for
  details</p>

<pre><code>git pull &lt;remote&gt; &lt;branch&gt;
</code></pre>
  
  <p>If you wish to set tracking information for this branch you can do so
  with:</p>

<pre><code>git branch --set-upstream new origin/&lt;branch&gt;
</code></pre>
</blockquote>

<p>I want <code>git pull</code> to only update the master branch and leave my current branch alone (it's a tag anyway). Is something like this possible?</p>

<p>The reason I need this is that I have a automatic script which always git pulls the repository and of course fails because of the error above..</p>
","107","73699","<git><git-pull><git-checkout>"
"10871865","1","What's the best way to edit GitHub's Readme.md?","<p>What's the best way to edit GitHub's Readme.md?</p>

<p>I find myself editing the Readme, then I push it, I see mistakes or formatting errors, editing it again, then pushing it...</p>

<p>It really does a number on the commit history.</p>

<p>Is there a better way? Or should I not care about the commit history, and just go bananas on Readme.</p>

<p>Maybe I shouldn't even use Readme at all, but instead use <a href=""http://pages.github.com/"">GH pages</a>?</p>

<hr>

<p><a href=""http://stackoverflow.com/questions/9331281/how-can-i-test-what-my-readme-md-file-will-look-like-before-commiting-to-github"">How can I test what my readme.md file will look like before commiting to github?</a> - Just found similar question, but more verbose questions above.</p>
","121","60489","<git><documentation><github>"
"3838727","1","Git Post-Receive Hook for Website Staging","<p>I'm trying to set up Git for staging my website so that I can <code>git pull</code> to get the current version to work on locally and then <code>git push</code> to push the changes to the remote server.  I've got it set up so that it works the way I want it to, but after I push, I have to manually run <code>git checkout -f</code> or <code>git reset --hard HEAD</code> on the remote server.</p>

<p>I've tried putting these into a shell script as the post-receive hook on the server, but it just doesn't seem to have any effect.  I know that the script is running because I'm seeing ""Changes pushed to server"" after I push.  Here's the post-receive hook:</p>

<pre><code>#!/bin/sh
git reset --hard HEAD
echo ""Changes pushed to server.""
</code></pre>
","58","53703","<git><git-post-receive>"
"2527355","1","Using the slash character in Git branch name","<p>I'm pretty sure I saw somewhere in a popular Git project the branches had a pattern like ""feature/xyz"".</p>

<p>However when I try to create a branch with the slash character, I get an error:</p>

<pre><code>$ git branch labs/feature
error: unable to resolve reference refs/heads/labs/feature: Not a directory
fatal: Failed to lock ref for update: Not a directory
</code></pre>

<p>Same problem for (my initial attempt):</p>

<pre><code>$ git checkout -b labs/feature
</code></pre>

<p>How does one create a branch in Git with the slash character?</p>
","112","42303","<git><branch>"
"1084969","1","Unable to track files within Git submodules","<p><strong>Problem:</strong> to add files at <code>./shells/smallApps/*</code> to Git at <code>./.git/</code> when I do not have the files at <code>./.git/info/exclude</code> nor at any <code>.gitignore</code> -files.</p>

<p>This question is based on <a href=""http://stackoverflow.com/questions/1081173/unable-to-track-files-in-long-paths-by-git"">this tread</a> where the problem is not solved completely.</p>

<p>I run </p>

<pre><code>$git status                                                                                                                                          ~/bin
# On branch master
nothing to commit (working directory clean)
$git ls-files                                                                                                                                        ~/bin
Screen/dev/vim-open.screen
--- cut ---
</code></pre>

<p>I note that I do not have the files ""shells/smallApps/*"" at my Git</p>

<pre><code>$ls shells/smallApps/                                                                                                                                ~/bin
devTodo     extract     
                                                                                                                                             ~/bin
</code></pre>

<p>I want to add them to my Git by running</p>

<pre><code>$git add shells/smallApps/devTodo shells/smallApps/extract
fatal: Path 'shells/smallApps/devTodo' is in submodule 'shells/smallApps'
$git add .
</code></pre>

<p>I note that the files are not added to my Git for some reason such that</p>

<pre><code>$git status                                                                                                                                          ~/bin 
# On branch master
nothing to commit (working directory clean)
</code></pre>

<p>I do not have the files at .git/info/exclude nor at .gitignore -files.</p>

<p><strong>What does the last warning mean?</strong></p>
","43","19902","<git><add><git-submodules>"
"1085162","1","Commit only part of a file in Git","<p>When I make changes to a file in Git, how can I commit only some of the changes?</p>

<p>For example, how could I commit only 15 lines out of 30 lines that have been changed in a file?</p>
","1442","150879","<git>"
"379081","1","Track all remote git branches as local branches","<p>Tracking a single remote branch as a local branch is straightforward enough. </p>

<pre><code>$ git checkout --track -b ${branch_name} origin/${branch_name}
</code></pre>

<p>Pushing all local branches up to the remote, creating new remote branches as needed is also easy.</p>

<pre><code>$ git push --all origin
</code></pre>

<p>I want to do the reverse. If I have X number of remote branches at a single source: </p>

<pre><code>$ git branch -r 
branch1
branch2
branch3
.
.
.
</code></pre>

<p>Can I create local tracking branches for all those remote branches without needed to manually create each one? Say something like:</p>

<pre><code>$ git checkout --track -b --all origin
</code></pre>

<p>I've googled and RTMs, but have come up bunk thus far. </p>
","115","47648","<git><branch>"
"7351551","1","Writing a git post-receive hook to deal with a specific branch","<p>Here's my current hook in a bare repo that lives in the company's server:
<code>git push origin master</code>
This hooks pushes to Assembla.
What i need is to push only one branch (master, ideally) when someone pushes changes to that  branch on our server, and ignore pushes to other branches. Is it possible to select the branch  from a bare repo and push only that branch to Assembla?</p>
","59","26719","<git><repository><hook><git-bare>"
"5741407","1","How to undo a git merge with conflicts","<p>I am on branch <code>mybranch1</code>. <code>mybranch2</code> is forked from <code>mybranch1</code> and changes were made in <code>mybranch2</code>. </p>

<p>Then, while on <code>mybranch1</code>, I have done <code>git merge --no-commit mybranch2</code>
It shows there were conflicts while merging.</p>

<p>Now I want do discard everything (the <code>merge</code> command) so that <code>mybranch1</code> is back to what it was before.
I have no idea how do I go about this.</p>
","425","167524","<git><merge><git-merge>"
"1470572","1",".gitignore - ignore any 'bin' directory","<p>I have a directory structure like this:</p>

<pre><code>.git/
.gitignore
main/
  ...
tools/
  ...
...
</code></pre>

<p>Inside main and tools, and any other directory, at any level, there can be a 'bin' directory, which I want to ignore (and I want to ignore everything under it too). I've tried each of these patterns in .gitignore but none of them work:</p>

<pre><code>/**/bin/**/*
/./**/bin/**/*
./**/bin/**/*
**/bin/**/*
*/bin/**/*
bin/**/*
/**/bin/* #and the others with just * at the end too
</code></pre>

<p>Can anyone help me out? The first pattern (the one I think should be working) works just fine if I do this:</p>

<pre><code>/main/**/bin/**/*
</code></pre>

<p>But I don't want to have an entry for every top-level directory and I don't want to have to modify .gitignore every time I add a new one.</p>

<p>This is on Windows using the latest msysgit.</p>

<p>EDIT: <strong>one more thing, there are files and directories that have the substring 'bin' in their names, I don't want those to be ignored :)</strong></p>
","606","409651","<git><gitignore>"
"3042437","1","Change commit author at one specific commit","<p>I want to change the author of one specific commit in the history. It's not last commit.</p>

<p>I know about this question - <a href=""http://stackoverflow.com/questions/750172/how-do-i-change-the-author-of-a-commit-in-git"">How do I change the author of a commit in git?</a></p>

<p>But I am thinking about something, where I identify the commit by hash or short-hash.</p>
","575","228940","<git>"
"2563632","1","How can I merge two commits into one?","<p>I am trying to merge 2 commits into 1, so I followed <a href=""http://www.gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html"">&ldquo;squashing commits with rebase&rdquo; from git ready</a>.</p>

<p>I ran</p>

<pre><code>git rebase --interactive HEAD~2
</code></pre>

<p>In the resulting editor, I change <code>pick</code> to <code>squash</code> and then save-quit, but the rebase fails with the error</p>

<blockquote>
  <p>Cannot 'squash' without a previous commit</p>
</blockquote>

<p>Now that my work tree has reached this state, I&rsquo;m having trouble recovering. The command <code>git rebase --interactive HEAD~2</code> fails with</p>

<blockquote>
  <p>Interactive rebase already started</p>
</blockquote>

<p>and <code>git rebase --continue</code> fails with</p>

<blockquote>
  <p>Cannot 'squash' without a previous commit</p>
</blockquote>
","568","254626","<git><git-merge>"
"9776434","1","Git Mergetool Config on Mac OSX","<p>I have Git on mac OSX Snow Leopard and I tried to edit my merge and diff tool to use kdiff3 instead of emerge.</p>

<p>But when I try to use it does not launch the GUI of kdiff and keeps me with a cmd based interface.</p>

<p>My setting in gitconfig are: </p>

<pre><code>[merge]
     tool = kdiff3
[mergetool ""kdiff3""]
    cmd = /Applications/kdiff3.app/Contents/MacOS/kdiff3
    args = $base $local $other -o $output
    trustExitCode = false
[diff]
tool = kdiff3
[difftool ""kdiff3""]
cmd = /Applications/kdiff3.app/Contents/MacOS/kdiff3
args = $base $local $other -o $output
trustExitCode = false
</code></pre>

<p>There is obviously something missing but what did I do wrong ?</p>
","33","22090","<osx><git><merge><config><kdiff3>"
"9776527","1","Merging without whitespace conflicts","<p>I've got a problem where I've got a large commit which changes about a thousand lines of code, removing whitespace from the end of lines and removing spaces before tabs.</p>

<p>There are also about 50 pull requests for this project, which will all have conflicts when my commit is merged. Is there any way that git can be set up so that when merging future commits, it ignores conflicts where one of them is just a whitespace change?</p>

<p>Modifying git itself or using a third party tool isn't possible, but using a hook is fine.</p>
","81","28786","<git><whitespace><git-merge>"
"424071","1","How to list all the files in a commit?","<p>I am looking for a simple <code>git</code> command that provides a nicely formatted list of all files that were part of the commit given by a hash (SHA1), with no extraneous information.</p>

<p>I have tried:</p>

<pre><code>git show a303aa90779efdd2f6b9d90693e2cbbbe4613c1d
</code></pre>

<p>Although it lists the files, it also includes unwanted diff information for each.</p>

<p>Is there another <code>git</code> command that will provide just the list I want, so that I can avoid parsing it from the <code>git show</code> output?</p>
","1427","643528","<git><git-show>"
"2602546","1","How Do I 'git fetch' and 'git merge' from a Remote Tracking Branch (like 'git pull')","<p>I have set up some remote tracking branches in git, but I never seem to be able to merge them into the local branch once I have updated them with 'git fetch'.</p>

<p>For example, suppose I have remote branch called 'an-other-branch'. I set that up locally as a tracking branch using</p>

<pre><code>git branch --track an-other-branch origin/an-other-branch
</code></pre>

<p>So far, so good. But if that branch gets updated (usually by me moving machine and commiting from that machine), and I want to update it on the original machine, I'm running into trouble with fetch/merge:</p>

<pre><code>git fetch origin an-other-branch
git merge origin/an-other-branch
</code></pre>

<p>Whenever I do this, I get an 'Already up-to-date' message and nothing merges.</p>

<p>However, a</p>

<pre><code>git pull origin an-other-branch
</code></pre>

<p>always updates it like you would expect.</p>

<p>Also, running git diff</p>

<pre><code>git diff origin/an-other-branch
</code></pre>

<p>shows that there are differences, so I think I have my syntax wrong.</p>

<p>What am I doing wrong?</p>

<p><strong>EDIT [2010-04-09]:</strong> I have checked a couple of times, and I'm definitely not on a different branch. Should my 'git fetch' followed by a 'git merge' (as shown above) do the exact same thing as a git pull? I will get some workflow showing the results of a git status etc.</p>
","88","89112","<git><git-pull><git-merge><git-fetch>"
"12870928","1","(Mac) -bash: __git_ps1: command not found","<p>I'm trying to change my command promt in terminal. I keep getting the error:</p>

<p><code>-bash: __git_ps1: command not found</code></p>

<p>I've tried it just by typing it into the terminal as is: <code>__git_ps1</code>. I've also tried it out in the <code>.bash_profile</code></p>

<pre><code>if [ -f ~/.git-completion.bash ]; then
  source ~/.git-completion.bash
  export PS1='[\W]$(__git_ps1 ""(%s)""): '
fi
</code></pre>

<p>As you might be able to see/tell, yes, I do have the auto-completion installed and it does work great!</p>

<p>I came across this question: "" <a href=""http://stackoverflow.com/questions/10435117/ps1-env-variable-does-not-work-on-mac"">PS1 env variable does not work on mac</a> "" which gives the code</p>

<p><code>alias __git_ps1=""git branch 2&gt;/dev/null | grep '*' | sed 's/* \(.*\)/(\1)/'""</code></p>

<p>So I add it to my <code>.bash_profile</code> hoping that it will change something. Well, it did. It just changed the error output.</p>

<p>Here's the <code>.bash_profile</code> with the addition:</p>

<pre><code>alias __git_ps1=""git branch 2&gt;/dev/null | grep '*' | sed 's/* \(.*\)/(\1)/'""

if [ -f ~/.git-completion.bash ]; then
  source ~/.git-completion.bash
  export PS1='[\W]$(__git_ps1 ""(%s)""): '
fi
</code></pre>

<p>And now here's the changed error output:</p>

<p><code>sed: (%s): No such file or directory</code></p>

<p><em><strong>Note:</em></strong> I've also moved the alias below the source with no difference. I have <em>git version 1.7.12.1</em></p>

<p>This should be a simple change. Can someone please help me?</p>

<p><strong>Edit 10/13/12</strong></p>

<p>No, I definitely do not want to define __git_ps1 myself but was just trying to see if it would be recognized by doing so. Yes, I have the <code>.git-completion.bash</code> file installed. Here's how I got auto completion on my machine.</p>

<pre><code>cd ~
curl -OL https://github.com/git/git/raw/master/contrib/completion/git-completion.bash
mv ~/git.completion.bash ~/.git-completion.bash
</code></pre>

<p>A <code>ls -la</code> then lists the <code>.git-completion.bash</code> file.</p>

<p><strong>Edit 10/13/12 - Solved by <em>Mark Longair</em> (below)</strong></p>

<p>The following code worked for me in the <code>.bash_profile</code> while others did not...</p>

<pre><code>if [ -f ~/.git-prompt.sh ]; then
  source ~/.git-prompt.sh
  export PS1='Geoff[\W]$(__git_ps1 ""(%s)""): '
fi
</code></pre>
","131","59498","<osx><git><terminal><ps1>"
"2621281","1","Unable to modify git bash Windows shortcut","<p>Under Windows 7 I'd like to change the settings for the Git Bash Here shell extension command window, e.g. width, height and font. But when I do this, I get an error ""Unable to modify the shortcut"".</p>

<p>I can modify the shortcut for Git Bash in the Start menu by using ""Run as administrator..."" This works, but only for Bash windows opened from the Start menu. It <em>doesn't</em> work for the ""Git Bash Here"" shell extension and there's no ""Run as administrator..."" option on right-click context menu.</p>

<p>How do you do it?</p>
","52","23006","<git><bash><windows-7>"
"2621610","1","What Git branching models work for you?","<p>Our company is currently using a simple trunk/release/hotfixes branching model and would like advice on what branching models work best for your company or development process.</p>

<ol>
<li><p><strong>Workflows / branching models</strong></p>

<p>Below are the three main descriptions of this I have seen, but they are partially contradicting each other or don't go far enough to sort out the subsequent issues we've run into (as described below). Thus our team so far defaults to not so great solutions. Are you doing something better? </p>

<ul>
<li><a href=""http://www.kernel.org/pub/software/scm/git/docs/gitworkflows.html"">gitworkflows(7) Manual Page</a> </li>
<li><a href=""http://nvie.com/git-model"">(nvie) A successful Git branching model</a></li>
<li><a href=""http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html"">(reinh) A Git Workflow for Agile Teams</a></li>
</ul></li>
<li><p><strong>Merging vs rebasing (tangled vs sequential history)</strong> </p>

<p>Should one <code>pull --rebase</code> or wait with merging back to the mainline until your task is finished? Personally I lean towards merging since this preserves a visual illustration of on which base a task was started and finished, and I even prefer <code>merge --no-ff</code> for this purpose. It has other drawbacks however. Also many haven't realized the useful property of merging - that it isn't <a href=""http://en.wikipedia.org/wiki/Commutativity"">commutative</a> (merging a topic branch into master does not mean merging master into the topic branch).</p></li>
<li><p><strong>I am looking for a natural workflow</strong> </p>

<p>Sometimes mistakes happen because our procedures don't capture a specific situation with simple rules. For example a fix needed for earlier releases should of course be based sufficiently downstream to be possible to merge upstream into all branches necessary (is the usage of these terms clear enough?). However it happens that a fix makes it into the master before the developer realizes it should have been placed further downstream, and if that is already pushed (even worse, merged or something based on it) then the option remaining is cherry-picking, with its associated perils. What simple rules like such do you use? <em>Also in this is included the awkwardness of one topic branch necessarily excluding other topic branches (assuming they are branched from a common baseline). Developers don't want to finish a feature to start another one feeling like the code they just wrote is not there anymore</em></p></li>
<li><p><strong>How to avoid creating merge conflicts (due to cherry-pick)?</strong> </p>

<p>What seems like a sure way to create a merge conflict is to cherry-pick between branches, they can never be merged again? Would applying the same commit in revert (how to do this?) in either branch possibly solve this situation? This is one reason I do not dare to push for a largely merge-based workflow.</p></li>
<li><p><strong>How to decompose into topical branches?</strong> </p>

<p>We realize that it would be awesome to assemble a finished integration from topic branches, but often work by our developers is not clearly defined (sometimes as simple as ""poking around"") and if some code has already gone into a ""misc"" topic, it can not be taken out of there again, according to the question above? How do you work with defining/approving/graduating/releasing your topic branches?</p></li>
<li><p><strong>Proper procedures like code review and graduating</strong> would of course be lovely. </p>

<p>But we simply cannot keep things untangled enough to manage this - any suggestions?
integration branches, illustrations?</p></li>
</ol>

<p>Below is a list of related questions:</p>

<ul>
<li><a href=""http://stackoverflow.com/questions/143814/what-are-some-good-strategies-to-allow-deployed-applications-to-be-hotfixable"">What are some good strategies to allow deployed applications to be hotfixable?</a></li>
<li><a href=""http://stackoverflow.com/questions/1049917/workflow-description-for-git-usage-for-in-house-development/1050628"">Workflow description for Git usage for in-house development</a></li>
<li><a href=""http://stackoverflow.com/questions/1856241/git-workflow-for-corporate-linux-kernel-development"">Git workflow for corporate Linux kernel development</a></li>
<li><a href=""http://stackoverflow.com/questions/216212"">How do you maintain development code and production code?</a> (thanks for <a href=""http://stackoverflow.com/questions/216212/how-do-you-maintain-development-code-and-production-code/216219#216219"">this</a> PDF!)</li>
<li><a href=""http://stackoverflow.com/questions/1042400/git-releases-management"">git releases management</a></li>
<li><a href=""http://stackoverflow.com/questions/1241720/git-cherry-pick-vs-merge-workflow"">Git Cherry-pick vs Merge Workflow</a></li>
<li><a href=""http://stackoverflow.com/questions/1670970/how-to-cherry-pick-multiple-commits"">How to cherry-pick multiple commits</a></li>
<li><a href=""http://stackoverflow.com/questions/449541/how-do-you-merge-selective-files-with-git-merge"">How do you merge selective files with git-merge?</a></li>
<li><a href=""http://stackoverflow.com/questions/1994463/how-to-cherry-pick-a-range-of-commits-and-merge-into-another-branch"">How to cherry pick a range of commits and merge into another branch</a></li>
<li><a href=""http://stackoverflow.com/questions/855266/reinh-git-workflow"">ReinH Git Workflow</a></li>
<li><a href=""http://stackoverflow.com/questions/582015/git-workflow-for-making-modifications-youll-never-push-back-to-origin"">git workflow for making modifications you’ll never push back to origin</a></li>
<li><a href=""http://stackoverflow.com/questions/232771/cherry-pick-a-merge"">Cherry-pick a merge</a></li>
<li><a href=""http://stackoverflow.com/questions/2195826/proper-git-workflow-for-combined-os-and-private-code"">Proper Git workflow for combined OS and Private code?</a></li>
<li><a href=""http://stackoverflow.com/questions/2587721/maintaining-project-with-git"">Maintaining Project with Git</a></li>
<li><a href=""http://stackoverflow.com/questions/2588824/why-cant-git-merge-file-changes-with-a-modified-parent-master"">Why cant Git merge file changes with a modified parent/master.</a></li>
<li><a href=""http://stackoverflow.com/questions/2601967/git-branching-rebasing-good-practices"">Git branching / rebasing good practices</a></li>
<li><a href=""http://stackoverflow.com/questions/2590260/when-will-git-pull-rebase-get-me-in-to-trouble"">When will ""git pull --rebase"" get me in to trouble?</a></li>
<li><a href=""http://stackoverflow.com/questions/787638/how-are-dvcs-used-in-large-teams"">How are DVCS used in large teams?</a></li>
</ul>

<p>Also check out what Plastic SCM writes on <a href=""http://www.plasticscm.com/features/task-driven-development.aspx"">task driven development</a>, and if Plastic is not your choice, study <a href=""http://nvie.com/posts/a-successful-git-branching-model/"">nvie's branching model</a> and his <a href=""https://github.com/nvie/gitflow"">supporting scripts</a>.</p>
","318","48726","<git><merge><workflow><release><cherry-pick>"
"471300","1","git: switch branch without detaching head","<p>I have a repository on github with a main branch (master) and a branch for some experimental work.  I made some commits and pushed to the experimental branch and everything was fine.</p>

<p>Now, on a different machine, I try to clone my repository (git clone <em>repository</em>) and then switch to the experimental branch (git checkout <em>branchname</em>) but every time I do this my head gets detached and I can't push my changes.  What am I doing wrong?  I get the feeling I'm missing a fundamental git concept someplace but reading random git man pages isn't giving me any clues.</p>

<p>I'm new to git so I'm sorry if I'm being an idiot but I can't find anything in the docs that will help me reattach my head.</p>

<p><strong>EDIT</strong></p>

<p>The concept of a tracking branch is what I was missing.  Now that I grok that concept everything is clear.  Personally, I find the <code>git branch --track</code> syntax to be much more intuitive than <code>git checkout -b branch-name origin/branch-name</code>.</p>

<p>Thanks for the help!</p>
","47","18908","<git><version-control>"
"473102","1","How do I ignore a directory in the root of my git repository, but include it further down in the tree?","<p>I need to use .gitignore to exclude a directory in the root of my repository.  However, other directories with the same name exist deeper in the directory tree, and I need those to be included.  It seems that when I put the name of the directory into .gitignore, it catches all of these directories, not just the one I need to ignore.  I understand that .gitignore is actually not a list of files, but patterns.  So how can I construct a pattern to ignore just a file in my root directory, but not files with the same name further down?</p>
","33","4743","<git>"
"7442112","1","Attributing a single commit to multiple developers","<p>The way all version control systems I'm familiar with work is that each commit is attributed to a single developer. The rise of Agile Engineering, and specifically pair programming, has lead to a situation where two developers have made a significant contribution to the same task, a bug fix for example.</p>

<p>The issue of attribution won't be too much of a big deal in a work environment since the project manager will be aware of the work the pairs are doing, but what about if two open source contributors decide to pair up and push out some code to a particular project that has no idea they're working together. Is there any way for a version control system like Git to attribute a particular patch to multiple developers?</p>
","33","5029","<git><svn><version-control><agile><bazaar>"
"2643502","1","Git - Permission denied (publickey)","<p>I'm on Mac Snow Leopard and I just installed git.</p>

<p>I just tried </p>

<p><code>git clone git@thechaw.com:cakebook.git</code> </p>

<p>but that gives me this error.  </p>

<pre>
Initialized empty Git repository in `/Users/username/Documents/cakebook/.git/`
Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</pre>

<p>What am I missing?<br>
I've also tried doing <code>ssh-keygen</code> with no passphase but still same error.</p>
","196","255330","<git>"
"1524204","1","Using capistrano to deploy from different git branches","<p>I am using capistrano to deploy a RoR application. The codebase is in a git repository, and branching is widely used in development. Capistrano uses <code>deploy.rb</code> file for it's settings, one of them being the branch to deploy from. </p>

<p>My problem is this: let's say I create a new branch <em>A</em> from <em>master</em>. The deploy file will reference <em>master</em> branch. I edit that, so <em>A</em> can be deployed to test environment. I finish working on the feature, and merge branch <em>A</em> into <em>master</em>. Since the <code>deploy.rb</code> file from <em>A</em> is fresher, it gets merged in and now the <code>deploy.rb</code> in <em>master</em> branch references <em>A</em>. Time to edit again.</p>

<p>That's a lot of seemingly unnecessary manual editing - the parameter should always match current branch name. On top of that, it is easy to forget to edit the settings each and every time.</p>

<p>What would be the best way to automate this process?</p>

<p><strong>Edit:</strong> Turns out <a href=""http://web.archive.org/web/20121006054725/http://www.harukizaemon.com/2008/05/deploying-branches-with-capistrano.html"" rel=""nofollow"">someone already had done exactly what I needed</a>:</p>

<blockquote>
  <p>This morning I had occasion to deploy a branch of a git repository to
  a staging server but hadn’t the foggiest idea how. A quick search
  through the capistrano source code revealed that I could use set
  <code>:branch ""branch_name""</code> in my deploy script. I tried it and it worked.
  I then figured I would need to make a similar change across all my
  branches. Of course, I’m a lazy sod and wondered if there wasn’t a
  better way.</p>
  
  <p>If you’re not familiar with git, the output of the git branch command
  is a list of branches with an asterisk marking the one currently
  checked out on your local machine. For example:</p>

<pre><code>&gt; git branch
* drupal_authentication
fragment_caching
master
</code></pre>
  
  <p>So, I figured, what if I just parsed the output and searched for the
  branch marked as current:</p>

<pre><code>set :branch, $1 if `git branch` =~ /\* (\S+)\s/m
</code></pre>
  
  <p>Now I’m able to deploy whatever branch is current on my local machine
  from a single, shared, deploy script.</p>
</blockquote>
","81","47090","<git><capistrano>"
"1575682","1","Can't seem to discard changes in Git","<p>After seeing the following from the command line:</p>

<pre><code># On branch RB_3.0.10
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   index.htm
</code></pre>

<p>I am trying to discard my changes by typing the command:</p>

<pre><code>git checkout -- index.htm
</code></pre>

<p>but when I re-run git status, it looks exactly the same.  The checkout doesn't seem to be working.  Am I doing something wrong?  I am using GIT 1.6.1.2 on windows/cygwin.</p>

<pre><code># On branch RB_3.0.10
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   index.htm
</code></pre>
","69","16967","<git><revert>"
"5098256","1","Git blame -- prior commits?","<p>I love the <code>git blame</code> command, it is very useful for tracking down people who don't own up to writing code. :-)</p>

<p>However, it is possible to see who edited a specific line <em>before</em> the commit reported by <code>git blame</code>, e.g. a history of commits for a given line?</p>

<p>For example, I run the following (on the superb <code>uncrustify</code> project):</p>

<pre><code>$ git blame -L10,+1 src/options.cpp
^fe25b6d (Ben Gardner 2009-10-17 13:13:55 -0500 10) #include ""prototypes.h""
</code></pre>

<p>How can I find out who edited that line <em>before</em> commit <code>fe25b6d</code>? And who edited it before <em>that</em> commit? I am sure this would be possible, but my git-fu is weak.</p>
","180","40134","<git><commit><blame>"
"12254076","1","Show git config","<p>I'd like to show all configured git sections. I only found <code>git config --get core.editor</code> for example, but I'd like to output everything that's configured globally, not only the configured default editor. </p>

<p>How do I do this?</p>
","391","225295","<git>"
"17195861","1","undo git update-index --assume-unchanged <file>","<p>The way you git ignore watching/tracking a particular dir/file. you just run this:  </p>

<p><code>git update-index --assume-unchanged &lt;file&gt;</code></p>

<p>Now how do you undo it so they are watched again? (lets call it un-assume)</p>
","165","37262","<git><version-control><git-index>"
"17818167","1","Find a Pull Request on Github where a commit was originally created","<p>Pull Requests are great for understanding the larger thinking around a change or set of changes made to a repo. Reading pull requests are a great way to quickly ""grok"" a project as, instead of small atomic changes to the source, you get larger groupings of logical changes. Analogous to organizing the lines in your code into related ""stanzas"" to make it easier to read.</p>

<p>I find myself looking at a file or a commit, and I wonder if there is a way to backtrack the commit to the Pull Request that originally created it. That Pull Request would have been merged eventually, but not necessary with a merge-commit.</p>
","64","9951","<git><github><pull-request>"
"36862","1","How do you organise multiple git repositories, so that all of them are backed up together?","<p>With SVN, I had a single big repository I kept on a server, and checked-out on a few machines. This was a pretty good backup system, and allowed me easily work on any of the machines. I could checkout a specific project, commit and it updated the 'master' project, or I could checkout the entire thing.</p>

<p>Now, I have a bunch of git repositories, for various projects, several of which are on github. I also have the SVN repository I mentioned, imported via the git-svn command..</p>

<p>Basically, I like having all my code (not just projects, but random snippets and scripts, some things like my CV, articles I've written, websites I've made and so on) in one big repository I can easily clone onto remote machines, or memory-sticks/harddrives as backup.</p>

<p>The problem is, since it's a private repository, and git doesn't allow checking out of a specific folder (that I could push to github as a separate project, but have the changes appear in both the master-repo, and the sub-repos)</p>

<p>I <em>could</em> use the git submodule system, but it doesn't act how I want it too (submodules are pointers to other repositories, and don't really contain the actual code, so it's useless for backup)</p>

<p>Currently I have a folder of git-repos (for example, ~/code_projects/proj1/.git/ ~/code_projects/proj2/.git/), and after doing changes to proj1 I do <code>git push github</code>, then I copy the files into ~/Documents/code/python/projects/proj1/ and do a single commit (instead of the numerous ones in the individual repos). Then do <code>git push backupdrive1</code>, <code>git push mymemorystick</code> etc</p>

<p>So, the question: How do your personal code and projects with git repositories, and keep them synced and backed-up?</p>
","94","48116","<git><backup>"
"49478","1","Git ignore file for Xcode projects","<p>Which files should I include in <code>.gitignore</code> when using <em>Git</em> in conjunction with <em>Xcode</em>?</p>
","707","194478","<xcode><git><osx><version-control><gitignore>"
"61212","1","How do I remove local (untracked) files from my current Git branch?","<p>How do you delete untracked local files from your current branch?</p>
","3646","906815","<git><branch><git-branch>"
"4798080","1","git rebase fatal: Needed a single revision","<p>I have a branch of a public repository and I am trying to update my branch with the current commits from the original repository:</p>

<pre><code>$ git fetch &lt;remote&gt;
remote: Counting objects: 24, done.
remote: Compressing objects: 100% (20/20), done.
remote: Total 20 (delta 12), reused 0 (delta 0)
Unpacking objects: 100% (20/20), done.
From git://github.com/path_to/repo
  9b70165..22127d0  master     -&gt; $/master
$ git rebase &lt;remote&gt;
fatal: Needed a single revision
invalid upstream &lt;remote&gt;
</code></pre>

<p>The <code>&lt;remote&gt;</code> is in place of my remote name and is not actually my remote name. The documentation on this error seems to be a bit loose.</p>
","70","68212","<git><github><rebase>"
"10581843","1","Where is git-blame in SourceTree","<p>I'd like to see who contributed which line/change to a file.  git-blame does exactly that.  So does SourceTree have a git-blame view?</p>
","38","12013","<git><git-gui><atlassian-sourcetree>"
"7199659","1","Rename git root folder","<p>I've just started using git in Vista, with my repository under <code>/path/to/project/git repo</code>.</p>

<p>I've now found that the space in the folder name is a minor irritation when working in git bash.</p>

<p>Can I just rename the folder to <code>/path/to/project/gitrepo</code>? Is everything within the git config relative, or is there anything that explicitly refers to the parent folder?</p>

<p>I've tried just taking a windows copy of the main folder, and run git bash on that, and 'git log' shows the changes I had previously made. So I assume renaming the main folder is OK, but I'd like to be sure before I go any further.</p>
","52","16206","<git><folder><rename>"
"112839","1","How to resolve a conflict with git-svn?","<p>What is the best way to resolve a conflict when doing a <code>git svn rebase</code>, and the git branch you are on becomes ""(no-branch)""?</p>
","48","16835","<git><svn><merge><conflict>"
"2383826","1","Git-Based Source Control in the Enterprise: Suggested Tools and Practices?","<p>I use git for personal projects and think it's great. It's fast, flexible, powerful, and works great for remote development.</p>

<p>But now it's mandated at work and, frankly, we're having problems.</p>

<p>Out of the box, git doesn't seem to work well for centralized development in a large (20+ developer) organization with developers of varying abilities and levels of git sophistication - especially compared with other source-control systems like Perforce or Subversion, which are aimed at that kind of environment. (Yes, I know, Linus never intended it for that.)</p>

<p>But - for political reasons - we're stuck with git, even if it sucks for what we're trying to do with it.</p>

<p>Here are some of the things we're seeing:</p>

<ul>
<li>The GUI tools aren't mature</li>
<li>Using the command line tools, it's far to easy to screw up a merge and obliterate someone else's changes</li>
<li>It doesn't offer per-user repository permissions beyond global read-only or read-write privileges</li>
<li>If you have a permission to ANY part of a repository, you can do that same thing to EVERY part of the repository, so you can't do something like make a small-group tracking branch on the central server that other people can't mess with.</li>
<li>Workflows other than ""anything goes"" or ""benevolent dictator"" are hard to encourage, let alone enforce </li>
<li>It's not clear whether it's better to use a single big repository (which lets everybody mess with everything) or lots of per-component repositories (which make for headaches trying to synchronize versions).</li>
<li>With multiple repositories, it's also not clear how to replicate all the sources someone else has by pulling from the central repository, or to do something like get everything as of 4:30 yesterday afternoon.</li>
</ul>

<p>However, I've heard that people are using git successfully in large development organizations. </p>

<p>If you're in that situation - or if you generally have tools, tips and tricks for making it easier and more productive to use git in a large organization where some folks are not command line fans - I'd love to hear what you have to suggest.</p>

<p>BTW, I've asked a version of this question already on LinkedIn, and got no real answers but lots of ""gosh, I'd love to know that too!""</p>

<p>UPDATE: Let me clarify...</p>

<p><strong>Where I work, we can't use ANYTHING other than git</strong>. It's not an option. We're stuck with it. We can't use mercurial, svn, bitkeeper, Visual Source Safe, ClearCase, PVCS, SCCS, RCS, bazaar, Darcs, monotone, Perforce, Fossil, AccuRev, CVS, or even Apple's good ol' Projector that I used in 1987. So while you're welcome to discuss other options, <strong>you ain't gonna get the bounty if you don't discuss git.</strong></p>

<p>Also, I'm looking for <strong>practical tips on how to use git in the enterprise</strong>. I put a whole laundry list of problems we're having at the top of this question. Again, people are welcome to discuss theory, but <strong>if you want to earn the bounty, give me solutions.</strong></p>
","117","16599","<git><enterprise>"
"134882","1","Undoing a git rebase","<p>Does anybody know how to easily undo a git rebase?</p>

<p>The only way that comes to mind is to go at it manually:</p>

<ul>
<li>git checkout the commit parent to both of the branches </li>
<li>then create a temp branch from there</li>
<li>cherry-pick all commits by hand</li>
<li>replace the branch in which I rebased by the manually-created branch</li>
</ul>

<p>In my current situation this is gonna work because I can easily spot commits from both branches (one was my stuff, the other was my colleague's stuff).</p>

<p>However my approach strikes me as suboptimal and error-prone (let's say I had just rebased with 2 of my own branches).</p>

<p>Any ideas?</p>

<p>Clarification: I'm talking about a rebase during which a bunch of commits were replayed. Not only one.</p>
","1486","348869","<git><rebase><git-rebase><undo>"
"12293944","1","How to find the path of the local git repository when I am possibly in a subdirectory","<p>I'm looking for something like <code>git list-path</code> printing the
path of the associated repository (the <code>.git</code> directory).</p>

<p>A bit of background: I have set up git version control on quite a few of my
projects/folders.  Some of them are nested, so one directory with echo own repository is a subfolder to another directory tracked with another repository. </p>

<p>E.g. in my home directory (<code>~</code>) I use git to track my dot files, but
in folder <code>~/photo/meta-mix/</code> I have another project I track with a
separate repository. Now, say,I have set up another project in directory
<code>~/photo/meta-match/</code>, but I don't know anymore whether it has its own
repository. So I want to find out whether this directory is version
controlled and where its repository is.</p>

<p>How can I do this with a git command? <code>git status</code> can give me </p>

<pre><code>nothing to commit
</code></pre>

<p>in <em>both</em> cases, when <code>~/photo/meta-match/</code> has its own repository or when it just refers to the repository of <code>~</code>. </p>
","35","30647","<git><path><environment>"
"573585","1","What's the git equivalent of ""svn update -r""?","<p>I'm a recent git convert. It's great to be able to use git-svn to keep my branches locally without disturbing the svn server. There was a bug that existed in the latest version of the code. I wanted to establish a time when it worked so that I could use git bisect. I couldn't find the right command to move back in time. Thanks.</p>
","53","31200","<git><svn><git-svn><git-checkout><svn-update>"
"165092","1","Can I push to more than one repository in a single command in git?","<p>Basically I wanted to do something like <code>git push mybranch to repo1, repo2, repo3</code></p>

<p>right now I'm just typing push many times, and if I'm in a hurry to the the pushing done, I just send them all to the background <code>git push repo1 &amp; git push repo2 &amp;</code></p>

<p>I'm just wondering if <code>git</code> natively supports what I want to do, or if maybe there's a clever script out there, or maybe a way to edit the local repo config file to say a branch should be pushed to multiple remotes.</p>
","41","6408","<git><version-control>"
"192736","1","How do I make git-svn use a particular svn branch as the remote repository?","<p>A word of warning: I'm a n00b to <code>git</code> in general. My team uses feature branches in <code>svn</code>, and I'd like to use <code>git-svn</code> to track my work on a particular feature branch. I've been (roughly) following <a href=""http://andy.delcambre.com/2008/03/04/git-svn-workflow.html"">Andy Delcambre's post</a> to set up my local <code>git</code> repo, but those instructions seem to have led <code>git</code> to pick the <code>svn</code> branch that had changed most recently as the remote repository; the problem is that's not the branch I care about. How do I control which branch <code>git-svn</code> uses? Or am I approaching this completely wrong?</p>

<p>UPDATE: I did use the <code>-T</code>, <code>-b</code>, and <code>-t</code> options (in my case because the <code>svn</code> repo has multiple projects, but I want the <code>git</code> repo to contain only the project I'm working on).</p>
","59","28427","<git><svn><repository><branch><git-svn>"
"14494747","1","Add images to readme.md on GitHub","<p>Recently I joined <strong>GitHub</strong>. I hosted some projects there.</p>

<p>I need to include some images in my README File. I don't know how to do that.</p>

<p>I searched about this, but all I got was some links which tell me to ""host images on web and specify the image path in README.md file"".</p>

<p>Is there any way to do this without hosting the images on web?</p>
","406","117350","<git><github><markdown><github-flavored-markdown>"
"223678","1","Which commit has this blob?","<p>Given the hash of a blob, is there a way to get a list of commits that have this blob in their tree?</p>
","95","20462","<git><version-control>"
"2425059","1","How to pull specific directory with git","<p>I have a project with git, and I just want to clone or pull a specific directory, like myproject/javascript  just like subversion does. <br /> 
make some changes, commit and push back again. <br />
It's possible?</p>
","66","75413","<git><directory><pull>"
"255202","1","How do I view 'git diff' output with a visual diff program?","<p>When I type <code>git diff</code>, I want to view the output with my visual diff tool of choice (SourceGear ""diffmerge"" on Windows). How do I configure git to do this?</p>
","570","269579","<git><diff><diffmerge>"
"2715085","1","Rebasing and what does one mean by rebasing pushed commits","<p>It is often said that, you should not rebase commits that you have already pushed. What could be meaning of that? </p>
","57","31917","<git><rebase>"
"1634161","1","How do I use Notepad++ (or other) with msysgit?","<p>How do I use Notepad++ (or any other editor besides vim) with msysgit?</p>

<p>I tried all of the following to no avail:</p>

<pre><code>git config --global core.editor C:\Program Files\Notepad++\notepad++.exe

git config --global core.editor ""C:\Program Files\Notepad++\notepad++.exe""

git config --global core.editor C:/Program Files/Notepad++/notepad++.exe

git config --global core.editor C:\\Program Files\\Notepad++\\notepad++.exe
</code></pre>
","163","64210","<git><configuration><text-editor><notepad++><msysgit>"
"8225125","1","Remove last commit from remote git repository","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/4647301/rolling-back-local-and-remote-git-repository-by-1-commit"">Rolling back local and remote git repository by 1 commit</a>  </p>
</blockquote>



<p>How can I remove the last commit from a remote GIT repository such as I don't see it any more in the log?</p>

<p>If for example <code>git log</code> gives me the following commit history</p>

<pre><code>A-&gt;B-&gt;C-&gt;D[HEAD, ORIGIN]
</code></pre>

<p>how can I go to </p>

<pre><code>A-&gt;B-&gt;C[HEAD,ORIGIN]
</code></pre>

<p>Thanks.</p>
","95","53180","<git>"
"598672","1","Squash the first two commits in Git?","<p>With <code>git rebase --interactive &lt;commit&gt;</code> you can squash any number of commits together into a single one.</p>

<p>That's all great unless you want to squash commits into the initial commit. That seems impossible to do.</p>

<p>Are there any ways to achieve it?</p>

<hr>

<h3>Moderately related:</h3>

<p>In a related question, I managed to come up with a different approach to the need of squashing against the first commit, which is, well, to make it the second one.</p>

<p>If you're interested: <a href=""http://stackoverflow.com/questions/645450/git-how-to-insert-a-commit-as-the-first-shifting-all-the-others"">git: how to insert a commit as the first, shifting all the others?</a></p>
","311","102834","<git><rebase><git-rebase><squash>"
"2739376","1","Definition of ""downstream"" and ""upstream""","<p>I've started playing with Git and have come across the terms ""upstream"" and ""downstream"".  I've seen these before but never understand them fully.  What do these terms mean in the context of SCMs and source code?</p>
","465","100208","<git><version-control><versioning><terminology><definitions>"
"10215197","1","Git search for string in a single files history","<p>So if I have a file called <strong>foo.rb</strong> and it is giving me an error for a missing method called <strong>bar</strong>, so I want to search the history of <strong>foo.rb</strong> for the string <code>bar</code> to see if it was ever defined in the past.</p>

<p>I found this <a href=""http://stackoverflow.com/questions/4468361/search-all-of-git-history-for-string"">Search all of git history for string?</a></p>

<p>But this searches all files. I just want to search in one file.</p>
","46","9594","<git>"
"2528111","1","How can I calculate the number of lines changed between two commits in git?","<p>Is there any easy way to calculate the number of lines changed between two commits in git? I know I can do a <code>git diff</code>, and count the lines, but this seems tedious. I'd also like to know how I can do this, including only my own commits in the linecounts.</p>
","273","85147","<git>"
"359424","1","Detach(move) subdirectory into separate Git repository","<p>I have a <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> repository which contains a number of subdirectories. Now I have found that one of the subdirectories is unrelated to the other and should be detached to a separate repository.</p>

<p>How can I do this while keeping the history of the files within the subdirectory?</p>

<p>I guess I could make a clone and remove the unwanted parts of each clone, but I suppose this would give me the complete tree when checking out an older revision etc. This might be acceptable, but I would prefer to be able to pretend that the two repositories doesn't have a shared history.</p>

<p>Just to make it clear, I have the following structure:</p>

<pre><code>XYZ/
    .git/
    XY1/
    ABC/
    XY2/
</code></pre>

<p>But I would like this instead:</p>

<pre><code>XYZ/
    .git/
    XY1/
    XY2/
ABC/
    .git/
    ABC/
</code></pre>
","1357","173734","<git><git-subtree><git-filter-branch>"
"2545602","1","Git ignore sub folders","<p>I have a lot of projects in my .Net solution. I would like to exclude all ""bin/Debug"" and ""bin/Release"" folders (and their contents), but still include the ""bin"" folder itself and any dll's contained therein.</p>

<p>.gitignore with ""bin/"" ignores ""Debug"" and ""Release"" folders, but also any dll's contained in the ""bin"" folder.</p>

<p>""bin/Debug"" or ""bin/Release"" in the .gitignore file does not exclude the directories, unless I fully qualify the ignore pattern as ""Solution/Project/bin/Debug"" - which I don't want to do as I will need to include this full pattern for each project in my solution, as well as add it for any new projects added.</p>

<p>Any suggestions?</p>
","158","134365","<git><folders><ignore><gitignore>"
"2545765","1","How can I email someone a git repository?","<p>I have tried:</p>

<pre><code>git archive HEAD --format=zip &gt; archive.zip
</code></pre>

<p>:and then I email archive.zip and at the other end they unzip archive.zip into a folder. But when they try any git commands they find out that this does not produce a valid git repository</p>
","55","12470","<git>"
"448919","1","How can I remove a commit on GitHub?","<p>I ""accidentally"" pushed a commit to GitHub.</p>

<p>Is it possible to remove this commit?</p>

<p>I want to revert my GitHub repository as it was before this commit.</p>
","913","367028","<git><github>"
"9794931","1","Keep file in a Git repo, but don't track changes","<p>I have several files in a CodeIgniter site that I will want to have in the repo but not track any changes on.</p>

<p>For example, I deploy a new installation of this framework to a new client, I want the following files to be downloaded (they have default values CHANGEME) and I just have to make changes specific to this client (database credentials, email address info, custom CSS).</p>

<pre><code>// the production config files i want the files but they need to be updated to specific client needs
application/config/production/config.php
application/config/production/database.php
application/config/production/tank_auth.php
// index page, defines the environment (production|development)
/index.php
// all of the css/js cache (keep the folder but not the contents)
/assets/cache/*
// production user based styling (color, fonts etc) needs to be updated specific to client needs
/assets/frontend/css/user/frontend-user.css
</code></pre>

<p>Currently if I run </p>

<pre><code>git clone git@github.com:user123/myRepo.git httpdocs
</code></pre>

<p>and then edit the files above, all is great. Until I release a hotfix or patch and run <code>git pull</code>. All of my changes are then overwritten. </p>
","74","15572","<git>"
"449541","1","How do you merge selective files with git-merge?","<p>I'm using git on a new project that has two parallel -- but currently experimental -- development branches:</p>

<ul>
<li><code>master</code>: import of existing codebase plus a few mods that I'm generally sure of </li>
<li><code>exp1</code>: experimental branch #1</li>
<li><code>exp2</code>: experimental branch #2</li>
</ul>

<p><code>exp1</code> and <code>exp2</code> represent two very different architectural approaches.  Until I get further along I have no way of knowing which one (if either) will work.  As I make progress in one branch I sometimes have edits that would be useful in the other branch and would like to merge just those.</p>

<p><strong>What is the best way to merge selective files from one development branch to another while leaving behind everything else?</strong></p>

<p>Approaches I've considered:</p>

<ol>
<li><p><code>git merge --no-commit</code> followed by manual unstaging of a large number of edits that I don't want to make common between the branches.</p></li>
<li><p>Manual copying of common files into a temp directory followed by <code>git checkout</code> to move to the other branch and then more manual copying out of the temp directory into the working tree.</p></li>
<li><p>A variation on the above.  Abandon the <code>exp</code> branches for now and use two additional local repositories for experimentation.  This makes the manual copying of files much more straightforward.</p></li>
</ol>

<p>All three of these approaches seem tedious and error-prone.  I'm hoping there is a better approach; something akin to a filter path parameter that would make <code>git-merge</code> more selective.</p>
","835","356326","<git><git-merge><git-cherry-pick>"
"495345","1","Removing selected commit log entries for a Git repository","<p>I would like to remove selected commit log entries from a linear commit tree, so that the entries do not show in the commit log.</p>

<p>My commit tree looks something like:</p>

<pre><code>R--A--B--C--D--E--HEAD
</code></pre>

<p>I would like to remove the B and C entries so that they do not show in the commit log, but changes from A to D should be preserved. Maybe by introducing a single commit, so that B and C become BC and the tree looks like.</p>

<pre><code>R--A--BC--D--E--HEAD
</code></pre>

<p>Or, ideally, after A comes D directly. D' representing changes from A to B, B to C and C to D.</p>

<pre><code>R--A--D'--E--HEAD
</code></pre>

<p>Is this possible? if yes, how?</p>

<p>This is a fairly new project so has no branches as of now, hence no merges as well.</p>
","197","144289","<git><commit>"
"1692892","1","warning: refname 'HEAD' is ambiguous","<p>I am new to Git and I seem to have one branch too many if I execute the following command:</p>

<pre><code>warning: refname 'HEAD' is ambiguous.
</code></pre>

<p>I get the following output:</p>

<pre><code>warning: refname 'HEAD' is ambiguous.
From github.com:dagda1/hornget
 * branch            master     -&gt; FETCH_HEAD
warning: refname 'HEAD' is ambiguous.
warning: refname 'HEAD' is ambiguous.
</code></pre>

<p>If I execute <code>git branch -a</code></p>

<p>I get the following:</p>

<pre><code>HEAD
* master
remotes/emmekappa/master
remotes/origin/HEAD -&gt; origin/master
remotes/origin/master
</code></pre>

<p>I am confused by the <code>remotes/origin/HEAD -&gt; origin/master</code>.</p>

<p>What is this and how can I get rid of the ambiguous branch.</p>

<p>I got to this stage by performing a merge where I think I added the ambiguous branch.</p>
","81","31221","<git>"
"496277","1","Git error: fatal: unable to connect a socket (Invalid argument)","<p>I've got msysGit (Git on Windows) working just fine on my home machine, but at work, where we are behind a Microsoft ISA proxy, I get the following error when I do a git clone:</p>

<pre><code>H:\&gt;git clone git://github.com/akitaonrails/vimfiles.git
Initialized empty Git repository in H:/vimfiles/.git/
github.com[0: 65.74.177.129]: errno=Invalid argument
fatal: unable to connect a socket (Invalid argument)
</code></pre>

<p>I've tried setting the http_proxy environment variable to:</p>

<pre><code>http://our-proxy-server:8088
</code></pre>

<p>I've set the git http.proxy configuration directive:</p>

<pre><code>git config --global http.proxy http://our-proxy-server:8088
</code></pre>

<p>Neither of the above makes a difference.</p>

<p>Doing a git clone with <code>http://</code> instead of <code>git://</code> yields this:</p>

<pre><code>H:\&gt;git clone http://github.com/akitaonrails/vimfiles.git
Initialized empty Git repository in H:/vimfiles/.git/
fatal: http://github.com/akitaonrails/vimfiles.git/info/refs download error - The    requested URL returned error: 407
</code></pre>

<p>407 is of course an authentication error.</p>

<p>So my question is: has anyone managed to get git working from behind a proxy, specifically an ISA proxy? I don't know if it's going to be worth pursing this. Any help very much appreciated.</p>

<p>Thanks!</p>
","42","60708","<windows><git><proxy><msysgit>"
"17911204","1",".gitignore for PhoneGap/Cordova 3.0 projects - what should I commit?","<p>I just tried to create a new phonegap 3.0 project... Note: I'm new to phonegap.
Anyways, I see the project folder contains:</p>

<ul>
<li><code>.cordova</code></li>
<li><code>merges</code></li>
<li><code>platforms</code></li>
<li><code>plugins</code></li>
<li><code>www</code></li>
</ul>

<p>And having tried <code>phonegap local run android</code> I see a lot of binary/generated files in <code>platforms/android</code>.
This leaves me wondering, what parts of this folder structure should I add to my git repository.
Normally, I would consider it extremely poor practice to commit binary files.
Hence, I would normally add patterns like <code>bin/</code>, <code>obj/</code>, <code>*.o</code>, <code>*.pyc</code> etc. to <code>.gitignore</code> to avoid polluting my git repository with things that only serves to create merge conflicts.</p>

<p>Surely, <code>www</code> should be added to git, but what about the other parts of the project. To what extend are they products of the source code, and to what extend are they project configuration?</p>

<p>What do you do? Granted I'm new so I barely understand what makes sense here...</p>
","91","24542","<git><cordova><cordova-3>"
"520650","1","Make an existing Git branch track a remote branch?","<p>I know how to make a new branch that tracks remote branches, but <strong>how do I make an existing branch track a remote branch?</strong></p>

<p>I know I can just edit the <code>.git/config</code> file, but it seems there should be an easier way.</p>
","2281","629817","<git><branch><git-branch>"
"10633564","1","How does one change the language of the command line interface of Git?","<p>I`d like to change the language of git (to english) in my Linux installation and couldn´t find the settings.
How to do it?</p>
","36","12027","<git><localization><environment-variables><locale><.bash-profile>"
"640449","1","git, don't show me *.pyc in the list of untracked files!","<p>When doing:</p>

<pre><code>&gt;git status
</code></pre>

<p>It shows a big list of .pyc files under ""untracked files"".  I don't want it to show these, as it adds noise.</p>

<p>In other words, how do I make git ignore .pyc files all the time and for all projects?</p>

<p><strong>EDIT</strong></p>

<p>I'm not asking for a way to spread my ignored files to other people, I really just mean ""for all projects"", meaning I don't want to configure each new project to ignore .pyc files.</p>

<p><strong>UPDATE</strong></p>

<p>I should add that I'm working on windows, and my git is <a href=""http://code.google.com/p/msysgit/"">msysgit</a></p>

<blockquote>
  <p>Patterns which a user wants git to ignore in all situations (e.g., backup or temporary files generated by the user's editor of choice) generally go into a file specified by core.excludesfile in the user's ~/.gitconfig.</p>
</blockquote>

<p>Is .gitconfig a file or a folder? I don't have such a thing in my home directory (<code>C:\users\&lt;myusername&gt;\</code>)</p>

<p><strong>UPDATE2</strong></p>

<p>Thanks everybody for the responses, </p>

<p>I solved the issues by using:</p>

<pre><code>&gt;git config --global core.excludesfile c:\git\ignore_files.txt
</code></pre>

<p>and putting *.pyc in <code>c:\git\ignore_files.txt</code></p>
","56","46881","<git><version-control><ignore>"
"3555107","1","Git clone particular version of remote repository","<p>I cloned a remote git repository about a month ago. The remote repository has undergone many changes and has now become unstable. Now I need another copy of the repository, version identical to the one I cloned a month ago.</p>

<p>How do I do this?</p>
","85","105291","<git><git-clone>"
"549920","1","Is it possible to alias a branch in Git?","<p>I am looking into using git on a massive scale.  I was hoping to increase adoption and make things easier by calling the master branch trunk. </p>

<p>This can and will give SVN users some feelings of comfort.  I know I can create a branch called trunk but that seems to deviate from the git norms and might cause some users to get confused.  </p>

<p>I know that I can also create and delete tags to my heart's content but when I checkout those tags it tells me it is a non local branch which is just fine with me but probably not what I want to be doing.  </p>

<p>I am a total git newb but a seasoned professional at release and build systems.  </p>

<p><strong>What I want to do is to be able to call master trunk.</strong>  I have seen the ability to alias commands does this apply for the names of versioned objects as well?  </p>

<p>I know git-svn exists and other tools but the overhead of layered repository systems frightens me.</p>
","46","7847","<svn><git><version-control><build-automation>"
"5195859","1","Push a tag to a remote repository using Git?","<p>I have cloned a remote Git repository to my laptop, then I wanted to add a tag so I ran</p>

<pre><code>git tag mytag master
</code></pre>

<p>When I run <code>git tag</code> on my laptop the tag <code>mytag</code> is shown. I then want to push this to the remote repository so I have this tag on all my clients, so I run <code>git push</code> but I got the message:</p>

<blockquote>
  <p>Everything up-to-date</p>
</blockquote>

<p>And if I go to my desktop and run <code>git pull</code> and then <code>git tag</code> no tags are shown. </p>

<p>I have also tried to do a minor change on a file in the project, then push it to the server. After that I could pull the change from the server to my Desktop computer, but there's still no tag when running <code>git tag</code> on my desktop computer.</p>

<p>How can I push my tag to the remote repository so that all client computer can see it?</p>
","782","309274","<git><tags><repository><push><git-push>"
"600079","1","Is there any way to clone a git repository's sub-directory only?","<p>I have my git repo which, at the root, has two sub-dirs</p>

<pre><code>/finisht
/static
</code></pre>

<p>When this was in SVN, <code>/finisht</code> was checked out in one place, while <code>/static</code> was checked out elsewhere, like so:</p>

<pre><code>svn co svn+ssh://admin@domain.com/home/admin/repos/finisht/static static
</code></pre>

<p>Is there anyway to do this with git?</p>
","598","278801","<git><repository><subfolder><git-clone>"
"642264","1","Undo change in git (not rewriting history)","<p>I made a change in a script and committed it. Then I made a few other changes, and pushed them to a remote repository and such.</p>

<p>Then I realised that first change I mentioned was stupid, and want to undo it.. Can I ""unapply"" that commit, without manually copy/pasting the diff?</p>

<p>As an example: I have two files, <code>a.py</code> and <code>b.py</code>:</p>

<pre><code>Commit 1:
I delete a function in a.py

Commit 2:
I change a few lines in b.py

Commit 3:
I change the docstring in a.py
</code></pre>

<p>Can I undo that function deletion, and make it appear as ""commit 4"" (rather than deleting commit 1)</p>
","40","24129","<git><git-revert>"
"7534184","1","Git Alias - Multiple Commands and Parameters","<p>I am trying to create an alias that uses both multiple git commands and positional parameters.  There are stackoverflow pages for each, and it would appear painfully obvious to do both, but I am having trouble.</p>

<p>As an example, I want to switch to branch foo and perform a status.  So in my <code>.gitconfig</code>, I have:</p>

<pre><code>  [alias] 
     chs = !sh -c 'git checkout $0 &amp;&amp; git status'
</code></pre>

<p>which doesn't work.  Whereas something like this will work.</p>

<pre><code>chs = !sh -c 'git checkout $0'

echoes = !sh -c 'echo hi &amp;&amp; echo bye'
</code></pre>

<p>Any insight would be appreciated.</p>

<p>Thanks!</p>
","76","21798","<git><alias><sh>"
"645450","1","Insert a commit before the root commit in Git?","<p>I've asked before about how to <a href=""http://stackoverflow.com/questions/598672/git-how-to-squash-the-first-two-commits"">squash the first two commits</a> in a git repository.</p>

<p>While the solutions are rather interesting and not really as mind-warping as some other things in git, they're still a bit of the proverbial bag of hurt if you need to repeat the procedure many times along the development of your project. </p>

<p>So, I'd rather go through pain only once, and then be able to forever use the standard interactive rebase. </p>

<p>What I want to do, then, is to have an empty initial commit that exists solely for the purpose of being the first. No code, no nothing. Just taking up space so it can be the base for rebase.</p>

<p>My question then is, having an existing repository, how do I go about inserting a new, empty commit before the first one, and shifting everyone else forward?</p>
","142","31520","<git><version-control><rebase><git-rebase>"
"5531362","1","Why git keeps showing my changes when I switch branches (modified,added, deleted files) no matter if I run git add or not?","<p>I'm really new to git and I've been trying to understand why git keeps showing whatever I changed in one branch in another branch when I run git checkout to switch between branches First I tried not using git add and didn't work. However, I tried then using git add, but didn't fix the problem. I'm not using git commit yet.</p>

<p>This is basically what I'm doing:</p>

<pre><code>$ git clone &lt;a_repository&gt;  
$ git branch  
* master  
$ git branch testing  
$ git checkout testing  
...edit a file, add a new one, delete...  
$ git status  
    # On branch testing  
    # Changed but not updated:  
    #   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)  
    #   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)  
    #  
    #       deleted:    file1.txt  
    #  
    # Untracked files:  
    #   (use ""git add &lt;file&gt;..."" to include in what will be committed)  
    #  
    #       file2.txt  
no changes added to commit (use ""git add"" and/or ""git commit -a"")  
$ git branch  
  master  
* testing  
$ git checkout master  
D       file1.txt  
Switched to branch 'master'  
$ git status  
    # On branch master  
    # Changed but not updated:  
    #   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)  
    #   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)  
    #  
    #       deleted:    file1.txt  
    #  
    # Untracked files:  
    #   (use ""git add &lt;file&gt;..."" to include in what will be committed)  
    #  
    #       file2.txt  
no changes added to commit (use ""git add"" and/or ""git commit -a"")  
</code></pre>

<p>I thought that, while using branches, whatever you do in one branch, it's invisible to all the other branches. Is not that the reason of creating branches?</p>

<p>I tried using ""git add"" but the changes are visible in both branches. 
Do I need to run ""git commit"" before switching between branches to avoid this? </p>
","47","10524","<git>"
"2797774","1","Redmine & Git integration","<p>I am considering moving from svn and Trac to git and Redmine. I'm just wondering what everyone's experience is of this. How well does git integrate with Redmine?</p>

<p>I'm pretty set on my decision to change from svn to git - our distributed work, and need to frequently branch and merge would make life considerably easier with git. But we would possibly need to split things into multiple projects for this. From what I have been reading, git and multiple projects don't integrate too smoothly with Trac. That aside, in my investigations into git, Redmine has also caught my attention, and some of the features look very useful.</p>

<p>However, I haven't found as many user experiences of git and Redmine as what I'd like (possibly due to my lack of searching skills...) and so would like to hear your opinions and examples.</p>
","34","35801","<git><redmine>"
"9984223","1","What happens to git commits created in a detached HEAD state?","<p>This is what happened:</p>

<p>I have a branch A. On branch A I committed a bunch of changes. I was not happy with the code, so I checked out the previous commit in branch A. I then made a bunch more changes and committed them on branch A. Now I can not find this commit anywhere. Did I lose this code?</p>
","68","16365","<git>"
"7605469","1","Git Submodules. Pulling into a new clone of the super-project","<p>OK. So I thought I had this licked ... but now ....</p>

<p>I have a project which includes one small library from GitHub as a submodule. In the original version of that super-project the submodule is working as expected. </p>

<p>However, I just cloned the superproject, did what I thought I should : ""git submodule init"", got the directory of the submodule to appear, but it's empty.</p>

<p>If I now try to do </p>

<pre><code>git submodule update
</code></pre>

<p>I get </p>

<pre><code>fatal: Needed a single revision 
Unable to find current revision in submodule path 'external_libraries/BEACHhtml'
</code></pre>

<p>If I try </p>

<pre><code>git submodule foreach git pull
</code></pre>

<p>I get</p>

<pre><code>Entering 'external_libraries/BEACHhtml'
fatal: Where do you want to fetch from today?
Stopping at 'external_libraries/BEACHhtml'; script returned non-zero status.
</code></pre>

<p>In my .git/config, I have this :</p>

<pre><code>[submodule ""external_libraries/BEACHhtml""]
    url = git@github.com:interstar/BEACHhtml.git
</code></pre>

<p>In my .gitmodules I have this : </p>

<pre><code>[submodule ""external_libraries/BEACHhtml""]
path = external_libraries/BEACHhtml
url = git@github.com:interstar/BEACHhtml.git
</code></pre>

<p>Anyone got an idea what's missing?</p>
","49","31238","<git><git-submodules>"
"692246","1","Undo working copy modifications of one file in Git?","<p>After the last commit, I modified a bunch of files in my working copy, but I want to undo the changes to one of those files, as in reset it to the same state as the most recent commit.</p>

<p>However, I only want to undo the working copy changes of just that one file alone, nothing else with it.</p>

<p>How do I do that?</p>
","879","325264","<git><version-control><dvcs><undo>"
"5270760","1","What's the meaning of 'origin' in 'git push origin master'","<p>When I run:</p>

<pre><code>git push origin master
</code></pre>

<p>...what is the meaning of <code>origin</code> in this context?</p>
","44","17622","<git>"
"792611","1","'receive-pack': service not enabled for './.git'","<p>(Solved already, I'm writing this for the next guy)</p>

<p>I was running git daemon on one computer and tried synchronizing with another.</p>

<p>On computer A, I ran:</p>

<pre><code>git daemon --reuseaddr --base-path=. --export-all --verbose
</code></pre>

<p>On computer B, I ran:</p>

<pre><code>git clone git://computerA/.git source # worked
cd source
git pull # worked
git push # failed with ""fatal: The remote end hung up unexpectedly""
</code></pre>

<p>On computer A, the daemon output is:</p>

<pre><code>[5596] Connection from 127.0.0.1:2476
[5596] Extended attributes (16 bytes) exist &lt;host=localhost&gt;
[5596] Request receive-pack for '/.git'
[5596] 'receive-pack': service not enabled for './.git'
[5444] [5596] Disconnected (with error)
</code></pre>

<p>I'm going to post the soultion I found. If you have a more complete answer, please go ahead and add it.</p>
","44","26087","<git>"
"841009","1","Best way to integrate Git with Ant?","<p>I am looking for the best way to integrate Git with Ant. Is there a widely used Ant task for Git? Does anyone have any experience using Git through Ant (e.g. dedicated task, exec call, etc)?</p>
","43","32163","<git><ant><integration>"
"5326008","1","highlight changed lines and changed bytes in each changed line","<p>Open Source project <a href=""http://trac.edgewall.org/"">Trac</a> has an excellent diff highlighter — it highlight changed lines <strong>and changed bytes in each changed line</strong>! See <a href=""https://trac.transmissionbt.com/changeset/12148"">https://trac.transmissionbt.com/changeset/12148</a> or <a href=""http://trac.gajim.org/changeset/297ad7711d20bfee1491768640d9bc5384464363"">http://trac.gajim.org/changeset/297ad7711d20bfee1491768640d9bc5384464363</a> for examples.</p>

<p>Is there way to use the same color highlight (i.e. changed lines <strong>and changed bytes too</strong>) in bash terminal, git or vim <strong>for diff output (patch-file)</strong>?</p>
","39","7483","<git><vim><diff><highlight><word-diff>"
"37219","1","How do you remove a specific revision in the git history?","<p>Suppose your git history looks like this:</p>

<p>1
2
3
4
5</p>

<p>Where 1-5 are separate revisions. You need to remove 3 while still keeping 1, 2, 4 and 5. How to do it?</p>

<p>Is there an efficient method when there are hundreds of revisions after the one to be deleted?</p>
","129","57118","<git>"
"7685246","1","Should I store git repository in Home or Eclipse Workspace?","<p>I'm just moving from svn to git, and am keen to lay some good foundations.</p>

<p>By default Eclipse wants to store my local clone repository in ~/git.  I'm more comfortable keeping all data for a task in the same workspace - so I'm inclined to keep it in my workspace.</p>

<p>Are there any significant pros/cons I should consider?</p>

<p>I don't intend doing a lot of branching - I'm really going down the dvcs route mostly to overcome some unreliable internet comms issues.</p>
","36","17005","<java><eclipse><git>"
"14904644","1","How do I use vimdiff to resolve a conflict?","<p>I just merged a branch into my master in git and I got <code>Automatic merge failed; fix conflicts and then commit the result.</code> Now I ran <code>git mergetool</code> and vimdiff opened with the image below. I don't know how to use vimdiff. What does each panel here mean and how should I proceed to fix the merge conflict?</p>

<p><img src=""http://i.stack.imgur.com/kxn1g.png"" alt=""enter image description here""></p>
","74","32506","<git><vim><git-merge><mergetool><git-conflict-resolution>"
"737673","1","How to read the mode field of git-ls-tree's output","<pre><code>$ git ls-tree fb3a8bdd0ce
100644 blob 63c918c667fa005ff12ad89437f2fdc80926e21c    .gitignore
100644 blob 5529b198e8d14decbe4ad99db3f7fb632de0439d    .mailmap
100644 blob 6ff87c4664981e4397625791c8ea3bbb5f2279a3    COPYING
040000 tree 2fb783e477100ce076f6bf57e4a6f026013dc745    Documentation
100755 blob 3c0032cec592a765692234f1cba47dfdcc3a9200    GIT-VERSION-GEN
100644 blob 289b046a443c0647624607d471289b2c7dcd470b    INSTALL
100644 blob 4eb463797adc693dc168b926b6932ff53f17d0b1    Makefile
100644 blob 548142c327a6790ff8821d67c2ee1eff7a656b52    README
...
</code></pre>

<p>I know the last 3 oct digits are file mode, but what are the first 3 digits for?
I can't find it out in git user's manual.</p>
","52","11704","<git><file-permissions><git-ls-tree>"
"2941517","1","How to fix committing to the wrong Git branch?","<p>I just made a perfectly good commit to the wrong branch.
How do I undo the last commit in my master branch and then take those same changes and get them into my upgrade branch?</p>
","309","43174","<git><git-commit>"
"2941567","1","How do I show just the names and commit titles since a tag in git?","<p>I'm trying to use tags for release management in git--I create a tag for each release. I'd like to be able to create release notes by listing the comment titles for every commit since a tag, or between 2 tags. I can't seem to find any way to do this.</p>
","46","12021","<git>"
"737854","1","What is the preferred way to manage schema.rb in git?","<p>I don't want to add <code>schema.rb</code> to <code>.gitignore</code>, because I want to be able to load a new database schema from that file.  However, keeping it checked in is causing all sorts of spurious conflicts that are easily resolved by a fresh <code>db:migrate:reset</code>.</p>

<p>Basically I want a way to:</p>

<ol>
<li>Keep schema.rb in the repository for deploy-time database setup</li>
<li>Keep schema.rb in '.gitignore' for general development</li>
</ol>

<p>There would be one or two people responsible for updating <code>schema.rb</code> and knowing that it was correct.</p>

<p>Is there a way I can have my cake and eat it, too?</p>
","47","12974","<ruby-on-rails><git><workflow><schema.rb>"
"2825428","1","Why should I use core.autocrlf=true in Git?","<p>I have a Git repository that is accessed from both Windows and OS X, and that I know already contains some files with CRLF line-endings. As far as I can tell, there are two ways to deal with this:</p>

<ol>
<li><p>Set <code>core.autocrlf</code> to <code>false</code> everywhere,</p></li>
<li><p>Follow the instructions <a href=""http://stackoverflow.com/questions/1510798/trying-to-fix-line-endings-with-git-filter-branch-but-having-no-luck/1511273#1511273"">here</a> (echoed on GitHub's help pages) to convert the repository to contain only LF line-endings, and thereafter set <code>core.autocrlf</code> to <code>true</code> on Windows and <code>input</code> on OS X. The problem with doing this is that if I have any binary files in the repository that: </p>

<ol>
<li>are not correctly marked as binary in gitattributes, and </li>
<li>happen to contain both CRLFs and LFs,</li>
</ol>

<p>they will be corrupted. It is possible my repository contains such files.</p></li>
</ol>

<p>So why shouldn't I just turn off Git's line-ending conversion? There are a lot of vague warnings on the web about having <code>core.autocrlf</code> switched off causing problems, but very few <em>specific</em> ones; the only that I've found so far are that kdiff3 cannot handle CRLF endings (not a problem for me), and that some text editors have line-ending issues (also not a problem for me).</p>

<p>The repository is internal to my company, and so I don't need to worry about sharing it with people with different autocrlf settings or line-ending requirements.</p>

<p>Are there any other problems with just leaving line-endings as-is that I am unaware of?</p>
","169","121170","<git><line-endings>"
"1696433","1","How to exit a git status list in terminal?","<p>I'm new to Git and Terminal.  How can I exit a listing mode generated by the git status command?</p>
","186","80576","<git><terminal>"
"1282639","1","switch git branch without files checkout","<p>Is it possible in git to switch to another branch without checking out all files? After switching branch I need to delete all files, regenerate them, commit and switch back. So checking out files is just a waste of times (and there are about 14000 files - it is a long operation).</p>

<p>To make everything clear:</p>

<p>I need all this to upload <a href=""http://toy.github.com/rb/"">documentation</a> to github.</p>

<p>I have repo with gh-pages branch. When I rebuild documentation locally, I copy it to repo directory, commit and push to github. But I was not happy because I had two copies of documentation locally. And I decided to creaty empty branch and after commiting switch to empty and delete files. But switching back is a long operation - so I asked this question.</p>

<p>I know that I can just leave on gh-pages branch and delete files, but I don't like dirty working trees )</p>
","50","13669","<git><branch><checkout>"
"738154","1","What does git ""updating currently checked out branch"" warning mean?","<p>When I do a git push, I see the following:</p>

<pre><code>warning: updating the currently checked out branch; this may cause confusion,
as the index and working tree do not reflect changes that are now in HEAD.
</code></pre>

<p>I Googled for this message, and all I can find is a <a href=""http://article.gmane.org/gmane.comp.version-control.git/107814"">git mailing list discussion</a> where the authors try to decide exactly how to make this message better to communicate to me what the real problem is.</p>

<p>How did I cause this, and how do I fix it?</p>
","32","13642","<git>"
"5358336","1","have git list all tags along with the full message","<p>I want git to list all tags along with the full annotation or commit message. Something like this is close:</p>

<pre><code>git tag -n5
</code></pre>

<p>This does exactly what I want except that it will only show up to the first 5 lines of the tag message.</p>

<p>I guess I can just use a very large number. What is the highest number I can use here? Is it the same on every computer?</p>

<p><strong>UPDATE</strong>: I have had much time to think about this, and now I think I don't necessarily want to show the entire message if it is extraordinarily long. Something like this seems to work fine for me:</p>

<pre><code>git tag -n99
</code></pre>

<p>If the tag message is really longer than 99 lines, I don't want to see all of it. But Git is extremely complex and flexible. In what cases would this not be the best solution? I noticed many of the posted solutions used the <code>-l</code> otion, but isn't that just for specifying a pattern to search for?</p>
","174","59315","<git><tags><git-tag>"
"12514197","1","Convert a git folder to a submodule retrospectively?","<p>Quite often it is the case that you're writing a project of some kind, and after a while it becomes clear that some component of the project is actually useful as a standalone component (a library, perhaps). If you've had that idea from early on, then there's a fair chance that most of that code is in it's own folder.</p>

<p>Is there a way to convert one of a git project's sub directories into a submodule? Ideally this would happen such that all of the code in that directory is removed from the parent project , and the submodule project is added in it's place, with all the appropriate history, and such that all the parent project commits point to the correct submodule commits.</p>
","49","6558","<git><git-submodules>"
"7167645","1","How do I create a new git branch from an old commit?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  [Branch from a previous commit using git]</p>
  
  <p><strong>Link to a more recent/less clear question</strong>:
  (<a href=""http://stackoverflow.com/questions/2816715/branch-from-a-previous-commit-using-git"">Branch from a previous commit using git</a>)  </p>
</blockquote>



<p>I have the git branch called: <code>jzbranch</code>
and an old commit id: <code>a9c146a09505837ec03b</code></p>

<p>How do I create a new branch <code>justin</code> from the information listed above</p>
","227","86710","<git><branch><commit>"
"957928","1","Is there a way to get the git root directory in one command?","<p>Mercurial has a way of printing the root directory (that contains .hg) via</p>

<pre><code>hg root
</code></pre>

<p>Is there something equivalent in git to get the directory that contains the .git directory?</p>
","301","78245","<git><version-control>"
"11987914","1","How do I reword the very first git commit message?","<h2>I have a working tree containing 3 commmits:</h2>

<p>➜  ~myproject git:(master) <code>git log</code></p>

<pre><code>commit a99cce8240495de29254b5df8745e41815db5a75
Author: My Name &lt;my@mail.com&gt;
Date:   Thu Aug 16 00:59:05 2012 +0200

    .gitignore edits

commit 5bccda674c7ca51e849741290530a0d48efd69e8
Author: My Name &lt;my@mail.com&gt;
Date:   Mon Aug 13 01:36:39 2012 +0200

    Create .gitignore file

commit 6707a66191c84ec6fbf148f8f1c3e8ac83453ae3
Author: My Name &lt;my@mail.com&gt;
Date:   Mon Aug 13 01:13:05 2012 +0200

    Initial commit (with a misleading message)
</code></pre>

<h2>Now I wish to <a href=""http://git-scm.com/docs/git-rebase""><code>reword</code></a> the commit message of my <em>first commit</em> (6707a66)</h2>

<p>➜  ~myproject git:(master) <code>git rebase -i 6707</code></p>

<p>(…entering vim)</p>

<pre><code>pick 5bccda6 Create .gitignore file
pick a99cce8 .gitignore edits

# Rebase 6707a66..a99cce8 onto 6707a66
#
# Commands:
#  p, pick = use commit
#  r, reword = use commit, but edit the commit message
#  e, edit = use commit, but stop for amending
#  s, squash = use commit, but meld into previous commit
#  f, fixup = like ""squash"", but discard this commit's log message
#  x, exec = run command (the rest of the line) using shell
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
</code></pre>

<p>In this case, I wish to correct (<code>reword</code> in git parlance) the commit message in question:</p>

<blockquote>
  <p>Initial commit (with a misleading message)</p>
</blockquote>

<p>…to something appropriate.</p>

<p>Unsurprisingly, my attempt above didn't succeed since the first commit obviously doesn't have any <em>parent</em> commit. (And when you <code>rebase</code>, you need to reference the next oldest commit <em>prior</em> to the one you wish to <code>reword</code>, right?)</p>

<p>The gist of my question, thus, can you achieve this by any other means of doing it?</p>
","34","5636","<git><message><git-rebase><git-commit><revision-history>"
"3168370","1","git: how to move some commits to new branch","<p>I have been working in straight line:</p>

<pre><code>A---B---C---D---E---F (master:HEAD)
</code></pre>

<p>Now I want to move backward:</p>

<pre><code>git checkout C
</code></pre>

<p>and move few last commits to a new branch:</p>

<p>Option 1:</p>

<pre><code>          D---E---F (new:HEAD)
         /
A---B---C (master)
</code></pre>

<p>Option 2:</p>

<pre><code>          F (new:HEAD)
         /
A---B---C (master)
</code></pre>

<p>How to rebase to Option 1 and how to Option 2?</p>
","39","6341","<git>"
"8329485","1","""Unable to find remote helper for 'https'"" during git clone","<p>I am unable to clone HTTPS repositories. I can clone SSH repos fine, but not HTTPS repos. I cannot test the GIT protocol since I am behind a corporate firewall.</p>

<p>This is what I am trying to do:</p>

<pre><code>$ git clone https://github.com/nvie/gitflow.git
Cloning into gitflow...
fatal: Unable to find remote helper for 'https'
</code></pre>

<p>I have so far tried the following (based on Google searches)</p>

<ul>
<li>Purging and installing Git through <code>apt-get</code></li>
<li>Installing <code>build-deps</code> for Git through <code>apt-get</code></li>
<li>Installing curl dev libraries </li>
<li>Installing expat libraries</li>
<li>Downloading Git source and building using:
<ul>
<li><code>./configure --prefix=/usr --with-curl --with-expat</code></li>
<li>Also tried pointing configure at curl binary (<code>./configure --prefix=/usr --with-curl=/usr/bin/curl</code>)</li>
</ul></li>
</ul>

<p>I have tried everything I can find on the internet with no luck. Can anyone help me?</p>

<p>Git version = 1.7.6.4</p>

<p>OS = Ubuntu 11.04</p>
","122","93137","<linux><git><ubuntu>"
"7775881","1","Using Git for writing thesis","<p>I am planning to use Git for writing my thesis with Latex. As Git is specifically designed for software development, would it be feasible for my requirements? If it is a good choice for me, then what special and unique features are available in Git which are ideal for writing a thesis. Also I want to know what precautions I should take before getting into the Git work flow. I am a complete beginner for Git, so what should be my starting point before I get into it.</p>
","41","12619","<git><version-control>"
"1754491","1","Is there a way to configure git repository to reject 'git push --force'?","<p>I was wondering is there a way to prevent '<code>git push --force</code>' on a repository (only on master branch)?</p>

<p>Assume I have remote git repository and do:</p>

<ul>
<li>'<code>git push</code>' to 'master'. It works.</li>
<li>'<code>git push --force</code>' to 'branch-1'. It works.</li>
<li>'<code>git push --force</code>' to 'master'. It is rejected.</li>
</ul>

<p>Is it even possible?</p>

<p>Thanks for any answers and suggestions.</p>

<p>BR,
Dawid.</p>
","35","9383","<git>"
"7632454","1","How do you use ""git --bare init"" repository?","<p>I need to create a central Git repository but I'm a little confused...</p>

<p>I have created a bare repository (in my git server, machine 2) with:</p>

<pre><code>$ mkdir test_repo
$ git --bare init
</code></pre>

<p>Now I need to push files from my local repository (machine 1) to the bare repository (machine 2). I have access to machine 2 by SSH. The thing is that I think I don't understand the concept of a bare repository...</p>

<p>What is the right way of storing my code in the bare repository? How can I commit from my local repository to the bare repository?</p>

<p>Is the right way of having a central repository to have a bare repository?</p>

<p>I'm a little confused with this subject. Please give me a clue on this.</p>
","157","137522","<git>"
"17454235","1","How to git stash pop specific stash in 1.8.3?","<p>I just upgraded git. I'm on git version 1.8.3.</p>

<p>This morning I tried to unstash a change 1 deep in the stack.</p>

<p>I ran <code>git stash pop stash@{1}</code> and got this error.</p>

<pre><code>fatal: ambiguous argument 'stash@1': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git &lt;command&gt; [&lt;revision&gt;...] -- [&lt;file&gt;...]'
</code></pre>

<p>I've tried about 20+ variations on this as well as using <code>apply</code> instead of <code>pop</code> with no success. What's changed? Anyone else encounter this?</p>
","36","19584","<git>"
"3011402","1","Leaving Github, how to change the origin of a Git repo?","<p>I'm hosting a project in Github, but now I purchased a plan with Dreamhost that includes shell access and Git.</p>

<pre><code>      Github [Origin]
       /         \
  pull/           \pull
     /push     push\
    /               \  
Laptop           Dreamhost
(cloned)          (cloned)
</code></pre>

<p>I would like to delete my repo from Github, and starting push directly to DH.</p>

<p>How do I change origin in my Laptop, and should I delete the origin in Dreamhost?</p>
","45","20927","<git><version-control><github><dreamhost>"
"3011625","1","git mv and only change case of directory","<p>While I found similar <a href=""http://stackoverflow.com/questions/1596653/how-to-change-case-of-a-file-in-git-under-cygwin"">question</a> I didn't find an answer to my problem</p>

<p>When I try to rename the directory from FOO to foo via <code>git mv FOO foo</code> I get  </p>

<pre><code>fatal: renaming 'FOO' failed: Invalid argument
</code></pre>

<p>OK. So I try <code>git mv FOO foo2 &amp;&amp; git mv foo2 foo</code></p>

<p>But when I try to commit via <code>git commit .</code> I get</p>

<pre><code># On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
# foo
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>When I add the directory via <code>git add foo</code> nothing changes and <code>git commit .</code> gives me the same message again. </p>

<p>What am I doing wrong? I thought I'm using a case-sensitive system (OSX) why can't I simply rename the directory?</p>
","169","39653","<osx><git><version-control><case-sensitive>"
"19742345","1","What is the format for --date parameter of git commit","<p>I need to overwrite the date of the commit of git, all the documentation points to --date parameter, but then leaves one without a clue to the appropriate format. I've tried every permutation i can think of, and i'm getting ""fatal: invalid date format:"" error for each and every one.</p>
","31","5950","<git><command-line-arguments>"
"3044684","1","How do you revert a git file to its staging area version?","<p>Let's say I have a file named <code>a.txt</code>. I add it to the staging area, and then I modify it. How could I return it to the way it was when I added it?</p>
","35","4740","<git>"
"2364978","1","why do I have to hit q at the end of git log","<pre><code>git log -n 20 --pretty=oneline
</code></pre>

<p>I am telling git that I need to see only last 20 commits. I hate to hit Q to get rid of END. Is there a way out so that I don't have to hit q.</p>
","70","10954","<git>"
"3046436","1","How do you stop tracking a remote branch in Git?","<p>How do you stop tracking a remote branch in <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a>?</p>

<p>I am asking to stop tracking because in my concrete case, I want to delete the local branch, but not the remote one. Deleting the local one and pushing the deletion to remote will delete the remote branch as well:</p>

<ul>
<li><a href=""http://stackoverflow.com/q/2003505/367456"">How do I delete a Git branch both locally and in GitHub?</a></li>
</ul>

<p>Can I just do <code>git branch -d the_branch</code>, and it won't get propagated when I later <code>git push</code>? </p>

<p>Will it only propagate if I were to run <code>git push origin :the_branch</code> later on?</p>
","256","86159","<git><branch><git-track>"
"1156069","1","How to configure Mac OS X term so that git has color?","<p>I've seen a Mac OS X git demo online in which it's configured to have multiple colors.</p>

<p>For example, his prompt is amber, his <code>ls</code> directory is purple and his <code>git diff</code> output has ~ 4 colors (pink, light green, red, pale yellow).</p>

<p>Can you tell me how can I configure Mac OS X terminal to achieve that?  It's definitely Mac OS X Terminal.app, not iTerm.</p>
","178","51801","<osx><git><command-line-interface>"
"791959","1","Download a specific tag with Git","<p>I'm trying to figure out how do download a particular tag of a Git repository - it's one version behind the current version.</p>

<p>I saw there was a tag for the previous version on the git web page, with object name of something long hex number. </p>

<p>But the version name is ""<code>Tagged release 1.1.5</code>"" according the site.</p>

<p>I tried a command like this (with names changed):</p>

<pre><code>git clone http://git.abc.net/git/abc.git my_abc
</code></pre>

<p>And I did get something - a directory, a bunch of subdirectories, etc.  </p>

<p>If it's the whole repository, how do I get at the version I'm seeking? If not, how do I download that particular version? </p>
","1157","686419","<git><git-clone><git-tag>"
"114698","1","How do I create a readable diff of two spreadsheets using git diff?","<p>We have a lot of spreadsheets (xls) in our source code repository.  These are usually edited with gnumeric or openoffice.org, and are mostly used to populate databases for unit testing with <a href=""http://www.dbunit.org/"">dbUnit</a>.  There are no easy ways of doing diffs on xls files that I know of, and this makes merging extremely tedious and error prone.</p>

<p>I've tried to converting the spreadsheets to xml and doing a regular diff, but it really feels like it should be a last resort.  </p>

<p>I'd like to perform the diffing (and merging) with <code>git</code> as I do with text files. How would I do this, e.g. when issuing <code>git diff</code>?</p>
","139","137468","<git><version-control><merge><diff><xls>"
"15143042","1","can't push to branch after rebase","<p>We use git and have a master branch and developer branches. I need to add a new feature and then rebase the commits to master, then push master to CI server.</p>

<p>The problem is that if I have conflicts during rebase I cannot push to my remote developer branch (on Github) after the rebase is complete, until I pull my remote branch. This causes duplicate commits. When there are no conflicts, works as expected.</p>

<p>question: after rebase and conflict resolution, how do I sync up my local and remote developer branches without creating duplicate commits</p>

<p>Setup:</p>

<pre><code>// master branch is the main branch
git checkout master
git checkout -b myNewFeature

// I will work on this at work and at home
git push origin myNewFeature

// work work work on myNewFeature
// master branch has been updated and will conflict with myNewFeature
git pull --rebase origin master

// we have conflicts
// solve conflict
git rebase --continue

//repeat until rebase is complete
git push origin myNewFeature

//ERROR
error: failed to push some refs to 'git@github.com:ariklevy/dropLocker.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

// do what git says and pull
git pull origin myNewFeature

git push origin myNewFeature

// Now I have duplicate commits on the remote branch myNewFeature
</code></pre>

<h2>EDIT</h2>

<p><strong>So it sounds like this will break the workflow:</strong></p>

<p>developer1 working on myNewFeature
developer2 working on hisNewFeature
both use master as main branch</p>

<p>developer2 merges myNewFeature into hisNewFeature</p>

<p>developer1 rebases, resolves conflicts, then force pushes to remote branch for myNewFeature</p>

<p>a couple days later, developer2, merges myNewFeature into hisNewFeature again</p>

<p>Will this cause the other developers to hate developer1?</p>
","38","27576","<git><merge><rebase><git-merge><git-rebase>"
"136178","1","git diff - handling long lines?","<p>I'm running <a href=""http://www.git-scm.com/docs/git-diff"">git-diff</a> on a file, but the change is at the end of a long line.</p>

<p>If I use cursor keys to move right it loses colour coding and worse the lines don't line up, making it harder to track the change.</p>

<p>Is there a way to prevent that problem, or to simply make the lines wrap instead?</p>

<p>(running git 1.5.5 via mingw32)</p>
","197","29073","<git><diff><wrap>"
"13064613","1","How to prune local tracking branches that do not exist on remote anymore","<p>With <code>git remote prune origin</code> I can remove the remote branches that are not any more on the remote.</p>

<p>But I want to remove also those local branches that were created from those remote branches (a check if they are unmerged would be nice).</p>

<p>How can I do this?</p>
","160","49041","<git>"
"7217894","1","moving changed files to another branch for check-in","<p>This often happens to me: I write some code, go to check in my changes, and then realize I'm not in the proper branch to check in those changes. However I can't switch to another branch without my changes reverting. Is there a way to move changes to another branch to be checked in there?</p>
","74","21644","<git><github>"
"5613345","1","how to shrink the .git folder","<p>My current base has a total size of approx. 200MB.</p>

<p>but my .git folder has an amazing size of 5GB (!). since i push my work to an external server, i don't need any big local history...</p>

<p>how can i shrink the .git folder to free some space on my notebook? Can i delete all changes, that are older, than 30 days?</p>

<p>thanks a lot for any help :)</p>
","49","15681","<linux><git>"
"6004453","1","How to remove multiple deleted files in Git repository","<p>I have deleted some files and git status shows as below.</p>

<p>I have committed and pushed. </p>

<p>GitHub still shows the deleted files in the repository. How can I delete files in the GitHub repository?</p>

<pre><code># On branch master
# Changes not staged for commit:
#   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   deleted:    modules/welcome/language/english/kaimonokago_lang.php
#   deleted:    modules/welcome/language/french/kaimonokago_lang.php
#   deleted:    modules/welcome/language/german/kaimonokago_lang.php
#   deleted:    modules/welcome/language/norwegian/kaimonokago_lang.php
</code></pre>

<p>If I use <code>git rm</code>, it gives the following.</p>

<pre><code>usage: git rm [options] [--] &lt;file&gt;...

-n, --dry-run         dry run
-q, --quiet           do not list removed files
--cached              only remove from the index
-f, --force           override the up-to-date check
-r                    allow recursive removal
--ignore-unmatch      exit with a zero status even if nothing matched
</code></pre>
","172","91187","<git><git-rm>"
"1329291","1","Ignoring an already checked-in directory's contents?","<p>I have a git repository that's used only to hold graphics and sound files used in several projects. They are all in one directory without sub-directories. Now I just created a script to copy these assets over from another, structured directory, with several levels of sub-directories.</p>

<p>Now I only want the (source) hierarchical file structure to be tracked by git, and the (target) flat directory (with all the files in one pile) should be ignored.</p>

<p>I've added the target directory to .gitignore, but git is still tracking changes in it. I thought if I commit the deletion of the old file in the target directory, git might stop tracking the new contents (copied in by the script), but it doesn't.</p>

<p>How do I make git forget about the target directory?</p>
","169","49692","<git><version-control>"
"1818895","1","Keep ignored files out of git status","<p>I would like to stop Git from showing ignored files in <code>git status</code>, because having tons of documentation and config files in the list of <em>Changed but not updated</em> files, renders the list half-useless.</p>

<p>Is it normal for Git to show these files? </p>

<p>I put the ignore information in a <code>.gitignore</code> file in the root directory of the Git repository and they are not added when using <code>git add .</code> but it seems that they are not fully ignored either, as they show up in the aforementioned list and <strong>do not</strong> show up in the list printed by <code>git ls-files --others -i --exclude-standard</code>. Only files matched by the patterns in <code>~/.gitignore</code> show up there.</p>

<p>Could it be because at an earlier stage I didn't ignore them and they were thus committed at least once?</p>
","46","15866","<git><gitignore>"
"3211809","1","Git diff between given two tags","<p>I want to do a diff between two tags and committed changes between those two tags, could you please tell me the command?</p>
","209","79823","<git>"
"5613902","1","How to ""pull"" from a local branch into another one?","<p>This sounds so simple, but I just can't figure it out. I made an experimental branch a while ago, and now I'd like to pull in all the changes that happened on master since I made it. This is all local. I want to pull from local master into local my_branch, but I can't do it. This doesn't seem to work, telling me that master isn't a git repository:</p>

<pre><code>git pull master
</code></pre>
","77","34879","<git>"
"9629538","1","If I fork someone else's private Github repo into my account, is it going to appear in my account as a public repo?","<p>Someone gave me access to one of their private repo on Github. What I want to do is to fork that project into my own account, so I could make use of Github's pull request feature.</p>

<p>I only have a basic account on Github, so I cannot make private repos on my own, but if I fork someone else's private repo into my account, is it going to appear in my account as public?</p>
","161","29067","<git><github><repository><private>"
"3212459","1","Is there a command to undo git init?","<p>I just Git init'ed a repos with a wrong user, and want to undo it.  Is there any command for this?  Do I actually have to go in and edit the .git directory?</p>
","285","83705","<git>"
"4873980","1","Git diff says subproject is dirty","<p>I have just run a git diff, and I am getting the following output for all of my approx 10 submodules </p>

<pre><code>diff --git a/.vim/bundle/bufexplorer b/.vim/bundle/bufexplorer
--- a/.vim/bundle/bufexplorer
+++ b/.vim/bundle/bufexplorer
@@ -1 +1 @@
-Subproject commit 8c75e65b647238febd0257658b150f717a136359
+Subproject commit 8c75e65b647238febd0257658b150f717a136359-dirty
</code></pre>

<p>What does this mean? How do I fix it?</p>
","122","37486","<git><git-submodules>"
"7686582","1","Finding most changed files in Git","<p>How can I show files in Git which change most often?</p>
","37","3374","<git><shell>"
"4885999","1","With GitHub how do I push all branches when adding an existing repo?","<p>I created a new GitHub repo - I want to put my existing repo there.<br>
I followed the instructions:</p>

<pre><code>cd existing_git_repo
git remote add origin git@github.com:acme-org/myprj.git
git push origin master
</code></pre>

<p>This only pushes the master branch to GitHub.<br>
How do I push everything (including all branches) in my existing repo to my new GitHub repo? </p>
","96","34310","<git><github>"
"12066100","1","git pull error ""The requested URL returned error: 503 while accessing""","<p>I've been facing problems accessing my git repository lately.  It worked perfectly fine earlier but now I cannot run any command on CLI. I can however, access the corresponding Web Page, Could someone help me how to resolve this issue?</p>
","36","37081","<git><github><bitbucket>"
"5655839","1","Git-svn and Eclipse?","<p>Is there a plugin for Eclipse for git-svn? I'm looking for a way to handle the SVN repo with Git (for fast branch switching etc.)</p>
","43","17368","<eclipse><git><eclipse-plugin><git-svn>"
"14534397","1","Squash all my commits into one for GitHub pull request","<p>I made a pull request on GitHub. Now the owner of the repository is saying to squash all the commits into one.</p>

<p>When I type <code>git rebase -i</code> Notepad opens with the following content:</p>

<pre><code>noop

# Rebase 0b13622..0b13622 onto 0b13622
#
# Commands:
#  p, pick = use commit
#  r, reword = use commit, but edit the commit message
#  e, edit = use commit, but stop for amending
#  s, squash = use commit, but meld into previous commit
#  f, fixup = like ""squash"", but discard this commit's log message
#  x, exec = run command (the rest of the line) using shell
#
# These lines can be re-ordered; they are executed from top to bottom.
#
# If you remove a line here THAT COMMIT WILL BE LOST.
#
# However, if you remove everything, the rebase will be aborted.
#
# Note that empty commits are commented out
</code></pre>

<p>I searched on Google but I do not understand how to do this.</p>
","36","14498","<git><github><squash>"
"2452226","1","master branch and 'origin/master' have diverged, how to 'undiverge' branches'?","<p>Somehow my master and my origin/master branch have diverged. I actually don't want them to be diverged. How can I view these differences and 'merge' them?</p>
","501","270877","<git><branch>"
"913701","1","Changing remote repository for a git submodule","<p>I've created a git repository with a submodule in it. I'm able to tell the submodule itself to change its remote repository path, but I'm not sure how to tell the parent repository how to change the remote repository path for the submodule.</p>

<p>I wouldn't be surprised if I'm somewhat out of luck and have to do things manually, as even <a href=""http://pitupepito.homelinux.org/?p=24"">deleting</a> submodules isn't easy.</p>
","357","86116","<git><git-submodules>"
"2944469","1","How to commit my current changes to a different branch in git","<p>Sometimes it happens that I make some changes in my working directory and I realize that these changes should be committed in a branch different to the current one. This usually happens when I want to try out new things or do some testing and I forget to create a new branch beforehand, but I don't want to commit dirty code to the master branch.</p>

<p>So, <strong>how can I make that uncommitted changes (or changes stored in the index) be committed to a different branch than the current one?</strong></p>
","339","106078","<git><branch><commit>"
"5532323","1","How to Configure Capistrano to Deploy from Local Git Repository?","<p>What changes do I need to make to the <code>deploy.rb</code> file below to make it deploy my app from a local git repo? If I can't deploy from a local repo, can I have capistrano use the working copying instead?</p>

<pre><code>set :application, ""my_app""
set :repository, "".""
set :local_repository, ""file:///path/to/application/.git""
set :deploy_to, ""/data/www/apps/#{application}""
set :deploy_via, :copy
set :copy_cache, true
set :user, ""dane""
set :use_sudo, false

set :scm, :git # Should I change this to :none
set :branch, ""master""
</code></pre>
","47","20588","<ruby-on-rails><git><capistrano>"
"1241720","1","Git Cherry-pick vs Merge Workflow","<p>Assuming I am the maintainer of a repo, and I want to pull in changes from a contributor, there are a few possible workflows:</p>

<ol>
<li>I <code>cherry-pick</code> each commit from the remote (in order). In this case git records the commit as unrelated to the remote branch.</li>
<li>I <code>merge</code> the branch, pulling in all changes, and adding a new ""conflict"" commit (if needed).</li>
<li>I <code>merge</code> each commit from the remote branch individually (again in order), allowing conflicts to be recorded for each commit, instead of grouped all together as one. </li>
<li>For completeness, you could do a <code>rebase</code> (same as <code>cherry-pick</code> option?), however my understanding is that this can cause confusion for the contributor. Maybe that eliminates option 1.</li>
</ol>

<p>In both cases 2 and 3, git records the branch history of the commits, unlike 1.</p>

<p><strong>What are the pro's and con's between using either <code>cherry-pick</code> or <code>merge</code> methods described?</strong> My understanding is that method 2 is the norm, but I feel that resolving a large commit with a single ""conflict"" merge, is not the cleanest solution. </p>
","222","94473","<git><merge><cherry-pick>"
"7882603","1","How to revert a Git Submodule pointer to the commit stored in the containing repository?","<p>I have a git submodule in my main git repo. As I understand it, the main repo stores a SHA value (somewhere...), pointing to the specific commit of the submodule that it is ""linked to"". </p>

<p>I went in to my submodule and typed <code>git checkout some_other_branch</code>. I have no idea which commit I came from.</p>

<p>I would like to revert that pointer so that the main repo and the submodule are in sync again.</p>

<p>My first (probably naive) instinct was to say <code>git reset --hard</code> - that seems to work for everything else. To my surprise, it did not work for this scenario.</p>

<p>So I've figured out that I can type <code>git diff</code>, note the SHA ID that the submodule pointer used to have, and then head into the submodule and <code>git checkout [SHA ID]</code>... but surely there must be an easier way?</p>

<p>As I'm still learning about git submodules, please feel free to correct my terminology if there are words for concepts that I don't know.</p>
","45","16856","<git><git-submodules>"
"1822849","1","What are these ^M's that keep showing up in my files in emacs?","<p>So I think it may have to do with textmate, but we work in a small team and are having some issues with full-file conflicts of nearly identical files in git because each line of one branch has a ^M appended to it.</p>

<p>What is this mysterious <code>^M</code> character supposed to do, and where could it be coming from? </p>

<p>Our developers use emacs on Windows/Mac, TextMate on Mac, coda on Mac, and occasionally the wp-admin text editor.</p>

<p>Anybody ever have this issue stemming from one of those?</p>
","70","36048","<git><emacs><newline>"
"5697750","1","What exactly does the ""u"" do? ""git push -u origin master"" vs ""git push origin master""","<p>I'm apparently terrible at using git, despite my best attempts to understand it. </p>

<p>From <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-push.html"">kernel.org</a> for <code>git push</code>:</p>

<blockquote>
  <p>-u</p>
  
  <p>--set-upstream</p>
  
  <p>For every branch that is up to date or successfully pushed, add upstream (tracking) reference, used by argument-less git-pull(1) and other commands. For more information, see <code>branch.&lt;name&gt;.merge</code> in git-config(1).</p>
</blockquote>

<p>Here's <code>branch.&lt;name&gt;.merge</code> from <code>git config</code>:</p>

<blockquote>
  <p><code>branch.&lt;name&gt;.merge</code></p>
  
  <p>Defines, together with <code>branch.&lt;name&gt;.remote</code>, the upstream branch for the given branch. It tells git fetch/git pull which branch to merge and can also affect git push (see push.default). When in branch <code>&lt;name&gt;</code>, it tells git fetch the default refspec to be marked for merging in FETCH_HEAD. The value is handled like the remote part of a refspec, and must match a ref which is fetched from the remote given by <code>""branch.&lt;name&gt;.remote""</code>. The merge information is used by git pull (which at first calls git fetch) to lookup the default branch for merging. Without this option, git pull defaults to merge the first refspec fetched. Specify multiple values to get an octopus merge. If you wish to setup git pull so that it merges into <code>&lt;name&gt;</code> from another branch in the local repository, you can point <code>branch.&lt;name&gt;.merge</code> to the desired branch, and use the special setting . (a period) for <code>branch.&lt;name&gt;.remote</code>.</p>
</blockquote>

<p>I successfully set up a remote repository with github, and I successfully pushed my first commit to it with:</p>

<pre><code>git push -u origin master
</code></pre>

<p>Then, I unwittingly successfully pushed my second commit to my remote repository using:</p>

<pre><code>git commit -m '[...]'
</code></pre>

<p>However, incorrectly thinking I would have to push again to <code>origin</code> from <code>master</code>, I ran:</p>

<pre><code># note: no -u
git push origin master
</code></pre>

<p>What did that do? It didn't seem to have any effect at all. Did I ""undo"" <code>git push -u origin master</code>?</p>
","110","46613","<git>"
"5533050","1",".gitignore exclude folder but include specific subfolder","<p>I have the folder application/ which I add to the .gitignore. Inside the  application/ folder is the folder application/language/gr. How can I include this folder?
I've tried this</p>

<pre><code>application/
!application/language/gr/
</code></pre>

<p>with no luck...</p>
","362","107447","<git><gitignore>"
"5698148","1","Where does the .gitignore file belong?","<p>Does the .gitignore file belong in the .git folder structure somewhere or in the main source files?</p>
","102","60585","<git><gitignore>"
"19973506","1","Cannot ignore .idea/workspace.xml - keeps popping up","<p>Using PHPStorm, I am trying to ignore the <code>workspace.xml</code> which pops up every-time I try to make a git commit.</p>

<p>My <code>.gitignore</code> looks like:</p>

<pre><code>/.idea/
.idea/workspace.xml
</code></pre>

<p>Because at a point the file was committed, I've also executed:</p>

<p><code>git rm --cached .idea/workspace.xml</code> and then committed the removal, pushed to a bare repo.</p>

<p>But the file keeps popping up later when I do changes in the project.</p>

<p>Any ideas on what I am missing?</p>
","56","19346","<git><intellij-idea><phpstorm>"
"17688594","1","How to Diff between local uncommitted changes and origin","<p>Let's say I cloned a repository and started modifying files. I know that if I have local uncommitted changes, I can do a diff as follows <code>git diff test.txt</code> and it will show me the difference between the current local HEAD and the modified, uncommitted changes in the file. If I commit those changes I can diff it against the original repository by using <code>git diff master origin/master</code></p>

<p>But is there any way of diff'ing the local changes with the original repository on the server <em>before</em> committing locally? I tried various permutations of <code>git diff --cached master origin/master</code> with no luck.</p>
","66","39224","<git><git-diff>"
"8450036","1","How to open multiple pull requests on GitHub","<p>When I open a pull request on GitHub, all commits since my last request and all new ones are automatically added to this request. I can't seem to control which commits are added and which are not. When I try to open another pull request, I get an ""Oops! There's already a pull request"" error. Is there any easy way to open multiple pull requests without having to mess around with the command line?</p>
","64","12189","<git><github><pull-request>"
"9702795","1","Large github commit diff not shown","<p>This happens to me both with Compare view as well as standard commits that are large in the amount of files changed.</p>

<p>The screenshot below is from a compare between two branches with 380 files changed. The files at the beginning of the diff log have their diffs visualized but at a certain point down the page it stops visualizing the diffs. I understand you don't want massive pages but I can't seem to find a way to view a file's diff individually. Instead I have to check these both out locally and do the diff manually.</p>

<p>Does anyone have a simpler solution whether it be software driven or (preferably) a link i'm missing on github?</p>

<p><img src=""http://i.imgur.com/ISdfk.jpg"" alt=""Diff screenshot""></p>
","31","8111","<git><github><diff>"
"1895059","1","Revert to a commit by a SHA hash in Git?","<p>I'm not clear on how <code>git revert</code> works. For example, I want to revert to a commit six commits behind the head, reverting all the changes in the intermediary commits in between.</p>

<p>Say its <a href=""http://en.wikipedia.org/wiki/SHA-1"">SHA</a> hash is <code>56e05fced214c44a37759efa2dfc25a65d8ae98d</code>. Then why can't I just do something like:</p>

<pre><code>git revert 56e05fced214c44a37759efa2dfc25a65d8ae98d
</code></pre>

<p>?</p>
","380","263504","<git>"
"4940054","1","How can I switch my git repository to a particular commit","<p>In my git repository, I made 5 commits, like below in my git log:</p>

<pre><code>commit 4f8b120cdafecc5144d7cdae472c36ec80315fdc
Author: Michael 
Date:   Fri Feb 4 15:26:38 2011 -0800

commit b688d46f55db1bc304f7f689a065331fc1715079
Author: Michael
Date:   Mon Jan 31 10:37:42 2011 -0800

commit b364f9dcec3b0d52666c4f03eb5f6efb7e1e7bda
Author: Michael
Date:   Wed Jan 26 13:33:17 2011 -0800

commit 4771e26619b9acba3f059b491c6c6d70115e696c
Author: Michael 
Date:   Wed Jan 26 11:16:51 2011 -0800

commit 6e559cb951b9bfa14243b925c1972a1bd2586d59
Author: Michael 
Date:   Fri Jan 21 11:42:27 2011 -0800
</code></pre>

<p>How can I roll back my previous 4 commits locally in a branch?
In other words, how can I create a branch without my latest 4 commits (assume I have the SHA of that commit from git log)?</p>
","57","41010","<git>"
"964876","1","HEAD and ORIG_HEAD in Git","<p>What do these symbols refer to and what do they mean? </p>

<p>(I can't find any explanation in official documentation)</p>
","157","58667","<git>"
"3743999","1","Write git commit message before 'git commit'","<p>I'm learning Git coming from Perforce.</p>

<p>As far as I can tell you must write the commit message in the same step as when you commit.  Or am I missing how I might write the message earlier and have it hang around until I'm ready to commit.</p>

<p>I really liked the workflow in perforce where you can edit the changelist description at any time, and then checkin when you're ready.  Personally, I like to open the description many times and document as I code, or as I think of noteworthy things to point out.</p>

<p>Possible with Git?</p>
","37","4242","<git>"
"20500411","1","See ""real"" commit date in github (hour/day)","<p>Is there a way to see the date of a commit in github, with day/hour precision? Older commits appear in a ""human readable"" format, such as ""2 years ago"" instead of showing the actual date.</p>

<p><img src=""http://i.stack.imgur.com/Z8Gxb.png"" alt=""old github commit""></p>

<p>If it's not possible to see the actual date on github, is there a easier workaround than <code>git clone</code>?</p>
","52","9520","<git><date><github><commit>"
"5421647","1","How do I connect github to JIRA?","<p>I've been trying to find a way to update JIRA when I commit to github.</p>

<p>It doesn't look like there are any service hooks to do it at github, but you never know, someone might have a ninja way, so I thought I'd ask.</p>
","41","37194","<git><github><jira>"
"7920320","1","Adding a collaborator to my free GitHub account?","<p>Quick question, I created a GitHub account, and I want to give someone write access so he can push just like me, there is a way to add a collaborator with a free plan?, if not, what can I do? (besides buying a paid account, wich Ill do in the future)</p>

<p>Thanks!</p>
","38","36545","<git><version-control><github>"
"343646","1","Ignoring directories in Git repos on Windows","<p>How can I ignore directories or folders in Git using msysgit on Windows?</p>
","447","367541","<windows><git><gitignore><msysgit>"
"343675","1","What are your pros and cons of git after having used it?","<p>I'm using SVN right now, and I've used CVS and VSS in the past. SVN is the current favourite in my books, but I've been hearing a lot about git. Of the people that have used git, what are the pros and cons from your experience?</p>
","39","11997","<git><version-control>"
"3305869","1","Are multiple `.gitignore`s frowned on?","<p>Unless a repo consisted of several independent projects, it seems it would be simplest to just have one <code>.gitignore</code> file at the root of the repo than various ones throughout.  Is there a standard best practice on this or some analysis online of when one approach is better than the other?</p>
","87","24686","<git>"
"2529441","1","How to read the output from git diff`?","<p>The man page for <code>git-diff</code> is rather long, and explains many cases which don't seem to be necessary for a beginner. For example:</p>

<pre><code>git diff origin/master
</code></pre>
","120","38865","<git><diff><git-diff>"
"3745135","1","Push git commits & tags simultaneously","<p>I'm aware of the reason that <code>git push --tags</code> is a separate operation to plain old <code>git push</code>. Pushing tags should be a conscious choice since you don't want accidentally push one. That's fine. But is there a way to push both together? (Aside from <code>git push &amp;&amp; git push --tags</code>.)</p>
","128","26279","<git>"
"5743739","1","How to REALLY show logs of renamed files with git?","<p>I'm relatively new to git, I used Subversion before.</p>

<p>I noticed that most of the graphical git front-ends and IDE plugins don't seem to be able to display the history of a file if the file has been renamed. When I use </p>

<pre><code>git log --follow
</code></pre>

<p>on the command line, i can see the whole log across renames. </p>

<p><a href=""http://kerneltrap.org/mailarchive/git/2009/1/30/4856404/thread"">According to Linus Torvalds</a> the --follow switch is a ""SVN noob"" pleaser, serious git users don't use it: </p>

<blockquote>
  <p>--follow is a total hack, meant to just satisfy ex-SVN users who never
  knew anything about things like
  parenthood or nice revision graphs
  anyway.</p>
  
  <p>It's not totally fundamental, but the
  current implementation of ""--follow""
  is really a quick preprocessing thing
  bolted onto the revision walking
  logic, rather than being anything
  really integral.</p>
  
  <p>It literally was designed as a ""SVN
  noob"" pleaser, not as a ""real git
  functionality"" thing. The idea was
  that you'd get away from the (broken)
  mindset of thinking that renames
  matter in the big picture.</p>
</blockquote>

<p><strong>My Question</strong>: How do the hardcore git users among you get the history of a file when it was renamed? What is the 'real' way to do this?</p>
","60","12923","<git>"
"8083282","1","How do I remove a big file wrongly committed in git","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/2100907/how-to-purge-a-huge-file-from-commits-history-in-git"">How to purge a huge file from commits history in Git?</a>  </p>
</blockquote>



<p>I did a stupid thing. Imagine that I committed a 100MB file. Than I see this and delete this file and commit again. This is normal procedure to delete a file. </p>

<p>But now the side effect is that my history is heavy because it's saved this large file (I believe this is the why it is heavy). I am only using local git, so I do not synchronize in any server.</p>

<p>How can I definitively remove this file and save disk space?</p>
","32","20186","<git><git-rewrite-history>"
"28983842","1","Remote rejected (shallow update not allowed) after changing Git remote URL","<p>I have a project under Git version control that I worked on both a server and my local computer. I originally had the remote origin set as my local computer but I would now like to change that to BitBucket.</p>

<p>On the server I used the command</p>

<pre><code>git remote set-url origin bitbucket_address
</code></pre>

<p>But now when I try to push my project I get the error</p>

<pre><code> ! [remote rejected] master -&gt; master (shallow update not allowed)
</code></pre>

<p>What is causing this and how do I fix it?</p>
","48","8347","<git>"
"10181057","1","Unlink of file failed","<p>I'm trying to do a git pull and I get the following error:</p>

<blockquote>
  <p>Unlink of file 'lib/xxx.jar' failed. Should I try again? (y/n)</p>
</blockquote>

<p>No matter if I select y or n it's not possible to get to a state where I can pull or push.</p>
","133","46959","<windows><git>"
"22310007","1","Differences between Git-scm, msysGit & Git for Windows","<p>What is the difference between <code>git-scm</code> (downloaded from <a href=""http://git-scm.com"" rel=""nofollow"">git-scm.com</a>) and msysGit (hosted on <a href=""https://code.google.com/p/msysgit/downloads/list"" rel=""nofollow"">Google Code</a>, <a href=""https://github.com/msysgit/msysgit/"" rel=""nofollow"">Github</a>, and probably others)? They both seem pretty similar, and even though I have git-scm, I have applied fixes specified for msysGit and they seem to work fine.</p>

<p>Also, which one, if either, is <code>Git for Windows</code>, and are both called <code>Git Bash</code>, or do both have the <code>Git Bash</code> shell, or only one of the two?</p>
","40","6758","<windows><git><msysgit><git-bash>"
"1474115","1","Find tag information for a given commit","<p>Is there a way to get the tag associated with a commit number in Git? </p>

<p>For releases I usually tag with something like v1.1.0.  During my build script I am creating a fwVersion.c file that contains the current git info.  Currently, I have commit, and branch info in the file, but I would like to add the tag.</p>

<p>Is this possible?</p>
","45","16900","<git>"
"1904860","1","How to remove unreferenced blobs from my git repo","<p>I have a GitHub repo that had two branches - master &amp; release.</p>

<p>The release branch contained binary distribution files that were contributing to a very large repo size (> 250MB), so I decided to clean things up.</p>

<p>First I deleted the remote release branch, via <code>git push origin :release</code></p>

<p>Then I deleted the local release branch. First I tried <code>git branch -d release</code>, but git said <em>""error: The branch 'release' is not an ancestor of your current HEAD.""</em> which is true, so then I did <code>git branch -D release</code> to force it to be deleted.</p>

<p>But my repository size, both locally and on GitHub, was still huge. So then I ran through the usual list of git commands, like <code>git gc --prune=today --aggressive</code>, with no luck.</p>

<p>By following Charles Bailey's instructions at <a href=""http://stackoverflow.com/questions/1029969/why-is-my-git-repository-so-big/1036595#1036595"">SO 1029969</a> I was able to get a list of SHA1s for the biggest blobs. I then used the script from <a href=""http://stackoverflow.com/questions/460331/git-finding-a-filename-from-a-sha1/460417#460417"">SO 460331</a>  to find the blobs...and the five biggest don't exist, though smaller blobs are found, so I know the script is working.</p>

<p>I think these blogs are the binaries from the release branch, and they somehow got left around after the delete of that branch. What's the right way to get rid of them?</p>
","62","32112","<git>"
"1157818","1","How to show what a commit did?","<p>A stupid way I know is:</p>

<pre><code>git diff commit-number1 commit-number2
</code></pre>

<p>any better way?</p>

<p>I mean I want to know the commit1 itself, I don't want to add the commit2 before it as parameter.</p>
","117","53647","<git>"
"1331385","1","How can I see incoming commits in git?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/231211/using-git-how-do-i-find-modified-files-between-local-and-remote"">Using Git how do I find modified files between local and remote</a>  </p>
</blockquote>



<p>How can I see incoming commits in git?  Or even better, see what I just <code>git fetch</code>/<code>git pull</code>ed?</p>

<p><strong>Edit:</strong>  To clarify the question: someone tells me that, to get some fixes, I should pull from their repository.  My goal is to see what their changes are <em>before</em> I accept them.  <code>git pull</code> automatically merges, which is not what I want.  <code>git fetch</code> will grab them without merging, but I'm unsure how to view what exactly I just pulled in.  The reason for the original phrasing is that I normally use Mercurial, where the command would be <code>hg incoming &lt;repo name here&gt;</code>&mdash;a command for which git seems to lack an analog.</p>
","124","35132","<git><dvcs>"
"426026","1","Git on Windows: How do you set up a mergetool?","<p>I've tried msysGit and Git on Cygwin. Both work just fine in and of themselves and both run gitk and git-gui perfectly.</p>

<p>Now how the heck do I configure a mergetool? (Vimdiff works on Cygwin, but preferrably I would like something a little more user-friendly for some of our more. Windows-loving coworkers.)</p>
","259","137963","<windows><git><cygwin><msysgit>"
"7388278","1","You asked me to pull without telling me which branch you want to merge with","<p>TL;DR: I have a ""tracked"" branch that I can't pull.</p>

<p>So here I am in ""bucket-4"":</p>

<pre><code>$ git branch -v
  bucket-1       410f7b5 * gh-53 * gh-48 * ""Share App""
  bucket-2       7ed70a2 * upgrade to SOLR 3.3.0
  bucket-3       400ffe4 * emergency fix prod issue
* bucket-4       64c2414 Merge branch 'bucket-3' into bucket-4
  master         8dc4854 [ahead 1] * gh-73
</code></pre>

<p>I'd like to pull in changes from my remote:</p>

<pre><code>$ git pull

You asked me to pull without telling me which branch you
want to merge with, and 'branch.bucket-4.merge' in
your configuration file does not tell me, either. Please
specify which branch you want to use on the command line and
try again (e.g. 'git pull &lt;repository&gt; &lt;refspec&gt;').
See git-pull(1) for details.

If you often merge with the same branch, you may want to
use something like the following in your configuration file:

    [branch ""bucket-4""]
    remote = &lt;nickname&gt;
    merge = &lt;remote-ref&gt;

    [remote ""&lt;nickname&gt;""]
    url = &lt;url&gt;
    fetch = &lt;refspec&gt;

See git-config(1) for details.
</code></pre>

<p>Hmm, odd, I thought I already added ""bucket-4"" as a tracking branch. Let's see:</p>

<pre><code>$ git remote show origin
* remote origin
  Fetch URL: git@github.com:abcd/main.git
  Push  URL: git@github.com:abcd/main.git
  HEAD branch (remote HEAD is ambiguous, may be one of the following):
    bucket-3
    master
  Remote branches:
    bucket-1       tracked
    bucket-2       tracked
    bucket-3       tracked
    bucket-4       tracked
    master         tracked
  Local branches configured for 'git pull':
    bucket-1       merges with remote bucket-1
    bucket-2       merges with remote bucket-2
    bucket-3       merges with remote bucket-3
    master         merges with remote master
  Local refs configured for 'git push':
    bucket-1       pushes to bucket-1       (up to date)
    bucket-2       pushes to bucket-2       (up to date)
    bucket-3       pushes to bucket-3       (up to date)
    bucket-4       pushes to bucket-4       (local out of date)
    master         pushes to master         (fast-forwardable)
</code></pre>

<p>Indeed, bucket-4 is marked as ""tracked"", yet somehow it's configured for push, but not pull. </p>

<p>Looking at my <code>.git/config</code> file, I see that I have ""remote"" and ""merge"" entries for most of my branches, but not for bucket-4. How is it even considered ""tracked"" without this?</p>

<pre><code>[remote ""origin""]
    url = git@github.com:abcd/main.git
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""master""]
    remote = origin
    merge = refs/heads/master
[branch ""rel-2011-07-07""]
    remote = origin
    merge = refs/heads/rel-2011-07-07
[branch ""bucket-1""]
    remote = origin
    merge = refs/heads/bucket-1
[branch ""bucket-2""]
    remote = origin
    merge = refs/heads/bucket-2
[branch]
    autosetupmerge = true
[branch ""bucket-3""]
    remote = origin
    merge = refs/heads/bucket-3
</code></pre>

<p>I see that the likely solution here is to add <code>remote/merge</code> entries for bucket-4 in my config file. But how is it considered ""tracked"" without this? bucket-4 was created locally, then pushed to the server from this repo, so I suspect that somehow I didn't set up tracking properly for this branch.</p>

<p>Is there some configuration I can add in order to make all local branches track their remotes properly in the future? </p>
","108","56546","<git><git-pull>"
"427207","1","Can Git hook scripts be managed along with the repository?","<p>We'd like to make a few basic hook scripts that we can all share -- for things like pre-formatting commit messages.  Git has hook scripts for that that are normally stored under <code>&lt;project&gt;/.git/hooks/</code>.  However, those scripts are not propagated when people do a clone and they are not version controlled.  </p>

<p>Is there a good way to help everyone get the right hook scripts?  Can I just make those hook scripts point to version controlled scripts in my repo?</p>
","109","21533","<git><githooks>"
"1338728","1","Delete commits from a branch in Git","<p>I would like to know how to delete a commit.</p>

<p>By ""delete"", I mean it is as if I didn't make that commit, and when I do a push in the future, my changes will not push to the remote branch.</p>

<p>I read git help, and I think the command I should use is <code>git reset --hard HEAD</code>.  Is this correct?</p>
","1755","1009331","<git><git-rebase>"
"9796370","1","GitHub Pull Request to a new Upstream Branch","<p>My workflow: I have a fork (origin) of a remote project (upstream). I have created a branch, topic/TICKET. I want to create a pull request of my origin branch to the upstream project in a same-named, brand new ""topic/TICKET"" branch. In other words, I don't want my pull request toward the master branch or any existing branch.</p>

<p>When using BitBucket I have this option. When I create my PR, I select my origin branch and then the remote branch selection allows ""Create new branch (topic/TICKET)"".</p>

<p>In GitHub I don't appear to have this option. I can type in the new branch name; but then the option to continue greys out until I select a valid, existing branch upstream.</p>

<p>The annoying work-around is creating the branches upstream before I perform the PR; but it requires asking someone who can commit upstream -- it seems to me like there must be an easier way to do this. </p>

<p>So, is there any way with GitHub to create a pull request to create a new upstream branch, or is this just a known limitation?</p>
","42","8650","<git><github>"
"1204190","1","Does ""git fetch --tags"" include ""git fetch""?","<p>A nice and simple question - is the function of ""git fetch"" a strict sub-set of <code>git fetch --tags</code>?</p>

<p>I.e. if I run <code>git fetch --tags</code>, is there ever a reason to immediately run <code>git fetch</code> straight afterward?</p>

<p>What about <code>git pull</code> and <code>git pull --tags</code>? Same situation?</p>
","159","90191","<git><fetch><pull><git-tag>"
"1377845","1","Git reset --hard and a remote repository","<p>I had a repository that had some bad commits on on it (D, E and F for this example).</p>

<blockquote>
  <p>A-B-C-D-E-F master and origin/master</p>
</blockquote>

<p>I've modified the local repository specifically with a git reset hard.  I took a branch before the reset so now I have a repo that looks like:</p>

<pre><code>A-B-C master  
     \ D-E-F old_master

A-B-C-D-E-F origin/master
</code></pre>

<p>Now I needed some parts of those bad commits so I cheery picked the bits I needed and made some new commits so now I have the following locally:</p>

<pre><code>A-B-C-G-H master
     \ D-E-F old_master
</code></pre>

<p>Now I want to push this state of affairs to the remote repo.  However, when I try to do a git push git politely gives me the brush off:</p>

<pre><code>$ git push origin +master:master --force  
Total 0 (delta 0), reused 0 (delta 0)  
error: denying non-fast forward refs/heads/master (you should pull first)  
To git@git.example.com:myrepo.git  
! [remote rejected] master -&gt; master (non-fast forward)  
error: failed to push some refs to 'git@git.example.com:myrepo.git'
</code></pre>

<p>How do I get the remote repo to take the current state of the local repo?</p>
","153","148177","<git>"
"1526044","1","partly cherry-picking a commit with git","<p>I'm working on 2 different branches: <strong>release</strong> and <strong>development</strong>.<br>
I noticed I still need to integrate some changes that were committed to the <strong>release</strong> branch back into the <strong>development</strong> branch.<br>
The problem is I don't need all of the commit, only some hunks in certain files, so a simple  </p>

<pre><code>git cherry-pick bc66559
</code></pre>

<p>does not do the trick.<br>
When I do a</p>

<pre><code>git show bc66559
</code></pre>

<p>I can see the diff but don't really know a good way of applying that partially to my current working tree.<br>
Any suggestions would be very welcome!</p>
","329","61267","<git><git-cherry-pick>"
"5658302","1","Checking out a old commit and mantaining the head on the master branch?","<p>Currently for switching to another git commit (on the same branch...actually, on the master branch!), I'm executing the command</p>

<pre><code>git checkout ea3d5ed039edd6d4a07cc41bd09eb58edd1f2b3a
</code></pre>

<p>Now, every time I do this git tells me that I'm now with a detached head. How do I go to an older commit and still mantain the head on the same branch?</p>
","36","25000","<git><version-control>"
"8001663","1","Can git treat zip files as directories and files inside the zip as blobs?","<p><strong>The scenario</strong></p>

<p>Imagine I am forced to work with some of my files always stored inside <code>.zip</code> files. Some of the files inside the zip are small text files and change often, while others are larger but luckily rather static (e.g. images).</p>

<p>If I want to place these zip files inside a <code>git</code> repository, each zip is treated as a blob, so whenever I commit the repository grows by the size of the zip file... even if only one small text file inside changed!</p>

<p><strong>Why this is realistic</strong></p>

<p>MS Word 2007/2010 <code>.docx</code> and Excel <code>.xlsx</code> files are ZIP files...</p>

<p><strong>What I want</strong></p>

<p>Is there, by any chance, a way to tell <code>git</code> to not treat zips as files, but rather as directories and treat their contents as files?</p>

<p><strong>The advantages</strong></p>

<ul>
<li>much smaller repo size, i.e. quicker transfer/backup</li>
<li><a href=""http://stackoverflow.com/questions/4704873/display-changes-with-git-to-zips"">Display changes with Git to zip's</a> would automagically work</li>
</ul>

<p><em>But it couldn't work, you say?</em></p>

<p>I realize that without extra metadata this would lead to some amount of ambiguity: on a <code>git checkout</code> git would have to decide whether to create <code>foo.zip/bar.txt</code> as a file in a regular directory or a zip file. However this could be solved through config options, I would think.</p>

<p><strong>Two ideas how it could be done</strong> (if it doesn't exist yet)</p>

<ul>
<li>using a library such as <code>minizip</code> or <code>IO::Compress::Zip</code> inside git</li>
<li>somehow adding a filesystem layer such that git actually sees zip files as directories to start with</li>
</ul>
","39","4453","<git><zip><msysgit>"
"1526794","1","Rename master branch for both local and remote Git repositories","<p>I have the branch <code>master</code> which tracks the remote branch <code>origin/master</code>.</p>

<p>I want to rename them to <code>master-old</code> both locally and on the remote. Is that possible? For other users who tracked <code>origin/master</code> (and who always updated their local <code>master</code> branch via <code>git pull</code>), what would happen after I renamed the remote branch? Would their <code>git pull</code> still work or would it throw an error that it couldn't find <code>origin/master</code> anymore?</p>

<p>Then, further on, I want to create a new <code>master</code> branch (both locally and remote). Again, after I did this, what would happen now if the other users do <code>git pull</code>?</p>

<p>I guess all this would result in a lot of trouble. Is there a clean way to get what I want? Or should I just leave <code>master</code> as it is and create a new branch <code>master-new</code> and just work there further on?</p>
","586","205565","<git><git-branch>"
"8131135","1","Git: How to diff two different files in different branches?","<p>I have two different files in different branches.
How can I diff them in one command?</p>

<p>Something like</p>

<pre><code># git diff branch1/foo.txt branch2/foo-another.txt
</code></pre>

<p>I could check out the other file, diff it and restore, but that's quite dirty solution.</p>
","69","16599","<git><patch>"
"3258243","1","Check if pull needed in Git","<p>How do I check whether the remote repository has changed and I need to pull?</p>

<p>Now I use this simple script:</p>

<pre><code>git pull --dry-run | grep -q -v 'Already up-to-date.' &amp;&amp; changed=1
</code></pre>

<p>But it is rather heavy.</p>

<p>Is there a better way? The ideal solution would check all the remote branches, and return names of the changed branches and the number of new commits in each one.</p>
","316","138137","<git><bash><shell>"
"8131322","1","Enabling Git syntax highlighting for Mac's terminal","<p>I miss the Git syntax highlighting I had on Windows for every ""git .*"" command like green staged filenames, some bolding, etc.</p>

<p>How do I enable Git syntax highlighting for Mac's terminal?</p>
","56","16940","<git><terminal><syntax-highlighting>"
"1527234","1","Finding a branch point with Git?","<p>I have a repository with branches master and A and lots of merge activity between the two. How can I find the commit in my repository when branch A was created based on master?</p>

<p>My repository basically looks like this:</p>

<pre><code>-- X -- A -- B -- C -- D -- F  (master) 
          \     /   \     /
           \   /     \   /
             G -- H -- I -- J  (branch A)
</code></pre>

<p>I'm looking for revision A, which is not what <code>git merge-base (--all)</code> finds.</p>
","233","83330","<git><branch>"
"498110","1","Converting a repository from git to subversion","<p>Reasons for doing this aside, is there a reasonable way to <strong>convert an entire git repository to subversion</strong>?</p>

<p>I can find only tons on information on migrating <em>from</em> subversion <em>to</em> git, and exchanging changesets between the two, but not for doing a simple conversion of the entire git repository to svn. </p>
","35","14198","<svn><git><version-control>"
"3258638","1","Apply git .gitignore rules to an existing repository","<p>I started using git with an xcode project and have recently discovered that I can use .gitignore and .gitattributes files to ignore the noise from the compiler and system.  <strong>Now that I have the .gitignore and .gitattributes files in place, how can I ""apply"" the new ignore rules and get rid of the crud from version control?</strong></p>

<p>My .gitignore file is:</p>

<pre><code># xcode noise
*.modelv3
*.pbxuser
*.perspective
*.perspectivev3
*.pyc
*~.nib/
build/*

# Textmate - if you build your xcode projects with it
*.tm_build_errors

# old skool
.svn

# osx noise
.DS_Store
profile
</code></pre>

<p>And my .gitattributes file is:</p>

<pre><code>*.pbxproj -crlf -diff -merge
</code></pre>

<p>Thanks!</p>
","40","28286","<git>"
"3404936","1","Show which git tag you are on?","<p>I have some trouble with finding the tag that is checked out.</p>

<p>When I do:  </p>

<pre><code>git checkout tag1
git branch
</code></pre>

<p>I can't seem to find out which tag I'm on. It only logs:</p>

<pre><code>* (no branch)
master
</code></pre>

<p>Is it possible to find out which tags are checked out, that is, in the above example, <code>tag1</code>.</p>
","74","34673","<git><tags><checkout><git-checkout><git-tag>"
"8137997","1","Forking from GitHub to Bitbucket","<p>I'm working on a project based on <strong>CakePHP</strong>, that's hosted on <strong>GitHub</strong>. <strong>My project</strong> is being hosted on <strong>Bitbucket</strong>. Both of them use <em>git</em>. Basically I'd like to create a ‘fork’ (I don't know if I'm using the right terms, since I'm new to <em>git</em>) of CakePHP in my Bitbucket repository, in order to be able to get the updates without the need to download all the CakePHP zip/tar and replace the folder, then commit and push, but maybe with a ‘merge’(?).</p>

<p>Thank you!</p>
","107","33503","<git><github><bitbucket>"
"1425892","1","How do you merge two Git repositories?","<p>Consider the following scenario:</p>

<p>I have developed a small experimental project A in its own Git repo. It has now matured, and I'd like A to be part of larger project B, which has its own big repository. I'd now like to add A as a subdirectory of B.</p>

<p>How do I merge A into B, without losing history on any side?</p>
","761","214063","<git><merge><repository><git-subtree>"
"2668886","1","Git: copy all files in a directory from another branch","<p>How do I copy all files in a directory from another branch? I can list all of the files in that directory by doing </p>

<pre><code>git ls-tree master:dirname
</code></pre>

<p>I can then copy all of the files individually by doing</p>

<pre><code>git checkout master -- dirname/filename
</code></pre>

<p>However, using wildcards has so far been a total fail.  This does nothing: </p>

<pre><code>git checkout master -- dirname/*.png
</code></pre>

<p>Though I guess I can use a bash script to do that, there has to be an easier way, right?</p>
","78","30666","<git><file><copy><branch>"
"7923091","1","How to list all tags that contain a commit?","<p>This question is similar to <a href=""http://stackoverflow.com/questions/4545370/how-to-list-all-tags-pointing-to-a-specific-commit-in-git"">How to list all tags pointing to a specific commit in git</a>, but with one difference: I wish to search for all tags that contain a specific commit within the tree of each tag, not specifically the files marked in the tag itself (in this case, only the Makefile change has been tagged).</p>
","81","13405","<git>"
"10292480","1","When deleting remote git branch ""error: unable to push to unqualified destination""","<p>I'm trying to delete a remote git branch with </p>

<pre><code>git push origin :my_remote_branch
</code></pre>

<p>and getting:</p>

<pre><code>error: unable to push to unqualified destination: my_remote_branch
The destination refspec neither matches an existing ref on the remote nor
begins with refs/, and we are unable to guess a prefix based on the source ref.
error: failed to push some refs to 'git@example.com:/myrepo'
</code></pre>

<p>these are my current branches</p>

<pre><code>git branch -a
* develop
  master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/develop
  remotes/origin/my_remote_branch

git branch -r --merged
  origin/HEAD -&gt; origin/master
  origin/develop
  origin/master
</code></pre>

<p>Any ideas on how I can get rid of this branch would be appreciated.</p>
","103","30362","<git>"
"17581026","1","Where does a Git branch start and what is its length?","<p>Every now and then I'm asked, on what commit a certain branch on git starts or if a certain commit has been created on a specific branch. The end point of a branch is pretty clear: that's where the branch label sits. But - where did it start? The trivial answer would be: on that commit where we <em>created</em> that branch. But that information is, as far as I know now, and that's why I'm asking the question, lost after the first commits. </p>

<p>As long as we know the commit where we branched off, we can draw the graph to make it clear:</p>

<pre><code>A - B - C - - - - J     [master]
     \
      D - E - F - G     [branch-A]
           \
            H - - I     [branch-B]
</code></pre>

<p>I've created branch-B at commit <code>E</code> so that's the ""start"". I know that, because I did it. But can others recognize it the same way? We could draw the same graph like that:</p>

<pre><code>A - B - C - - - - J     [master]
     \
      \       F - G     [branch-A]
       \     /
        D - E
             \
              H - I     [branch-B]
</code></pre>

<p>So, looking at the graph now, which branch started at <code>E</code>, which one at <code>B</code>? Is commit <code>D</code> a member of both branches or can we clearly decide whether it belongs to branch-A or branch-B?</p>

<p>This sounds somewhat philosophical but it really isn't. Supervisors sometimes like to know, when a branch has been started (it usually marks the start of a task) and to which branch some changes belong to (to get the purpose of some change - was it required for the work) and I'd like to know if git offers infos (tools, commands) or definitions to answer those questions correctly.</p>
","44","7439","<git><version-control><git-branch>"
"10292903","1","Git on Windows, ""Out of memory - malloc failed""","<p>Have run into a problem with repository and tried almost every possible config setting found out there eg. pack.WindowMemory etc etc</p>

<p>I believe someone has checked in a large file to remote repository and now each time I try and pull or push to it, GIT tries to pack it and runs out of memory:</p>

<pre><code>Auto packing the repository for optimum performance. You may also
run ""git gc"" manually. See ""git help gc"" for more information.
Counting objects: 6279, done.
Compressing objects: 100% (6147/6147), done.
fatal: Out of memory, malloc failed (tried to allocate 1549040327 bytes)
error: failed to run repack
</code></pre>

<p>Have tried <strong>git gc</strong> &amp; <strong>git repack</strong> with various options but keeps returning same error.</p>

<p>Almost given up and about to just create a new repo but thought I'd ask around first :)</p>
","47","38005","<windows><git>"
"3301956","1","Git: Correct way to change Active Branch in a bare repository?","<p>I have a bare repository that's used as the central store for my project.  All the developers do <code>git clone &lt;repo&gt;</code> to share with it.  When they do the clone, they get a checkout of the master branch (unless they do <code>git clone -n</code>) because <code>repo.git/HEAD</code> contains <code>ref: refs/heads/master</code>, making this the <em>Active Branch</em>.</p>

<p>The question is, how do I change the <em>Active Branch</em> properly?  I could simply hack the <code>repo.git/HEAD</code> file directly, but that seems nasty and, well, hacky.</p>

<p>I tried doing <code>git checkout &lt;otherbranch&gt;</code> in the repo <code>.git</code> directory, but that failed because I wasn't in a work tree.</p>

<p>I tried <code>git update-ref HEAD refs/heads/otherbranch</code> but that just updated refs/heads/master to be the same as refs/heads/otherbranch (okay, I did that one in a dummy repository, not my production one!)</p>

<p>I tried <code>git update-ref --no-deref HEAD refs/heads/otherbranch</code> and that almost worked.  It updated the <code>HEAD</code> file, but it set it to the SHA1 of the commit pointed to by <code>refs/heads/otherbranch</code>.</p>

<p>I'm testing with git version <code>1.7.0.2.msysgit.0</code>.</p>

<p>I'm guessing there's no way to do this through <code>git push</code>, as allowing all and sundry to change your default branch seems a bit unsafe (!), but surely there's a better way to do it in the repo <code>.git</code> directory than directly hacking the <code>HEAD</code> file.</p>
","128","34112","<git>"
"5617211","1","What is ""git remote add ..."" and ""git push origin master""?","<p>Quite often, Git and Rails looks like magic... such as in the <a href=""http://ruby.railstutorial.org/chapters/beginning#sec:version_control"">first chapter of Rails 3 Tutorial book</a>, it talks about Git:</p>

<pre><code>git remote add origin git@github.com:peter/first_app.git
git push origin master
</code></pre>

<p>and it pretty much says ""it just works"" without saying too much about what they are and start talking about branching.  Searching on the net shows that <code>git remote add</code> is to add a ""short name"", such as <code>origin</code>, and it can be any name as well, which is like an alias to a URL.  And <code>origin</code> is the usual path of where the remote repo points to.  (in <a href=""http://git-scm.com/book/en/Git-Basics-Working-with-Remotes"">http://git-scm.com/book/en/Git-Basics-Working-with-Remotes</a> under ""Adding Remote Repositories"")</p>

<p>So why is the URL not  <code>git://git@github.com/peter/first_app.git</code> but in the other syntax -- what syntax is it?  Why must it end with <code>.git</code>?   I tried not using <code>.git</code> at the end and it works too.  If not <code>.git</code>, what else can it be?  The <code>git</code> in <code>git@github.com</code> seems to be a user account on the git server?</p>

<p>Also, why does it need to be so verbose to use <code>git push origin master</code>?  Can't the default be origin and master?  I found that the first time, the <code>origin master</code> is needed, but after a small edit and commit, then <code>git push</code> is all it needs (no need <code>origin master</code>).  Can somebody who knows what is going on give some details?</p>

<p>Sometimes it feels like a lot of magic without explanation... and sometimes the person using it is so confident and when asked why, can't explain it, and respond with something like ""that's the way it is"".  Sometimes very practical and pragmatic.  It is not bad to be practical, but probably not practical to the point to not know what is going on.</p>
","133","104320","<git><github>"
"1580596","1","How do I make Git ignore file mode (chmod) changes?","<p>I have a project in which I have to change the mode of files with <code>chmod</code> to 777 while developing, but which should not change in the main repo. </p>

<p>Git picks up on <code>chmod -R 777 .</code> and marks all files as changed. Is there a way to make Git ignore mode changes that have been made to files?</p>
","1330","361256","<git><ignore><chmod>"
"1334027","1","Git and working on multiple branches","<p>I have a couple of Git branches: 'experimental', 'something' and 'master'.</p>

<p>I switched to the 'experimental' branch. I noticed a bug which is unrelated to 'experimental' and belongs to changes which have been made in 'something'. How should I fix it?</p>

<p>I'm thinking I should switch to 'something', fix the bug, commit and then move back to 'experimental'. How should I take the minor change from 'something' and apply it to both 'master' and 'experimental' so that I don't have to re-fix the bug again when I switch into these branches?</p>
","42","16482","<git><version-control><branch>"
"3216360","1","Merge, update, and pull Git branches without using checkouts","<p>I work on a project that has 2 branches, A and B. I typically work on branch A, and merge stuff from branch B. For the merging, I would typically do:</p>

<pre><code>git merge origin/branchB
</code></pre>

<p>However, I would also like to keep a local copy of branch B, as I may occasionally check out the branch without first merging with my branch A. For this, I would do:</p>

<pre><code>git checkout branchB
git pull
git checkout branchA
</code></pre>

<p>Is there a way to do the above in one command, and without having to switch branch back and forth? Should I be using <code>git update-ref</code> for that? How?</p>
","196","40877","<git><git-merge><git-pull><git-checkout>"
"2693640","1","Aborted old git rebase and lost commits since the rebase started","<p>Crap! About a week ago, I was rebasing some commits while trying to clean up my repository, and apparently I didn't actually finish it. Today, a week and several commits later, I went to rebase to reorder a few commits from today, and it told me I was already in the middle of a rebase.</p>

<p>That should have been a cue to copy my repo just in case. But I did not...instead I ran <code>git rebase --abort</code> which sounded right at the time. Well, that was not right. It aborted the rebase from a week ago and reset master's HEAD to the old one. Dummy!</p>

<p>I've got several other branches that are fairly recent, and I've pushed to remote several times, but the most recent changes appear to be gone forever. I don't possess the appropriate level of git-fu to know if there's any way to recover my changes.</p>

<p>Am I screwed?</p>

<p><strong>EDIT</strong> - WOW! Thanks guys! <code>git reflog</code> is awesome! I'm fully recovered...lesson learned. Marking Tchalvak's answer accepted for being the first to post.</p>
","39","5898","<git><git-rebase>"
"1335302","1","Add newly created specific folder to .gitignore in Git","<p>I had a clean working directory and brought in a clone from a Git repo last night. 
But now my local server created and contains a stats folder which I want to ignore. </p>

<p>I can't seem to get Git to ignore this folder when I run a git status.</p>

<pre><code>On branch master
Your branch is ahead of 'origin/master' by 1 commit.

Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

    new file: app_public/views/pages/privacy.php
    new file: app_public/views/pages/terms.php
    new file: public_html/stats/ctry_usage_200908.png
    new file: public_html/stats/daily_usage_200908.png
    new file: public_html/stats/dns_cache.db
    new file: public_html/stats/hourly_usage_200908.png
    new file: public_html/stats/index.html
    new file: public_html/stats/usage.png
    new file: public_html/stats/usage_200908.html
    new file: public_html/stats/webalizer.current
    new file: public_html/stats/webalizer.hist

Changed but not updated:
    modified: .gitignore
</code></pre>

<p>I added in my .gitignore a few different lines but it still trying to add them:</p>

<pre><code>public_html/stats
public_html/stats/**
public_html/stats/**/*
public_html/stats/*
</code></pre>
","39","75287","<git><gitignore>"
"12276001","1","git finding unmerged branches","<p>I've got a git repository with many branches, some of them already merged and some not. Since the number of branches is quite big, how can I know which branches have not been merged yet? I would avoid to do an octopus merge remerging all the branches again.</p>
","133","19719","<git>"
"1380670","1","How do I fix a merge conflict due to removal of a file in a branch?","<p>I have create a <code>dialog</code> branch and when I try to merge it to <code>master</code> branch.  There are 2 conflicts. I don't know how to resolve <code>CONFLICT (delete/modify)</code>.  Can you please tell me what to do?</p>

<pre><code>$ git checkout master
$ git merge dialog
CONFLICT (delete/modify): res/layout/dialog_item.xml deleted in dialog and modified in HEAD. Version HEAD of res/layout/dialog_item.xml left in tree.
Auto-merging src/com/DialogAdapter.java
CONFLICT (content): Merge conflict in src/DialogAdapter.java
Automatic merge failed; fix conflicts and then commit the result.
</code></pre>

<p>I have opened <code>src/DialogAdapter.java</code>, fixed the conflict and did a <code>git add src/DialogAdapter.java</code>. What else do I need to do?</p>
","59","46063","<git><git-merge><merge-conflict-resolution>"
"7489813","1","Github Push Error: RPC failed; result=22, HTTP code = 413","<p>stupid issue with Github going on right now. I have a decent amount of changes (~120MB in size), when I attempt to push, this is what happens:</p>

<p><code>error: RPC failed; result=22, HTTP code = 413</code><br>
<code>fatal: The remote end hung up unexpectedly</code><br>
<code>fatal: The remote end hung up unexpectedly</code>  </p>

<p>I've already done </p>

<p><code>git config http.postBuffer 524288000</code>, so that doesn't seem to be the issue. What could it be? </p>
","72","66666","<git><github><git-tower>"
"5126765","1","How to get rid of Git submodules untracked status?","<p>I can't seem to get rid of untracked content in Git's submodules. Running <code>git status</code> yields:</p>

<pre>
# On branch master
# Changes not staged for commit:
#   (use ""git add ..."" to update what will be committed)
#   (use ""git checkout -- ..."" to discard changes in working directory)
#   (commit or discard the untracked or modified content in submodules)
#
#    modified:   bundle/snipmate (untracked content)
#    modified:   bundle/surround (untracked content)
#    modified:   bundle/trailing-whitespace (untracked content)
#    modified:   bundle/zencoding (untracked content)
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</pre>

<p>Adding the <code>--ignore-submodules</code> parameter hides these messages; but I wonder if there's a way to get rid of this dirt in a more suitable, core-ish, manner.</p>
","77","32123","<git><git-submodules>"
"5661405","1","Best workflow when forking and renaming a GitHub project","<p>I am trying to figure out the best workflow for working with a fork of an existing opensource project in Github. I want to take an existing project and make significant changes to it, in this case to port it to android and add specific android only functionality. I would like to satisfy the following:</p>

<ol>
<li>Be able to pull changes from their public repo to the new android port as the original code is updated.</li>
<li>Be able to sumbit changes (via pull requests) to the orginal project when I fix bugs that aren't just applicable to the android port.</li>
<li>Have a seperate renamed version of the project to make it clear that it is a Android port. I looked at renaming a fork and Github gave me huge warnings about doing this.</li>
</ol>

<p>My initial thoughts are I would fork the original project then fork and rename my fork to give me the following repos:</p>

<pre><code>original-author/projectA
nicstrong/projectA
nicstrong/projectA-android
</code></pre>

<p>This would allow me to work on my local repo local/projectA-android push changes to nicstrong/projectA-android. Then to update from the orginal project I could rebase nicstrong/projectA to the latest from original-author/projectA then fetch/merge from nicstrong/projectA to local/projectA-android.</p>

<p>My questions are:</p>

<ol>
<li>I am quite new to the whole Git
thing. Does this seem like a good
approach? Or is there a better
workflow for handling this scenerio?</li>
<li>How would I handle pushing from
projectA-android back to nicstrong/projectA so I can setup pull request for the original project?</li>
</ol>
","31","6604","<git><open-source><github>"
"1382363","1","Best practices for git repositories on open source projects","<p>I'm contributing to a fairly small open source project hosted on Github. So that other people can take advantage of my work, I've created my own fork on Github. Despite Github's choice of terminology, I don't wish to totally diverge from the main project. However, I don't expect or desire that all of my work is accepted into the main repository. Some of it however, already has been merged into the main repository and I expect this to continue. The problem I am running into is how best to keep our two trees in a state where code can be shared between them easily. </p>

<p>Some situations I have or will encountered include:</p>

<ul>
<li>I commit code that is later accepted
into the main repository. When I pull
from this repository in the future,
my commit is duplicated in my
repository.</li>
<li>I commit code that is never accepted into the main repository. When I pull from this repository in the future, the two trees have diverged and fixing it is hard.</li>
<li>Another person comes along and bases their work on my repository. Thus, I should if at all possible avoid changing commits that I have pushed, for example by using git rebase.</li>
<li>I wish to submit code to the master repository. Ideally, my changes should easily be able to be transformed into patches (ideally using git format-patch) that can directly and cleanly apply to the master repository.</li>
</ul>

<p>As far as I can tell there are two, or possibly three ways to handle this, none of which work particularly well:</p>

<ul>
<li>Frequently run git rebase to keep my changes based off the head of the upstream repository. In this way I can eliminate duplicated commits but often have to rewrite history, causing problems for people wanting to derive their work from mine.</li>
<li>Frequently merge the upstream repository changes into mine. This works ok on my end but does not seem to make it easy to submit my code to the upstream repository.</li>
<li>Use some combination of these and possibly git cherry-pick to keep things in order.</li>
</ul>

<p>What have other people done in this situation? I know my situation is analogous to the relationship between various kernel contributors and Linus's main repository, so hopefully there are good ways to handle this. I'm fairly new to git though, so haven't mastered all it's nuances. Finally, especially due to Github, my terminology may not be entirely consistent or correct. Feel free to correct me.</p>
","32","1903","<linux><git><version-control>"
"1427785","1","how to set desired language in git-gui?","<p>I recently came to git for a project I participate to. I found git gui rather handy (under OSX Snow Leopard) to srtat with but I would much like if it were not localized (in French, in my case). Is there preference or hack to have git gui displayed in english?</p>
","90","25619","<git><git-gui>"
"5127178","1",".gitignore files added inside Git submodules","<p>I recently reorganized my dotfiles to live inside a Git repository at <code>~/Dropbox/dotfiles</code> and I'm using pathogen to bundle all Vim addons inside <code>~/Dropbox/dotfiles/home/.vim/bundle</code>. These addons were added as Git submodules.</p>

<p>Now the problem is, when I run Vim, it automatically generates the documentation for all addons and puts them inside each submodule directory. This adds untracked content to the submodules, which I'd like to avoid.</p>

<pre><code>ruby-1.8.7-p330@gs ~/Dropbox/dotfiles ‹master*› $ git st
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#   (commit or discard the untracked or modified content in submodules)
#
#   modified:   home/.vim/bundle/fuzzyfinder (untracked content)
#   modified:   home/.vim/bundle/l9 (untracked content)
#   modified:   home/.vim/bundle/matchit (untracked content)
#   modified:   home/.vim/bundle/ruby (untracked content)
#   ...
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>I tried to add a <code>.gitignore</code> file to the root of my Git repository to ignore all <code>doc</code> folders inside submodules, but this doesn't seem to work:</p>

<pre><code>home/.vim/bundle/**/doc
</code></pre>

<p>My question: is there a way to ignore files and folders inside Git submodules or maybe configure Vim to create the documentation in a folder outside the Git repository?</p>

<p>EDIT: as Randy Morris pointed out, this might be a duplicate of <a href=""http://stackoverflow.com/questions/4343544/generating-tags-to-different-location-by-pathogen#4346300"">Generating tags to different location by pathogen</a></p>
","44","8983","<git><vim><gitignore><git-submodules>"
"8044583","1","How can I move a tag on a git branch to a different commit?","<p>I created a tag on the master branch called <code>v0.1</code> like this:</p>

<pre><code>git tag -a v0.1
</code></pre>

<p>But then I realised there were still some changes I needed to merge into master for release 0.1, so I did that. But now my <code>v0.1</code> tag is stuck on (to invoke the post-it note analogy) the wrong commit. I want it to be stuck on the most recent commit on master, but instead it is stuck on the second most recent commit on master.</p>

<p>How can I move it to the most recent commit on master?</p>
","320","83563","<git>"
"1430749","1","Getting Git to Acknowledge Previously Moved Files","<p>I've moved a bunch of files around manually without thinking, and can't find a way to get git to recognize that the files are just moved and not actually different files. Is there a way to do this other than removing old and adding the new (and thus losing the history), or redoing all the changes with git-mv?</p>
","43","15723","<git>"
"15264553","1","How to unstash only certain files?","<p>I stashed my changes. Now I want to unstash only some files from the stash. How can I do this?</p>
","114","46035","<git><git-stash>"
"10449374","1","override git from Xcode with homebrew version","<p>I've installed XCode and therefore git is there as well. Since i want to have a newer version of git I installed using homebrew.</p>

<p>But the homebrew version of git is never called since my PATH looks like this</p>

<pre><code>/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/usr/X11/bin
</code></pre>

<p>which means the <code>/usr/bin/git</code> is allways called before <code>/usr/local/bin/git</code>.</p>

<p>Is there a way to change that without changing the PATH?</p>
","38","19505","<xcode><osx><git><path><homebrew>"
"5749246","1","How do I change which GitHub project I forked from?","<p>I forked a project, made some changes, and got a pull request accepted. But now, the project I forked moved to another repository and is a fork of that repository.</p>

<p>That is:</p>

<pre><code>Original -&gt; MyFork
</code></pre>

<p>Now:</p>

<pre><code>NewOriginal -&gt; Original -&gt; MyFork
</code></pre>

<p>How would I get it to the following?</p>

<pre><code>NewOriginal -&gt; MyFork
</code></pre>
","54","42374","<git><github><fork>"
"5149694","1","Does running git init twice initialize a repository or reinitialize an existing repo?","<p>What happens to an existing git repository when you issue <code>git init</code> again?</p>

<p>I created a repository with <code>git init</code>.  Created a file, add, commit. Check the status (nothing to commit). Then created another file, check the status and I can see it's untracked as expected.  </p>

<p>Then, say by mistake, I run <code>git init</code> again and I get <em>Reinitialise existing Git repository message</em>.  </p>

<p>Tried <code>git status</code>, but it shows the same. So what really happens?  </p>

<p>Can reinitialising an existing git repository this way be harmful or helpful? Why can we <code>git init</code> inside an existing repository?</p>
","79","14006","<git>"
"5894946","1","How to add Git's branch name to the commit message?","<p>I need some help with a Bash script that will automatically add the git's branch name as a hash in commit messages.</p>
","35","13644","<git><bash><git-branch>"
"34319008","1","Git issue with Visual Studio 2015","<p>I have a Visual Studio solution inside a git repository created with TortoiseGit version 1.8.16.0 (git version 2.6.2.windows.1)</p>

<p>I just updated Visual Studio from 2015 to 2015 Update 1, and it stopped tracking changes on my files. also it won't allow me to commit anything.</p>

<p>Is this some sort of a known problem? are there any solutions?</p>

<hr>

<h2><strong>update</strong></h2>

<p>(ironic title...) 
VS tracks unsaved files as ""changed""
and saved files appear to be ""unchanged""</p>

<p>switching branches is behaves correctly and results in an error if there are uncommitted (real )changes</p>

<hr>

<p><strong>update 2</strong></p>

<p>could this in the output window could have anything to do with the error:</p>

<p>Opening repositories:</p>

<p>Could not open 'C:/[project path].VC.opendb': The process cannot access the file because it is being used by another process.</p>

<p>Could not open 'C:/[project path].VC.opendb': The process cannot access the file because it is being used by another process.</p>
","34","5195","<git><visual-studio-2015><tortoisegit>"
"12920652","1","git update-index --assume-unchanged returns ""fatal unable to mark file""","<p>I am having the same problem as this post - <a href=""http://stackoverflow.com/questions/8598937/git-update-index-assume-unchanged-returns-error"">git update-index --assume-unchanged returns error</a>
but I don't understand the answer marked as correct (I don't see that it explains how to fix the situation)</p>

<p>I do this and get this error:</p>

<pre><code>$ git update-index --assume-unchanged web.config
fatal: Unable to mark file web.config
</code></pre>

<ol>
<li>the file IS added to the repository </li>
<li>it is NOT in .git/info/exclude </li>
<li>it is NOT in .gitignore (it was, but I took it out, then forced
web.config to be added using git add -f web.config, commited and
pushed those changes to the repo)</li>
<li>when I do git ls-files -o it is NOT there</li>
</ol>

<p>So what can I do to fix?</p>
","40","13511","<git>"
"12319968","1","Remote branch not showing up in ""git branch -r""","<p>I have been pushing to a remote bitbucket repo and recently a colleague has pushed a new branch he created to the same repo. </p>

<p>I'm trying to fetch the changes he uploaded. </p>

<pre><code> $ git branch -a  
 * master 
 localbranch1
 localbranch2
 remotes/origin/master
</code></pre>

<blockquote>
  <p>$ git branch -r<br>
  origin/master</p>
</blockquote>

<p>In the web ui for bitbucket I can see the branch he has made. Any help/advice/direction would be most appreciated. Thanks.</p>

<p>Any futher info you need just ask.</p>

<p><strong>EDIT 1</strong></p>

<pre><code>$ git fetch bitbucket
Password for 'https://xxxxx@bitbucket.org':
From https://bitbucket.org/user/repo
 * branch            HEAD       -&gt; FETCH_HEAD
</code></pre>

<p>If the branch he created is called <strong>new_branch_b</strong> should I be expecting to see:</p>

<pre><code>$ git branch -r    
origin/master 
origin/new_branch_b
</code></pre>

<p><strong>EDIT 2</strong></p>

<pre><code>$ git remote update
Fetching bitbucket
Password for 'https://xxxxx@bitbucket.org':
From https://bitbucket.org/user/repo
 * branch            HEAD       -&gt; FETCH_HEAD


$ git branch -r
  origin/master
</code></pre>

<p><strong>EDIT 3</strong></p>

<pre><code>[remote ""bitbucket""]
url = https://user@bitbucket.org/user/repo.git
</code></pre>

<p>I called the remote bitbucket rather than origin (at least that's what I recall, I set it up a while ago)</p>

<p><strong>EDIT 4</strong></p>

<p>I updated the bitbucket remote config as per kan's answer.</p>

<blockquote>
  <p>$ git config -e</p>
</blockquote>

<pre><code>[remote ""bitbucket""]
    url = https://user@bitbucket.org/user/repo.git
    fetch = +refs/heads/*:refs/remotes/bitbucket/*
</code></pre>

<p>For most people it will be called origin</p>

<pre><code>[remote ""origin""]
    url = https://user@bitbucket.org/user/repo.git
    fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>Afterwards </p>

<pre><code>$ git remote update

Fetching bitbucket
Password for 'https://user@bitbucket.org':
remote: Counting objects: 48, done.
remote: Compressing objects: 100% (32/32), done.
remote: Total 35 (delta 21), reused 0 (delta 0)
Unpacking objects: 100% (35/35), done.
From https://bitbucket.org/user/repo
 * [new branch]      branch_name1 -&gt; origin/branch_name1
 * [new branch]      branch_name2    -&gt; origin/branch_name2
</code></pre>

<p>.... and so on.</p>

<p>I think <code>git fetch origin</code> would also work for <code>git remote update</code></p>

<p>Thanks to everyone who helped me with this problem. </p>
","49","27289","<git>"
"5751582","1","fetch from origin with deleted remote branches?","<p>When I do <code>git fetch origin</code> and origin has a deleted branch, it doesn't seem to update it in my repository. When I do <code>git branch -r</code> it still shows <code>origin/DELETED_BRANCH</code>.</p>

<p>How can I fix this?</p>
","218","34799","<git>"
"5751585","1","How do I rename a repository on GitHub?","<p>I wanted to rename one of my repositories on GitHub, but I got scared when a big red warning said:</p>

<blockquote>
  <ol>
  <li>We will not set up any redirects from the old location</li>
  <li>You will need to update your local repositories to point to the new location</li>
  <li>Renaming may take a few minutes to complete</li>
  </ol>
</blockquote>

<p>Does anyone have step-by-step instructions on how to accomplish #1 and #2 manually? Or what do I have to do locally?</p>
","222","62639","<git><github><repository>"
"10588291","1","Git branching: master vs. origin/master vs. remotes/origin/master","<p>I think I'm on the right track to understand the basic concepts of git.</p>

<p>I've already set up and cloned a remote repository. I also created a server side empty repository, and linked my local repository to it.</p>

<p>My problem is that I don't understand the difference between:</p>

<ul>
<li>origin/master vs. remotes/origin/master</li>
</ul>

<p>As far as I have understood, <strong>master</strong> is a local branch, and <strong>remotes/origin/master</strong> is a remote one. </p>

<p>But what exactly is <strong>origin/master</strong>?</p>
","98","48088","<git><git-remote>"
"17868956","1","Homebrew update fail: ""Please, commit your changes or stash them before you can merge""","<p>I am running:</p>

<pre><code>brew update
</code></pre>

<p>And I get an error:</p>

<pre><code>error: Your local changes to the following files would be overwritten by merge:
    samtools.rb
Please, commit your changes or stash them before you can merge.
Aborting
</code></pre>

<p>It turns out this is a well known error. In fact, it's mentioned on the <a href=""https://github.com/mxcl/homebrew/wiki/Common-Issues#brew-update-complains-about-untracked-working-tree-files"">Homebrew wiki</a>:</p>

<pre><code>After running brew update, you receive a git error warning about untracked files or local changes that would be overwritten by a checkout or merge, followed by a list of files inside your Homebrew installation.

This is caused by an old bug in in the update code that has long since been fixed. However, the nature of the bug requires that you do the following:

cd $(brew --repository)
git reset --hard FETCH_HEAD

If brew doctor still complains about uncommitted modifications, also run this command:

cd $(brew --repository)/Library
git clean -fd
</code></pre>

<p>I followed those instructions and am still seeing the same error. What is wrong?</p>
","62","30743","<osx><git><homebrew>"
"3401732","1","Rewrite author of Git commits","<p>I have a couple of commits where my email address is wrong in the history.</p>

<p><strong>How can I rewrite this history to reflect the correct email address?</strong></p>

<p>If I choose to rewrite history, what is it that another user will have to do to fix their checkout?</p>
","37","12200","<git>"
"8134960","1","How to revert Master branch to upstream","<p>I have forked a git repository and setup upstream. I've made some changes in Master branch and committed and pushed to github.</p>

<p>Now what should I do to abandon all my changes in Master branch and make it identical to the upstream's master branch?</p>
","100","23671","<git><github>"
"6224626","1","Github clone contents of a repo (without folder itself)","<p>I'd like to git clone the contents of a repo I have on gitHub. When I git clone (git@github:me/name.git...) I get a folder called name/ and inside name I have my contents.. I want JUST the contents. <br />
I hope that's possible, thanks!</p>
","82","33378","<git><github>"
"3133387","1","Confusing error message from git","<p>I got this message from Git:</p>

<blockquote>
  <p>You asked to pull from the remote 'origin', but did not specify
  a branch. Because this is not the default configured remote
  for your current branch, you must specify a branch on the command line.</p>
</blockquote>

<p>Can anyone explain it? and more important how to fix it?</p>
","59","21617","<git><github>"
"3133449","1","Why does git-rebase give me merge conflicts when all I'm doing is squashing commits?","<p>We have a Git repository with over 400 commits, the first couple dozen of which were a lot of trial-and-error. We want to clean up these commits by squashing many down into a single commit. Naturally, git-rebase seems the way to go. My problem is that it ends up with merge conflicts, and these conflicts are not easy to resolve. I don't understand why there should be any conflicts at all, since I'm just squashing commits (not deleting or rearranging). Very likely, this demonstrates that I'm not completely understanding how git-rebase does its squashes.</p>

<p>Here's a modified version of the scripts I'm using:</p>

<hr>

<p>repo_squash.sh (this is the script that is actually run):</p>

<hr>

<pre><code>rm -rf repo_squash
git clone repo repo_squash
cd repo_squash/
GIT_EDITOR=../repo_squash_helper.sh git rebase --strategy theirs -i bd6a09a484b8230d0810e6689cf08a24f26f287a
</code></pre>

<hr>

<p>repo_squash_helper.sh (this script is used only by repo_squash.sh):</p>

<hr>

<pre><code>if grep -q ""pick "" $1
then
#  cp $1 ../repo_squash_history.txt
#  emacs -nw $1
  sed -f ../repo_squash_list.txt &lt; $1 &gt; $1.tmp
  mv $1.tmp $1
else
  if grep -q ""initial import"" $1
  then
    cp ../repo_squash_new_message1.txt $1
  elif grep -q ""fixing bad import"" $1
  then
    cp ../repo_squash_new_message2.txt $1
  else
    emacs -nw $1
  fi
fi
</code></pre>

<hr>

<p>repo_squash_list.txt: (this file is used only by repo_squash_helper.sh)</p>

<hr>

<pre><code># Initial import
s/pick \(251a190\)/squash \1/g
# Leaving ""Needed subdir"" for now
# Fixing bad import
s/pick \(46c41d1\)/squash \1/g
s/pick \(5d7agf2\)/squash \1/g
s/pick \(3da63ed\)/squash \1/g
</code></pre>

<hr>

<p>I'll leave the ""new message"" contents to your imagination. Initially, I did this without the ""--strategy theirs"" option (i.e., using the default strategy, which if I understand the documentation correctly is recursive, but I'm not sure which recursive strategy is used), and it also didn't work. Also, I should point out that, using the commented out code in repo_squash_helper.sh, I saved off the original file that the sed script works on and ran the sed script against it to make sure it was doing what I wanted it to do (it was). Again, I don't even know why there <em>would</em> be a conflict, so it wouldn't seem to matter so much which strategy is used. Any advice or insight would be helpful, but mostly I just want to get this squashing working.</p>

<h2>Updated with extra information from discussion with Jefromi:</h2>

<p>Before working on our massive ""real"" repository, I used similar scripts on a test repository. It was a very simple repository and the test worked cleanly.</p>

<p>The message I get when it fails is:</p>

<pre><code>Finished one cherry-pick.
# Not currently on any branch.
nothing to commit (working directory clean)
Could not apply 66c45e2... Needed subdir
</code></pre>

<p>This is the first pick after the first squash commit. Running <code>git status</code> yields a clean working directory. If I then do a <code>git rebase --continue</code>, I get a very similar message after a few more commits. If I then do it again, I get another very similar message after a couple dozen commits. If I do it yet again, this time it goes through about a hundred commits, and yields this message:</p>

<pre><code>Automatic cherry-pick failed.  After resolving the conflicts,
mark the corrected paths with 'git add &lt;paths&gt;', and
run 'git rebase --continue'
Could not apply f1de3bc... Incremental
</code></pre>

<p>If I then run <code>git status</code>, I get:</p>

<pre><code># Not currently on any branch.
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
# modified:   repo/file_A.cpp
# modified:   repo/file_B.cpp
#
# Unmerged paths:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#   (use ""git add/rm &lt;file&gt;..."" as appropriate to mark resolution)
#
# both modified:      repo/file_X.cpp
#
# Changed but not updated:
#   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
# deleted:    repo/file_Z.imp
</code></pre>

<p>The ""both modified"" bit sounds weird to me, since this was just the result of a pick. It's also worth noting that if I look at the ""conflict"", it boils down to a single line with one version beginning it with a [tab] character, and the other one with four spaces. This sounded like it might be an issue with how I've set up my config file, but there's nothing of the sort in it. (I did note that core.ignorecase is set to true, but evidently git-clone did that automatically. I'm not completely surprised by that considering that the original source was on a Windows machine.)</p>

<p>If I manually fix file_X.cpp, it then fails shortly afterward with another conflict, this time between a file (CMakeLists.txt) that one version thinks should exist and one version thinks shouldn't. If I fix this conflict by saying I do want this file (which I do), a few commits later I get another conflict (in this same file) where now there's some rather non-trivial changes. It's still only about 25% of the way through the conflicts.</p>

<p>I should also point out, since this might be very important, that this project started out in an svn repository. That initial history very likely was imported from that svn repository.</p>

<h2>Update #2:</h2>

<p>On a lark (influenced by Jefromi's comments), I decided to do the change my repo_squash.sh to be:</p>

<pre><code>rm -rf repo_squash
git clone repo repo_squash
cd repo_squash/
git rebase --strategy theirs -i bd6a09a484b8230d0810e6689cf08a24f26f287a
</code></pre>

<p>And then, I just accepted the original entries, as is. I.e., the ""rebase"" shouldn't have changed a thing. It ended up with the same results describe previously.</p>

<h2>Update #3:</h2>

<p>Alternatively, if I omit the strategy and replace the last command with:</p>

<pre><code>git rebase -i bd6a09a484b8230d0810e6689cf08a24f26f287a
</code></pre>

<p>I no longer get the ""nothing to commit"" rebase problems, but I'm still left with the other conflicts.</p>

<h2>Update with toy repository that recreates problem:</h2>

<p>test_squash.sh (this is the file you actually run):</p>

<pre><code>#========================================================
# Initialize directories
#========================================================
rm -rf test_squash/ test_squash_clone/
mkdir -p test_squash
mkdir -p test_squash_clone
#========================================================

#========================================================
# Create repository with history
#========================================================
cd test_squash/
git init
echo ""README""&gt;README
git add README
git commit -m""Initial commit: can't easily access for rebasing""
echo ""Line 1""&gt;test_file.txt
git add test_file.txt
git commit -m""Created single line file""
echo ""Line 2""&gt;&gt;test_file.txt 
git add test_file.txt 
git commit -m""Meant for it to be two lines""
git checkout -b dev
echo Meaningful code&gt;new_file.txt
git add new_file.txt 
git commit -m""Meaningful commit""
git checkout master
echo Conflicting meaningful code&gt;new_file.txt
git add new_file.txt 
git commit -m""Conflicting meaningful commit""
# This will conflict
git merge dev
# Fixes conflict
echo Merged meaningful code&gt;new_file.txt
git add new_file.txt
git commit -m""Merged dev with master""
cd ..

#========================================================
# Save off a clone of the repository prior to squashing
#========================================================
git clone test_squash test_squash_clone
#========================================================

#========================================================
# Do the squash
#========================================================
cd test_squash
GIT_EDITOR=../test_squash_helper.sh git rebase -i HEAD@{7}
#========================================================

#========================================================
# Show the results
#========================================================
git log
git gc
git reflog
#========================================================
</code></pre>

<p>test_squash_helper.sh (used by test_sqash.sh):</p>

<pre><code># If the file has the phrase ""pick "" in it, assume it's the log file
if grep -q ""pick "" $1
then
  sed -e ""s/pick \(.*\) \(Meant for it to be two lines\)/squash \1 \2/g"" &lt; $1 &gt; $1.tmp
  mv $1.tmp $1
# Else, assume it's the commit message file
else
# Use our pre-canned message
  echo ""Created two line file"" &gt; $1
fi
</code></pre>

<p>P.S.: Yes, I know some of you cringe when you see me using emacs as a fall-back editor.</p>

<p>P.P.S.: We do know we'll have to blow away all of our clones of the existing repository after the rebase. (Along the lines of ""thou shalt not rebase a repository after it's been published"".)</p>

<p>P.P.P.S: Can anyone tell me how to add a bounty to this? I'm not seeing the option anywhere on this screen whether I'm in edit mode or view mode.</p>
","66","14613","<git><git-rebase><git-merge><git-branch><git-checkout>"
"8279602","1","What is a patch in git version control?","<p>I am new to both git and version control so I am trying to figure out what a patch is and how is it different from the rest of activities I do in git?</p>

<p>When do I apply a patch? Does it happen every time I commit?</p>
","49","11179","<git><version-control>"
"10637378","1","How do I convert a bare git repository into a normal one (in-place)?","<p>I have a bare git repository, but need to access and browse its contents over ssh (in a file manager like user experience).</p>

<p>I assume I could clone it:</p>

<pre><code>git clone -l &lt;path_to_bare_repo&gt; &lt;new_normal_repo&gt;
</code></pre>

<p>However, my repository is about 20GB in size and I don't have the space to duplicate it. Is there a way to convert the bare repository in-place to end up with a working copy in it?</p>
","32","13068","<git><git-bare>"
"3559076","1","Git: how to get back to most recent version?","<p>I have recently moved from SVN to Git and am a bit confused about something. I needed to run the previous version of a script through a debugger, so I did <code>git checkout &lt;previous version hash&gt;</code> and did what I needed to do.</p>

<p>Now I want to get back to the newest version, but I don't know the hash for it. When I type <code>git log</code>, I don't see it.</p>

<p>How can I do this? Also, is there an easier way to change versions than by typing out hashes - something like ""go back two versions"" or ""go to the most chronologically recent""?</p>
","119","80080","<git>"
"2798822","1","Can I get git log to print the history in reverse order?","<p>I recently learned that I can get hg log to print the history in reverse order with:</p>

<pre><code>hg log -r :
</code></pre>

<p>So of course I tried:</p>

<pre><code>git log -r :
</code></pre>

<p>Well, it didn't work. So what is the command to do the same thing in git?</p>
","68","12609","<git><logging><history><reverse><mercurial>"
"3616221","1","Search code inside a Github project","<p>Is there a way to grep for something inside a Github project's code?</p>

<p>I could pull the source and grep it locally, but I was wondering if it's possible through the web interface or a 3rd-party alternative.</p>

<p>Ideas?</p>
","180","51542","<git><search><github>"
"8136178","1","Git log between tags","<p>I'm trying to output the log between two tagged commits.</p>

<pre><code>mbell@cheetah [12:07:22] [/var/www/html/brone] [dev]
-&gt; % git tag 
6.x-0.1
6.x-1.0-beta1
6.x-1.0-beta2
6.x-1.0-beta3
6.x-1.0-beta4
6.x-1.0-beta5
6.x-1.0-beta6
6.x-1.0-beta7
6.x-1.0-beta8
6.x-1.0-beta9
</code></pre>

<p>If I then do:</p>

<p><code>git log 6.x-1.0-beta8 6.x-1.0-beta9 &gt; ~/gitlogbrone.txt</code></p>

<p>It outputs all the commits since the start of the repo which isn't what I want. I've read through the git log manual but it's not helping much.</p>
","37","19514","<git>"
"3844369","1","Git production/staging server workflow","<p>Currently my website (production server) already have a lot of code in it.
And now I want to start using Git for my projects and setup a staging server for my team.
Can anybody give me any advise?</p>

<p>Here is the picture in my mind:</p>

<pre><code>        Production        - Production server which already have codes
            ↑             
         Staging          - New staging server, will install Trac too
         ↗↙ ↖↘          
  Developer1  Developer2  - Local development 
</code></pre>

<p>My question is, how should I start? </p>

<p>Here are some steps in my mind:</p>

<ol>
<li>do a <code>git init</code> in production server (is this safe?) </li>
<li><code>clone</code> the repo from production to staging server</li>
<li>developers <code>clone</code> the repo from the staging to their local machine</li>
<li><code>push</code> files to the staging server after finish changing</li>
<li>when staging is ready, <code>push</code> everything to the production</li>
</ol>

<p>Does this work flow makes sense, or there are some better way to do it?</p>

<p>What if I only want to change one file?</p>

<p>Does origin/master has anything to do with it in this process?? 
Who is the origin? am I going to end up having multiple origins??</p>

<p>Also, when should a developer use <code>branch</code> in this case? </p>
","100","26489","<git><production><staging><dev-to-production>"
"3617113","1","GitHub: Permission denied (publickey). fatal: The remote end hung up unexpectedly","<p>I have followed these instructions below to upload a project. </p>

<p>Global setup:</p>

<pre><code> Download and install Git
  git config --global user.name ""Your Name""
  git config --global user.email tirengarfio@gmail.com
  Add your public key


Next steps:

  mkdir tirengarfio
  cd tirengarfio
  git init
  touch README
  git add README
  git commit -m 'first commit'
  git remote add origin git@github.com:tirengarfio/tirengarfio.git
  git push origin master
</code></pre>

<p>But I get this error:</p>

<blockquote>
  <p>Permission denied (publickey). fatal:
  The remote end hung up unexpectedly</p>
</blockquote>
","176","222605","<git><github><public-key>"
"1759587","1","un-submodule a git submodule","<p>How do I un-submodule a git submodule (bring all the code back into the core) ?</p>

<p>As in how ""should"" I, as in ""Best procedure"" ...</p>
","184","34941","<git><git-submodules>"
"5798930","1","""git rm --cached x"" vs ""git reset head -- x""?","<p><a href=""http://gitref.org/basic/"">GitRef.org - Basic</a>:</p>

<blockquote>
  <p><code>git rm</code> will remove entries from the
  staging area. This is a bit different
  from <code>git reset HEAD</code> which ""unstages""
  files. By ""unstage"" I mean it reverts
  the staging area to what was there
  before we started modifying things.
  <code>git rm</code> on the other hand just kicks
  the file off the stage entirely, so
  that it's not included in the next
  commit snapshot, thereby effectively
  deleting it.</p>
  
  <p>By default, a <code>git rm file</code> will remove the file from the staging area entirely and also off your disk > (the working directory). To leave the file in the working directory, you can use <code>git rm --cached</code>.</p>
</blockquote>

<p>But what exactly is the difference between <code>git rm --cached asd</code> and <code>git reset head -- asd</code>?</p>
","70","71994","<git><git-reset><git-index><git-rm>"
"6006737","1","Git merge errors","<p>I have a git branch called <code>9-sign-in-out</code> with perfectly working code, and I want to turn it into the master. I'm currently on the master branch.</p>

<pre><code>$ git branch
9-sign-in-out
* master
</code></pre>

<p>I'm trying to switch to <code>9-sign-in-out</code> branch, but it doesn't allow me to:</p>

<pre><code>$ git checkout 9-sign-in-out
app/helpers/application_helper.rb: needs merge
config/routes.rb: needs merge
error: you need to resolve your current index first
</code></pre>

<p>Any idea how can I ignore all the master branch errors and turn the <code>9-sign-in-out</code> branch into the master? Maybe git <a href=""http://git-scm.com/docs/git-rebase"">rebase</a>? But I don't want to lose the code in <code>9-sign-in-out</code> branch.</p>
","109","118371","<git><branch><git-merge><git-branch>"
"6226846","1","How to change a Git remote on Heroku","<p>I do not want to upload my app to the wrong domain.</p>

<p>How can I change the git master branch on git? </p>
","54","46361","<git><heroku>"
"22984262","1","""Cannot update paths and switch to branch at the same time""","<p>I sometimes use the <code>checkout -b</code> option to create a new branch, check it out at the same time and set up tracking in one command.</p>

<p>In a new environment, I get this error:</p>

<pre><code>$ git checkout -b test --track origin/master
fatal: Cannot update paths and switch to branch 'test' at the same time.
Did you intend to checkout 'origin/master' which can not be resolved as commit?
</code></pre>

<p>Why does Git not like it? This used to work with the same repo.</p>
","64","38717","<git><git-checkout>"
"6011521","1","opposite of .gitignore file?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/987142/make-gitignore-ignore-everything-except-a-few-files"">Make .gitignore ignore everything except a few files</a>  </p>
</blockquote>



<p>Is it possible to let git ignore all files by default, unless specified in a special file?  </p>
","63","10912","<git>"
"6011893","1","TortoiseGit vs Git Extensions","<p>What are the benefits and disadvantage of using either Git Extensions or TortoiseGit on a Windows Based OS?</p>
","61","41445","<git><tortoisegit><git-extensions>"
"10744305","1","How to create .gitignore file","<p>I need to add some rules to my <code>.gitignore</code> file, however, I can't find it in my project folder. Isn't it created automatically by Xcode? If not, what command allows me to create one?</p>
","439","279096","<git><xcode4.3><gitignore>"
"15551618","1","Get the creation date of a stash","<p>Is there a way to tell when a stash was created?</p>

<p><code>git stash list</code> only lists the stashes, and <code>git stash show XXXXXX</code> shows all the files and changes, but not the <strong>date</strong> of the stash creation.</p>
","75","6547","<git><git-stash>"
"3845234","1","Viewing GIT history of moved files","<p>Despite reading lots of other posts regarding GIT and moved files I still struggle to understand how to trace the full history.  Doing <code>gitk myfile</code> as suggested <a href=""http://stackoverflow.com/questions/278192/git-how-do-i-view-the-change-history-of-a-file"">here</a> seems to only show history until the previous move.  I understand that GIT doesn't track files, only their content.  So surely I should be able to view the full evolution of a file, even if it's been moved?</p>

<p>Can anyone direct me to a good yet simple example/tutorial?</p>

<p>I'd like to see an example where some files are moved around, changed and committed, then the history of a single file is displayed, moves and all.  I've been looking at 'log' but that seems to concern checkins.  Would still appreciate some advice, even if its says I'm somehow still thinking too much SVN.</p>
","47","8178","<git>"
"1248029","1","Git pull: error: Entry foo not uptodate. Cannot merge","<p>I'm trying to update my repo from a remote branch and keep getting this error when I do a ""git pull"". I haven't made any local changes, and even if I have I don't need to keep them.</p>

<p>I've tried:</p>

<p>git reset --hard</p>

<p>and I get the same problem</p>

<p>The only thing that seems to work is deleting the offending file and try a git pull again.</p>

<p>I've also tried ""git stash"" followed by a ""git pull"". No go.</p>

<p>edit: using PortableGit-1.6.4-preview20090729 so any previous bugs with spurious errors should be fixed.</p>
","38","29980","<git>"
"1824366","1","How to handle widespread code format changes in a git repository","<p>We have a project with around 500,000 lines of code, managed with git, much of it several years old.  We're about to make a series of modifications to bring the older code into conformance with the developer community's current standards and best practices, with regards to naming conventions, exception handling, indentation, and so forth.</p>

<p>You can think of it as something between pretty printing and low level/mechanical refactoring.</p>

<p>This process is likely to touch almost every line of code in the code base (~85%), and some lines will be subject to as many as five modifications.  All of the changes are intended to be semantically neutral.</p>

<p>
<li>Is there any way to make the changes transparent to git blame, etc. so that when looking at the code a month from now we'll see the commit the logic was introduced in, not the one in which the indentation or capitalization was changed?
<li>What's the best way to pull merges from forks that have not undergone this process?  My present plan would be to have a script clone the forked repo, apply the automated process to it and its base, diff them, then apply the diff.  But I'd love to have a cleaner answer.
<li>Are there any other problems of this sort that I'm not seeing, and if so what can be done to mitigate them?  I'm figuring that git bisect, etc. should be fine, git log, etc. crossing the great divide will be annoying unless you are careful, and git diff will be hopeless, but I'm not convinced I'm not overlooking another pain point.</p>
","38","3215","<git><refactoring><indentation><pretty-print>"
"8390828","1","How can I have Github on my own server?","<p>Is there anything out there like Github that is for your own local server?  I am curious if there is like a PHP script or even a desktop client that mimics Github's functionality, I love Github but it would be nice to host on my own server.</p>

<p>Apologies if this isn't considered ""programming"" enough but generally only programmers use GIT and Github</p>

<hr>

<h2>Update</h2>

<p>First of all thanks for all the great suggestions, it is great to see there are options out there.  From what is posted here and from my googling I can say it looks like the best looking/most alike to Github solutions are coded in Ruby, which is great for some but I am a PHP kind of guy (for now).</p>

<p>Most of the PHP GIT viewers either are  outdated and abandoned projects or they just look like crap ( I realize I could fix them up to be more like Github) but I ran across something in PHP that looks promising so far.  It is called Glip it is on Github here <a href=""https://github.com/patrikf/glip"">https://github.com/patrikf/glip</a> and to me it is the most attractive and easy to use solution I have found for PHP so far.  For the advanced Git user, it may not be enough but for me, I just wanted to be able to view a git repo and that provides that functionality.</p>

<p>Now my search still continues for the perfect solution, will I ever find it?  I hope so but, for now, this is we got.  I am considering writing my own, one that is attractive like Github and has other features like an Issue tracker for bug and feature requests.  All the ones I have seen so far are not so good</p>
","42","56881","<php><git><github>"
"18019142","1","How to clone a Github Gist via SSH protocol?","<p>Github really seems to want us to use the HTTPS protocol to use Gists, for example, they only list the HTTPS url on a Gist page - e.g. <a href=""https://gist.github.com/donatello/5834862"">https://gist.github.com/donatello/5834862</a></p>

<p>Is it possible to clone a Gist using SSH protocol?</p>
","33","14466","<git><github><gist>"
"2003505","1","How to delete a Git branch both locally and remotely?","<p>I want to delete a branch both locally and on my remote project fork on <em><a href=""http://en.wikipedia.org/wiki/GitHub"">GitHub</a></em>.</p>

<h3>Successfully Deleted Local Branch</h3>



<pre class=""lang-sh prettyprint-override""><code>$ git branch -D bugfix
Deleted branch bugfix (was 2a14ef7).
</code></pre>

<p><em>Note:</em> The uppercase <code>-D</code> option is a shortcut for <code>--delete --force</code>. If you want to delete a local branch is already fully merged in its upstream branch, use <code>-d</code> which is a shortcut for <code>--delete</code> (no forcing is needed in that case).</p>

<h3>Failed Attempts to Delete Remote Branch</h3>

<pre class=""lang-sh prettyprint-override""><code>$ git branch -d remotes/origin/bugfix
error: branch 'remotes/origin/bugfix' not found.

$ git branch -d origin/bugfix
error: branch 'origin/bugfix' not found.

$ git branch -rd origin/bugfix
Deleted remote branch origin/bugfix (was 2a14ef7).

$ git push
Everything up-to-date

$ git pull
From github.com:gituser/gitproject
* [new branch] bugfix -&gt; origin/bugfix
Already up-to-date.
</code></pre>

<p>What do I need to do differently to successfully delete the
<code>remotes/origin/bugfix</code> branch both locally and on GitHub?</p>
","7916","2877475","<git><git-branch><git-remote>"
"3846380","1","How to iterate through all git branches using bash script","<p>How can I iterate through all the local branches in my repository using bash script.
I need to iterate and check is there any difference between the branch and some remote branches.
Ex</p>

<pre><code>for branch in $(git branch); 
do
    git log --oneline $branch ^remotes/origin/master;
done
</code></pre>

<p>I need to do something like given above, but the issue I'm facing is $(git branch) gives me the folders inside the repository folder along with the branches present in the repository.</p>

<p>Is this the correct way to solve this issue? Or is there another way to do it?</p>

<p>Thank you</p>
","54","14966","<git><bash><git-bash>"
"1899792","1","Why is git submodule update not automatic?","<p>When switching branches with git checkout I would assume that most of the time you would want to update your submodules.</p>

<ul>
<li>In what situation do you <strong>not</strong> want to update submodules after switching?</li>
<li>What would break if this was done automatically by git checkout?</li>
</ul>

<p>Updated with example:</p>

<ul>
<li>Branch A has submodule S at 3852f1</li>
<li>Branch B has submodule S at fd72d7</li>
</ul>

<p>On branch A, git checkout B will result in a working copy of branch B with submodule S at 3852f1 (with a modified S). git submodule update will checkout S at fd72d7.</p>
","50","9371","<git><git-submodules>"
"1248570","1","git: ignore everything except subdirectory","<p>I want to ignore all files in my repository except those that occur in the 'bin' subdirectory. I tried adding the following to my .gitignore</p>

<pre><code>*
!bin/*
</code></pre>

<p>This does not have the desired effect, however: I created a new file inside of bin/, but doing 'git status' still ""shows nothing to commit (working directory clean)""</p>

<p>Any suggestions?</p>

<p>Thanks,
Michael</p>
","116","38153","<git><gitignore>"
"5248103","1","Git revert last commit in heroku","<p>I made acommit and pushed it to origin and heroku</p>

<p>Then I realised it was wrong, so I did</p>

<pre><code>git reset --soft HEAD^ 
</code></pre>

<p>But when I'm pushing to Heroku Im getting</p>

<pre><code>To git@heroku.com:app.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@heroku.com:app.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>I understand the problem. How should I proceed? How can I revert also last heroku commit? (I assume would be the best solution)</p>
","34","14407","<git><heroku>"
"2314652","1","Is it possible to move/rename files in git and maintain their history?","<p>I would like to rename/move a project subtree in Git moving it from</p>

<pre><code>/project/xyz
</code></pre>

<p>to </p>

<pre><code>/components/xyz
</code></pre>

<p>If I use a plain <code>git mv project components</code> then all the file history for the <code>xyz project</code> gets lost.</p>

<p>Is there a way to move this such that the history is maintained? </p>
","367","153701","<git><rename><mv>"
"8509396","1","Git pull results in extraneous ""Merge branch"" messages in commit log","<p>I'm working with another developer on a project, and we're using Github as our remote repo. I'm on a Mac using git 1.7.7.3, he's on Windows using git 1.7.6.</p>

<p>This is what's happening</p>

<ol>
<li>One of us (let's call him developer A, but it doesn't matter which one) pushes a set of commits to GitHub.</li>
<li>The other (developer B) makes some local commits.</li>
<li>B does a <code>git pull</code>.</li>
<li>B does a <code>git push</code>.</li>
<li>Looking at the commit history log, I see <strong>Merge branch 'master' of github.com:foo/bar</strong></li>
</ol>

<p>The commit log gets littered with ""Merge branch"" messages over time, and also shows developer B as committing changes that developer A made. The only way we've found to prevent this issue has been to do a <code>git pull --rebase</code> at step 3, but I don't know what side effects rebasing will introduce. This is my first time working on a multi-developer git repo, so is this just normal behavior? Any thoughts on how to solve this issue?</p>
","44","17995","<git><github><commit>"
"6229764","1","Overwriting My Local Branch with Remote Branch","<p>I have completely fubar'd my local branch, and would like to start over. The version on the server is correct. </p>

<p>I don't want to start over, I would like to use my local history to fix my huge screwup. (I can if I have to)</p>

<p>git fetch branchname, and git pull branchname don't work. The message I get is ""up to date"" however, my local version does not match that of the server. </p>

<p>git pull origin/branchname gives me a ""not found"" error.</p>
","68","40775","<git>"
"2006032","1","View differences of branches with meld?","<p>I know that I can view the difference between HEAD and current state with <code>meld .</code>. But how can I view the differences between branches, for example <code>master</code> and <code>devel</code> with meld?</p>

<p>At the moment I do the following steps:</p>

<ol>
<li>Rename folder of working copy<br/>
    For example <code>mv /projectA /projectA_master</code>)</li>

<li>Clone the project again <br/>
    <code>git clone url</code></li>

<li>Switch to <code>devel</code> branch <br/>
    <code>cd projectA && git -b devel origin/devel</code> </li>

<li>View differences with meld <br/>
    <code>meld /projectA_Master projectA</code></li>
</ol> 

<p>Isn't there an easier way to get the same result in meld? I only need it to review the changes and not primarily for merging.</p>
","88","42225","<git><diff><branch><meld>"
"2006172","1","How to reset a remote GIT repository to remove all commits?","<p>How to reset a remote and local GIT repository to remove all commits, and start fresh with the current Head as initial commit.</p>
","93","62621","<git><version-control>"
"62264","1","Dealing with SVN keyword expansion with git-svn","<p>I recently asked about <a href=""http://stackoverflow.com/questions/39742/does-git-have-anything-like-svn-propset-svnkeywords-or-pre-post-commit-hooks"">keyword expansion in Git</a> and I'm willing to accept the design not to really support this idea in Git. </p>

<p>For better or worse, the project I'm working on at the moment requires SVN keyword expansion like this:</p>

<pre><code>svn propset svn:keywords ""Id"" expl3.dtx
</code></pre>

<p>to keep this string up-to-date:</p>

<pre><code>$Id: expl3.dtx 803 2008-09-11 14:01:58Z will $
</code></pre>

<p>But I would quite like to use Git to do my version control. Unfortunately, git-svn doesn't support this, according to the docs:</p>

<blockquote>
  <p>""We ignore all SVN properties except svn:executable""</p>
</blockquote>

<p>But it doesn't seem too tricky to have this keyword stuff emulated by a couple of pre/post commit hooks. Am I the first person to want this? Does anyone have some code to do this?</p>
","38","14258","<svn><git><version-control>"
"2006265","1","Is there a standard naming convention for git tags?","<p>I've seen a lot of projects using <code>v1.2.3</code> as the naming convention for tags in git. I've also seen some use <code>1.2.3</code>. Is there an officially endorsed style, or are there any good arguments for using either?</p>
","100","24717","<git><git-tag>"
"75809","1","Partial Commits with Subversion","<p>Given the case I made <strong>two independent changes</strong> in <em>one</em> file: eg. added a new method and changed another method.</p>

<p>I often don't want to commit both changes as <strong>one</strong> commit, but as <strong>two</strong> independent commits.</p>

<p>On a git repository I would use the <strong>Interactive Mode</strong> of <a href=""http://linux.die.net/man/1/git-add"">git-add(1)</a> to split the <em>hunk</em> into smaller ones:</p>

<pre><code> git add --patch
</code></pre>

<p>What's the easiest way to do this with Subversion? (Maybe even using an Eclipse plug-in)</p>

<p><strong>Update:</strong><br/>
In <a href=""http://tomayko.com/writings/the-thing-about-git"">The Thing About Git</a>, Ryan calls it: <em>“The Tangled Working Copy Problem.”</em></p>
","70","15366","<svn><git>"
"89332","1","How to recover a dropped stash in Git?","<p>I frequently use <code>git stash</code> and <code>git stash pop</code> to save and restore changes in my working tree. Yesterday I had some changes in my working tree that I had stashed and popped, and then I made more changes to my working tree. I'd like to go back and review yesterday's stashed changes, but <code>git stash pop</code> appears to remove all references to the associated commit.</p>

<p>I know that if I use <code>git stash</code> then <em>.git/refs/stash contains</em> the reference of the commit used to create the stash. And <em>.git/logs/refs/stash contains</em> the whole stash. But those references are gone after <code>git stash pop</code>. I know that the commit is still in my repository somewhere, but I don't know what it was.</p>

<p>Is there an easy way to recover yesterday's stash commit reference?</p>

<p>Note that this isn't critical for me today because I have daily backups and can go back to yesterday's working tree to get my changes. I'm asking because there must be an easier way!</p>
","860","128537","<git><recovery><git-stash>"
"89487","1","Why isn't the git stash unique per branch?","<p>I suppose it allows for moving changes from one branch to the next but that's what cherry picking is for and if you're not making a commit of your changes, perhaps you shouldn't be moving them around?</p>

<p>I have on occasion applied the wrong stash at the wrong branch, which left me wondering about this question.</p>
","64","11480","<git><git-stash>"
"21756531","1","Git ignore local changes to tracked files","<p>Specifically, I maintain a git repository of my dotfiles. I recently started working on a new machine and cloned my repository on the same.</p>

<p>Now, I wish to make some changes to my dotfiles which are specific to this system only. These changes I wish to ignore in my repository.</p>

<p>Other changes that I make, should continue to be tracked and committed. </p>

<p>For example, in my .gitconfig, I have a setting as:</p>

<pre><code>[push]
   default = simple
</code></pre>

<p>Now, on my new machine, the version of git being used it very old. It still not not support the setting <code>simple</code> for push. So, I'd like to change this, but only locally.</p>

<p>However, if I make any other changes to my .gitconfig, I'd like to keep track of those. Anyway I can achieve this?</p>

<p>EDIT:<br>
I know of <code>git update-index --assume-unchanged</code>. The problem with it is that git will no longer track my file at all, until I reverse it. And then, it will track all changes.<br>
I wish to ignore certain changes and track the rest.</p>
","33","12564","<git>"
"7200614","1","How to merge remote master to local branch","<p>I have a local branch of a project (""configUpdate"") that I've forked from somebody else's project and I've done a load of changes on it and would like to merge the changes they've made in to my local branch.</p>

<p>I've tried </p>

<pre><code>git pull --rebase origin configUpdate
</code></pre>

<p>but it hasn't grabbed the latest changes - how can I merge the two?  (also for bonus points what did I do with the <code>pull --rebase</code> command?)</p>
","77","75001","<git><branch><pull>"
"2007662","1","Rollback to an old Git commit in a public repo","<p>How can I go about rolling back to a specific commit in git?</p>

<p>The best answer someone could give me was to use <code>git revert</code> X times until I reach the desired commit.  </p>

<p>So let's say I want to revert back to a commit that's 20 commits old, I'd have to run it 20 times.  </p>

<p>Is there an easier way to do this?  </p>

<p>I can't use reset because this repository is public.</p>
","294","271776","<git><git-checkout><git-revert>"
"115983","1","How can I add an empty directory to a Git repository?","<p>How can I add an empty directory (that contains no files) to a Git repository?</p>
","2383","432218","<git><directory><git-add>"
"138621","1","Best Version control for lone developer","<p>I'm a lone developer at the moment; please share you experiences on what is a good VC setup for a lone developer. </p>

<p>My constraints are; </p>

<ul>
<li>I work on multiple machines and need to keep them synced up </li>
<li>Sometimes I work offline </li>
</ul>

<p>I'm currently using Subversion(just the client to a remote server), and that is working ok.  I'm interested in Mercurial and git DVCS, but none of their use-cases make sense to my situation.</p>

<p>EDIT: I've migrated my active development to Fossil <a href=""http://www.fossil-scm.org/"">http://www.fossil-scm.org/</a> after trialing it with a client. I really like the features to autosync my repositories(reducing accidental forks), the documentation support(both wiki and embedded/versioned) that supports my need to document the code and the project in different spaces, the easy to configure issue tracker, nice access control, skinnable web interface and helpful community. </p>
","65","13725","<svn><git><version-control><project-management><bug-tracking>"
"2855140","1","Recursively add files by pattern","<p>How do I recursively add files by a pattern (or glob) located in different directories?</p>

<p>For example, I'd like to add <code>A/B/C/foo.java</code> and <code>D/E/F/bar.java</code> (and several other java files) with one command:</p>

<pre><code>git add '*.java'
</code></pre>

<p>Unfortunately, that doesn't work as expected.</p>
","54","18251","<git><glob><filepattern>"
"5578270","1","Fully backup a git repo?","<p>Is there a simple way to backup an entire git repo including all branches and tags?</p>
","54","37502","<git><backup>"
"225291","1","git-upload-pack: command not found, how to fix this correctly","<p>I have been using git to keep two copies of my project in sync, one is my local box, the other the test server.
This is an issue which occurs when I log onto our remote development server using ssh;</p>

<pre><code>git clone me@me.mydevbox.com:/home/chris/myproject
Initialized empty Git repository in /tmp/myproject/.git/
Password:
bash: git-upload-pack: command not found
fatal: The remote end hung up unexpectedly
fetch-pack from 'me@me.mydevbox.com:/home/chris/myproject' failed.
</code></pre>

<p>(the file-names have been changed to protect the guilty... !) </p>

<p>Both boxes run Solaris 10 AMD. I have done some digging,  if I add --upload-pack=<code>which git-upload-pack</code> the command works, (and proves that $PATH contains the path to 'git-upload-pack' as per the RTFM solution)  but this is really annoying, plus 'git push' doesn't work, because I don't think there is a --unpack= option.  </p>

<p>Incidentally, all the git commands work fine from my local box, it is the same version of the software (1.5.4.2), installed on the same NFS mount at /usr/local/bin.  </p>

<p>Can anybody help?</p>
","153","97664","<git><version-control><unix><ssh>"
"2427238","1","In git, what is the difference between merge --squash and rebase?","<p>I'm new to git and I'm trying to understand the difference between a squash and a rebase.  As I understand it you perform a squash when doing a rebase.</p>
","170","54721","<git><merge><rebase><git-rebase><squash>"
"2427288","1","How to get back to the latest commit after checking out a previous commit?","<p>I sometimes check out some previous version of the code to examine or test.  I have seen instructions on what to do if I wish to modify previous commits -- but suppose I make no changes.  After I've done e.g. <code>git checkout HEAD^</code>, how do I get back to the tip of the branch?.. <code>git log</code> no longer shows me the SHA of the latest commit.</p>
","193","65038","<git>"
"17582685","1","Install gitk on Mac","<p>Does anyone know how to install gitk on Mac?</p>

<p>From their official website, it seems gitk comes with git, but the version of my git (<code>git version 1.7.12.4 (Apple Git-37)</code>) does not come with gitk.</p>

<p><code>brew install gitk</code> does not work for gitk.</p>
","84","60609","<osx><git><gitk>"
"7259535","1","Setting up a git remote origin","<p>I have the following repos.</p>

<ol>
<li>DEV REPO: in a directory on my development machine where i make changes</li>
<li>MAIN REPO: bare repository on my development machine to which i push changes from dev repo</li>
<li>PRODUCTION REPO: repository on host machine to pull updates from the main repo</li>
</ol>

<p>I used <code>git remote add origin /Users/me/sites/main_repo</code> to set the MAIN repo as origin for the DEV repo. The PRODUCTION repo is on a remote host. Can i use a variation of the same command to set the MAIN repo as origin for the PRODUCTION repo also? If ""yes"", then i suppose the syntax would include an ip address. What would that look like?</p>
","113","126543","<git>"
"1587846","1","How do I show the changes which have been staged?","<p>I staged a few changes to be committed; how can I see the diff of all files which are staged for the next commit? I'm aware of <a href=""http://git-scm.com/docs/git-status"">git status</a>, but I'd like to see the actual diffs - not just the names of files which are staged.</p>

<p>I saw that the <a href=""http://git-scm.com/docs/git-diff"">git-diff(1)</a> man page says</p>

<blockquote>
  <p>git diff [--options] [--] […]</p>
  
  <p>This form is to view the changes you made relative to the index (staging area for the next commit). In other words, the differences are what you <em>could</em> tell git to further add to the index but you still haven't. You can stage these changes by using git-add(1). </p>
</blockquote>

<p>Unfortunately, I can't quite make sense of this. There must be some handy one-liner which I could create an alias for, right?</p>
","1018","317037","<git><diff><dvcs><git-stage>"
"7925850","1","How to automatically push after committing in git?","<p>How do I set git to automatically push to a remote repo (including automatically providing my passphrase) after each commit to the local repo?</p>
","42","17825","<git><githooks><git-push><post-commit-hook>"
"2466735","1","How to checkout only one file from git repository?","<p>How do I checkout just one file from a git repo?</p>
","233","202775","<git><file>"
"2466821","1","How do I pipe in FileMerge as a diff tool with git on OS X?","<p>I'm new to git on OS X, and I'm using it via the command line. I come from the world of Tortoise SVN and Beyond Compare on Windows.</p>

<p>I want to be able to send diffs to FileMerge.</p>

<p>I was able to do this with TextMate simply by using:</p>

<pre><code>git diff | mate
</code></pre>

<p>But I'm not sure how to get that set up so I can use FileMerge instead?</p>
","34","16367","<git><osx><command-line><filemerge>"
"8185276","1","Find size of git repo","<p>What's a simple way to find the size of my git repository? And I don't mean <code>du -h</code> on the root directory of my repo.  I have a lot of ignored files so that size would be different from my total repo size.  I essentially want to know how much data would be transfered upon cloning my repo.</p>
","131","40015","<git><filesize>"
"4911794","1","git command for making one branch like another","<p>I'm trying to take a branch with changes and bring it back to be identical to the upstream it diverged from. The changes are both local and have been pushed to github, so neither <code>git reset</code> or <code>git rebase</code> are really viable, since they change history, which is a bad thing with a branch that's already been pushed.</p>

<p>I've also tried <code>git merge</code> with various strategies but none of them undo the local changes, i.e. if I'd added a file, a merge might bring other files back in line, but I'll still have that file that the upstream doesn't have.</p>

<p>I could just create a new branch off the upstream, but i'd really like a merge that in terms of revision history applies all the changes to take my branch and make it identical to the upstream again, so that I can safely push that change without clobbering history. Is there such a command or series of commands?</p>
","44","19102","<git><github><branching-and-merging>"
"3620633","1","What is the difference between pull and clone in git?","<p>What is the difference between doing:</p>

<pre><code>mkdir repo
cd repo
git init
git remote add origin git://github.com/cmcculloh/repo.git
git fetch --all
git pull origin master
</code></pre>

<p>and</p>

<pre><code>git clone git://github.com/cmcculloh/repo.git
</code></pre>

<p>I mean, obviously one is shorter, but other than that are they basically doing the same thing?</p>
","95","54186","<git><clone><pull>"
"2883840","1","Differences between git pull origin master & git pull origin/master","<p>What is the difference between <code>git pull origin master</code> and <code>git pull origin/master</code> ?</p>
","164","112217","<git><version-control>"
"6349139","1","Can I get git to tell me all the files one user has modified?","<p>I would like git to give me a list of all the files modified by one user, across all commits.</p>

<p>My particular use case is that I've been involved in the i18n of a ruby on rails project, and we want to know what files have already been done and what files still need to be done. The users in question have only done work on the i18n, not on the rest of the code base. So the information should all be in git, but I'm not sure how to get it out.</p>
","72","10151","<git>"
"7310033","1","How to make git diff --ignore-space-change the default","<p>I could probably setup an alias, but it seems like I should be able to set this as an option in the config file, only I don't see anyway to do it.</p>

<p>I'm only want the <code>--ignore-space-change</code> when I'm doing diff, not when I'm doing apply or anything else.  I'm trying to make the diff easier to understand by not cluttering it with with extraneous +/- lines that have no real changes on them.</p>
","67","28958","<git><config><git-config>"
"846659","1","How can I put a database under git (version control)?","<p>I'm doing a web app, and I need to make a branch for some major changes, the thing is, these changes require changes to the database schema, so I'd like to put the entire database under git as well.</p>

<p>How do I do that? is there a specific folder that I can keep under a git repository? How do I know which one? How can I be sure that I'm putting the right folder?</p>

<p>I need to be sure, because these changes are not backward compatible; I can't afford to screw up.</p>

<p>The database in my case is PostgreSQL</p>

<h3>Edit:</h3>

<p>Someone suggested taking backups and putting the backup file under version control instead of the database. To be honest, I find that really hard to swallow. </p>

<p><strike>There has to be a better way.</strike></p>

<h3>Update:</h3>

<p>OK, so there' no better way, but I'm still not quite convinced, so I will change the question a bit:</p>

<p>I'd like to put the entire database under version control, what database engine can I use so that I can put the actual database under version control instead of its dump?</p>

<p>Would sqlite be git-friendly?</p>

<p>Since this is only the development environment, I can choose whatever database I want.</p>

<h3>Edit2:</h3>

<p>What I really want is not to track my development history, but to be able to switch from my ""new radical changes"" branch to the ""current stable branch"" and be able for instance to fix some bugs/issues, etc, with the current stable branch. Such that when I switch branches, the database auto-magically becomes compatible with the branch I'm currently on.
I don't really care much about the actual data.</p>
","161","55838","<database><git><version-control><postgresql>"
"2529971","1","What is the HEAD in git?","<p>There seems to be a difference between the last commit, the HEAD and the state of the file I can see in my directory.</p>

<p>What is HEAD, what can I do with it and what mistake should I avoid?</p>
","52","21058","<git><head>"
"2530060","1","Can you explain what ""git reset"" does in plain english?","<p>I have seen <a href=""http://stackoverflow.com/questions/1634115/whats-the-difference-between-git-reset-hard-and-git-reset-merge"">interesting posts</a> explaining subtleties about <code>git reset</code>.</p>

<p>Unfortunately, the more I read about it, the more it appears that I don't understand it fully. I come from a SVN background and Git is a whole new paradigm. I got mercurial easily, but Git is much more technical.</p>

<p>I think <code>git reset</code> is close to <code>hg revert</code>, but it seems there are differences.</p>

<p>So what exactly does <code>git reset</code> do? Please include detailed explanations about:</p>

<ul>
<li>the options <code>--hard</code>, <code>--soft</code> and <code>--merge</code>;</li>
<li>the strange notation you use with <code>HEAD</code> such as <code>HEAD^</code> and <code>HEAD~1</code>;</li>
<li>concrete use cases and work flows;</li>
<li>consequences on the working copy, the <code>HEAD</code> and your global stress level.</li>
</ul>
","441","111221","<git><reset>"
"9731585","1","Lost my schema.rb! Can it be regenerated?","<p>Due to some deployment issues I stopped tracking schema.rb in git. Somehow I have stuffed this up and somewhere along the way my schema.rb file has disappeared.</p>

<p>Is there a way of regenerating schema.rb from the database or from the migrations? I would prefer not to lose the existing data.</p>
","74","20323","<ruby-on-rails><ruby-on-rails-3><git>"
"3973034","1","Export a stash to another computer","<p>I need a way to export a stashed change to another computer.</p>

<p>On Computer1 I did</p>

<pre><code>$ git stash save feature
</code></pre>

<p>I'm trying to get the stash patch to a file and then import it to another computer</p>

<pre><code>$ git stash show -p &gt; patch
</code></pre>

<p>This command gives me a file that I can move to another computer where this repo is cloned, but the question is how to import it as a stash again.</p>

<p>Thanks</p>
","123","23107","<git>"
"4971746","1","Why should I care about lightweight vs. annotated tags?","<p>I switched from Subversion to Git as my day-to-day VCS last year and am still trying to grasp the finer points of ""Git-think"".</p>

<p>The one which has been bothering me lately is ""lightweight"" vs. annotated vs. signed tags.  It seems pretty universally accepted that annotated tags are superior to lightweight tags for all real uses, but the explanations I've found for why that's the case always seem to boil down to either <a href=""http://stackoverflow.com/questions/4092640/in-what-circumstances-should-i-add-the-a-flag-to-the-git-tag-command"">""because best practices""</a> or <a href=""http://www.rockstarprogrammer.org/post/2008/oct/16/git-tag-does-wrong-thing-default/"">""because they're different""</a>.  Unfortunately, those are very unsatisfying arguments without knowing <em>why</em> it's best practices or how those differences are <em>relevant</em> to my Git usage.</p>

<p>When I first switched to Git, lightweight tags seemed to be the best thing since sliced bread; I could just point at a commit and say ""that was 1.0"".  I'm having trouble grasping how a tag could ever need to be more than that, but I certainly can't believe that the Git experts of the world prefer annotated tags arbitrarily!  So what's all the hubbub about?</p>

<p><em>(Bonus points: Why would I ever need to sign a tag?)</em></p>

<p><strong>EDIT</strong></p>

<p>I've been <a href=""http://stackoverflow.com/questions/4971746/why-should-i-care-about-lightweight-vs-annotated-tags/4971817#4971817"">successfully convinced</a> that annotated tags are a Good Thing — knowing who tagged and when is important!  As a follow-up, any advice on good tag annotations?  Both <code>git tag -am ""tagging 1.0"" 1.0</code> and trying to summarize the commit log since the previous tag feel like losing strategies.</p>
","206","24953","<git><tags>"
"4988238","1","Is there a Github clone in PHP that I can run on my own server?","<p>I know there are plenty of ways to run git on my server, but I quite like the functionality of git with repo browsing - the fact that i can look at previous versions in the web interface.</p>

<p>Now was I able to, I'd use github, but the problem is our source control rules are very strict and we aren't allowed to put files on other servers, even if they are encrypted.</p>

<p>Is there a script that allows us to run a github like interface, or rather one that allows me to browse the revision history of the git project through a web interface?</p>

<p>I'm running a LAMP server, but would consider alternate languages like python, perl etc should nothing in php be available.</p>

<p>interested in both paid and open source softwares </p>
","82","37325","<git><version-control><github>"
"1764380","1","Push to a non-bare Git repository","<p>I usually work on a remote server via ssh (screen and vim), where I have a Git repository. Sometimes I'm not online, so I have a separate repository (cloned from my remote) on my laptop.</p>

<p>However, I can't pull from this repository on remote side because I'm usually behind a firewall or I don't have a public IP.</p>

<p>I've read that I should push just to a bare repository. How should I then push my changes to my remote repository?</p>
","86","26638","<git><git-push><git-non-bare-repository>"
"22199432","1","Pull request vs Merge request","<p>I was wondering what is the difference between a Pull request and a Merge request.</p>

<p>In Github we can see Pull Request and in GitLab for example, we see Merge Request... Is there a difference?</p>
","83","24589","<git><github><gitlab>"
"13240227","1","Deploying to Heroku using git on bitbucket","<p>I want to host my source on bitbucket using git because I obviously get a free private repo and I want to host my app on heroku using the source code from bitbucket. </p>

<p>Can i do it using the github client and heroku toolbelt. Will it work? Github is great but i dont want everyone seeing my code and I dont want to pay for a private repo because its a small project.</p>
","47","23275","<git><heroku><github><bitbucket><heroku-toolbelt>"
"5330145","1","When to delete branches in Git?","<p>Suppose we have an application that's stable. </p>

<p>Tomorrow, someone reports a big ol' bug that we decide to hotfix right away. So we create a branch for that hotfix off of ""master"", we name it ""2011_Hotfix"", and we push it up so that all of the developers can collaborate on fixing it.</p>

<p>We fix the bug, and merge ""2011_Hotfix"" into ""master"" as well as into the current development branch. And push ""master.""</p>

<p>What do we do with ""2011_Hotfix"" now? Should it just sit out there as a branch forever until the end of time or should we now delete it, since it has served its purpose? It seems unclean to just leave branches lying around everywhere, as the list of branches will likely become very long, most of which aren't even necessary anymore.</p>

<p>In the event that it should be deleted, what will happen to its history? Will that be maintained, even though the actual branch is no longer available? Also, how would I remove a remote branch?</p>
","155","27853","<git><github><git-branch><git-gui>"
"2586097","1","what should be in .gitignore file for a netbeans java project?","<p>What should be the content of the .gitignore file for a java project in netbeans?</p>
","64","30894","<git><netbeans><gitignore>"
"2604625","1","Git: How to remove file from index without deleting files from any repository","<p>When you use</p>

<pre><code>git rm --cached myfile
</code></pre>

<p>it doesn't delete from the local filesystem, which is the goal. But if you've already versioned and committed the file, pushed it to a central repository, and pulled it into yet another repository before using the command, it will delete the file from that system.</p>

<p>Is there a way to just remove the file from versioning without deleting it from any filesystem?</p>

<p>Edit: Clarified, I hope.</p>
","110","61498","<git><version-control><gitignore><git-rm>"
"1337320","1","How to grep Git commit diffs or contents for a certain word?","<p>In a Git code repository I want to list all commits that contain a certain word. I tried this</p>

<pre class=""lang-sh prettyprint-override""><code>git log -p | grep --context=4 ""word""
</code></pre>

<p>but it does not necessarily give me back the filename (unless it's less that 5
lines away from the word I searched for. I also tried</p>

<pre class=""lang-sh prettyprint-override""><code>git grep ""word""
</code></pre>

<p>but it gives me only present files and not the history.</p>

<p>How do I search the entire history so I can follow changes on a particular word? I mean to search my codebase for occurrences of word to track down changes (search in files history).</p>
","307","72617","<git><search><grep>"
"9813816","1","git pull after forced update","<p>I just squashed some commits with <code>git rebase</code> and did a <code>git push --force</code> (which is evil, I know).</p>

<p>Now the other coders have a different history and when they do a <code>git pull</code>, git will merge. Is there any way to fix this, except doing a <code>rm my-repo; git clone git@example.org:my-repo.git</code>?</p>

<p>I need something like the opposite of <code>git push --force</code>, but <code>git pull --force</code> did not give the intended results.</p>
","93","23284","<git><git-pull>"
"8625406","1","How to delete a branch in the remote repository using EGIT?","<p>How to delete the remote branch itself in sourceforge with all files in it, using egit ?</p>
","51","15770","<eclipse><git><branch><egit>"
"9832348","1","git push rejected: error: failed to push some refs","<p>I know people have asked similar questions, but I believe the causes of their problems to be different.  I did a hard reset because I had messed up my code pretty bad</p>

<pre><code> git reset --hard 41651df8fc9
</code></pre>

<p>I've made quite some changes, I've made some commits and now that I'm trying to push all these commits into the server I get the following error:</p>

<pre><code> ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@git.somewhere.git'
</code></pre>

<p>Git suggests to do a git pull and that's what other people have suggested to other users.  However, I believe that a git pull will merge my current code with the code that I don't want anymore (head revision).
How can I do a push and forget about the version/revisions ahead of me?</p>
","47","97251","<git><git-push><git-pull>"
"7446640","1","Adding Only Untracked Files","<p>One of the commands I find incredibly useful in Git is <code>git add -u</code> to throw everything but untracked files into the index. Is there an inverse of that? In the last few months, I've often found myself in a position where I've interactively added some updates to the index and I want to add all of the untracked files to that index before I commit.</p>

<p>Is there a way to add <em>only</em> the untracked files to the index without identifying them individually? I don't see anything obvious in the help docs, but maybe I'm missing it?</p>

<p>Thanks.</p>
","70","30640","<git><git-add>"
"15404535","1","How to git reset --hard a subdirectory?","<blockquote>
  <p><strong>UPDATE</strong>: This will work more intuitively as of Git 1.8.3, see <a href=""http://stackoverflow.com/a/16589534/946850"">my own answer</a>.</p>
</blockquote>

<p>Imagine the following use case: I want to get rid of all changes in a specific subdirectory of my Git working tree, leaving all other subdirectories intact.</p>

<ul>
<li><p>I can do <code>git checkout .</code> , but <a href=""http://stackoverflow.com/questions/15251638/git-checkout-adds-directories-excluded-by-sparse-checkout"">git checkout . adds directories excluded by sparse checkout</a></p></li>
<li><p>There is <code>git reset --hard</code>, but it won't let me do it for a subdirectory: </p>

<pre><code>&gt; git reset --hard .
fatal: Cannot do hard reset with paths.
</code></pre>

<p>Again: <a href=""http://stackoverflow.com/questions/11200839/why-git-cant-do-hard-soft-resets-by-path"">Why git can&#39;t do hard/soft resets by path?</a></p></li>
<li><p>I can reverse-patch the current state using <code>git diff subdir | patch -p1 -R</code>, but this is a rather weird way of doing this.</p></li>
</ul>

<p>What is the proper Git command for this operation?</p>

<p>The script below illustrates the problem. Insert the proper command below the <code>How to make files</code> comment -- the current command will restore the file <code>a/c/ac</code> which is supposed to be excluded by the sparse checkout. Note that I <em>do not</em> want to explicitly restore <code>a/a</code> and <code>a/b</code>, I only ""know"" <code>a</code> and want to restore everything below. <strong>EDIT</strong>: And I also don't ""know"" <code>b</code>, or which other directories reside on the same level as <code>a</code>.</p>

<pre><code>#!/bin/sh

rm -rf repo; git init repo; cd repo
for f in a b; do
  for g in a b c; do
    mkdir -p $f/$g
    touch $f/$g/$f$g
    git add $f/$g
    git commit -m ""added $f/$g""
  done
done
git config core.sparsecheckout true
echo a/a &gt; .git/info/sparse-checkout
echo a/b &gt;&gt; .git/info/sparse-checkout
echo b/a &gt;&gt; .git/info/sparse-checkout
git read-tree -m -u HEAD
echo ""After read-tree:""
find * -type f

rm a/a/aa
rm a/b/ab
echo &gt;&gt; b/a/ba
echo ""After modifying:""
find * -type f
git status

# How to make files a/* reappear without changing b and without recreating a/c?
git checkout -- a

echo ""After checkout:""
git status
find * -type f
</code></pre>
","62","33276","<git><reset><git-reset><sparse-checkout>"
"15150671","1","Delete branches in Bitbucket","<p>I've created lots of branches in one of our repositories. Those branches are for testing before it will pull to the master. Now I see lots of them in the list and they we will never use it again. How to delete those branches directly to bitbucket?</p>
","48","34012","<git><bitbucket><git-branch>"
"1828874","1","Generating statistics from Git repository","<p>I'm looking for some good tools/scripts that allow me to generate a few statistics from a git repository. I've seen this feature on some code hosting sites, and they contained information like...</p>

<ul>
<li>commits per author</li>
<li>commits per day/week/year/etc.</li>
<li>lines of code over time</li>
<li>graphs</li>
<li>... much more</li>
</ul>

<p>Basically I just want to get an idea how much my project grows over time, which developer commits most code, and so on.</p>
","192","89895","<git><graph><statistics>"
"2140985","1","How to set up a git project to use an external repo submodule?","<p>I'd like to create a repo which pulls in a remote repo.</p>

<p>For example, let's say jQuery as a submodule:</p>

<pre><code>git://github.com/jquery/jquery.git
</code></pre>

<p>What would be the process of creating a repo with jQuery as a submodule and adding my own external as a remote repo.</p>

<p>Also once this is setup, if I push / pull to my own remote, will the external remain intact?</p>
","173","54948","<git><github><external><git-submodules>"
"5361019","1","Viewing full version tree in git","<p>I am using the command line version of Git and gitk. I want to see the full version tree, not just the part that is reachable from the currently checked out version. Is it possible?</p>
","60","36878","<git><gitk>"
"2670158","1","Mirroring a HG project from Bitbucket to Github","<p>Is there an efficient workflow to mirror a project that is mainly hosted on bitbucket using Hg, to github?</p>
","45","8594","<git><mercurial><workflow><github><bitbucket>"
"15407075","1","How could I use git bisect to find the first GOOD commit?","<p>I have the following problem:</p>

<ul>
<li>the version at <code>master</code> works fine</li>
<li>the version of the last tag before <code>master</code> (say <code>last</code>) has a bug</li>
<li>a colleague needs a patch for his <code>last</code> revision for that certain bug</li>
</ul>

<p>Okay. Let's ask our friend <code>git bisect</code> for the revision that fixed the bug:</p>

<pre><code>git bisect start
git bisect bad last
git bisect good master
</code></pre>

<p>But that's not going to work:</p>

<blockquote>
  <p>Some good revs are not ancestor of the bad rev.<br>
  git bisect cannot work properly in this case.<br>
  Maybe you mistake good and bad revs?</p>
</blockquote>

<p>Any hints to overcome this? Did I miss something in the docs?</p>
","38","3029","<git><bisect>"
"3184555","1","cleaning up old remote git branches","<p>Here is my git workflow.</p>

<p>I work from two different computers (A and B) and store a common git remote in dropbox directory.</p>

<p>Let's say I have two branches master and devel. Both are tracking their remote counterparts origin/master and origin/devel.</p>

<p>Now while on computer A, I delete branch devel - both local and remote - as follows:</p>

<pre><code>git push origin :heads/devel

git branch -d devel
</code></pre>

<p>Now if I do <code>git branch -a</code> on computer A, I get</p>

<pre><code>master
origin/HEAD
origin/master
</code></pre>

<p>I now go to computer B. Do <code>git fetch</code>. I can remove the local devel branch by</p>

<pre><code>git branch -d devel
</code></pre>

<p>But I can't remove the remote devel branch.</p>

<pre><code>git push origin :heads/devel

error: unable to push to unqualified destination: heads/proxy3d
The destination refspec neither matches an existing ref on the remote nor
begins with refs/, and we are unable to guess a prefix based on the source ref.
fatal: The remote end hung up unexpectedly
</code></pre>

<p>Doing <code>git branch -a</code> still lists origin/devel in remote branches.</p>

<p>How can I clean up the remote entry of devel from machine B?</p>
","297","105226","<git><git-branch>"
"8237645","1","How to Add Linux Executable Files to .gitignore?","<p>How do you add linux executable files to .gitignore without giving them an explicit extension and without placing them in a specific or /bin directory? Most are named the same as the C file from which they were compiled without the "".c"" extension.</p>
","33","9212","<c++><c><linux><git><gitignore>"
"1486819","1","Which Git commit stats are easy to pull","<p>Previously I have enjoyed TortoiseSvn's ability to generate simple commit stats for a given SVN repository. I wonder what is available in Git and am particularly interested in :</p>

<ul>
<li>Number of commits per user</li>
<li>Number of lines changed per user</li>
<li>activity over time (for instance aggregated weekly changes)</li>
</ul>

<p>Any ideas? </p>
","58","37012","<git><statistics><logging><code-statistics>"
"22575662","1","Filename too long in git for windows","<p>I'm using <code>Git-1.9.0-preview20140217</code> for Windows. As I know, this release should fix the issue with too long filenames. But not for me.</p>

<p>Surely I'm doing something wrong: I did <code>git config core.longpaths true</code> and <code>git add .</code> then <code>git commit</code>. Everything went well. But when I now do a <code>git status</code>, I get a list of files with <code>Filename too long</code>, e.g.</p>

<pre><code>node_modules/grunt-contrib-imagemin/node_modules/pngquant-bin/node_modules/bin-wrapper/node_modules/download/node_modules/request/node_modules/form-data/node_modules/combined-stream/node_modules/delayed-stream/test/integration/test-handle-source-errors.js: Filename too long
</code></pre>

<p>It is quite simple to reproduce for me: just create a yeoman web app with the angular-generator (""yo angular"") and remove <code>node_modules</code> from the <code>.gitignore</code> file. Then repeating the aforementioned git commands.</p>

<p>What am I missing here?</p>
","123","57609","<windows><git>"
"1389281","1","TortoiseGit - git not found","<p>I'm using TortoiseGit with msysGit installed with the <code>msysGit-fullinstall-1.6.4-preview20090729.exe</code> and it works in a very strange way:</p>

<ul>
<li>on the <code>About</code> windows it says it can't find git, even if all the operations seems to complete ok</li>
<li>on the <code>Settings</code> window, <code>General</code> tab, <code>MSysGit</code> section, the version is blank even with the correct path set (....\msysGit\bin)</li>
<li>on the <code>Settings</code> window, <code>Git\Config</code> tab, any attempt to alter and save the settings lead to some stange text-less error, and the only way to close the window is by `Cancel' button</li>
<li>on every operation it seems to look for git.exe on all the folders in path, which is at least strange, given that it knows exactly where to find the executable</li>
</ul>

<p>The first three points are not present if I install msysGit with the <code>Git-1.6.4-preview20090730.exe</code>, even if the path is set the same in both cases (....\msysGit\cmd)</p>

<p>What can I do to make TortoiseGit recognise git installation from the <code>msysGit-fullinstall-1.6.4-preview20090729.exe</code>?</p>

<p><hr /></p>

<p>Environment:</p>

<ul>
<li>Git-1.6.4-preview20090730.exe</li>
<li>msysGit-fullinstall-1.6.4-preview20090729.exe</li>
<li>TortoiseGit 1.0.2.0 32bit</li>
</ul>

<p><hr /></p>

<p><strong>EDIT:</strong></p>

<p>I don't want to put <code>msysGit\bin</code> in path, just <code>msysGit\cmd</code>.</p>

<p>If I simply replace the files from <code>msysGit-fullinstall-1.6.4-preview20090729.exe</code> with the files from an <code>Git-1.6.4-preview20090730.exe</code> installation, then TortoiseGit seems to recognize the git version and allows me to edit the Git\Config section in the settings. This is at least strange, given that the rest of the environment is not modified at all.</p>

<p>As soon as I restore the <code>msysGit-fullinstall-1.6.4-preview20090729.exe</code> files, TortoiseGit cease to function properly.</p>
","34","43422","<git><msysgit><tortoisegit>"
"1389307","1","Convert a Mercurial Repository to Git","<p>I've already tried hg2git through fast-export and I've already tried hg-git.</p>

<p>Both with no success. hg2git actually worked, but I had to ask a friend who runs a Unix machine to do it. And that messed up all the linefeeds throughout the files. </p>

<p>hg-git simply failed with some libzip compression error. </p>

<p>Has anyone had any success converting a hg repo to git on Windows?</p>

<p>To be clear, I don't care about interop. I want to port the whole repo from hg to git, taking the history with me. I don't need to push changes back and forth - only convert once.</p>

<p>Thanks in advance!</p>
","38","14593","<git><mercurial>"
"10375689","1","How can I grep hidden files?","<p>I am searching through a git repository and would like to include the <code>.git</code> folder.</p>

<p><code>grep</code> does not include this folder if I run</p>

<pre><code>grep -r search *
</code></pre>

<p>What would be a grep command to include this folder?</p>
","39","30240","<git><grep><hidden-files><dotfiles>"
"5669358","1","Can I do a partial revert in GIT","<p>Is it possible to revert only a single file or certain changes in a file in multi file commit?</p>

<p><strong>Full story</strong>
I committed a bunch of files. A number of commits later someone who will remain nameless (JACK!!!) copied a file into his repository and committed several files, overwriting some of the changes I did. I want to revert the one file that got clobbered or better yet, go in and revert two changes in that file. This will have to be a separate revert commit since it was pulled and pushed.</p>
","60","12593","<git>"
"2179722","1","Checking out old file WITH original create/modified timestamps","<p>Is there any way to know or get the original create/modified timestamps? Thanks.</p>
","34","14486","<git>"
"2180270","1","Check if current directory is a Git repository","<p>I am writing a series of scripts for Git management in zsh.</p>

<p>How do I check if the current directory is a Git repository? (When I'm not in a Git repo, I don't want to execute a bunch of commands and get a bunch of <code>fatal: Not a git repository</code> responses).</p>
","80","22853","<git><zsh>"
"3313908","1","Git is really slow for 100,000 objects. Any fixes?","<p>I have a ""fresh"" git-svn repo (11.13 GB) that has over a 100,000 objects in it.</p>

<p>I have preformed</p>

<pre><code>git fsck
git gc
</code></pre>

<p>on the repo after the initial checkout.</p>

<p>I then tried to do a</p>

<pre><code>git status
</code></pre>

<p>The time it takes to do a git status is anywhere from 2m25.578s and 2m53.901s</p>

<p>I tested git status by issuing the command</p>

<pre><code>time git status
</code></pre>

<p>5 times and all of the times ran between the two times listed above.</p>

<p>I am doing this on a Mac OS X, locally not through a VM.</p>

<p>There is no way it should be taking this long.</p>

<p>Any ideas? Help?</p>

<p>Thanks.</p>

<p><strong>Edit</strong></p>

<p>I have a co-worker sitting right next to me with a comparable box.  Less RAM and running Debian with a jfs filesystem.  His <strong>git status</strong> runs in .3 on the same repo (it is also a git-svn checkout).</p>

<p>Also, I recently changed my file permissions (to 777) on this folder and it brought the time down considerably (why, I have no clue).  I can now get it done anywhere between 3 and 6 seconds.  This is manageable, but still a pain.</p>
","34","21442","<performance><git><git-svn>"
"10418056","1","How do I generate a git commit log for the last month, and export it as CSV?","<p>Is there a way to generate a git commit log for the last month, and export it as a CSV file? I'm looking for something I can run from the command line, or a 3rd party app. I'd like the following columns: author, date of commit, subject, file edited and hash.</p>
","31","13398","<git><csv><github>"
"17702974","1","Unable to find stash/apply functionalitit in EGit","<p>I'm working with Eclipse Kepler and EGit 3.0.0. Where can I find the GIT stash/apply functionality.</p>

<p>I cannot find stash in the package explorer team pop-up nor anywhere in the <em>Team Synchronizing</em> perspective.</p>
","32","13362","<eclipse><git><egit><git-stash>"
"1440050","1","How to split last commit into two in Git","<p>I have two working branches, <strong>master</strong> and <strong>forum</strong> and I've just made some modifications in <strong>forum</strong> branch, that I'd like to cherry-pick into <strong>master</strong>. But unfortunately, the commit I want to cherry-pick also contains some modifications that I don't want.</p>

<p>The solution would probably be to somehow delete the wrong commit and replace it with two separate commits, one with changes I want to pick in master, and others that doesn't belong there.</p>

<p>I've tried doing</p>

<pre><code>git reset --hard HEAD^
</code></pre>

<p>which deleted all changes, so I had to go back with</p>

<pre><code>git reset ORIG_HEAD
</code></pre>

<p>So my question is, <strong>what is the best way to <em>split</em> last commit into two separate commits?</strong></p>
","256","62206","<git><version-control>"
"3515597","1","Add only non-whitespace changes","<p>I have my text editor to automatically trim trailing whitespace upon saving a file, and I am contributing to an OpenSource project that has severe problems with trailing whitespace.</p>

<p>Every time I try to submit a patch I must first ignore all whitespace-only changes by hand, to choose only the relevant information. Not only that, but when I run <code>git rebase</code> I usually run into several problems because of them.</p>

<p>As such I would like to be able to add to index only non-whitespace changes, in a way similar that <code>git add -p</code> does, but without having to pick all the changes myself.</p>

<p>Does anyone know how to do this?</p>

<p>EDIT: I <strong>cannot</strong> change the way the project works, and they have decided, after discussing it on the mailing list, to ignore this.</p>
","196","36233","<git><whitespace>"
"1440181","1","How do I backport a commit in git?","<p>So, I have a maintenance branch and a master branch in my project. If I make a commit in the maintenance branch and want to merge it forward to the master branch, that's easy:</p>

<pre><code>git checkout master; git merge maintenance
</code></pre>

<p>But if I want to go the other way around, i.e. apply a commit made to master back to my maintenance branch, how do I do that? Is this considered cherry-picking? Will it cause problems or conflicts if I merge the maintenance branch forward again?</p>
","31","7553","<git>"
"17743549","1","Git - recursively add the entire folder","<p>I am trying to add a branch to the master branch on github and push a folder onto that branch</p>

<p>The folder structure of the branch looks like -
SocialApp/SourceCode/DevTrunk/SocialApp and all the source code files are in the last folder</p>

<p>I am using the git commands -</p>

<pre><code>git add *
git commit -m with the message
git push
</code></pre>

<p>This is pushing only the first folder ""SocialApp"" onto github and ignoring the folder SourceCode that is inside the folder. How do I fix this ?</p>
","83","124735","<git><github>"
"4235431","1","Git - deleted some files locally, how do I get them from a remote repository","<p>So I've deleted some files on my PC, how do I download them again?</p>

<p>Pull sais: ""Already up-to-date""</p>

<p>Thanks</p>
","40","31207","<git>"
"10603671","1","git how to add a local repo and treat it as a remote one","<p>I'm trying with</p>

<pre><code>git remote add /home/sas/dev/apps/smx/repo/bak/ontologybackend/.git bak
fatal: '/home/sas/dev/apps/smx/repo/bak/ontologybackend/.git' is not a valid remote name
</code></pre>

<p>I'm trying to sync two local repos, I was thinkg aboug configuring as a remote, and then issuiing git pull bak</p>

<p>what would be the best way to do it?</p>

<p>--</p>

<p>sorry, silly me, I've just realized the remote add should be like this</p>

<pre><code>git remote add bak /home/sas/dev/apps/smx/repo/bak/ontologybackend/.git
</code></pre>

<p>the name of the remote before the address</p>
","56","37591","<git>"
"10459374","1","Making git diff --stat show full file path","<p>On doing <code>git diff --stat</code> some files are listed with full path from repository base but some files are listed as:</p>

<pre><code>.../short/path/to/filename.  
</code></pre>

<p>That is the path starts with <code>...</code> and only short path is shown.</p>

<p>I would like <code>git diff</code> to list full file path for all files for it to be easily processed by a script. Is there some way I can get <code>git diff</code> to always show full path</p>
","36","9305","<git><git-diff>"
"1490138","1","Reading the first line of a file in Ruby","<p>I want to read <em>only</em> the first line of a file using Ruby in the fastest, simplest, most idiomatic way possible. What's the best approach?</p>

<p>(Specifically: I want to read the git commit UUID out of the REVISION file in my latest Capistrano-deployed Rails directory, and then output that to my  tag. This will let me see at an http-glance what version is deployed to my server. If there's an entirely different &amp; better way to do this, please let me know.)</p>
","36","23391","<ruby-on-rails><ruby><git><file-io><capistrano>"
"6391128","1","In Git, how do I diff to the first commit of my branch?","<p>I've made several commits to a local branch, but I'm not sure what the best way to diff what I currently have to my branch's starting state.  I know I can do something like <code>git diff HEAD HEAD~6</code> if there's been 6 commits to my branch, but I was hoping for something that was independent of the number of commits.</p>

<p>Edit:
I failed to mention this: I was hoping I wouldn't have to dig through the log to get the hash of the commit I branched from.  If I had 80 commits for example, this wouldn't be a fun task.</p>

<p>Also, presume that the original branch I branched from has already had several changes.</p>
","33","7230","<git><git-diff>"
"10461214","1","Why is git push gerrit HEAD:refs/for/master used instead of git push origin master","<p>I've just started using gerrit and I want to know why we need to do <code>git push gerrit HEAD:refs/for/master</code> instead of doing <code>git push origin master</code></p>

<p>If I do <code>git push origin master</code> I get the error saying <code>! [remote rejected] master -&gt; master (prohibited by Gerrit)</code></p>
","81","63639","<git><gerrit>"
"15316601","1","In what cases could `git pull` be harmful?","<p>I have a colleague who claims that <code>git pull</code> is harmful, and gets upset whenever someone uses it.</p>

<p>The <code>git pull</code> command seems to be the canonical way to update your local repository.  Does using <code>git pull</code> create problems? What problems does it create? Is there a better way to update a git repository?</p>
","360","70925","<git><git-pull>"
"3411302","1","Javascript Git client","<p>Is there a Javascript implementation of Git?</p>

<p>I'm wanting to use HTML5 to create a rich Javascript application and have the idea that I could use git to track changes to the data. So, I'm wondering if there is a javascript implementation of a git client, or maybe some way of controlling a git repository by making POST requests.</p>
","34","7419","<javascript><jquery><git><html5>"
"5807137","1","How to revert uncommitted changes including files and folders?","<p>Is there a git command to revert all uncommitted changes in a working tree and index and to also remove newly created files and folders?</p>
","477","279947","<git><git-reset><git-revert><git-clean>"
"1540879","1","How to share files across git repositories?","<p>I have several applications across sub domains on various servers
Each application has its own git repository. Each application uses several shared files.
Essentially, my repos overlap.
How is this situation best handled with multiple editors of multiple projects?</p>
","36","10947","<git>"
"5807459","1","Github: Mirroring gh-pages to master","<p>I'm developing a jQuery plugin that's being hosting on GitHub. It has a demo included of which I'm manually copying and pushing to the branch <code>gh-pages</code>, what I'd like to do is have it so when I push a change to <code>master</code> it is automatically pushed to <code>gh-pages</code>, or at least a setup where they are mirrored.</p>

<p>I've already seen this <a href=""http://stackoverflow.com/questions/1705224/github-how-to-include-files-from-master-in-new-git-branch-gh-pages/1708339#1708339"">question</a> but not sure if it really answers my question with regard to these requirements:</p>

<ol>
<li>I use <a href=""http://www.git-tower.com/"">Tower</a>, I don't mind using the terminal (Mac) to make changes to config, so long as the solution works with this GUI.</li>
<li>I only want this 'mirroring' on certain repos, not on all of them on my machine.</li>
</ol>

<p>Cheers</p>
","60","12988","<git><github><github-pages><git-tower>"
"2304087","1","What is HEAD in Git?","<p>You see the Git documentation saying things like</p>

<blockquote>
  <p>The branch must be fully merged in HEAD.</p>
</blockquote>

<p>But what is Git <code>HEAD</code> exactly?</p>
","625","211369","<git>"
"22620393","1","Various ways to remove local Git changes","<p>I just cloned a git repository and checked out a branch. I worked on it, and then decided to remove all my local changes, as I wanted the original copy.</p>

<p>In short, I had to do the following two commands to remove my local changes</p>

<pre><code>git checkout .

git clean -f
</code></pre>

<p><strong>My question is,</strong></p>

<p>(1) Is this the correct approach in getting rid of local changes, or else please let me know the correct approach.</p>

<p>(2) when do we use <code>git reset --hard</code> as i am able to reset even without this command</p>

<p>Thanks</p>

<p><strong>*Solution : Major Edit(s): 03/26 : *</strong> 
Replaced many of vague terms with git specific terminology
 [tracked/untracked/staged/unstaged]</p>

<p>There could be only three categories of files when we make local changes:</p>

<blockquote>
  <p>Type 1. Staged Tracked files</p>
  
  <p>Type 2. Unstaged Tracked files</p>
  
  <p>Type 3. Unstaged UnTracked files a.k.a UnTracked files</p>
</blockquote>

<ul>
<li>Staged - Those that are moved to staging area/ Added to index</li>
<li>Tracked - modified files</li>
<li>UnTracked - new files. Always unstaged. If staged, that means they are tracked.</li>
</ul>

<p><strong>What each commands do:</strong></p>

<ol>
<li><p><code>git checkout .</code> - Removes Unstaged Tracked files ONLY [Type 2]</p></li>
<li><p><code>git clean -f</code> - Removes Unstaged UnTracked files ONLY [Type 3]</p></li>
<li><p><code>git reset --hard</code> - Removes Staged Tracked and UnStaged Tracked files ONLY[Type 1, Type 2]</p></li>
<li><p><code>git stash -u</code> - Removes all changes [Type 1, Type 2, Type 3]</p></li>
</ol>

<p><strong>Conclusion:</strong></p>

<p>It's clear that we can use either </p>

<pre><code>(1) combination of `git clean -f` and `git reset --hard` 
</code></pre>

<p>OR</p>

<pre><code>(2) `git stash -u`
</code></pre>

<p>to achieve the desired result.</p>

<p>Note: Stashing, as the word means 'Store (something) safely and secretly in a specified place.' This can always be retreived using <code>git stash pop</code>.
So choosing between the above two options is developer's call.</p>

<p>Thank you Christoph and Frederik Schøning.</p>

<p><strong>Edit: 03/27</strong></p>

<p>I thought it's worth putting the '<em>beware</em>' note to <code>git clean -f</code></p>

<p><code>git clean -f</code></p>

<p>There is no going back. Use <code>-n</code> or <code>--dry-run</code> to preview the damage you'll do.</p>

<p>If you want to also remove directories, run <code>git clean -f -d</code></p>

<p>If you just want to remove ignored files, run <code>git clean -f -X</code></p>

<p>If you want to remove ignored as well as non-ignored files, run <code>git clean -f -x</code></p>

<p>reference : more on <code>git clean</code> : <a href=""http://stackoverflow.com/questions/61212/removing-untracked-files-from-your-git-working-copy?rq=1"">How do I remove local (untracked) files from my current Git branch?</a></p>

<p><strong>Edit: 05/20/15</strong></p>

<p><em>Discarding all local commits on this branch</em> [Removing local commits]</p>

<p>In order to discard all local commits on this branch, to make the local branch identical 
to the ""upstream"" of this branch, simply run <code>git reset --hard @{u}</code></p>

<p>Reference: <a href=""http://sethrobertson.github.io/GitFixUm/fixup.html"">http://sethrobertson.github.io/GitFixUm/fixup.html</a></p>

<p>or do <code>git reset --hard origin/master</code> [if local branch is <code>master</code>]</p>

<p><strong>Note: 06/12/2015</strong>
This is <strong>not</strong> a duplicate of the other SO question that's marked as duplicate. This question address how to remove local GIT changes [remove a file added, remove changes added to existing file etc and the various approaches; Where in the other SO thread only address how to remove local commit. If you added a file, and you want to remove that alone, then the other SO thread doesn't discuss about it. Hence this is not a duplicate of the other one]</p>

<p><strong>Edit: 06/23/15</strong></p>

<p>How to revert a commit already pushed to a remote repository?</p>

<pre><code>$ git revert ab12cd15
</code></pre>

<p><strong>Edit: 09/01/2015</strong></p>

<p>Delete a previous commit from local branch and remote branch</p>

<p>Case: You just commited a change to your local branch and immediately pushed to the remote branch,
Suddenly realized , Oh no! I dont need this change. Now do what?</p>

<p><code>git reset --hard HEAD~1</code>     [for deleting that commit from local branch]</p>

<p><code>git push origin HEAD --force</code> [both the commands must be executed. For deleting from remote branch]</p>

<p>Whats the branch ? Its the currently checked out branch.</p>

<p><strong>Edit 09/08/2015</strong> - Remove local git <strong>merge</strong>:</p>

<p>I am on <code>master</code> branch and merged <code>master</code> branch with a newly working branch <code>phase2</code></p>

<pre><code>$ git status
# On branch master

$ git merge phase2

$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 8 commits.
</code></pre>

<p>Q: How to get rid of this merge?
Tried <code>git reset --hard</code>   and <code>git clean -d -f</code>
Both didn't work.</p>

<p>The only thing that <strong>worked</strong> are any of the below ones:</p>

<pre><code>$ git reset --hard origin/master
</code></pre>

<p>or</p>

<pre><code>$ git reset --hard HEAD~8
</code></pre>

<p>or</p>

<p><code>$ git reset --hard 9a88396f51e2a068bb7</code>  [sha commit code - this is the one that was present before all your merge commits happened]</p>
","117","133227","<git><bash>"
"1593051","1","How to programmatically determine the current checked out Git branch","<p><strong>In a Unix or GNU scripting environment (e.g. a Linux distro, Cygwin, OSX), what is the best way to determine which Git branch is currently checked out in a working directory?</strong></p>

<p>One use of this technique would be automatically labeling a release (like <code>svnversion</code> would do with Subversion).</p>

<p>Please also see my related question: <a href=""http://stackoverflow.com/questions/1593188/how-to-programmatically-determine-whether-the-git-checkout-is-a-tag-and-if-so-wh"">How to programmatically determine whether a Git checkout is a tag, and if so what is the tag name?</a></p>
","165","51883","<git><bash><shell>"
"8773422","1","How to add tags in Bitbucket? I'm using Git","<p>I'm hosting my codes on Bitbucket using Git. My local client is EGit (eclipse plugin). I created a tag locally (Team -> Advanced -> Tag) and then pushed it to remote repository. But when I open my repository page, I can't find tags there. I'm pretty sure the tag can be seen locally.</p>

<p>I'm not a Git expert. But it seems to me there are several types of tags in Git. Does Bitbucket only show certain types of tags?</p>
","40","29694","<git><tags><bitbucket>"
"5854967","1","git, msysgit, accents, utf-8, the definitive answers","<p>I've read in some places that there are problems with git (or just msysgit?) and character encoding - I <em>believe</em> it's only a problem in file names.</p>

<p>What I'd like is some 'definitive' (or at least authoritative) information about:</p>

<ol>
<li>What exactly are the 'problems'? (The symptoms)</li>
<li>What are the causes? (Briefly)</li>
<li>In what scenarios is this a show stopper?</li>
<li>Is there any resolution in sight, or failing that any workarounds?</li>
</ol>

<p>I hope this question isn't too vague, I think it would be good to have all of this information in one place to be able to point people to it...</p>
","41","16559","<git><utf-8><msysgit>"
"2304372","1","How do you copy and paste into Git Bash","<p>I'm using <a href=""http://code.google.com/p/msysgit/"">msysgit</a> running on Windows XP.</p>

<p>Tried <kbd>Ctrl</kbd>+<kbd>V</kbd>, Right click, Middle click, google... no luck.</p>
","566","182079","<git><windows-xp><copy-paste><msysgit>"
"20351051","1","""Git fatal: ref HEAD is not a symbolic ref"" while using maven release plugin","<p>I get the following error output while running the Maven release plugin prepare step i.e. <code>mvn release:prepare --batch-mode -DreleaseVersion=1.1.2 -DdevelopmentVersion=1.2.0-SNAPSHOT -Dtag=v1.1.2 -X</code> from an Atlassian Bamboo plan. However doing the same in the command line works fine. The full error stack is below.</p>

<p>Any ideas how can this be solved?</p>

<pre><code>[ERROR] Failed to execute goal org.apache.maven.plugins:maven-release-plugin:2.4.2:prepare (default-cli) on project hpcmom: An error is occurred in the checkin process: Exception while executing SCM command. Detecting the current branch failed: fatal: ref HEAD is not a symbolic ref -&gt; [Help 1]
    org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-release-plugin:2.4.2:prepare (default-cli) on project hpcmom: An error is occurred in the checkin process: Exception while executing SCM command.
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:217)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
    at org.apache.maven.cli.MavenCli.execute(MavenCli.java:537)
    at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:196)
    at org.apache.maven.cli.MavenCli.main(MavenCli.java:141)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
    at java.lang.reflect.Method.invoke(Method.java:606)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:290)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:230)
    at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:409)
    at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:352)
Caused by: org.apache.maven.plugin.MojoExecutionException: An error is occurred in the checkin process: Exception while executing SCM command.
    at org.apache.maven.plugins.release.PrepareReleaseMojo.prepareRelease(PrepareReleaseMojo.java:281)
    at org.apache.maven.plugins.release.PrepareReleaseMojo.execute(PrepareReleaseMojo.java:232)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
    ... 19 more
Caused by: org.apache.maven.shared.release.ReleaseExecutionException: An error is occurred in the checkin process: Exception while executing SCM command.
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.checkin(AbstractScmCommitPhase.java:160)
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.performCheckins(AbstractScmCommitPhase.java:145)
    at org.apache.maven.shared.release.phase.ScmCommitPreparationPhase.runLogic(ScmCommitPreparationPhase.java:76)
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.execute(AbstractScmCommitPhase.java:78)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:234)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:169)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:146)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:107)
    at org.apache.maven.plugins.release.PrepareReleaseMojo.prepareRelease(PrepareReleaseMojo.java:277)
    ... 22 more
Caused by: org.apache.maven.scm.ScmException: Exception while executing SCM command.
    at org.apache.maven.scm.command.AbstractCommand.execute(AbstractCommand.java:63)
    at org.apache.maven.scm.provider.git.AbstractGitScmProvider.executeCommand(AbstractGitScmProvider.java:291)
    at org.apache.maven.scm.provider.git.AbstractGitScmProvider.checkin(AbstractGitScmProvider.java:217)
    at org.apache.maven.scm.provider.AbstractScmProvider.checkIn(AbstractScmProvider.java:410)
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.checkin(AbstractScmCommitPhase.java:156)
    ... 30 more
Caused by: org.apache.maven.scm.ScmException: Detecting the current branch failed: fatal: ref HEAD is not a symbolic ref

    at org.apache.maven.scm.provider.git.gitexe.command.branch.GitBranchCommand.getCurrentBranch(GitBranchCommand.java:147)
    at org.apache.maven.scm.provider.git.gitexe.command.checkin.GitCheckInCommand.createPushCommandLine(GitCheckInCommand.java:192)
    at org.apache.maven.scm.provider.git.gitexe.command.checkin.GitCheckInCommand.executeCheckInCommand(GitCheckInCommand.java:132)
    at org.apache.maven.scm.command.checkin.AbstractCheckInCommand.executeCommand(AbstractCheckInCommand.java:54)
    at org.apache.maven.scm.command.AbstractCommand.execute(AbstractCommand.java:59)
    ... 34 more
[ERROR] 
[ERROR] 
[ERROR] For more information about the errors and possible solutions, please read the following articles:
[ERROR] [Help 1] http://cwiki.apache.org/confluence/display/MAVEN/MojoExecutionException
simple  02-Dec-2013 17:18:09    Failing task since return code of [/opt/dev/apache-maven/3.0.5//bin/mvn -Djava.io.tmpdir=/opt/atlassian/bamboo/5.2.1/temp/HPCMOM-RELEASE-JOB1 release:prepare --batch-mode -DignoreSnapshots=false -DreleaseVersion=1.1.2 -DdevelopmentVersion=1.2.0-SNAPSHOT -Dtag=v1.1.2 -X] was 1 while expected 0
</code></pre>

<p><strong>UPDATE:</strong></p>

<p>Doing <code>git ls-remote .</code> on a local workspace clone produces:</p>

<pre><code>azg@olympus:~/code/hpcmom$ git ls-remote .
7894eea08a0afecb99515d1339623be63a7539d4    HEAD
7894eea08a0afecb99515d1339623be63a7539d4    refs/heads/master
7894eea08a0afecb99515d1339623be63a7539d4    refs/remotes/origin/HEAD
7894eea08a0afecb99515d1339623be63a7539d4    refs/remotes/origin/master
6a7095b86cccdfd4b28e4dea633d0930809ae9ac    refs/tags/v1.0
1a53462b1ecf0abfea8245016304cda9c78b420d    refs/tags/v1.0^{}
5113a7cbcf35c47b680a9c36e15e5fa01ef1d2e6    refs/tags/v1.1
79a3073ecabe65d3c8051520f8007d9e49a65a06    refs/tags/v1.1^{}
a00249209597ea1214d80ee38f228c40db7022c2    refs/tags/v1.1.0
e892bce8d25d87368ab557fee0d30810bef7e31e    refs/tags/v1.1.0^{}
b491a312c39088533cb069e4ab1ae8a00d1f6bfe    refs/tags/v1.1.2
a3f7618dada7ed60d8190426152ffd90e0e40a86    refs/tags/v1.1.2^{}
</code></pre>

<p>Doing <code>git ls-remote .</code> on the Bamboo clone produces:</p>

<pre><code>azg@olympus:/var/atlassian/application-data/bamboo/xml-data/build-dir/HPCMOM-RELEASE-JOB1$ git ls-remote .
2422ce066ac35dae3c54f1435ef8dae5008a9a14    HEAD
57c08d581c0fd9e788049733fbdc9c22b9a6ae00    refs/heads/master
57c08d581c0fd9e788049733fbdc9c22b9a6ae00    refs/remotes/origin/HEAD
57c08d581c0fd9e788049733fbdc9c22b9a6ae00    refs/remotes/origin/master
7539f9700d78a1b766fca7ed9f409914f1ea9d08    refs/tags/vnull
6bfa8c3fdb1f8f56a385035f01b1b77b6e88da8b    refs/tags/vnull^{}
</code></pre>

<p>and this is very weird why is the local development clone output so different from the Bamboo one?</p>
","33","18350","<git><maven><release><maven-release-plugin><bamboo>"
"3462955","1","Putting git hooks into repository","<p>Is it considered to be a bad practice - to put .git/hooks into the projects repository (using symlinks, for example). If yes, what is the best way to deliver same hooks to different git users?</p>
","95","29184","<git><hook><githooks>"
"1709177","1","Git pull a certain branch from GitHub","<p>I have a project with multiple branches. I've been pushing them to <a href=""http://en.wikipedia.org/wiki/GitHub"">GitHub</a>, and now that someone else is working on them I need to do a pull from GitHub. It works fine in master. But say I have branch xyz. How can I pull branch xyz from GitHub and merge it into branch xyz on my localhost?</p>

<p>I actually have my answer here:
<em><a href=""http://stackoverflow.com/questions/1072261/push-and-pull-branches-in-git"">Push and pull branches in Git</a></em></p>

<p>But I get an error ""! [rejected]"" and something about ""non fast forward"".</p>

<p>Any suggestions?</p>
","283","386126","<git><merge><branch><github><pull>"
"8191299","1","Update a submodule to the latest commit","<p>I have a project A which is a library and it is used in a project B.</p>

<p>Both projects A and B have a separate repository on github BUT inside B we have a submodule of A.</p>

<p>I edited some classes on the library, which is in the repo A, i pushed on the remote repo, so the library (repo A) us updated.</p>

<p>These updates does not reflects on the ""reference"" (the submodule) the submodule refers to a previous commit.... what should i do in order to update the submodule on git?</p>
","91","39473","<git>"
"8146289","1","How to get ""their"" changes in the middle of conflicting Git rebase?","<p>I have conflicting branches, branch2 branched from branch1.</p>

<p>Let's say when rebasing <code>branch2</code> on current <code>branch1</code>, while resolving conflicts, I decide to take <strong>some</strong> (not all) of ""their"" (i.e. <code>branch1</code>) files as-is.
How do I do that?</p>

<p>I tried:</p>

<pre><code>git checkout branch1:foo/bar.java
fatal: reference is not a tree: TS-modules-tmp:foo/bar.java

git checkout refs/heads/branch1:foo/bar.java
fatal: reference is not a tree: refs/heads/TS-modules-tmp:foo/bar.java
</code></pre>
","129","61431","<git><rebase><git-rebase>"
"1595848","1","Configuring Git over SSH to login once","<p>I have cloned my git repository over ssh. So, each time I communicate with the origin master by pushing or pulling, I have to reenter my password. How can I configure git so that I do not need to enter my password multiple times?</p>
","121","159383","<git><ssh><ssh-keys>"
"1710894","1","Using Git, show all commits that are in one branch, but not the other(s)","<p>I have an old branch, which I would like to delete. However, before doing so, I want to check that all commits made to this branch were at some point merged into some other branch. Thus, I'd like to see all commits made to my current branch which have not been applied to any other branch [or, if this is not possible without some scripting, how does one see all commits in one branch which have not been applied to another given branch?].</p>
","248","96638","<git><branch><git-branch>"
"1596822","1","Git submodules workflow","<p>In my project I need to use third party code, stored in several Git repositories. My project is also stored in (separate) Git repository. There are several people working with me on the main project, and I'm the maintainer.</p>

<p>In earlier projects I used to copy dependencies manually to the Git working tree, adding a little file specifying version I use.</p>

<p>Now this is rather uncomfortable since I need to update daily one of dependencies, and often contribute code to it myself, most of the time coupled with changes into the main project.</p>

<p>I've decided to try Git submodules to do the management. The more I try them, the more frustrated I become. It even seems that manual copy is, perhaps, better.</p>

<p>Here are some of my concerns:</p>

<ul>
<li>We're no longer able to get consistent repository state with a single command (<code>git checkout</code> now needs <code>git submodule update --init</code>). </li>
<li>We're not able to use some of the Git tools properly (<code>git archive</code> is the most notable).</li>
<li>We're not able to see the status changes / diffs into submodules from the main project.</li>
<li>As I've just found in a hard way, <code>git submodule</code> does not work with <code>--git-dir</code> and <code>--work-tree</code> options, and require physical change of current directory to the ""toplevel of the working tree"". </li>
</ul>

<p>It seems that in order to streamline our submodules workflow (that is one operation == one command) we have to write a rather thick wrapper around Git. This is sad.</p>

<p>Note that it is not an option to move away from Git or to merge subproject development entirely into the main project.</p>

<p>Perhaps I'm using <code>git submodules</code> in a wrong way? Is there any good tutorial on the workflow?</p>

<p>Please speak up even if you don't know the proper answer, but do share my concerns. :-)</p>
","36","5470","<git><workflow><git-submodules>"
"15458237","1","Git pretty format colors","<p>I'm trying to set up pretty format colors for Git.  From what I can tell version 1.6.0 only recognizes red, green and blue.</p>

<pre><code>$ git log --pretty=format:""%Credred%Creset %Cgreengreen%Creset %Cyellowyellow%Creset %Cblueblue%Creset %Cmagentamagenta%Creset %Ccyancyan%Creset %Cwhitewhite%Creset""
red green %Cyellowyellow%Creset blue %Cmagentamagenta %Ccyancyan %Cwhitewhite
</code></pre>

<p><strong>In addition none of the colors work with the parenthesized color format.</strong></p>

<p>Is there a way to list the available pretty format colors for Git?</p>

<p>Unfortunately this is on a legacy SCO OpenServer 5.0.7 machine and the last version of Git released by SCO Skunkworks was 1.6.0.3.</p>
","34","7333","<git>"
"5963597","1","""git rebase origin"" vs.""git rebase origin/master""","<p>I don't get the difference between <code>git rebase origin</code> and <code>git rebase origin/master</code>. In my case I cloned a git repository twice. In the first clone I have to use <code>git rebase origin</code> and in the other clone I must use <code>git rebase origin/master</code>.</p>

<p>An example: <a href=""http://paste.dennis-boldt.de/2011/05/11/git-rebase"">http://paste.dennis-boldt.de/2011/05/11/git-rebase</a></p>
","34","41577","<git><git-rebase>"
"5964118","1","Git - working on wrong branch - how to copy changes to existing topic branch","<p>I've been working on a project, but unfortunately, I <em>forgot</em> to switch to my branch, and as such have been working on master</p>

<p>How can I copy the work (3 files) I've done here from master, to my branch (called, for example <em>branch123</em>) without comitting to master?</p>
","126","20828","<git>"
"3573623","1","Is it possible to preview stash contents in git?","<p>I often put work away for later, then other stuff comes along, and a few weeks later, I want to inspect the stash, and find out what changes it would make if I applied it to working tree in its current state.</p>

<p>I know I can do a git diff on the stash, but this shows me all the differences between the working tree and the stash, whereas I'm just interested to know what the stash apply is going to change.</p>

<p>How can I do this?</p>
","187","19283","<git><git-stash>"
"8775850","1","how to add files and folder to github repo","<p>I created an account on Github &mdash; I'm new on it &mdash; and I'm facing a problem with adding files. I have added <code>readme.txt</code>. Also, I have 3 other PHP files and a folder including images. </p>

<p>How do I add the files and folder? I tried it with <code>git pull</code> because <code>git push origin -u master</code> showed me an error.</p>
","121","303872","<git><github>"
"1713137","1","How to merge remote changes at GitHub?","<p>I'm getting following error, whn trying first Github push:</p>

<pre><code>[rejected] master -&gt; master (non-fast forward)
error: failed to push some refs to 'git@github.com:me/me.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes before pushing again.  See the 'non-fast forward'
section of 'git push --help' for details.
</code></pre>

<p>how can I fix this and merge remote changes?</p>
","119","108272","<git><github>"
"15460550","1","git blame with commit details in emacs","<p>From emacs, how can I see the details (e.g. commit message) of the commit that last changed the line at point?</p>

<p>I have magit installed.</p>
","34","6497","<git><emacs><magit>"
"15745045","1","How do I resolve git saying ""Commit your changes or stash them before you can merge""?","<p>I made some updates on my local machine, pushed them to a remote repository, and now I'm trying to pull the changes to the server and I get the message;</p>

<pre><code>error: Your local changes to the following files would be overwritten by merge:
wp-content/w3tc-config/master.php
Please, commit your changes or stash them before you can merge.
</code></pre>

<p>So I ran <code>git checkout -- wp-content/w3tc-config/master.php</code> and tried again and I get the same message. I'm assuming that w3tc changed something in the config file on the server. I don't care whether the local copy or remote copy goes on the server (I suppose the remote one is best), I just want to be able to merge the rest of my changes (plugin updates).</p>

<p>Any ideas?</p>
","215","214076","<git>"
"4327708","1","git reset --hard HEAD leaves untracked files behind","<p>When I run <code>git reset --hard HEAD</code>, it's supposed to reset to a pristine version of what you pulled, as I understand it.  Unfortunately, it leaves files lying around, as a <code>git status</code> shows a big list of untracked files.</p>

<p>How do you tell git ""Just bring it back to EXACTLY what was in the last pull, nothing more, nothing less""?</p>
","230","51933","<git>"
"6017987","1","Is there a way in Git to list all deleted files in the repository","<p>I know git stores information of when files get deleted and I am able to check individual commits to see which files have been removed but is there a command that would generate a list of every deleted file across a repositories lifespan?</p>
","159","52427","<git>"
"1598260","1","Make Git ""LF will be replaced by CRLF"" warnings go away","<p>I have setup Git so it doesn't commit inconsistent line endings. The problem with that is a whole pile of files appear modified even though they are not. What do I type to make these files have the line endings fixed on the local side?</p>

<pre><code># git checkout dev
M   src/au/policy/dao/EmailQueue.java
M   src/au/policy/dao/EmailQueueFactory.java
M   src/au/policy/dao/PolicyPublisher.java
Already on 'dev'

# git diff
warning: LF will be replaced by CRLF in src/au/policy/dao/EmailQueue.java
warning: LF will be replaced by CRLF in src/au/policy/dao/EmailQueueFactory.java
warning: LF will be replaced by CRLF in src/au/policy/dao/PolicyPublisher.java
</code></pre>

<p>This is what I added to my git config file which seems to do what I intended aside from this issue:</p>

<pre><code>autocrlf = true
</code></pre>
","33","34958","<git>"
"1598759","1","Git and Mercurial - Compare and Contrast","<p>For a while now I've been using subversion for my personal projects.</p>

<p>More and more I keep hearing great things about Git and Mercurial, and DVCS in general.</p>

<p>I'd like to give the whole DVCS thing a whirl, but I'm not too familiar with either option.</p>

<p>What are some of the differences between Mercurial and Git?</p>

<p>Note that I'm <strong>not</strong> trying to find out which one is ""best"" or even which one I should start with.  I'm mainly looking for key areas where they are similar and where they are different, because I am interested to know how they differ in terms of implementation and philosophy.</p>
","492","35666","<git><version-control><mercurial><dvcs>"
"1838873","1","Visualizing branch topology in git","<p>I'm playing with git in isolation on my own machine, and even like that I find it difficult to maintain a mental model of all my branches and commits. I know I can do a <code>git log</code> to see the commit history from where I am, but is there a way to see the entire branch topography, something like these ascii maps that seem to be used everywhere for explaining branches?</p>

<pre><code>      .-A---M---N---O---P
     /     /   /   /   /
    I     B   C   D   E
     \   /   /   /   /
      `-------------'
</code></pre>

<p>It just feels like someone coming along and trying to pick up my repository would have difficulty working out exactly what was going on. </p>

<p>I guess I'm influenced by AccuRev's <a href=""http://www.accurev.com/streambrowser.html"">stream browser</a>...</p>
","415","204253","<git>"
"1839606","1","Delete a svn-Branch via git?","<p>I'am using git as scm of choice but have to use a svn-repo. I can create a svn-remote-branch like this:</p>

<pre><code>git svn branch the_branch
</code></pre>

<p>But how can i delete the remote branch?</p>
","53","10465","<git><git-svn>"
"13385690","1","How to use git with gnome-keyring integration","<p>Git 1.8.0 supports integration with gnome-keyring.</p>

<p><a href=""http://www.h-online.com/open/news/item/Git-1-8-0-can-access-Windows-and-GNOME-keyrings-1733879.html"">http://www.h-online.com/open/news/item/Git-1-8-0-can-access-Windows-and-GNOME-keyrings-1733879.html</a></p>

<p>After reading the docs about the git credentials helpers: <a href=""http://git-scm.com/docs/gitcredentials.html"">http://git-scm.com/docs/gitcredentials.html</a></p>

<p>I was not able to find a way to use this new feature. How can I integrate it?
I'm using Archlinux with git installed from Archlinux's repository. (git 1.8.0)</p>
","71","25965","<git><gnome>"
"1841341","1","Remove local tags that are no longer on the remote repository","<p>We use tags in git as part of our deployment process.  From time to time, we want to clean up these tags by removing them from our remote repository.</p>

<p>This is pretty straightforward.  One user deletes the local tag and the remote tag in one set of commands.  We have a little shell script that combines both steps.</p>

<p>The 2nd (3rd, 4th,...) user now has local tags that are no longer reflected on the remote.  </p>

<p>I am looking for a command similar to <code>git remote prune origin</code> which cleans up locally tracking branches for which the remote branch has been deleted.</p>

<p>Alternatively, a simple command to list remote tags could be used to compare to the local tags returned via <code>git tag -l</code>.</p>
","213","63830","<git><tagging>"
"1841405","1","How can I show the name of branches in `git log`","<p>How can I show the name of branches in the output of <code>git log</code>?</p>

<p>For example with, <code>git log --graph --all</code> I get a nice overview of the commits, but get confused which line is master, and which is my branch for example.</p>
","127","25240","<git>"
"18031946","1","What does '--set-upstream' do?","<p>What does <code>--set-upstream</code> do? I tried to understand it by reading <a href=""http://git-scm.com/docs/git-push"">manual</a>, but I didn't quite get it. Can you explain it to me?</p>
","42","22577","<git>"
"1918524","1","Error pushing to GitHub - insufficient permission for adding an object to repository database","<p>I'm getting back an unusual error while trying to do a ""git push"" to my GitHub repository:</p>

<pre>
Counting objects: 8, done.
Delta compression using 2 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 1.37 KiB, done.
Total 5 (delta 2), reused 0 (delta 0)
error: insufficient permission for adding an object to repository database ./objects

fatal: failed to write object
error: unpack-objects exited with error code 128
error: unpack failed: unpack-objects abnormal exit
To git@github.com:bixo/bixo.git
 ! [remote rejected] master -> master (n/a (unpacker error))
error: failed to push some refs to 'git@github.com:bixo/bixo.git'
</pre>

<ul>
<li>After a clean clone from GitHub, I can edit/add/commit/push a modified file.</li>
<li>If I then repeat this a second time I get the above error.</li>
<li>I can push to other GitHub repositories just fine.</li>
<li>I've checked file/directory permissions on my side, and they seem OK.</li>
<li>I'm running git 1.6.2.3 on Mac OS X 10.5.8</li>
</ul>

<p>The above repository was the source of my fun for a previous Stack Overflow question (<a href=""http://stackoverflow.com/questions/1904860/how-to-remove-unreferenced-blobs-from-my-git-repo"">SO 1904860</a>), so maybe the GitHub repo got corrupted. The only similar issue I've found via searching was an <a href=""http://support.github.com/discussions/repos/791-error-unpack-failed-unpacker-exited-with-error-code"">unpack failed</a> problem reported on github. Has anybody else run into this issue before, especially when <em>not</em> using GitHub?</p>
","109","116759","<git><github>"
"5860888","1","git:// through proxy","<p>I'm behind a firewall that is blocking port 9418 (git) and am trying to install some tools that are explicitly doing a checkout of <code>git://github.com/...</code>, so I can't switch to https for the checkout.</p>

<p>So I'm wondering if it's possible to redirect all traffic to port 9418 through a proxy and if so how :)</p>
","33","18376","<git><proxy><git-config>"
"15628720","1","fatal: bad default revision 'HEAD'","<p>I'm using GIT as my source control system. We have it installed on one of our Linux boxes. Tortoise GIT is my windows client.</p>

<p>This morning I checked in some changes, and tagged the code. I then did a push of my local repository to the remote repository.</p>

<p>When I go to my repository on the unix box and type in <code>git log</code> I get:</p>

<pre><code>fatal: bad default revision 'HEAD'
</code></pre>

<p>But when I do a <code>show log</code> using my windows <code>tortoiseGit</code> client the history comes up nicely as per below...</p>

<pre><code>---
SHA-1: f879573ba3d8e62089b8c673257c928779f71692

Initial drop of code

---
master origin/master oms-phase4-v1.0.0
SHA-1: 56176dbe45e6175b18c9f44533828806c63142ab

OMS Phase 4 - Added OMS Cust. Order No. to EDI Purchase Order Header screens

Tag Info

object 56176dbe45e6175b18c9f44533828806c63142ab
type commit
tag oms-phase4-v1.0.0
tagger Richard Riviere &lt;richard.riviere@myer.com.au&gt; 1364338495 +1100

---
SHA-1: 0000000000000000000000000000000000000000

Working dir changes
0 files changed

---
</code></pre>

<p>The code has definitely been pushed to the remote repository. I've been able to check by cloning the repository into a different directory.</p>

<p>Does anyone know why I am receiving the <code>fatal: bad default revision 'HEAD'</code>?</p>

<p>p.s. It is a bare repository however I have created other bare repositories which have not had this problem.</p>
","44","64941","<git>"
"6151970","1","How do you remove a tag from a remote repository","<p>Is it possible to untag a revision that has been push upstream using git.</p>

<p>This is what has happened:</p>

<pre><code> git tag 1.1
 git push --tags origin master
</code></pre>

<p>Doh! That was meant to be version 1.1beta</p>

<p>Can you rebase and repush upstream. No other member of my team has pulled from origin yet.</p>
","39","11644","<git>"
"25715898","1","What's the difference between Git ignoring directory and directory/*?","<p>I'm confused about what's the correct way to ignore the contents of a directory in git.</p>

<p>Assume I have the following directory structure:</p>

<pre><code>my_project  
     |--www  
         |--1.txt  
         |--2.txt
     |--.gitignore
</code></pre>

<p>What's the difference between putting this:</p>

<pre><code>www
</code></pre>

<p>And this?</p>

<pre><code>www/*
</code></pre>

<p>The reason I'm asking this question is: In git, if a directory is empty, git won't include such empty directory in repository. So I was trying the solution that is add an extra .gitkeep file under the directory so that it won't be empty. When I was trying that solution, if in the .gitignore file, I write like below:</p>

<pre><code>www
!*.gitkeep
</code></pre>

<p>It doesn't work(My intention is to ignore all contents under www but keep the directory). But if I try the following:</p>

<pre><code>www/* 
!*.gitkeep
</code></pre>

<p>Then it works! So I think it must has some differences between the two approaches.</p>
","102","3535","<git><gitignore><notation><dotfiles>"
"3769137","1","Use git ""log"" command in another folder","<p>I have some php files in a Folder A (which is a git project). In these php file I want to execute ""git log"" but for the folder B. Folder B is another git project (so log is different between A and B).</p>

<p>How I can do that with shell command ?</p>
","41","10654","<git>"
"4330610","1","Switch to another GIT tag","<p>How do I check out version version/tag 1.1.4 of the <a href=""https://github.com/rspec/rspec-tmbundle"">rspec bundle</a>?</p>

<pre><code>cd ~/Library/Application\ Support/TextMate/Bundles/
git clone git://github.com/rspec/rspec-tmbundle.git RSpec.tmbundle
osascript -e 'tell app ""TextMate"" to reload bundles'
</code></pre>
","78","59765","<git><github>"
"1655361","1","how to clone an old git-commit (and some more questions about git)","<p>I have a git-repository of my project with about 20 commits. I know how to clone the actual commit with <code>git clone</code>,  </p>

<ul>
<li>but how can I ""clone"" an old commit?  </li>
<li>is there a really good git-GUI (imho <code>qgit</code> is not a good GUI)?  </li>
<li>what exactly are ""branches""?</li>
<li>when I want to release 0.1, 0.2 and so on, what is the best way to mark these commits in git?</li>
<li>what are the big differences to svn?</li>
</ul>
","59","54313","<git>"
"25156238","1","TortoiseGit not showing icon overlays","<p>I have been using <code>TortoiseGit</code> for almost a full year now. It has been working very well for me until yesterday, when I encountered a problem. I was deleting a folder when Windows Explorer sort of crashed on me (it hung on ""discovering items"") for over an hour, then I restarted the system.</p>

<p>Since that time (and I am <em>not</em> sure if the incident described has anything to do with it), TortoiseGit has stopped showing icon overlays in explorer. The behaviour is, however, not like any of the others who posted questions here, because:</p>

<blockquote>
  <p>In the <code>open file</code> dialogue of all programs, the icons still exist (!).</p>
</blockquote>

<p>Here is a list of things I tried:</p>

<ol>
<li>I changed TortoiseGit settings to show different icons.</li>
<li>Reinstall TortoiseGit (uninstall, restart, install, restart).</li>
<li>I deleted all icon overlays starting with ""Tortoise"" in <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Explorer 
\ShellIconOverlayIdentifiers</code>, then uninstalled TortoiseGit, restarted the computer and reinstalled TortoiseGit.</li>
</ol>

<hr>

<p><strong>Edit:</strong></p>

<p>I tried to create a new user on my computer, and the new user has icon overlays working just fine. I am now even more confused.</p>

<p>Nothing helped so far. Any ideas?</p>
","41","19081","<git><tortoisegit>"
"8781240","1","A way to restrict Git branch access?","<p>I have four branches in my git repository, which is managed using GitHub:</p>

<ul>
<li>Production</li>
<li>Staging</li>
<li>Master</li>
<li>[person's name]-development</li>
</ul>

<p>Is there a way to restrict write access to only a single branch ([person's name]-development)? How would I do this? </p>

<p>For reference, a similar question: <a href=""http://stackoverflow.com/questions/4114417/how-to-write-a-git-hook-to-restrict-writing-to-branch"">How to write a git hook to restrict writing to branch?</a>. </p>
","48","32786","<git><github>"
"15515729","1","git repository ignoring all .dlls","<p>Title says it all. I am trying to add my NuGet packages to the repository. Everything but the .dll files are being detected. </p>

<p>The gitignore file contains no references to *.dll. The .dll files don't get recognized when located anywhere in the entire repository. info/exclude is also empty.</p>

<p>I have also cloned the repository (file-system to file-system as opposed from remote to file-sysytem) with no luck. This issue also happens on two different computers.</p>

<p>I could add the .dll files manually, but they should be tracked. Why are they not being tracked?</p>
","52","27480","<git><gitignore>"
"17983068","1","Delete local Git branches after deleting them on the remote repo","<p>I want to have my local and remote repositories always in sync in terms of branches.</p>

<p>After a Pull Request review on GitHub, I merge and remove my branch there (remote).
How could I fetch this information in my local repository and get Git to remove my local version of the branch as well?</p>
","94","30333","<git><github><branch><pull><repository>"
"3637660","1","How to exclude file only from root folder in Git","<p>I am aware of using <code>.gitignore</code> file to exclude some files being added, but I have several <code>config.php</code> files in source tree and I need to exclude only one, located in the root while other keep under revision control. </p>

<p>What I should write into <code>.gitignore</code> to make this happen?</p>
","139","24545","<git><gitignore>"
"1657017","1","How to squash all git commits into one?","<p>How do you squash your entire repository down to the first commit?</p>

<p>I can rebase to the first commit, but that would leave me with 2 commits.
Is there a way to reference the commit before the first one?</p>
","161","61633","<git><rebase><git-rebase><squash><git-rewrite-history>"
"8783093","1",".gitignore Syntax: bin vs bin/ vs. bin/* vs. bin/**","<p>What's the difference between adding <code>bin</code>, <code>bin/</code>, <code>bin/*</code> and <code>bin/**</code> in my .gitignore file? I've been using <code>bin/</code>, but looking at <a href=""https://github.com/github/gitignore/blob/master/Android.gitignore"">other</a> <a href=""https://github.com/github/gitignore"">.gitignore files</a> (in the <a href=""https://github.com/github/gitignore/blob/master/Global/Eclipse.gitignore"">eclipse file</a> the double and single star are even used together like this: <code>tmp/**/*</code> what's up with that?) I see that the first two patterns are also widely used as well. Can someone please explain the differences between the three?</p>
","47","13497","<git>"
"13627598","1","How to get git diff with full context?","<p>How to create patch suitable for reviewing in crucible?</p>

<pre><code>git diff branch master --no-prefix &gt; patch
</code></pre>

<p>This generates only 3 lines of context. So I do the following</p>

<pre><code>git diff --unified=2000 branch master --no-prefix &gt; patch
</code></pre>

<p>Hopefully all files will have less than 2000 lines. Is there a way to tell git to include all the lines in the file for patch without having to specify maximum lines?</p>
","35","8632","<git><diff><code-review><atlassian-crucible>"
"4147356","1","Git-svn W: -empty_dir warnings. What do they mean?","<p>While trying to clone an existing Subversion repository using git-svn using standard layout, I got a bunch of <code>W: -empty_dir</code> (and <code>W: +empty_dir</code>) warnings. The cloned git repository seems to be working, i.e. I can do usual git operations and dcommit to SVN repository.</p>

<p>The real problem is that the initial clone and rebase create some empty directories that do not exist in SVN repository, at the top of the repository (along with other directories in trunk). These directories contain no file but just some empty directories inside them. It seems that the ""W: -empty_dir"" warnings correspond to these empty directories.</p>

<p>I looked for empty directories by checking out the whole repository using SVN, but there is no empty directory. I also checked through SVN if the repository has files with special properties, but there was not any other than ""executable"" and ""mime-type"".</p>

<p>The existing repository was not originally following the standard layout, but I cleaned it up so that the top directories are just ""trunk"", ""tags"", and ""branches"".</p>

<p>What can be causing the creation of these empty directories that do not exist under Subversion?</p>
","33","5621","<git><git-svn>"
"5966290","1","Rails 3 and Heroku: automatically ""rake db:migrate"" on push?","<p>I have a slight annoyance with my heroku push/deploy process, which otherwise has been a joy to discover and use.  </p>

<p>If i add a new migration to my app, the only way i can get it up onto the heroku server is to do a push to the heroku remote.  This uploads it and restarts the app.  But it doesn't run the migration, so i have to do <code>heroku rake db:migrate --app myapp</code>, then <code>heroku restart --app myapp</code>.  In the meantime, the app is broken because it hasn't run the migrations and the code is referring to fields/tables etc in the migration.</p>

<p>There must be a way to change the deployment process to run the <code>rake db:migrate</code> automatically as part of the deploy process but i can't work it out.  </p>

<p>Is it something i set in a heroku cpanel?  Is it an option i pass to heroku from the command line?  Is it a git hook?  Can anyone set me straight?  thanks, max</p>
","54","19312","<ruby-on-rails><git><heroku>"
"13030714","1","Git: fatal: The current branch master has multiple upstream branches, refusing to push","<p>I have this strange issue, whenever I do <code>git push</code> it refuses to do anything:</p>

<p><code>fatal: The current branch master has multiple upstream branches, refusing to push.</code></p>

<p>When I do <code>git push -u origin master</code> it seem to set it as a tracking branch:</p>

<p><code>Branch master set up to track remote branch master from origin.</code></p>

<p>But the next time I try <code>git push</code> it refuses to do this again. I tried to google but it seems the problem is fairly new and I couldn't find any explanation for this behaviour. Ideas?</p>

<p><strong>Update:</strong> <code>./git/config</code></p>

<pre><code>[remote ""origin""]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = gitosis@xxxx.xx:milk.git
[branch ""master""]
    remote = origin
    merge = refs/heads/master
</code></pre>

<p><strong>Update2:</strong> Solved with <code>git config remote.origin.push HEAD</code> the following line appeared in <code>.git/config</code> to <code>[remote ""origin""]</code> section:</p>

<pre><code>    push = HEAD
</code></pre>

<p><strong>Update3:</strong></p>

<pre><code>$ git branch -vv
  billing      633c796 [origin/billing: behind 889] links
* master       1a0de50 [origin/master: ahead 1] more fixes
  new_master   3b880d7 [origin/new_master] branches diverged
  photo_stacks 29c8f0d [origin/photo_stacks] 1st try
  responsive   1dad980 [origin/responsive] update

$ git push
fatal: The current branch master has multiple upstream branches, refusing to push.
</code></pre>
","36","14195","<git>"
"8865848","1","Comments in .gitignore?","<p>Can you write comments in a <code>.gitignore</code> file?</p>

<p>If so, should the line be preceded with a <code>#</code> or some other indicator?</p>
","232","37681","<git><comments><gitignore>"
"3696938","1","Git: How do you commit code as a different user?","<p>I want to be able to do this for a script. I'm essentially re-creating the entire version history of some code in git - it currently uses a different version control system. I need the script to be able to add in the commits to git while preserving the commit's original author (and date). 
Assuming I know the commit author and the date/time the change was made, is there a git command that allows me to do this? I'm assuming there is, because git-p4 does something similar. I'm just asking for the best way to do it. </p>
","49","21809","<git><command-line><commit>"
"3697178","1","Git: merge all changes from another branch as a single commit","<p>In Git, is there a way to merge all changes from one branch into another, but squash to a single commit at the same time?  </p>

<p>I often work on a new feature in a separate branch and will regularly commit/push - mainly for backup or to transfer what I'm working on to another machine.  Mostly those commits say ""Feature xxx WIP"" or something redundant.</p>

<p>Once that work is finished and I want to merge WIP branch back into master, I'd like to discard all those intermediate commits, and just a have a single clean commit.</p>

<p>Is there an easy way to do this? </p>

<p>Alternatively, how about a command that squashes all commits on a branch since the point where it was branched?</p>
","186","47701","<git>"
"10762859","1","brew update: The following untracked working tree files would be overwritten by merge:","<p>I tried to run <code>brew update</code> and I get an error about my local changes would be lost if I merged.  I tried committing my local changes (don't remember making any, but it's been awhile), and that made things worse.</p>

<p>Here's the output:</p>

<pre><code>MBP:Library User$ sudo brew update
error: The following untracked working tree files would be overwritten by merge:
    Library/Aliases/fastcgi
    Library/Aliases/htop
    Library/Aliases/nodejs
    Library/Aliases/ocio
    Library/Aliases/oiio
    Library/Aliases/pgrep
    Library/Aliases/pkill
    Library/Contributions/cmds/brew-beer.rb
    Library/Contributions/cmds/brew-dirty.rb
    Library/Contributions/cmds/brew-graph
    Library/Contributions/cmds/brew-grep
    Library/Contributions/cmds/brew-leaves.rb
    Library/Contributions/cmds/brew-linkapps.rb
    Library/Contributions/cmds/brew-man
    Library/Contributions/cmds/brew-mirror-check.rb
    Library/Contributions/cmds/brew-missing.rb
    Library/Contributions/cmds/brew-pull.rb
    Library/Contributions/cmds/brew-readall.rb
    Library/Contributions/cmds/brew-server
    Library/Contributions/cmds/brew-services.rb
    Library/Contributions/cmds/brew-switch.rb
    Library/Contributions/cmds/brew-test-bot.commit.html.erb
    Library/Contributions/cmds/brew-test-bot.css
    Library/Contributions/cmds/brew-test-bot.index.html.erb
    Library/Contributions/cmds/brew-test-bot.rb
    Library/Contributions/cmds/brew-tests.rb
    Library/Contributions/cmds/brew-unpack.rb
    Library/Contributions/cmds/brew-which.rb
    Library/Contributions/install_homebrew.rb
    Library/Formula/abcl.rb
    Library/Formula/abyss.rb
    Library/Formula/akka.rb
    Library/Formula/apollo.rb
    Library/Formula/appledoc.rb
    Library/Formula/arangodb.rb
    Library/Formula/autoconf.rb
    Library/Formula/automake.rb
    Library/Formula/avidemux.rb
    Library/Formula/bind.rb
    Library/Formula/bsdconv.rb
    Library/Formula/bsdmake.rb
    Library/Formula/camellia.rb
    Library/Formula/cbmbasic.rb
    Library/Formula/cdo.rb
    Library/Formula/checkstyle.rb
    Library/Formula/cifer.rb
    Library/Formula/clhep.rb
    Library/Formula/collada-dom.rb
    Library/Formula/crash.rb
    Library/Formula/crossroads.rb
    Library/Formula/css-crush.rb
    Library/Formula/curlftpfs.rb
    Library/Formula/dart.rb
    Library/Formula/dasm.rb
    Library/Formula/dfc.rb
    Library/Formula/di.rb
    Library/Formula/dsniff.rb
    Library/Formula/dupx.rb
    Library/Formula/dwatch.rb
    Library/Formula/eprover.rb
    Library/Formula/ext2fuse.rb
    Library/Formula/ezlupdate.rb
    Library/Formula/f3.rb
    Library/Formula/fastx_toolkit.rb
    Library/Formula/fceux.rb
    Library/Formula/findbugs.rb
    Library/Formula/freerdp.rb
    Library/Formula/funcoeszz.rb
    Library/Formula/fwknop.rb
    Library/Formula/gabedit.rb
    Library/Formula/gbdfed.rb
    Library/Formula/gconf.rb
    Library/Formula/git-encrypt.rb
    Library/Formula/glm.rb
    Library/Formula/gmap-gsnap.rb
    Library/Formula/gnu-arch.rb
    Library/Formula/gnunet.rb
    Library/Formula/gobby.rb
    Library/Formula/gptfdisk.rb
    Library/Formula/griffon.rb
    Library/Formula/grok.rb
    Library/Formula/gtk-chtheme.rb
    Library/Formula/gtkglextmm.rb
    Library/Formula/gtmess.rb
    Library/Formula/hg-flow.rb
    Library/Formula/hqx.rb
    Library/Formula/htop-osx.rb
    Library/Formula/htpdate.rb
    Library/Formula/imap-uw.rb
    Library/Formula/iozone.rb
    Library/Formula/ipbt.rb
    Library/Formula/ipe.rb
    Library/Formula/ispc.rb
    Library/Formula/ispell.rb
    Library/Formula/jigdo.rb
    Library/Formula/jing.rb
    Library/Formula/jless.rb
    Library/Formula/jpeginfo.rb
    Library/Formula/konoha.rb
    Library/Formula/legit.rb
    Library/Formula/libcouchbase.rb
    Library/Formula/libcuefile.rb
    Library/Formula/libextractor.rb
    Library/Formula/libglademm.rb
    Library/Formula/libgtextutils.rb
    Library/Formula/libinfinity.rb
    Library/Formula/libkate.rb
    Library/Formula/libqalculate.rb
    Library/Formula/libqglviewer.rb
    Library/Formula/libreplaygain.rb
    Library/Formula/libtool.rb
    Library/Formula/libvbucket.rb
    Library/Formula/libvo-aacenc.rb
    Library/Formula/libxmi.rb
    Library/Formula/lifelines.rb
    Library/Formula/makeicns.rb
    Library/Formula/mathgl.rb
    Library/Formula/meld.rb
    Library/Formula/mesalib-glw.rb
    Library/Formula/minisat.rb
    Library/Formula/minuit2.rb
    Library/Formula/mobile-shell.rb
    Library/Formula/movgrab.rb
    Library/Formula/mp3cat.rb
    Library/Formula/mpich2.rb
    Library/Formula/mrfast.rb
    Library/Formula/musepack.rb
    Library/Formula/ndiff.rb
    Library/Formula/net6.rb
    Library/Formula/nrpe.rb
    Library/Formula/nuttcp.rb
    Library/Formula/oath-toolkit.
Updating aa07533..3f070ef
Aborting
Error: Failed while executing git pull  origin refs/heads/master:refs/remotes/origin/master
</code></pre>
","358","62442","<git><homebrew>"
"6157730","1","Why can't I push to this bare repository?","<p>Can you explain what is wrong with this workflow?</p>

<pre><code>$ git init --bare bare
Initialized empty Git repository in /work/fun/git_experiments/bare/
$ git clone bare alice
Cloning into alice...
done.
warning: You appear to have cloned an empty repository.
$ cd alice/
$ touch a
$ git add a
$ git commit -m ""Added a""
[master (root-commit) 70d52d4] Added a
 0 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 a
$ git push
No refs in common and none specified; doing nothing.
Perhaps you should specify a branch such as 'master'.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to '/work/fun/git_experiments/bare'
</code></pre>

<p>Doesn't <code>git push</code> always push to the repository I cloned from?</p>
","231","127942","<git>"
"6782017","1","What's the easiest way to deal with project configuration files?","<p>It's very common to have at least one configuration file in any project. Every time I share project with <code>git</code>, I have the same problem with:</p>

<ul>
<li>sensitive information (each developer have different DB passwords etc)</li>
<li>task specific information (when developer works on certain task where one needs to change some settings)</li>
</ul>

<p>Obviously, configs have to be ignored somehow to prevent developer specific data to flood main repository. Now there are several ways I used to use, each with some flaws:</p>

<ul>
<li><code>.gitignore</code> the config files
<ul>
<li>the most basic way</li>
<li>when developer clones repo, config file is missing and one has to find out where configs were recreate them</li>
</ul></li>
<li>config file isn't ignored. It contains some dummy info and each developer either untracks and puts it to his <code>.git/info/exclude</code> or set <code>git update-index --assume-unchanged ...</code> to the file
<ul>
<li>files are available for anyone who clones repo</li>
<li>it contains advanced techniques which could confuse people that work with git for the first time</li>
<li>when someone commits config files by accident, it won't allow people to pull/fetch (as excludes don't work the same way as <code>.gitignore</code>)</li>
</ul></li>
<li>distribute config files suffixed with, for example, <code>_original</code> while having the real files in <code>.gitignore</code>. Each developer then renames files to real names
<ul>
<li>files are available for anyone who clones repo</li>
<li>one has to search for all configs throughout application and rename them</li>
</ul></li>
</ul>

<p>Are there any other, possibly, better ways to handle this? I suspect I'm missing something, some plugin at least.</p>
","51","4557","<git>"
"13630849","1","Git - Difference Between 'assume-unchanged' and 'skip-worktree'","<p>I have local changes to a file that I don't want to commit to my repository. It is a configuration file for building the application on a server, but I want to build locally with different settings. Naturally, the file always shows up when i do 'git status' as something to be staged. I would like to hide this particular change and not commit it. I won't make any other changes to the file.</p>

<p>After some digging around, I see 2 options: 'assume-unchanged' and 'skip-worktree'. A previous question <a href=""http://stackoverflow.com/questions/6138076/git-assume-unchanged-vs-skip-worktree"">here</a> talks about them but doesn't really explain their differences. My question is this: how are the two commands different? Why would someone use one or the other?</p>
","117","13176","<git><git-index>"
"7147270","1","Hard reset of a single file","<p>I currently have three modified files in my working directory. However I want one of them to be reset to the HEAD status.</p>

<p>In SVN I'd use <code>svn revert &lt;filename&gt;</code> (followed by <code>svn update &lt;filename&gt;</code> if needed) but in git I should use <code>git reset --hard</code>. However this command cannot operate on a single file.</p>

<p>Is there any way in git to discard a single file changes and overwrite it with a fresh HEAD copy?</p>
","199","74413","<git>"
"11961600","1","""fatal: Not a git repository (or any of the parent directories)"" from git status","<p>This command works to get the files and compile them:</p>

<pre><code>git clone a-valid-git-url
</code></pre>

<p>for example:</p>

<pre><code>git clone git://cfdem.git.sourceforge.net/gitroot/cfdem/liggghts
</code></pre>

<p>However, <code>git status</code> (or any other git command) then gives the above <code>fatal: Not a git repository (or any of the parent directories)</code> error.</p>

<p>What am I doing wrong?</p>
","35","68235","<git><repository><clone><git-clone><git-status>"
"6022302","1","How to apply unmerged upstream pull requests from other forks into my fork?","<p>A project on GitHub that I have a fork of has a new pull requests that I want to pull into my fork that the author has not pulled in yet.</p>

<p>Is there a simple way to apply pull request from other forks into my fork? Is there something else here that I am missing?</p>
","254","26605","<git><github><pull-request>"
"13713101","1","rsync exclude according to .gitignore & .hgignore & svn:ignore like --filter=:C","<p>Rsync includes a nifty option <code>--cvs-exclude</code> to “ignore files in the same way CVS does”, but CVS has been obsolete for years. Is there any way to make it also exclude files which would be ignored by modern version control systems (Git, Mercurial, Subversion)?</p>

<p>For example, I have lots of Maven projects checked out from GitHub. Typically they include a <code>.gitignore</code> listing at least <code>target</code>, the default Maven build directory (which may be present at top level or in submodules). Since the contents of these directories are entirely disposable, and they can be far larger than source code, I would like to exclude them when using rsync for backups.</p>

<p>Of course I can explicitly <code>--exclude=target/</code> but that will accidentally suppress unrelated directories that just happen to be named <code>target</code> and are not supposed to be ignored.</p>

<p>And I could supply a complete list of absolute paths for all file names and patterns mentioned in any <code>.gitignore</code>, <code>.hgignore</code>, or <code>svn:ignore</code> property on my disk, but this would be a huge list that would have to be produced by some sort of script.</p>

<p>Since rsync has no built-in support for VCS checkouts other than CVS, is there any good trick for feeding it their ignore patterns? Or some kind of callback system whereby a user script can be asked whether a given file/directory should be included or not?</p>

<p><em>Update</em>: <code>--filter=':- .gitignore'</code> as suggested by LordJavac seems to work as well for Git as <code>--filter=:C</code> does for CVS, at least on the examples I have found, though it is unclear if the syntax is an exact match. <code>--filter=':- .hgignore'</code> does not work very well for Mercurial; e.g. an <code>.hgignore</code> containing a line like <code>^target$</code> (the Mercurial equivalent of Git <code>/target/</code>) is not recognized by rsync as a regular expression. And nothing seems to work for Subversion, for which you would have to parse <code>.svn/dir-prop-base</code> for a 1.6 or earlier working copy, and throw up your hands in dismay for a 1.7 or later working copy.</p>
","47","7925","<git><svn><mercurial><rsync>"
"4826639","1","Repack of Git repository fails","<p>I have a git repository residing on a server with limited memory. 
When I try to clone an existing repository from the server I get the following error</p>

<pre><code>hemi@ubuntu:$ git clone ssh://hemi@servername.dk/home/hemi/repos/articles
Initialized empty Git repository in /home/hemi/Skrivebord/articles/.git/
hemi@servername.dk's password: 
remote: Counting objects: 666, done.
remote: warning: suboptimal pack - out of memory
remote: fatal: Out of memory, malloc failed
error: git upload-pack: git-pack-objects died with error.
fatal: git upload-pack: aborting due to possible repository corruption on the remote side.
remote: aborting due to possible repository corruption on the remote side.
fatal: early EOF
fatal: index-pack failed
hemi@ubuntu:$ 
</code></pre>

<p>To handle this error I have tried to repack the original repository (according to <a href=""http://git.661346.n2.nabble.com/Large-pack-causes-git-clone-failures-what-to-do-td5481488.html"">this forum post</a>). But instead of repacking the repository it describes how to use the ""git pack-objects"" command.</p>

<pre><code>hemi@servername:~/repos/articles$ git repack -a -d --window-memory 10m --max-pack-size 100m
usage: git pack-objects [{ -q | --progress | --all-progress }]
        [--all-progress-implied]
        [--max-pack-size=N] [--local] [--incremental]
        [--window=N] [--window-memory=N] [--depth=N]
        [--no-reuse-delta] [--no-reuse-object] [--delta-base-offset]
        [--threads=N] [--non-empty] [--revs [--unpacked | --all]*]
        [--reflog] [--stdout | base-name] [--include-tag]
        [--keep-unreachable | --unpack-unreachable 
        [&lt;ref-list | &lt;object-list]
</code></pre>

<p>Git 1.6.5.7 is installed on the server.</p>
","46","39032","<git><repository>"
"1777854","1","Git submodules: Specify a branch/tag","<p>How does <code>git submodule add -b</code> work?</p>

<p>After adding a submodule with a specific branch, a new cloned repo (after <code>git submodule update --init</code>) will be at a specific commit, not the branch itself (<code>git status</code> on the submodule shows ""Not currently on any branch"").</p>

<p>I can't find any information on <code>.gitmodules</code> or <code>.git/config</code> about the submodule's branch or any specific commit, so how does git figure it out?</p>

<p>Also, is it possible to specify a tag instead of a branch?</p>

<p>PS: I'm using <code>1.6.5.2</code>.</p>
","346","163809","<git><git-submodules>"
"7227826","1","What's a good (free) visual merge tool for Git? (on windows)","<p>A <a href=""http://stackoverflow.com/questions/137102/whats-the-best-visual-merge-tool-for-git"">similar question</a> was already asked, but for Ubuntu.</p>

<p>It would help to know if the tool is free as in beer or as in liber.</p>

<p>Also, up and downs of the tool would be nice to know.</p>
","88","73914","<windows><git><version-control><merge>"
"3777075","1","SSL certificate rejected trying to access GitHub over HTTPS behind firewall","<p>I'm stuck behind a firewall so have to use HTTPS to access my GitHub repository. I'm using cygwin 1.7.7 on Windows XP.</p>

<p>I've tried setting the remote to <code>https://username@github.com/username/ExcelANT.git</code>, but pushing prompts for a password, but doesn't do anything once I've entered it.
<code>https://username:&lt;password&gt;github.com/username/ExcelANT.git</code> and cloning the empty repo from scratch but each time it gives me the same error</p>

<blockquote>
  <p>error: SSL certificate problem, verify that the CA cert is OK. Details:<br>
  error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed while accessing <a href=""https://github.com/username/ExcelANT.git/info/refs"">https://github.com/username/ExcelANT.git/info/refs</a></p>
</blockquote>

<p>Turning on <code>GIT_CURL_VERBOSE=1</code> gives me</p>

<blockquote>
  <p>* About to connect() to github.com port 443 (#0)<br>
  *   Trying 207.97.227.239... * successfully set certificate verify locations:<br>
  *   CAfile: none<br>
    CApath: /usr/ssl/certs<br>
  * SSL certificate problem, verify that the CA cert is OK. Details:<br>
  error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed<br>
  * Expire cleared<br>
  * Closing connection #0<br>
  * About to connect() to github.com port 443 (#0)<br>
  *   Trying 207.97.227.239... * successfully set certificate verify locations:<br>
  *   CAfile: none<br>
    CApath: /usr/ssl/certs<br>
  * SSL certificate problem, verify that the CA cert is OK. Details:<br>
  error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed<br>
  * Expire cleared<br>
  * Closing connection #0<br>
  error: SSL certificate problem, verify that the CA cert is OK. Details:<br>
  error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify failed while accessing <a href=""https://github.com/username/ExcelANT.git/info/refs"">https://github.com/username/ExcelANT.git/info/refs</a></p>
</blockquote>

<pre><code>fatal: HTTP request failed
</code></pre>

<p>Is this a problem with my firewall, cygwin or what?</p>

<p>I hadn't set the HTTP proxy in the Git config, however it's an ISA server that needs NTLM authentication, not basic, so unless anyone knows how to force git to use NTLM, I'm scuppered.</p>
","318","420883","<git><ssl><github><cygwin><ssl-certificate>"
"1778088","1","How to clone a single branch in git?","<p>I have a local git repository called 'skeleton' that I use for storing project skeletons. It has a few branches, for different kinds of projects:</p>

<pre><code>casey@agave [~/Projects/skeleton] git branch
* master
  rails
  c
  c++
</code></pre>

<p>If I want to check out the master branch for a new project, I can do</p>

<pre><code>casey@agave [~/Projects] git clone skeleton new
Initialized empty Git repository in /Users/casey/Projects/new/.git/
</code></pre>

<p>and everything is how I want it. Specifically, the new master branch points to skeleton master branch, and I can push and pull to move around changes to the basic project setup.</p>

<p>What doesn't work, however, is if I want to clone another branch. I can't get it so that I only pull the branch I want, for instance the rails branch, and then the new repo has a 'master' branch that pushes to and pulls from the skeleton repo's 'rails' branch, by default.</p>

<p>Is there a good way to go about doing this? Or, maybe this isn't the way that git wants me to structure things, and I'm certainly open to that. Perhaps I should have multiple repos, with the rails skeleton repo tracking the master skeleton repo? And any individual project cloning the rails skeleton repo.</p>

<p>Any thoughts and suggestions are appreciated!</p>
","387","291578","<git><branch><git-clone>"
"2415873","1","Exceptions in .gitignore","<p>How to add an exception to .gitignore, like ""ignore all the .dll files <strong>BUT</strong> myfile.dll""?</p>
","105","16856","<git><gitignore>"
"2428137","1","How to rebase one Git repository onto another one?","<p>I had one Git repository (A) which contains the development of a project until a certain point. Then I lost the USB stick this repo A was on. Luckily I had a backup of the latest commit, so I could create a new repository (B) later where I imported the latest project's state and continue development.
Now I recovered that lost USB stick, so I have two Git repositories.</p>

<p>I think I just have to rebase repo B onto repo A somehow, but I have no idea how to do that, maybe using fetch/pull and rebase?</p>
","32","8841","<git><merge><repository><rebase>"
"2428270","1","git: How to diff changed files versus previous versions after a pull?","<p>When I run ""git pull"" I often want to know what changed between the last version of a file and the new one.  Say I want to know what someone else committed to a particular file.</p>

<p>How is that done?</p>

<p>I'm assuming it's ""git diff"" with some parameters for commit x versus commit y but I can't seem to get the syntax.  I also find ""git log"" confusing a bit and am not sure where to get the commit ID of my latest version of the file versus the new one.</p>
","67","44824","<git>"
"273695","1","git branch naming best practices","<p>I've been using a local git repository interacting with my group's CVS repository for several months, now.  I've made an almost neurotic number of branches, most of which have thankfully merged back into my trunk.  But naming is starting to become an issue.  If I have a task easily named with a simple label, but I accomplish it in three stages which each include their own branch and merge situation, then I can repeat the branch name each time, but that makes the history a little confusing.  If I get more specific in the names, with a separate description for each stage, then the branch names start to get long and unwieldy.</p>

<p>I did learn looking through old threads here that I could start naming branches with a / in the name, i.e., topic/task, or something like that.  I may start doing that and seeing if it helps keep things better organized.</p>

<p>What are some best practices for naming git branches?</p>

<p>Edit:
Nobody has actually suggested any naming conventions.
I do delete branches when I'm done with them.  I just happen to have several around due to management constantly adjusting my priorities. :)
As an example of why I might need more than one branch on a task, suppose I need to commit the first discrete milestone in the task to the group's CVS repository.  At that point, due to my imperfect interaction with CVS, I would perform that commit and then kill that branch.  (I've seen too much weirdness interacting with CVS if I try to continue to use the same branch at that point.)</p>
","474","148947","<git><naming-conventions><branch>"
"21820715","1","How to install latest version of git on CentOS 6.x/7.x","<p>I used the usual: </p>

<pre><code>yum install git
</code></pre>

<p>But it did not install the latest version of git on my CentOS 6.4. So, how can I update to the latest version for CentOS 6.4?</p>

<h2>Note:</h2>

<p>The solution can be applicable to other newly released versions of CentOS such as CentOS 7.x.</p>
","60","52668","<linux><git><installation><centos><yum>"
"3778042","1","Github: error cloning my private repository","<p>I'm trying to clone my GitHub project using the https-URL, but it fails with an error:</p>

<pre><code>$ git clone https://foo@github.com/foo/foo-private.git
Cloning into foo-private...
Password:
error: error setting certificate verify locations:
  CAfile: /bin/curl-ca-bundle.crt
  CApath: none
 while accessing https://foo@github.com/foo/foo-private.git/info/refs

fatal: HTTP request failed
</code></pre>

<p>What am I doing wrong?</p>
","59","38338","<git><github>"
"9665399","1","How to ignore all files in a folder with a git repository in SourceTree?","<p>I have a bitbucket Git repository managed with SourceTree.</p>

<p>I have 2 folders that I want to commit but I need to ignore all the files in theses folders because contains temporary files.</p>

<p>How can I do that?</p>

<p>Thank you!</p>
","47","74618","<git><gitignore><atlassian-sourcetree>"
"5507489","1","Git Server Like GitHub?","<p>I am a long time Subversion user that is going to try Git.  I have read some about it and understand the distributed nature - I can see a lot of the benefits.  </p>

<p>However, I do like the idea of a central server that can take on the role of backups, system of record, etc, while still using Git for my local branching and sharing.  I am not doing an open source project, so I can't use Github (without paying), so my question really is: <strong>what is a best practice way to run a local git server?</strong></p>

<p>I realize this may be against the standard Git usage pattern, but it will be useful for my project.  Any concerns that I may have overlooked are always welcome, however.</p>

<p>Thanks!</p>
","311","211558","<git>"
"2468230","1","How to use Winmerge with Git Extensions?","<p>I'm using <a href=""http://code.google.com/p/gitextensions/"">Git Extensions</a> and it pre-installs and sets up KDiff as the diff tool to solve merge conflicts. I'm very fond of Winmerge though and would like to replace KDiff with Winmerge.</p>

<p>In the Git Extensions settings, there are settings to change the Mergetool, but I can't seem to figure out what syntax I should use and why. There seem to be 4 variables: $BASE, $LOCAL, $REMOTE, $MERGED. It seems that I should pass these to WinMergeU.exe, but with which command line parameters? </p>

<p>I've tried to search for this a few times, but there is no answer that actually seems to work.</p>
","33","18645","<git><settings><winmerge><git-extensions>"
"3873839","1","Why are there .sln, .suo and .csproj files?","<p>I began to use Visual Studio 2010. After I'm done with the C# program, I see that there are <code>.sln</code>, and <code>.suo</code> files in the project root directory, and a <code>.csproj</code> file in the subdirectory. What are those files for? </p>

<p>I need to identify the files to put into a Git repository. Together with the source code/documents that I create, I guess those three files are the only one that I have to take care of. However, I'm not sure if I'm tracking the correct files.</p>

<h2>ADDED</h2>

<p>How about the personal macro files? I have the <a href=""http://stackoverflow.com/questions/3082836/visual-studio-2008-smoothly-switch-between-emacs-and-default-keybindings"">Emacs key switch macro</a>, does the <code>.sln</code> file or <code>.csproj</code> file have this macro?</p>
","37","32477","<visual-studio><git>"
"3873872","1","Best Practices for using Git with Intellij Idea","<p>In a nutshell: what are best practcices for using Intellij Idea (9) and Git?</p>

<p><strong>Context</strong></p>

<p>We've recently upgraded to idea 9 and have started to use Git for a new feature on existing project.  </p>

<p>We largely use git command line to learn the tool better. But we thought we'd pick the hive-mind to find out what are best practices for git with idea.</p>

<p>The Idea UI is similar for both CVS and Git, yet the underlying implementations differ a bit.</p>

<p><strong>Example Questions</strong></p>

<p>For example:
-With CVS, when we had multiple release of a product, each of us would have a local copy of the 1-0, 2-0, 3-0, etc. branches , each with its own Intellij files (i.e. .ipr, .iws, etc.). The ""git way"" seems to have one project and use 'git branch' to switch branches.  This is fine, but it creates huge overhead for idea (as it has to reload each changed file, including checked-in jars) when you change branches. So: do you still have a separate project (with .git) for each ""major release"" or have one project and use ""git branch""?</p>

<p>-Is it a good idea to use Autostash?</p>

<p>-Do you automatically add each modification to your git commit? or use ""git add"" later?</p>

<p>-Do you rebase?</p>

<p>-Best way to merge?</p>

<p>-Any other hints/tips/what-works-for-you,etc.</p>

<p><strong>Final Comments</strong></p>

<p>We still ""think in cvs""  so part of this is getting used to git; part is getting used to Idea's Ui for git. </p>

<p>These are fairly rudimentary questions as we still use the comand line primarily. Also I've heard idea 10 has better/stronger/faster git integration tools</p>

<p>Thanks</p>
","35","39334","<git><intellij-idea>"
"1778862","1","How does git detect that a file has been modified?","<p>How does git detect a file modification so fast?</p>

<p>Does it hash every file in the repo and compare SHA1s?  This would take a lot of time, wouldn't it?</p>

<p>Or does it compare <code>atime</code>, <code>ctime</code> or <code>mtime</code>?</p>
","35","6223","<git>"
"1214906","1","How do I merge a sub directory in git?","<p>Is it possible to merge only the changes for a sub-directory from a local git branch to a remote git branch or is it ""all or nothing""?</p>

<p>For example, I have:</p>

<pre><code>branch-a
 - content-1
 - dir-1
   - content-2
</code></pre>

<p>and</p>

<pre><code>branch-b
 - content-1
 - dir-1
   - `content-2
</code></pre>

<p>I only want to merge the contents of branch-a dir-1 with the contents of branch-b dir-1.</p>
","44","28117","<git>"
"7310177","1","How do I make a branch point at a specific commit?","<p>In Git, I understand that a branch is a pointer to a commit.</p>

<p>How do I make a specific branch point to a specific commit? Say I want to make <code>master</code> point at <code>1258f0d0aae...</code>, how do I do that?</p>
","59","18878","<git><git-branch>"
"8533202","1","List files in local git repo?","<p>I'm using Sparkleshare, which uses Git to sync files between my laptop and my backup server.</p>

<p>Now I want to be able to browse in the files and dirs that I've uploaded to my server, but I dont know how?</p>

<p>I understand that Git uses some sort of special file hierarchy and that I just cant list my files, right?</p>

<p>But how would I have to do to list them and browse my files?</p>
","180","83163","<git>"
"2498458","1","Why did git set us on (no branch)?","<p>This morning we pull from our repo, and git put us on (no branch).</p>

<p>I don't understand this, why did this happen? And how get out of it without losing our changes?</p>
","65","41866","<git>"
"2514270","1","How to check for changes on remote (origin) Git repository?","<p><strong>Question</strong></p>

<p>What are the Git commands to do the following workflow?</p>

<p><strong>Scenario</strong></p>

<p>I cloned from a repository and did some commits of my own to my local repository. In the meantime, my colleagues made commits to the remote repository. Now, I want to:</p>

<ol>
<li><p>Check whether there are any new
commits from other people on the
remote repository, i.e. <code>origin</code>?</p></li>
<li><p>Say there were 3 new commits on the
remote repository since my last
pull, I would like to diff the
remote repository's commits, i.e.
<code>HEAD~3</code> with <code>HEAD~2</code>, <code>HEAD~2</code> with
<code>HEAD~1</code> and <code>HEAD~1</code> with <code>HEAD</code>.</p></li>
<li><p>After knowing what changed remotely,
I want to get the latest commits
from the others.</p></li>
</ol>

<p><strong>My findings so far</strong></p>

<p>For step 2: I know the caret notation <code>HEAD^</code>, <code>HEAD^^</code> etc. and the tilde notation <code>HEAD~2</code>, <code>HEAD~3</code> etc.</p>

<p>For step 3: That is, I guess, just a <code>git pull</code>.</p>
","126","107474","<git>"
"2514172","1","Listing each branch and its last revision's date in git","<p>I need to delete old and unmaintained branches from our remote repo. I'm trying to find a way with which to list the remote branches by their last modified date, and I can't.</p>

<p>Does someone know of an easy way to list remote branches this way?</p>
","66","17467","<git><maintenance><administration><branch>"
"3779274","1","How can git be installed on CENTOS 5.5?","<p>How can I install git on CENTOS 5.5 machine?
I tried to install it from yum but got following msg.</p>

<pre><code>root@host [~]# sudo yum install git
Loaded plugins: fastestmirror
Loading mirror speeds from cached hostfile
 * addons: centos.mirrors.tds.net
 * base: mirror.ubiquityservers.com
 * extras: mirrors.serveraxis.net
 * updates: pubmirrors.reflected.net
addons                                                   |  951 B     00:00
base                                                     | 2.1 kB     00:00
extras                                                   | 2.1 kB     00:00
updates                                                  | 1.9 kB     00:00
Excluding Packages in global exclude list
Finished
Setting up Install Process
No package git available.
Nothing to do
root@host [~]#
</code></pre>
","69","93094","<git><centos5>"
"19461658","1","Setting up Beyond Compare in Visual Studio 2013 when using Git","<p><a href=""http://stackoverflow.com/questions/4466238/how-to-configure-visual-studio-to-use-beyond-compare"">How to configure Visual Studio to use Beyond Compare</a> has a great answer for how to configure Visual Studio to use Beyond Compare. However, the UI for these steps has changed in Visual Studio 2013. Part of this may be due to the fact that I'm using Git for my SCM, and VS 2013 now has native Git support.</p>

<p>Has anyone figured out how to configure VS 2013 to use Beyond Compare?</p>
","31","7078","<git><visual-studio-2013><beyondcompare3>"
"4243174","1","Should server/database config files, including passwords, be stored in source control?","<p>I'm looking to hear some best practices...</p>

<p>Assuming a web application that interacts with a few different production servers (databases, etc.)... should the configuration files that include database passwords be stored in source control (e.g., git, svn)?</p>

<p>If not, what's the best way to keep track of server database (or other related) passwords that your application needs access to?</p>

<p><strong>Edit:</strong> added a bounty to encourage more discussion and to hear what more people consider best practice.</p>
","41","7215","<svn><git><version-control><passwords><config>"
"3635952","1","How to use git-bundle for keeping development in sync?","<p>I need to keep my development trees in sync on different computers, with no network connection between them.</p>

<p>We have a central git repository, and I normally work on my own clone on my office computer. Sometimes I need to do some development on another computer, which is never connected to the office network. None of the computers are ever connected to Internet. Development may be performed on both computers between synchronizations.</p>

<p>I have read the help pages for git-bundle, which seems like the best tool, but I am not really sure how a good workflow could be set up. </p>

<p>Can you give me some advice or pointers?</p>
","49","16751","<git>"
"20923193","1","Bitbucket, Windows and ""fatal: could not read Password for""","<p>I recently reinstalled Windows and I have a problem with downloading files from repository.</p>

<p>I have installed GIT and Python, but when I am trying to download anything from Bitbucket I get the message: </p>

<pre><code>""fatal: could not read Password for: 'https://username@bitbucket.org': No such file or directory"".
</code></pre>

<p>What am I doing wrong?</p>
","41","34610","<windows><git><bitbucket>"
"384108","1","Moving from CVS to git: $Id:$ equivalent?","<p>I read through a bunch of questions asking about simple source code control tools and git seemed like a reasonable choice.  I have it up and running and it works well so far.  One aspect that I like about CVS is the automatic incrementation of a version number.  </p>

<p>I understand that this makes less sense in a distributed repository, but as a developer I want/need something like this.  Let me explain why:</p>

<p>I use Emacs.  Periodically I go through and look for new versions of the lisp source files for 3rd-party packages.  Say I've got a file foo.el which according to the header is version 1.3; if I look up the latest version and see it's 1.143 or 2.6 or whatever, I know I'm pretty far behind.  If instead I see a couple of 40-character hashes, I won't know which is later or get any idea of how much later it is.  I would absolutely hate it if I had to manually check ChangeLogs just to get an idea of how out of date I am.</p>

<p>As a developer, I want to extend this courtesy, as I see it, to the people that use my output (and maybe I'm kidding myself that anyone is, but let's leave that aside for a moment).  I don't want to have to remember to increment the damn number myself every time, or a timestamp or something like that.  That's a real PITA, and I know that from experience.</p>

<p>So what alternatives do I have?  If I can't get an $Id:$ equivalent, how else can I provide what I'm looking for?  Thanks for the help!</p>

<p>EDIT: I should mention that my expectation is that the end user will NOT have git installed and even if they do, will not have a local repository (indeed, I expect not to make it available that way).  Thanks for the answers so far!</p>
","95","52053","<git><version-control><cvs><keyword-substitution>"
"16074832","1","Cannot push to git repository on bitbucket","<p>I made a new repository and I'm running into a strange error. I've used git before on bitbucket but I just reformatted and now I can't seem to get git to work.  After doing a commit, I had to add my email and name to the globals, but then it commited just fine.  When I try to use the command:</p>

<pre><code>git push origin master
</code></pre>

<p>it doesn't work, I get this message:</p>

<pre><code>$ git push origin master
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>I'm at a loss here.  My friend whom I'm sharing this repository with accessed it fine and pushed to it just fine, but I can't seem to get it to work.</p>
","54","38941","<git><bitbucket><git-bash>"
"18536863","1","Git refuses to reset/discard files","<p>I have a project with certain js files which I cannot update. I run OSX locally and my remote/staging server is Linux (CentOS).</p>

<p>Right after cloning my project locally, i noticed I have all those files with git status <code>modified</code>. I never modified them, so I tried to <code>discard changes</code> or <code>reset</code> them, but they come up again. The change that is in the modification is deleting all lines and adding them again. </p>

<p>I'm not sure why this happens or how to fix it so that my git status is clean as it needs to be.</p>

<p>Here is a few lines from the git status:</p>

<pre><code>#   modified:   app/webroot/js/ckeditor/plugins/devtools/lang/el.js
#   modified:   app/webroot/js/ckeditor/plugins/devtools/lang/fa.js
#   modified:   app/webroot/js/ckeditor/plugins/devtools/lang/gu.js
</code></pre>

<p>UPDATE 1: </p>

<p>I have now managed to commit the above files, but the staging server is locked because it won't pull new edits:</p>

<pre><code>error: Your local changes to the following files would be overwritten by merge:
    app/webroot/js/ckeditor/_source/lang/ar.js
    app/webroot/js/ckeditor/_source/lang/bg.js
    app/webroot/js/ckeditor/_source/lang/bn.js
    app/webroot/js/ckeditor/_source/lang/cs.js
    ...
Aborting
</code></pre>

<p>I can't commit/push because:</p>

<pre><code>Updates were rejected because a pushed branch tip is behind its remote counterpart
</code></pre>

<p>I tried:</p>

<pre><code>git reset --hard
</code></pre>

<p>and</p>

<pre><code>git stash
git stash drop
</code></pre>

<p>But they don't work, nothing happens.</p>

<p>UPDATE 2:</p>

<p><code>git diff</code> gives me:</p>

<pre><code>The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in app/webroot/js/ckeditor/_source/lang/fa.js.
The file will have its original line endings in your working directory.
warning: CRLF will be replaced by LF in app/webroot/js/ckeditor/_source/lang/gu.js.
The file will have its original line endings in your working directory.
...
</code></pre>
","33","7681","<git><git-status>"
"10906554","1","How do I revert my changes to a git submodule?","<p>I have a git submodule (RestKit) which I have added to my repo.</p>

<p>I accidentally changed some files in there and I'd like to go back to the source version. In order to do that, I tried to run </p>

<pre><code>Mac:app-ios user$ git submodule update RestKit
</code></pre>

<p>But as you can see here, this did not work as it is still ""modified content"":</p>

<pre><code>Mac:app-ios user$ git status
...
#   modified:   RestKit (modified content)
</code></pre>
","66","35343","<git><git-submodules>"
"6024671","1","How do I update Homebrew?","<p>When I ran:</p>

<pre><code>brew update
</code></pre>

<p>I got a message saying it initialized an empty repository in <code>/usr/local/.git/</code>, then I got this error:</p>

<p><img src=""http://i.stack.imgur.com/UVOco.png"" alt=""Screenshot""></p>
","42","55141","<git><homebrew>"
"5007135","1","How do I change my author name on GitHub?","<p>I'm new to web development and GitHub. When I commit any changes, these changes are reflected on my GitHub repo under ""unknown (author)"". How do I change this to reflect my name/email address?</p>

<p>Thanks.</p>
","41","28830","<git><github>"
"2586824","1","Partial clone with Git and Mercurial","<p>Is it possible to clone only one branch (or from a given commit) in Git and Mercurial? I mean, I want to clone a central repo but since it's huge I'd like to only get part of it and still be able to contribute back my changes. Is it possible? Like, I only want from Tag 130 onwards or something like that?</p>

<p>If so, how?</p>
","61","20035","<git><mercurial>"
"18371741","1","Git branching strategy integated with testing/QA process","<p>Our development team has been using the <a href=""http://nvie.com/posts/a-successful-git-branching-model/"">GitFlow</a> branching strategy and it has been great !</p>

<p>Recently we recruited a couple testers to improve our software quality. The idea is that, every feature should be tested/QA by a tester.</p>

<p>In the past, developers work on features on  separated feature branches and merge them back to the <code>develop</code> branch when done. The developer will test his work himself on that <code>feature</code> branch. Now with testers we start asking this Question</p>

<blockquote>
  <p>On which branch should the tester test   new features ?</p>
</blockquote>

<p>Obviously, there are two options: </p>

<ul>
<li>on the individual feature branch</li>
<li>on the <code>develop</code> branch</li>
</ul>

<h2>Testing On Develop Branch</h2>

<p>Initially we believed this is the sure way to go because:</p>

<ul>
<li>The feature is tested with all other features merged to the <code>develop</code> branch since it's development started. </li>
<li>Any conflicts can be detected earlier then later</li>
<li>It make the tester's job easy, he is only dealing with one branch (<code>develop</code>) at all time. He doesn't need to ask the developer about which branch is for which feature ( feature branches are personal branches managed exclusively and freely by relevant developers )</li>
</ul>

<p>The biggest problems with this is:</p>

<ul>
<li><p>The <code>develop</code> branch is polluted with bugs. </p>

<p>When the tester finds bugs or conflicts, he reports them back to the developer, who fixes the issue on the develop branch (the feature branch were abandoned once merged ), and there could be more fixes required afterward. Multiple subsequence commits or merges (if a branch is recreated off <code>develop</code> branch again for fixing the bugs) mades rolling back the feature from the <code>develop</code> branch very difficult if possible. There are multiple features merging to and being fixed on the <code>develop</code> branch at different times. This creates a big issue when we want to create a release with just some of the features in the <code>develop</code> branch </p></li>
</ul>

<h2>Testing On Feature Branch</h2>

<p>So we thought again and decided we should test features on the feature branches. Before test, we merge the changes from the <code>develop</code> branch to the feature branch ( catch up with the <code>develop</code> branch ). This is good:</p>

<ul>
<li>You still test the feature with other features in the mainstream</li>
<li>Further development ( e.g. bug fix, resolving conflict ) will not pollute the <code>develop</code> branch;</li>
<li>You can easily decide not to release the feature until it is fully tested and approved;</li>
</ul>

<p>However, there's some drawbacks</p>

<ul>
<li>The tester has to do the merging of the code, and if there's any conflict (very likely), he has to ask the developer for help. Our testers specialize in test and are not capable of coding.</li>
<li>a feature could be tested without the existence of another new feature. e.g. Feature A and B are both under test at the same time, the two features are unaware of each other because neither of them have been merged to the <code>develop</code> branch. These means you will have to test against the <code>develop</code> branch again when both of the features are merged to the develop branch anyway. And you have to remember to test this in the future.</li>
<li>If Feature A and B are both tested and approved, but when merged a conflict is identified, both of the developers for both features believe it is not his own fault/job because his feature branch past the test. There is an extra overhead in communication, and sometimes whoever resolving the conflict is frustrated. </li>
</ul>

<hr>

<p>Above is our story. With limited resource, I would like to avoid testing everything everywhere. We are still looking for a better way to cop with this. I would love to hear how other teams handle this kind of situations.</p>
","31","7561","<git><testing><qa><git-flow>"
"3876977","1","Update git branches from master","<p>I'm new to git and now I'm in this situation:</p>

<ul>
<li>I have four branches (master, b1,b2,b3)</li>
<li>after I worked on b1-b3, I realized I have something to change on branch master that should be in all other branches </li>
<li>I changed what I needed in <code>master</code> and... here is my problem:</li>
</ul>

<p>How do I update all other branches with <code>master</code> branch code? </p>
","249","172040","<git><git-branch>"
"3636914","1","How can I see what I am about to push with git?","<p>Is there a way to see what would be pushed if I did a <code>git push</code> command?</p>

<p>What I'm picturing is something like the ""Files Changed"" tab of Github's ""pull request"" feature. When I issue a pull request, I can look and see what will be pulled in if they accept my pull request: <img src=""http://i.stack.imgur.com/YUZlu.png"" alt=""github example of aggregate changes""></p>

<p>Command line is OK, but I'd prefer some sort of GUI (like the screenshot above).</p>
","296","145370","<git>"
"5083224","1","git pull while not in a git directory","<p>Let's say I have a directory, <code>/X/Y</code>, which is a git repository. Is it possible to somehow call a command like <code>git pull</code> from inside <code>/X</code>, but targeting the <code>/X/Y</code> directory?</p>

<p><strong>EDIT:</strong> I guess I was wondering specifically: is it possible to do this using the a git command, but without having to change directories?</p>

<p><strong>NOTE:</strong> I've accepted <a href=""http://stackoverflow.com/questions/5083224/git-pull-while-not-in-a-git-directory/20115526#20115526"">VonC's answer</a> as it's much more elegant than previous options. For people running Git older than 1.8.5, please see <a href=""http://stackoverflow.com/questions/5083224/git-pull-while-not-in-a-git-directory/5083437#5083437"">bstpierre's answer below</a>.</p>
","135","46299","<git>"
"12240154","1","What is the difference between git am and git apply?","<p>Both <code>git am</code> and <code>git apply</code> can be used to apply patches. I fail to see the difference.</p>

<h3>UPDATE</h3>

<p>I see a difference now: <code>git am</code> automatically commits whereas <code>git apply</code> only touches the files but doesn't create a commit. Is that the only difference?</p>
","52","22371","<git><patch>"
"501407","1","Is there a git-merge --dry-run option?","<p>I'm merging in a remote branch that may have a lot of conflicts.  How can I tell if it will have conflicts or not?</p>

<p>I don't see anything like a <code>--dry-run</code> on <code>git-merge</code>.  </p>
","367","90487","<git><git-merge>"
"9834689","1","Comparing two branches in Git?","<p>I have two branches, <code>branch_1</code> and <code>branch_2</code>. </p>

<p>I want to see the differences between the two branches in Git.</p>
","744","466647","<git><git-diff>"
"10909221","1","Why is Github asking for username/password when following the instructions on screen and pushing a new repo?","<p>I'm the owner of an organization on github and just created a repo and tried pushing but I'm running into an issue where it's asking me for my username even though I can SSH just fine:</p>

<pre><code>$ ssh -T git@github.com
Hi Celc! You've successfully authenticated, but GitHub does not provide shell access.
$ git add .
$ git commit -m 'first commit'
[master (root-commit) 3f1b963] first commit
 6 files changed, 59 insertions(+)
 create mode 100644 .gitignore
 create mode 100644 main.js
 create mode 100644 package.json
 create mode 100644 readme.markdown
 create mode 100644 views/index.ejs
 create mode 100644 views/layout.ejs
$ git remote add origin https://github.com/WEMP/project-slideshow.git
$ git push -u origin master
Username for 'https://github.com':
</code></pre>

<p>What am I doing wrong? This has never happened to me before but I recently also upgraded to git 1.7.10.3.</p>
","126","59268","<git><github>"
"7470385","1","Git in Powershell saying 'Could not find ssh-agent'","<p>I have git installed and it works great in the command prompt, but when I open up powershell it gives me this warning:</p>

<pre><code>WARNING: Could not find ssh-agent
</code></pre>

<p>I have pageant running and loaded with my private key. This works in all the gui tools and the command prompt but not in Powershell. </p>

<p>What's going on? </p>
","91","20620","<git><ssh>"
"5104649","1","How to abort an interactive rebase if --abort doesn't work?","<p>I've got myself into a muddle via an interactive rebase, and I now wish to abort it.  (i.e. go back to the point before I was dropped into interactive rebase mode, in my case via <code>git pull --rebase</code>.)  The way to do this seems to be via <code>git rebase --abort</code>, but this doesn't work:</p>

<pre><code>$ git rebase --abort
error: Ref refs/heads/master is at 55b388c141b1485b1acd9e050dbeb0eb90ef2ee7 but
expected b918ac16a33881ce00799bea63d9c23bf7022d67
fatal: Cannot lock the ref 'refs/heads/master'.
Could not move back to refs/heads/master
</code></pre>

<p>How can I get out of interactive rebase mode, and clean up all references to it?  (<code>git reset --hard</code> succeeds, but doesn't drop me out of rebase mode.)</p>
","87","93373","<git><exit><rebase><abort><quit>"
"3878624","1","How do I programmatically determine if there are uncommited changes?","<p>In a Makefile, I'd like to perform certain actions if there are uncommited changes (either in the working tree or the index).  What's the cleanest and most efficient way to do that?  A command that exits with a return value of zero in one case and non-zero in the other would suit my purposes.</p>

<p>I can run <code>git status</code> and pipe the output through <code>grep</code>, but I feel like there must be a better way.</p>
","79","26000","<git>"
"2671296","1","hudson+git FATAL: Could not apply tag","<p>I'm trying to set up hudson with git according to <a href=""http://luhman.org/blog/2009/12/16/installing-hudson-phing-phpunit-and-git-ubuntu"">this article</a>,
but I still get git errors during build:</p>

<pre><code>FATAL: Could not apply tag-PROJECTNAME-ID
...
Caused by: hudson.plugins.git.GitException: Command returned status code 128: 
*** Please tell me who you are.
</code></pre>

<p>running: <code>git config --global user.name</code> shows valid data, <code>.gitconfig</code>  is accessible.</p>

<p>How to correct those errors?</p>
","31","13009","<git><jenkins><continuous-integration><hudson><hudson-plugins>"
"527037","1","git-svn not a git command?","<p>While attempting to get an old svn dump of a project under git control, I ran into an interesting problem.  Whenever I run <code>git svn</code>, I get an error saying it isn't a git command, yet there is documentation for it that I can pull up using <code>git help</code>.  Is there something wrong with my install, or am I just missing something here?</p>

<p>Edit:  I should probably also mention that I am running msysGit version 1.6.1.9.g97c34 under Windows XP, and the error I get is:</p>

<pre>$ git svn 
git: 'svn' is not a
git-command. See 'git --help'.

Did you mean one of these?
        fsck
        show</pre>
","68","33025","<svn><git><git-svn>"
"12258399","1","How to create folder in github repository?","<p>I want to create folder in github repository and add files in that folder. How to achieve this?</p>
","76","107528","<git><github><github-services>"
"19595067","1","git add, commit and push commands in one?","<p>Is there any way to use these three commands in one?</p>

<pre><code>git add .
git commit -a -m ""commit"" (do not need commit message either)
git push
</code></pre>

<p>Sometimes I'm changing only one letter, CSS padding or something. Still, I have to write all three commands to push the changes. There are many projects where I'm only one pusher, so this command would be awesome! </p>
","48","54600","<git>"
"527833","1","How to configure git to avoid accidental git push","<p>After git clone, the config in the new repo looks like:</p>

<pre><code>remote.origin.url=&lt;some url&gt;
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.master.remote=origin
branch.master.merge=refs/heads/master
</code></pre>

<p>Then, I can execute ""git pull"" and ""git push"". But I'm interested in only do ""git pull"", because I want to push into another repo.</p>

<p>One thing I can do is:</p>

<pre><code>git add remote repo-for-push &lt;some other url&gt;
git push repo-for-push master
</code></pre>

<p>But I would like to configure git to use default and distinct repositories for pull and push, i.e:</p>

<pre><code>git pull # pulls from origin
git push # pushes into repo-for-push, avoiding accidental push into the origin
</code></pre>

<p>How can this be configured?
Thanks in advance.</p>

<p>EDIT:<br />
Basically, I want to setup the default push repo to be different from the default fetch/pull repo.</p>
","32","10970","<git>"
"5129598","1","How to link a folder with an existing Heroku app","<p>I have an existing Rails app on GitHub and deployed on Heroku. I'm trying to set up a new development machine and have cloned the project from my GitHub repository. However, I'm confused as to how to link this folder up to Heroku. Originally, I used the ""heroku create"" command, but obviously I don't want to do that since it will create another Heroku instance.</p>
","527","117821","<git><heroku>"
"5129959","1","How do I use git-tfs and idiomatic git branching against a TFS repository?","<h1>How Do I Use git-tfs Idiomatically?</h1>

<ul>
<li><p>The git idiom is to check out branches <em>to the root directory</em> of the repository. Checking out a branch will replace the contents of the directory with the contents of that branch.</p></li>
<li><p>The TFS idiom is to check out <em>each branch in a different directory</em> under the root directory of the repository (even the master or trunk branch). Checking out a branch will place it in a new directory next to the current one.</p></li>
</ul>

<p>Using <a href=""https://github.com/spraints/git-tfs"" rel=""nofollow"">git-tfs</a>, I can clone a TFS repository or branch into a git repository. I want to  <strong>work on a TFS repository with multiple branches in a manner consistent with the git branching idiom</strong>. But I'm not sure what's technically possible or recommended :)</p>

<hr>

<h2>Clone The Whole TFS Repository</h2>

<p>If I clone the whole repository out of TFS</p>

<pre><code>&gt; git tfs clone http://&lt;tfsurl&gt;:8080 $/main
</code></pre>

<p>That would give me a git <code>master</code> containing <em>all</em> the TFS branches as directories.</p>

<pre><code>[master]&gt; dir
  trunk
  feature-logon
  feature-search
  release-0.0.1
</code></pre>

<hr>

<h2>Add a Remote Per TFS Branch</h2>

<p>I don't know if I can (or how to) map a git remote to each TFS branch.</p>

<pre><code>&gt; git init .
[master]&gt; git tfs clone http://&lt;url&gt; $/main/trunk .
</code></pre>

<p>Then</p>

<pre><code>[master]&gt; git checkout -b feature-logon
[feature-logon]&gt; git tfs clone http://&lt;url&gt; $/main/feature-logon .
</code></pre>

<p>I know this is technically incorrect, but I don't know any better without playing (my only TFS repo is very large, experimenting is taking a long time)</p>
","42","5694","<git><tfs><git-branch><git-tfs>"
"8951275","1","How can I make Sublime Text the default editor for Git?","<p>I've been having a problem setting sublime text 2 as the core.editor with git.  I've read through every post I could find addressing the problem, but still nothing is working for me.  I am running windows.</p>

<p>I have done:</p>

<pre><code>git config --global core.editor ""'C:/Program Files/Sublime Text 2/sublime_text.exe'""
</code></pre>

<p>and tried that with various arguments like -m.  When I open my .gitconfig, this is what is in there:</p>

<pre><code>[user]
    name = Spencer Moran
    email = smoran02@gmail.com
[core]
    editor = 'C:/Program Files/Sublime Text 2/sublime_text.exe'
</code></pre>

<p>If I go to git and type:</p>

<pre><code>README.markdown --edit
</code></pre>

<p>the readme file opens in Notepad, not Sublime Text. Does anyone have any idea what I'm doing wrong or how I could fix this?</p>
","143","52455","<git><editor><default><sublimetext><git-config>"
"7539130","1","Git - go to particular revision","<p>I cloned a git repository of a certain project. Can I turn the files to the initial state and when I review the files go to revision 2, 3, 4 ... most recent? I'd like to have an overview of how the project was evolving.</p>
","128","140319","<git><revision><revision-history>"
"5176225","1","Are Git's pack files deltas rather than snapshots?","<p>One of the key differences between Git and most other version control systems is that the others tend to store commits as a series of deltas - changesets between one commit and the next. This seems logical, since it's the smallest possible amount of information to store about a commit. But the longer the commit history gets, the more calculation it takes to compare ranges of revisions.</p>

<p>By contrast, Git stores a <strong>complete snapshot of the whole project in each revision</strong>. The reason this doesn't make the repo size grow dramatically with each commit is each file in the project is stored as a file in the Git subdirectory, named for the hash of its contents. So if the contents haven't changed, the hash hasn't changed, and the commit just points to the same file. And there are other optimizations as well.</p>

<p>All this made sense to me until I stumbled on <a href=""http://git-scm.com/book/en/v2/Git-Internals-Packfiles"">this information about pack files</a>, into which Git puts data periodically to save space:</p>

<blockquote>
  <p>In order to save that space, Git
  utilizes the packfile. This is a
  format where Git will only save the
  part that has changed in the second
  file, with a pointer to the file it is
  similar to.</p>
</blockquote>

<p><strong>Isn't this basically going back to storing deltas? If not, how is it different? How does this avoid subjecting Git to the same problems other version controls systems have?</strong></p>

<p>For example, Subversion uses deltas, and rolling back 50 versions means undoing 50 diffs, whereas with Git you can just grab the appropriate snapshot. Unless git also stores 50 diffs in the packfiles... is there some mechanism that says ""after some small number of deltas, we'll store a whole new snapshot"" so that we don't pile up too large a changeset? How else might Git avoid the disadvantages of deltas?</p>
","51","9255","<git><version-control><internals>"
"2041993","1","How to rename a git repository?","<p><code>git mv</code> will rename a file or directory in a repository. How do I rename the git repository itself?</p>
","118","93529","<git>"
"7539382","1","How can I deploy/push only a subdirectory of my git repo to Heroku?","<p>I have a project that uses <a href=""http://get-serve.com"">Serve</a> and is version controlled using Git. Serve creates an <code>output</code> folder with static files that I want to deploy to Heroku.</p>

<p>I don't want to deploy the Serve project itself since the Heroku Cedar stack doesn't seem too fond of it, but most importantly I want to take advantage of Heroku's great support for static websites.</p>

<p>Is there a way to deploy a subfolder to a git remote?
Should I create a Git repo in the <code>output</code> folder (that sounds wrong) and push that to Heroku?</p>
","46","9290","<git><heroku>"
"5586383","1","How to diff one file to an arbitrary version in Git?","<p>How can I diff a file, say <code>pom.xml</code>, from the master branch to an arbitrary older version in Git?</p>
","151","68425","<git>"
"3882583","1","How to discard local commits in Git?","<p>I'd been working on something, and decided it was completely screwed...after having committed some of it. So I tried the following sequence:</p>

<pre><code>git reset --hard
git rebase origin
git fetch
git pull
git checkout
</code></pre>

<p>At which point I got the message</p>

<pre><code>Your branch is ahead of 'origin/master' by 2 commits.
</code></pre>

<p><strong>I want to discard my local commits</strong>, without having to wipe out my local directory and redownload everything. How can I accomplish that?</p>
","103","63928","<git><git-reset>"
"651038","1","How do you clone a git repository into a specific folder?","<p>Executing the command <code>git clone git@github.com:whatever</code> creates a directory in my current folder named whatever, and drops the contents of the git repo into that folder:</p>

<pre><code>/httpdocs/whatever/public
</code></pre>

<p>My problem is that I need the contents of the git repository cloned into my current directory so that they appear in the proper location for the web server:</p>

<pre><code>/httpdocs/public
</code></pre>

<p>I know how to move the files after I've cloned the repo, but this seems to break git, and I'd like to be able to update just by calling <code>git pull</code>.  How can I do this?</p>
","1037","812451","<git><repository><git-clone>"
"3183064","1","Git vs Mercurial vs SVN","<blockquote>
  <p><strong>Possible Duplicates:</strong><br>
  <a href=""http://stackoverflow.com/questions/1218471/for-home-projects-can-mercurial-or-git-or-other-dvcs-provide-more-advantages-o"">For home projects, can Mercurial or Git (or other DVCS) provide more advantages over Subversion?</a><br>
  <a href=""http://stackoverflow.com/questions/77485/what-are-the-relative-strengths-and-weaknesses-of-git-mercurial-and-bazaar"">What are the relative strengths and weaknesses of Git, Mercurial, and Bazaar?</a>  </p>
</blockquote>



<p>What are some of the differences between these source control system? Which one is the best for a small 2 people project?</p>
","31","36861","<svn><git><mercurial><version-control>"
"10914022","1","How to check out specific version of a submodule using git submodule?","<p>How would I go about adding a git submodule for a specific tag or commit?</p>
","31","21919","<git><version-control>"
"653454","1","How do you make Git ignore files without using .gitignore?","<p>Due to external weird constraints I cannot modify the .gitignore of my repository. Is there a way to ignore files and directories other than modifying a .gitignore? Even if it is a global solution like a global configuration that will be applied to all my repositories.</p>
","58","23709","<git><version-control>"
"9944898","1","Bitbucket: Update a fork to merge changes of master repo?","<p>I am working with a bitbucket git repo I have read-only access to, so I created a fork to work on my features. </p>

<p>Question: How do I update my fork to include changes made to the original repo made by the owner? </p>

<p>On github, it seems one has to do the following, so I suspect it's a similar to this: </p>

<pre><code> $ git remote add upstream git://github.com/octocat/Spoon-Knife.git
 $ git fetch upstream
 $ git merge upstream/master
</code></pre>

<p>I couldn't find any information on this in the <a href=""http://confluence.atlassian.com/display/BITBUCKET/Forking+a+bitbucket+Repository"">Bitbucket Documentation for forking</a></p>
","35","11902","<git><fork><dvcs><bitbucket>"
"2044574","1","Determine if directory is under git control","<p>How can I tell if a given directory is part of a git respository?</p>

<p>(The following is in python, but bash or something would be fine.)</p>

<pre><code>os.path.isdir('.svn')
</code></pre>

<p>will tell you if the current directory is controlled by Subversion. Mercurial and Git just have a .hg/.git at the top of the repository, so for <code>hg</code> I can use</p>

<pre><code>os.system('hg -q stat 2&gt; /dev/null &gt; /dev/null') == 0)
</code></pre>

<p>but <code>git status</code> returns a nonzero (error) exit status if nothing's changed.</p>

<p>Is iterating up the path looking for <code>.git</code> myself the best I can do?</p>
","47","21256","<git>"
"10765321","1","Should I delete a branch after merging it?","<p>After merging a branch, do you delete it from the repository?<br>
However, it's a good practice or not?  </p>

<p>I usually create a lot of branches, since I don't want to break my current release, and I'd wish to delete them to keep things in order.<br>
However, if you work with Assembla or GitHub, your merge requests from old branches will be saved on the site, so if you delete them you'll get an error since it won't be able to fetch them...</p>

<p>Usually how do manage that?</p>
","53","12154","<git><branching-and-merging>"
"26745541","1","Best way to add Gradle support to IntelliJ Project","<p>I have looked around quite a bit and haven't found the best solution to convert an existing IntelliJ project to Gradle. I work in a team environment and we currently share the .ipr file as we have a few build configurations that we track. We will be getting rid of those in favor of Gradle eventually but I can't screw things up too much until the Gradle conversion is done.</p>

<p>Also, our Java source files are located in the root of the src directory instead of src/main/java as is standard.</p>

<p>Is there a way I can add Gradle to my project that won't make me delete and recreate my IntelliJ project and won't screw everyone else up when they do a Git pull?</p>
","46","11742","<java><git><intellij-idea><gradle>"
"6265595","1","How can I peform a `git pull` without re-entering my SSH password?","<p>Is it possible to configure <code>git/ssh</code> so I don't have to enter my passphrase everytime I want to perform a <code>git pull</code> ?   Note that the repo is a private one on github.</p>

<p>Or, alternatively, what would be the best practice to automate code deployment from a private Github repo?</p>

<p><strong>Additional details:</strong> EC2 instance running a public AMI based on Fedora.</p>
","37","31265","<linux><git><ssh><github>"
"12681529","1","In git, is there a way to show untracked stashed files without applying the stash?","<p>If I run <code>git stash -u</code>, I can stash untracked files.  However, said untracked files don't show  up at all with <code>git stash show stash@{0}</code>.  Is there any way to show untracked stashed files without applying the stash?</p>
","36","2957","<git><git-stash>"
"2047465","1","How can I delete a file from git repo?","<p>I have added a file named <code>""file1.txt""</code> to git repo. After that I committed it, added a couple directories called <code>dir1</code> and <code>dir2</code>, and committed them to git repo.  </p>

<p>Now the current repo has <code>""file1.txt""</code>, <code>dir1</code> and <code>dir2</code>.<br>
How can I delete <code>""file1.txt""</code> without affecting others like <code>dir1</code> and <code>dir2</code>?</p>
","691","758109","<git><git-rm>"
"6267180","1","Can I undo a `git clean -fdx`?","<p>I was following the instructions on <a href=""http://pages.github.com/"">making github pages</a>, and forgot to move down into my git sub directory. As a result, I just nuked an entire directory of documents with <code>git clean -fdx</code>. Is there any way I can undo this terrible mistake?</p>
","56","23031","<git><git-clean>"
"23019608","1","Github Commit Syntax to Link a Pull Request/ Issue","<p>I've seen commit messages that refer to a specific issue / pull request.  What is the syntax to include a specific repository's issue or pull request?</p>
","31","9446","<git><github><commit><github-flavored-markdown>"
"2048470","1","git working on two branches simultaneously","<p>I have project with many branches.</p>

<p>I would like to work on <strong>several</strong> branches simultaneously without switching back and forth with <code>git checkout</code>.</p>

<p>Is there any way I can do that besides copying whole repository somewhere else?</p>
","67","16450","<git><branch>"
"17302977","1","How To Launch Git Bash from DOS Command Line?","<p>I've got what I'm hoping is a simple question, but I haven't been able to find the answer yet.  I would like to launch Git Bash from a DOS batch file.  Here is what I tried so far:</p>

<p>1) Launched Git Bash from Win 7 Start button
 2) Used  to identify the process as ""sh.exe""
 3) Launched sh.exe from batch file using start command</p>

<pre><code>start sh.exe
</code></pre>

<p>However, this does not launch the full Git Bash environment.  Git Bash usually has ""MINGW32"" in the title bar, but sh.exe has a full path to ... Git\bin\sh.exe.  It feels to me like there are some overlays or dependencies that I'm not aware of possibly, that also need to be loaded (pulled in? imported?).</p>

<p>This was one of the top results I found through Googling, but it doesn't make complete sense to me and I'm not sure if it applies exactly to my situation:</p>

<p><a href=""http://stackoverflow.com/questions/6127063/running-git-from-windows-cmd-line-where-are-key-files"">Running git from Windows Cmd line: Where are key files?</a></p>

<p>I'm about 7-years-old in the world of DOS batch scripting, so be gentle.</p>

<p>Any help is appreciated.  Thanks in advance.</p>
","39","38851","<windows><git><batch-file><cmd><command>"
"6269927","1","How can I list all tags in my Git repository by the date they were created?","<p>I need some way to list all tags in my system by the date they were created but am not sure if I can get that data via git-log. Ideas?</p>
","56","14923","<git>"
"6270193","1","Multiple working directories with Git?","<p>I'm not sure if this is something supported by Git, but in theory it seems like it should work to me.</p>

<p>My workflow often involves my editing of files in multiple branches simultaneously. In other words, I often want to open a few files in one branch is while I edit the contents of another file in another branch.</p>

<p>My typical solution to this is to make two checkouts, but it's a shame I can't share branches and refs between them. What I would like is to just have two working directories managed by the same .git folder.</p>

<p>I'm aware of local git clone solutions (the default, which is to hardlink shared objects, and the --shared option, which sets up an alternate object store with the original repo), but these solutions only cut down on disk space usage, and especially in the case of --shared, seem fraught with peril.</p>

<p>Is there a way to use one .git folder, and have two working directories backed by it? Or is Git hardcoded to have just one working directory checked out at any time?</p>
","121","26409","<git>"
"746151","1","Add svn repo to existing git repo?","<p>I know you can track a svn repo with git by using git svn init, however that is for if you want to create a brand new repo.</p>

<p>My situation is that I currently already have an existing git repo and want to track the trunk of a svn repo by making it a remote branch in my current git repo.</p>

<p>Any suggestions?</p>
","35","15311","<svn><git><git-svn>"
"746684","1","How to search through all Git and Mercurial commits in the repository for a certain string?","<p>I have a Git repository with few branches and dangling commits. I would like to search all such commits in repository for a specific string.</p>

<p>I know how to get a log of all commits in history, but these don't include branches or dangling blobs, just HEAD's history. I want to get them all, to find a specific commit that got misplaced.</p>

<p>I would also like to know how to do this in Mercurial, as I'm considering the switch.</p>
","261","116060","<git><search><version-control><mercurial><dvcs>"
"747075","1","How to git-svn clone the last n revisions from a Subversion repository?","<p><strong>Problem</strong></p>

<p>How do you create a shallow copy with git-svn from a Subversion repository, i.e. how do you pull only the last three revisions?</p>

<p>The <code>git clone</code> command can get the last n revisions from a Git repository if you use the option <code>--depth</code>, i.e. you get a shallow copy of the repository. Example:</p>

<pre><code>git clone --depth 3 git://some/repo myshallowcopyrepo
</code></pre>

<p>Is there a similar option for git-svn?</p>

<p><strong>My discoveries so far</strong></p>

<p>So far I've only found the -rN option where N is the revision to pull. Example:</p>

<pre><code>git svn clone -rN svn://some/repo
</code></pre>

<p>According to the documentation there is the possibility to use -r$REVNUMBER:HEAD. I tried the following to get the last 3 revisions which returned an error message.</p>

<pre><code>$ git svn clone --prefix=svn/ -s -rHEAD~3:HEAD http://some/svn/repo .
revision argument: HEAD~3:HEAD not understood by git-svn
</code></pre>

<p>So I replaced HEAD~3 with the actual number of the third but last revision 534. That worked, but that requires me to first figure out the revision number of the third but last commit.</p>

<pre><code>$ git svn clone --prefix=svn/ -s -r534:HEAD http://some/svn/repo .
</code></pre>

<p><strong>Documentation</strong></p>

<p><a href=""http://git-scm.com/docs/git-clone"">git-clone</a></p>

<p><a href=""http://git-scm.com/docs/git-svn"">git-svn</a></p>
","263","100143","<git><svn><git-svn><git-clone><svn-checkout>"
"5587626","1","Git merging within a line","<p><strong>Preamble</strong></p>

<p>I'm using git as a version control system for a paper that my lab is writing, in LaTeX. There are several people collaborating.</p>

<p>I'm running into git being stubborn about how it merges. Let's say two people have made single-word changes to a line, and then attempt to merge them. Though git diff --word-diff seems capable of SHOWING the difference between the branches word-by-word, git merge seems unable to perform the merge word-by-word, and instead requires a manual merge.</p>

<p>With a LaTeX document this is particularly annoying, as the common habit when writing LaTeX is to write a full paragraph per line and just let your text editor handle word wrapping when displaying for you. We are working around for now by adding a newline for each sentence, so that git can at least merge changes on different sentences within a paragraph. But it will still get confused about multiple changes within a sentence, and this makes the text no longer wrap nicely of course.</p>

<p><strong>The Question</strong></p>

<p>Is there a way to git merge two files ""word by word"" rather than ""line by line""?</p>
","42","2514","<git><version-control><latex>"
"3701404","1","List all commits for a specific file","<p>Is there a way to list all commits that changed a specific file?</p>
","304","88390","<git><commit>"
"5277467","1","How can I clean my .git folder? Cleaned up my project directory, but .git is still massive","<p>My .git/objects in my rails project directory is still massive, after deleting hundreds of megabytes of accidentally generated garbage.    </p>

<p>I have tried <code>git add -A</code>, as well as other commands to update the index and remove nonexistent files.  I gather, perhaps incorrectly, that the files with two character names in the directory are blobs.  I have tried rolling back to previous commits, but without any luck.  </p>

<blockquote>
  <p>What can I do to clean this directory?</p>
</blockquote>
","32","15087","<git>"
"13321556","1","Difference between Git and GitHub","<p>I have recently added a new project to Git using Eclipse. But in my GitHub account this project does not appear. </p>

<p>Why do they have the same account information and different repositories? Isn't Git and GitHub the same thing?</p>
","88","85433","<git><github><merge>"
"3580013","1","Should I use past or present tense in git commit messages?","<p>I <a href=""http://progit.org/book/ch5-2.html"">read once</a> that git commit messages should be in the imperative present tense, e.g. ""Add tests for x"". I always find myself using the past tense, e.g. ""Added tests for x"" though, which feels a lot more natural to me.</p>

<p><a href=""http://github.com/jquery/jquery/commit/c5382ad7c118ca54dde630b6c7146f1c3b6afb80"">Here's a recent John Resig commit</a> showing the two in one message:</p>

<blockquote>
  <p>Tweak some more jQuery set results in the manipulation tests. Also fixed the order of the expected test results. </p>
</blockquote>

<p>Does it matter? Which should I use?</p>
","237","34341","<git><commit-message>"
"20359936","1","Import an existing git project into GitLab?","<p>I have an account of a Gitlab installation where I created the repository ""ffki-startseite""</p>

<p>Now I want to clone the repository <code>git://freifunk.in-kiel.de/ffki-startseite.git</code> into that repository with all commits and branches, so I can start working on it in my own scope.</p>

<p>How can I import it?</p>
","33","38252","<git><gitlab>"
"5970879","1","git rebase: ""error: cannot stat 'file': Permission denied""","<p>I'm using git, and made a small commit followed by a large one.  I decided to use <code>git rebase</code> to squash the two commits together before pushing them.  (I've never done this before.)</p>

<p>So I did:</p>

<p><code>git rebase -i HEAD~2</code></p>

<p>This gave me my editor, where I chose to pick the earlier commit and squash the later one.  When I saved, git said:</p>

<blockquote>
  <p>error: cannot stat '<em>filename</em>': Permission denied</p>
  
  <p>Could not apply <em>sha1 for later commit</em>... <em>initial line of text for that commit</em></p>
</blockquote>

<p>Now:</p>

<ul>
<li>Neither commit appears when I do <code>git log</code>.</li>
<li><code>git status</code> tells me I'm ""Not currently on any branch.""</li>
<li>One file is listed as modified and in the index, and two files are listed as untracked.  My first commit had just one file (I think), and my second commit had a good dozen.</li>
</ul>

<p>What happened!?  How do I fix it?</p>
","94","47107","<git><git-rebase>"
"5970889","1","Why does git revert complain about a missing -m option?","<p>So I'm working on a project with other people, and there's multiple github forks being worked on. Someone just made a fix for a problem and I merged with his fork, but then I realized that I could find a better solution. I want to revert the commit I just made. I tried doing this with <code>git revert HEAD</code> but it gave me this error: </p>

<pre>fatal: Commit &lt;SHA1> is a merge but no -m option was given.</pre>

<p>What does that mean? When I merged and committed, I did use the -m option to say ""Merged with &lt;username>"".</p>

<p>What am I doing wrong here?</p>
","47","29760","<git><github><git-revert>"
"15465436","1","Git - how to handle symlinks","<p>What is the correct way to handle symlinks in git?</p>

<p>I have the following structure:</p>

<pre><code>Vendors
  Module A
  Module B
  Module C
App
 Code
   Modules
     Core Module 1
     Core Module 2
     Module A (symlinked to vendors)
     Module B (symlinked to vendors)
     Module C (symlinked to vendors)
</code></pre>

<p>There is a a main App directory which contains all of the core code in the application.  Additionally there is a vendor directory that contains modules which get symlinked into the main app directory and therefore integrated.</p>

<p>Importantly, both the vendor directory and the main app directory are both versioned in the same repository.  </p>

<p>Therefore, should i let git keep storing the symlinks, or find a way to have it ignore symlinks?</p>
","34","35130","<git>"
"3580608","1","""git diff"" does nothing","<p>I presume this is a configuration error somewhere, but I can't figure out where.  Regular git commands appear to work fine, but ""git diff"" does nothing.  To be safe, I removed external diff tools from my .gitconfig file.  This was installed via MacPorts and is the lates version (1.7.2.2).</p>

<p>What I see is that when I run ""git diff"" from my workspace, it simply exits, doing nothing.</p>

<pre><code>$ git --version
git version 1.7.2.2
$ git diff
$ 
</code></pre>

<p>If I back up one directory, out of my root workspace, typing ""git diff"" gives me this:</p>

<pre><code>$ git diff
usage: git diff [--no-index] &lt;path&gt; &lt;path&gt;
</code></pre>

<p>This may be expected behavior since I'm not under a git repository.</p>

<p>Any ideas on what I can do to troubleshoot this?</p>
","47","22045","<git><git-diff>"
"4254389","1","Git: ""Corrupt loose object""","<p>Whenever I pull from my remote, I get the following error about compression. When I run the manual compression, I get the same:</p>

<pre><code>$ git gc
error: Could not read 3813783126d41a3200b35b6681357c213352ab31
fatal: bad tree object 3813783126d41a3200b35b6681357c213352ab31
error: failed to run repack
</code></pre>

<p>Does anyone know, what to do about that?</p>

<p>From cat-file I get this: </p>

<pre><code>$ git cat-file -t 3813783126d41a3200b35b6681357c213352ab31
error: unable to find 3813783126d41a3200b35b6681357c213352ab31
fatal: git cat-file 3813783126d41a3200b35b6681357c213352ab31: bad file
</code></pre>

<p>And from git fsck I get this ( don't know if it's actually related):</p>

<pre><code>$ git fsck
error: inflate: data stream error (invalid distance too far back)
error: corrupt loose object '45ba4ceb93bc812ef20a6630bb27e9e0b33a012a'
fatal: loose object 45ba4ceb93bc812ef20a6630bb27e9e0b33a012a (stored in .git/objects/45/ba4ceb93bc812ef20a6630bb27e9e0b33a012a) is corrupted
</code></pre>

<p>Can anyone help me decipher this?</p>
","157","79978","<git><version-control>"
"3581143","1","How long should I keep my fork projects on github?","<p>When I have a feature request on a library in github, I would either</p>

<ul>
<li>try to contact the author</li>
<li>and/or implement it myself on a local copy, and when I am done, fork the project and push my changes.</li>
</ul>

<p>More often than not, the original authors are happy to see the enhancements, and they'll either pull them as is, or merge them manually after some modifications.</p>

<p>The question is, what should I do with my fork projects after my commits have been accepted by the upstream? If I am not going to make any further updates, should I delete the repository? Or, should I keep it around for historical interest?</p>

<p>github does not really indicate whose copy is the ""definitive"" repository, so my inactive forks may distract other people from finding the right copy. In fact, I just got a pull request form someone, which was also accepted at the upstream. </p>
","66","2912","<git><github>"
"10657315","1","Git merge left HEAD marks in my files","<p>I tried to merge a file in the command line using Git, when an error message appeared telling me the merge was aborted. </p>

<p>I thought that was the end of it, but then I realized there are gitmarks in my files. Like so:</p>

<pre><code>start =
    expression

validchar = 
    [0-9a-zA-Z_?!+\-=@#$%^&amp;*/.]

integer = 
&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
    digits:[0-9]+
        { return digits.join(""""); }
=======
    sign:""-""* digits:[0-9]+
        { return sign + digits.join(""""); }
&gt;&gt;&gt;&gt;&gt;&gt;&gt; gh-pages
</code></pre>

<p>The files have been edited not by me and show lines inserted with: </p>

<ul>
<li>HEAD after less than signs (<code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code>)</li>
<li>lines of changed code </li>
<li>a string of equals signs (<code>=======</code>)</li>
<li>the new version of the code</li>
<li>another line starting with greater than signs and the name of the branch (<code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; gh-pages</code>)</li>
</ul>

<p>What's worse is that the file contents are no longer in order. Does anyone know how I get those files back to normal, and the changes I made in the gh-branch merged into the master branch?</p>
","31","14488","<git><git-merge><merge-conflict-resolution><git-conflict-resolution>"
"2233590","1","Is there a way to make git remember the password for WebDAV remotes?","<p>I'm working with Git pushing changes to a repository shared over HTTP / WebDAV, and Git prompts for a password for every operation that accesses the HTTP remote. Is there any way to make Git cache the password / have the remote server not prompt me?</p>

<p>The remote webserver should be an Apache and could possibly be reconfigured if necessary.</p>
","50","24263","<git><passwords>"
"4166019","1","How can I change which commit master points to in git?","<p>In git, I've been making commits onto the master branch, when really I should have been working on a feature branch. I want to change this so that master is back to where it started, and what was on master is now on a new branch. Basically, my commit history looks like this:</p>

<pre><code>A -- B -- C -- D -- E
          |         |
          |       master
     origin/master
</code></pre>

<p>And I want it to look like this:</p>

<pre><code>        master
          |
A -- B -- C -- D -- E
          |         |
          |       new_branch
     origin/master
</code></pre>

<p>How can I change where master points?</p>
","43","13828","<git>"
"1722807","1","git: convert ""git"" urls to ""http"" urls","<p>I'm working behind an http proxy. I'm trying to clone Android's source tree using their ""repo"" tool. </p>

<p>This tool insists on using ""<code>git://</code>"" URLs, even though ""<code>http://</code>"" URLs also work. This results in me not being able to download the source.</p>

<p>Is it possible to force <code>git</code> to always use <code>http</code> URLs?</p>

<p>Thanks.</p>

<p><strong><em>Edit:</em></strong> my http_proxy is configured correctly. For example, this works:</p>

<pre><code>git clone http://android.git.kernel.org/platform/manifest.git
</code></pre>

<p>But this doesn't (errno=Connection timed out):</p>

<pre><code>git clone git://android.git.kernel.org/platform/manifest.git
</code></pre>

<p>So <a href=""http://stackoverflow.com/questions/128035/how-do-i-pull-from-a-git-repository-through-an-http-proxy/397642#397642"">this answer</a> does not really help me.</p>
","79","36769","<git><http><proxy>"
"6535362","1","gitignore after commit","<p>I have a git repository hosted on Github. After committing many files, I am realizing that I need to create <code>.gitignore</code> and exclude <code>.exe</code>, <code>.obj</code> files.</p>

<p>However, will it automatically remove these committed files from the repository. Is there any way to force that?</p>
","102","34153","<git><github><gitignore>"
"15467507","1","Trying to commit Git files but getting :: fatal: LF would be replaced by CRLF in <some file in repo>","<p>When I try to commit some changed files, I get the following error message with TortoiseGit</p>

<p><code>fatal: LF would be replaced by CRLF in &lt;some file in the repo&gt;</code></p>

<p>Now, before I get the usual <code>LF vs CRLF</code> answers, I know and understand what the debate is about. Secondly, I've also set my global settings to:</p>

<p><code>core.autocrlf true</code></p>

<p>Third, <a href=""https://gist.github.com/PureKrome/5184077"">I've got a <code>.gitattributes</code> file</a>.</p>

<p>So I -want- to make sure or files are forced to have <code>CRLF</code>.</p>

<p>What I don't understand is that it's saying <code>FATAL</code> and blocking me from continuing. A Warning? Sure! Do I know what I'm trying to do? I do! </p>

<p><strong>I just want it to convert silently and STFU</strong>.</p>

<p>Alternatively, if it's forced to BLOCK me, is there a way I can update all files in the repo to be <code>CRLF</code>, so this warning can get lost?</p>

<p>These repo's are private, so they will never be developed outside of Windows + Visual Studio. </p>

<p>Can anyone please help without denigrating this thread into a <code>autocrlf TRUE</code> vs <code>autocrlf FALSE</code> religious war.</p>
","34","28457","<windows><visual-studio><git>"
"3639115","1","Reverting to a specific commit based on commit id with Git?","<p>With <code>git log</code>, I get a list of commits that I have made so far. </p>

<pre><code>commit f5c5cac0033439c17ebf905d4391dc0705dbd5f1
Author: prosseek 
Date:   Fri Sep 3 14:36:59 2010 -0500

    Added and modified the files.

commit c14809fafb08b9e96ff2879999ba8c807d10fb07
Author: prosseek 
Date:   Tue Aug 31 08:59:32 2010 -0500

    Just simple test for core.editor.

... etc ...
</code></pre>

<ul>
<li><p>How can I revert it back to a specific commit? For example, what should I do if I want to go back to <code>commit c14809fafb08b9e96ff2879999ba8c807d10fb07</code>?</p></li>
<li><p>Is there any other/better way to go back to a specific commit with Git? For example, can I put some label of each commit to get it back with the label?</p></li>
</ul>
","113","150868","<git>"
"3639342","1","What's the difference between ""git reset"" and ""git checkout""?","<p>I've always thought of <code>git reset</code> and <code>git checkout</code> as the same, in the sense that both bring the project back to a specific commit. However, I feel they can't be exactly the same, as that would be redundant. What is the actual difference between the two? I'm a bit confused, as the svn only has <code>svn co</code> to revert the commit. </p>

<h3>ADDED</h3>

<p>The <a href=""http://marklodato.github.com/visual-git-guide/"">following diagram</a> explains the difference, albeit in an either possibly oversimplified or incorrect manner. What do you think? Is it wrong or overly simplified?</p>

<p><img src=""http://i.stack.imgur.com/RPeKg.png"" alt=""http://a.imageshack.us/img192/5440/screenshot20100903at416.png""></p>

<h3>ADDED 2</h3>

<p>VonC and Charles explained the differences between <code>git reset</code> and <code>git checkout</code> really well. My current understanding is that <code>git reset</code> reverts all of the changes back to a specific commit, whereas <code>git checkout</code> more or less prepares for a branch. I found the following two diagrams quite useful in coming to this understanding:</p>

<p><img src=""http://i.stack.imgur.com/C4BCo.png"" alt=""http://a.imageshack.us/img651/1559/86421927.png"">
<img src=""http://i.stack.imgur.com/Tiv4H.png"" alt=""http://a.imageshack.us/img801/1986/resetr.png""></p>

<h3>ADDED 3</h3>

<p>From <a href=""http://think-like-a-git.net/sections/rebase-from-the-ground-up/using-git-cherry-pick-to-simulate-git-rebase.html"">http://think-like-a-git.net/sections/rebase-from-the-ground-up/using-git-cherry-pick-to-simulate-git-rebase.html</a>, checkout and reset can emulate the rebase. </p>

<p><a href=""http://i.stack.imgur.com/EYijy.png""><img src=""http://i.stack.imgur.com/EYijy.png"" alt=""enter image description here""></a></p>

<pre><code>git checkout bar 
git reset --hard newbar 
git branch -d newbar 
</code></pre>

<p><a href=""http://i.stack.imgur.com/6F3ZK.png""><img src=""http://i.stack.imgur.com/6F3ZK.png"" alt=""enter image description here""></a></p>
","241","58189","<git><git-checkout><git-reset>"
"1783405","1","Checkout remote Git branch","<p>I am trying to checkout a remote branch:</p>

<p>Somebody pushed a branch called <code>test</code> with <code>git push origin test</code> to a shared repository. I can see the branch with <code>git branch -r</code>. But how can I get this branch?</p>

<ul>
<li><p><code>git checkout test</code> does nothing</p></li>
<li><p><code>git checkout origin/test</code> does something, but <code>git branch</code> says <code>* (no branch)</code>. I am on no branch?</p></li>
</ul>

<p>How do I share branches via a public repository?</p>
","3145","1975277","<git><git-checkout><remote-branch>"
"10710250","1","Converting Mercurial folder to a Git repository","<p>I don't have a huge experience with Mercurial, I'm mostly a Git guy.</p>

<p>I would love to mirror a specific Mercurial folder/file in a git Repository. What I'm actually trying to do is to export the history of a file from a Mercurial repository to Git and being able to keep this in sync with future commits.</p>

<p>Do you have any suggestion on how to proceed? I believe that the way to go should be to get the history of the Mercurial patch, periodically export every single commit as a patch and apply the Mercurial patches to the Git repository.</p>
","88","21174","<git><mercurial>"
"8801729","1","Is it possible to have different git config for different projects","<p>.gitconfig is usually stored in the user.home directory</p>

<p>I use a different identity to work on projects for CompanyA and something else for CompanyB (primarily the name / email). How can I have 2 different git configurations so that my check-ins don't go with the name / email.</p>
","42","10484","<git>"
"3640764","1","Can I recover branch after its deletion in git?","<p>If I run <code>git branch -d XYZ</code> to delete branch 'XYZ', is there a way to recover the branch. In other words, is there a way to go back as if I didn't run the branch delete command?</p>
","427","88873","<git><branch><git-branch>"
"11168141","1","Find which commit is currently checked out in Git","<p>I'm in the middle of a <code>git bisect</code> session. </p>

<p>What's the command to find out which commit (SHA1 hash) I am currently on? <code>git status</code> does not provide this. </p>

<p>Edit: I guess calling <code>git log</code> and looking at first entry works? </p>
","40","15148","<git>"
"4255865","1","git push to multiple repositories simultaneously","<p>How can I make <code>git push</code> to push not only to <code>origin</code> but also another remote repository?</p>

<p>as <code>git push</code> is only an alias for <code>git push origin</code>, can I alias git push to push to 2 remote repositories at once (with just that one command)?</p>

<p>I’m not looking for a non-git script here but would like to set this up for my local repository in git.</p>

<p>When I tried it with post-push scripts I failed.</p>
","65","25937","<git><version-control><dvcs>"
"1725708","1","git rebase interactive: squash merge commits together","<p>I wanted to have a simple solution to squash two merge commits together during an interactive rebase.</p>

<p>My repository looks like:</p>

<pre><code>   X --- Y --------- M1 -------- M2 (my-feature)
  /                 /           /
 /                 /           /
a --- b --- c --- d --- e --- f (stable)
</code></pre>

<p>That is, I have a <code>my-feature</code> branch that has been merged twice recently, with no real commits in between. I don't just want to rebase the <code>my-feature</code> branch since it is a published branch of its own, I just want to squash together the last two merge commits into one (haven't published those commits yet)</p>

<pre><code>   X --- Y ---- M (my-feature)
  /            /
 /            /
a --- ... -- f (stable)
</code></pre>

<p>I tried:</p>

<pre><code>git rebase -p -i M1^
</code></pre>

<p>But I got:</p>

<pre><code>Refusing to squash a merge: M2
</code></pre>

<p>What I finally did is:</p>

<pre><code>git checkout my-feature
git reset --soft HEAD^  # remove the last commit (M2) but keep the changes in the index
git commit -m toto      # redo the commit M2, this time it is not a merge commit
git rebase -p -i M1^    # do the rebase and squash the last commit
git diff M2 HEAD        # test the commits are the same
</code></pre>

<p>Now, the new merge commit is not considered a merge commit anymore (it only kept the first parent). So:</p>

<pre><code>git reset --soft HEAD^               # get ready to modify the commit
git stash                            # put away the index
git merge -s ours --no-commit stable # regenerate merge information (the second parent)
git stash apply                      # get the index back with the real merge in it
git commit -a                        # commit your merge
git diff M2 HEAD                     # test that you have the same commit again
</code></pre>

<p>But this can get complicated if I have many commits, do you have a better solution ?
Thanks.</p>

<p>Mildred</p>
","35","15733","<git><merge><interactive><rebase><squash>"
"6441902","1","Undo a Git commit after push using reverse patch?","<p>I've pushed a commit and I want to revert changes introduced by this commit by applying and committing a reversed patch. How do I do it? </p>
","89","65269","<git>"
"1856499","1","Differences between git remote update and fetch?","<p>Is <code>git remote update</code> the equivalent of <code>git fetch</code>?</p>
","120","47979","<git><git-remote><git-fetch>"
"3713103","1","Best code review tool for GIT","<p>Is there a an open source or free code review tool that works best with GIT?</p>

<ol>
<li><p>Have tried gerrit but is there a better open source or free code review tool?</p></li>
<li><p>Is there a code review that is capable of showing changes in the web before the user commits to the local clone? Does ReviewBoard or any other tools have this feature?</p></li>
</ol>
","38","30010","<git><code-review><commit>"
"1862423","1","How to tell which commit a tag points to in Git?","<p>I have a bunch of unannotated tags in the repository and I want to work out which commit they point to. Is there a command that that will just list the tags and their commit SHAs? Checking out the tag and looking at the HEAD seems a bit too labourious to me.</p>

<h2>Update</h2>

<p>I realised after I went through the responses that what I actually wanted was to simply look at the history leading up to the tag, for which <code>git log &lt;tagname&gt;</code> is sufficient. </p>

<p>The answer that is marked as answer is useful for getting a list of tags and their commits, which is what I asked. With a bit of shell hackery i'm sure it's possible to transform those into SHA+Commit message.</p>
","203","66079","<git>"
"6178401","1","How can I debug git/git-shell related problems?","<p>How can I have some debug information regarding git/git-shell? </p>

<p>I had a problem, that <code>user1</code> could clone a repository without problem, while <code>user2</code> could clone only an empty one. I had set <code>GIT_TRACE=1</code>, but nothing useful was told.</p>

<p>Finally, after a long trial and error, it turned out that it was a permission problem on a file. An appropriate error message could short-circuit this problem.</p>
","40","26020","<git>"
"3796927","1","How to `git clone` including submodules?","<p>I'm trying to put a submodule into a repo.  </p>

<p>The problem is that when I clone the parent repo, the submodule folder is entirely empty.</p>

<p>Is there any way to make it so that 'git clone parent' actually puts data in the submodule folder?</p>

<p>example: <a href=""http://github.com/cwolves/sequelize/tree/master/lib/"">http://github.com/cwolves/sequelize/tree/master/lib/</a></p>

<p><code>nodejs-mysql-native</code> is pointing at an external git, but when I checkout the <code>sequelize</code> project, that folder is empty...</p>
","880","243948","<git><git-submodules>"
"8728093","1","How do I ""un-revert"" a reverted Git commit?","<p>Given a change that has been committed using <code>commit</code>, and then reverted using <code>revert</code>, what is the best way to then undo that revert?</p>

<p>Ideally, this should be done with a new commit, so as to not re-write history.</p>
","127","52629","<git><undo><revert>"
"4278601","1","What of Eclipse project .metadata can I safely ignore in Git/Mercurial?","<p>We have the code for an Eclipse RCP application in an Eclipse workspace containing multiple Java projects. We are using Mercurial with a simple .hgignore just *.class (but the same issue would pertain to Git).</p>

<p>Even a small change to the code can result in many of the files in .metadata getting changed. </p>

<p>I'd like to exclude some or all of the .metadata from version control. If we exclude it completely, the workspace is lost.</p>

<p>Does anyone know what we can safely exclude? Alternatively, how can we recreate it if we pull the code down to a fresh computer?</p>
","33","30353","<java><eclipse><git><mercurial><rcp>"
"3797907","1","How to remove unused objects from a git repository?","<p>I accidentally added, committed and pushed a huge binary file with my very latest commit to a Git repository.</p>

<p>How can I make Git remove the object(s) that was/were created for that commit so my <code>.git</code> directory shrinks to a sane size again?</p>

<p><strong>Edit</strong>: Thanks for your answers; I tried several solutions. None worked. For example the one from GitHub removed the files from the history, but the <code>.git</code> directory size hasn't decreased:</p>

<pre><code>$ BADFILES=$(find test_data -type f -exec echo -n ""'{}' "" \;)

$ git filter-branch --index-filter ""git rm -rf --cached --ignore-unmatch $BADFILES"" HEAD
Rewrite 14ed3f41474f0a2f624a440e5a106c2768edb67b (66/66)
rm 'test_data/images/001.jpg'
[...snip...]
rm 'test_data/images/281.jpg'
Ref 'refs/heads/master' was rewritten

$ git log -p # looks nice

$ rm -rf .git/refs/original/
$ git reflog expire --all
$ git gc --aggressive --prune
Counting objects: 625, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (598/598), done.
Writing objects: 100% (625/625), done.
Total 625 (delta 351), reused 0 (delta 0)

$ du -hs .git
174M    .git
$ # still 175 MB :-(
</code></pre>
","48","27310","<git><file><object><binary>"
"1955985","1","What does the caret (^) character mean?","<p>I saw an <a href=""http://stackoverflow.com/questions/953481/restore-a-deleted-file-in-a-git-repo/1113140#1113140"">answer to a question</a> here that helps restore a deleted file in git.</p>

<p>The solution was</p>

<pre><code>git checkout &lt;deleting_commit&gt;^ -- &lt;deleted_file_path&gt;
</code></pre>

<p>What does the caret character (<code>^</code>) do? I’ve seen it elsewhere doing very useful things in git. It’s magical. Someone please spoil it for me and tell me what it does?</p>
","72","13410","<git>"
"8904327","1","Case sensitivity in Git","<p>I've run into a problem with git. Basically I set to false <code>core.ignorecase</code> because I wanted to change the case of the names of some folders (since I'm under OSX with a case-insensitive filesystem, the changes weren't shown otherwise). When I pulled my data, I've noticed that now every renamed folder appears twice on the repository, with both the old and the new name. I don't know what to do to remove the old folders since they don't appear locally (I've try to set <code>core.ignorecase</code> to true again but it isn't helping).</p>
","61","32226","<git><case-sensitive>"
"3801321","1","Git: list only ""untracked"" files (also, custom commands)","<p>Is there a way to use a command like <code>git ls-files</code> to show only untracked files?</p>

<p>The reason I'm asking is because I use the following command to process all deleted files:</p>

<pre><code>git ls-files -d | xargs git rm
</code></pre>

<p>I'd like something similar for untracked files:</p>

<pre><code>git some-command --some-options | xargs git add
</code></pre>

<p>I was able to find the <code>-o</code> option to <code>git ls-files</code>, but this isn't what I want because it also shows ignored files.  I was also able to come up with the following long and ugly command:</p>

<pre><code>git status --porcelain | grep '^??' | cut -c4- | xargs git add
</code></pre>

<p>It seems like there's got to be a better command I can use here.  And if there isn't, how do I create custom git commands?</p>
","147","56782","<git><git-status><git-rm><git-stage><git-ls-files>"
"6557467","1","Can git ignore a specific line?","<p>I'm using git to sync to phonegap while testing on the phone's native browser. As such I have the following line:</p>

<pre><code>var isPhoneGap = false;
</code></pre>

<p>Obviously I change this when building, but is there any way I can set up git to ignore this one line or do I have to go and put it in its own file and ignore it that way?</p>

<p>I'm using Gitx and the terminal on OSX 10.6.</p>
","52","10539","<git><gitx>"
"1786027","1","How to view file history in Git?","<p>With Subversion I could use TortoiseSVN to view the history/log of a file.</p>

<p>How can I do this with Git? </p>

<p>Just looking for history record for a particular file, and then the ability to compare the different versions.</p>
","87","91329","<git><timeline><git-diff><git-log><revision-history>"
"10712555","1","gitignore all files of extension in directory","<p>Is there a way to ignore all files of a type in a directory?</p>

<p><code>**</code> is apparently meaningless to git, so this doesn't work:</p>

<pre><code>/public/static/**/*.js
</code></pre>

<p>The idea is to match arbitrary nested folders.</p>
","46","38159","<git><gitignore>"
"20413459","1","fatal: Not a git repository (or any of the parent directories): .git","<p>When I tried to push an existing repository on github.com, and it when I entered the command the website prompted me to put into the terminal, I got this error message                 fatal: </p>

<pre><code>Not a git repository (or any of the parent directories): .git
</code></pre>

<p>If anyone could help me with this, then that would be great, thanks.</p>
","82","165261","<git>"
"6459080","1","How can I undo a `git commit` locally and on a remote after `git push`","<p>I have performed <code>git commit</code> followed by a <code>git push</code>.  How can I revert that change on both local and remote repositories?</p>

<pre><code>$ git log
commit 364705c23011b0fc6a7ca2d80c86cef4a7c4db7ac8
Author: Michael Silver &lt;Michael Silver@gmail.com&gt;
Date:   Tue Jun 11 12:24:23 2011 -0700
</code></pre>
","154","66479","<git><git-push><git-commit>"
"6538283","1","Get url of current path in Terminal SSH","<p>I am having trouble using git on my own server. I am having trouble where I add the origin path (remote add) as I am entering the wrong url. By finding out the correct path to the .git repository on my server, I should be able to enter that into <code>remote add</code> and it should now find the git repository. So, what I would like to know is how can you get the current path of the folder you are browsing via SSH?</p>

<p>Thanks</p>
","38","41345","<git><ssh><terminal>"
"6031214","1","Git - How to use .netrc file on windows to save user and password","<p>Is it possible to use a .netrc file on windows when I'm using Git to clone a remote repository with http and user - password?</p>
","148","67651","<windows><git><authentication>"
"15772134","1","Can I delete a git commit but keep the changes","<p>In one of my development branches, I made some changes to my codebase. Before I was able to complete the features I was working on, I had to switch my current branch to master to demo some features. But just using a ""git checkout master"" preserved the changes I also made in my development branch, thus breaking some of the functionality in master. So what I did was commit the changes on my development branch with a commit message ""temporary commit"" and then checkout master for the demo.</p>

<p>Now that I'm done with the demo and back to work on my development branch, I would like to remove the ""temporary commit"" that I made while still preserving the changes I made. Is that possible?</p>
","157","37663","<git>"
"8358035","1","What's the difference between Git Revert, Checkout and Reset?","<p>I am trying to learn how to restore or rollback files and projects to a prior state, and don't understand the difference between <code>git revert</code>, <code>checkout</code>, and <code>reset</code>.  Why are there 3 different commands for seemingly the same purpose, and when should someone choose one over the other?</p>
","109","25783","<git>"
"4169832","1","Update my github repo which is forked out from another project","<p>I have forked out a Parent: <a href=""https://github.com/voldemort/voldemort"">project</a> to Child: <a href=""https://github.com/utkarsh2012/voldemort"">this</a>. Now, I want to update my child with parents current updates. Can I do that, if yes how?</p>

<p>When I update my github repo, then I can do a ""git pull"" to update my local repo.</p>
","84","17454","<git><github>"
"4170317","1","GIT pull error - remote object is corrupted","<pre><code>$ git pull

remote: fatal: object 21f3981dd35fccd28febabd96f27241eea856c50 is corrupted
error: git upload-pack: git-pack-objects died with error.
fatal: git upload-pack: aborting due to possible repository corruption on the remote side.
remote: aborting due to possible repository corruption on the remote side.
fatal: protocol error: bad pack header
</code></pre>

<p>Any ideas why this is failing?<br>
When I run <code>git --bare fsck-objects --full</code> I just see dangling links but no broken links. Also <code>git gc</code> didn't help in any way. When I reclone or do pull from another clone, I don't see this error.</p>
","33","20051","<git><git-pull><git-fetch>"
"18308535","1","Automatic prune with git fetch or pull","<p>If someone deleted a remote branch because the work is over and I don't know, I won't do a <code>git fetch --prune</code> and eventually I will push back the deleted branch.</p>

<p>Is there a viable solution for forcing git to use the prune mode when fetching / pulling without having to specify it every time?</p>
","64","21078","<git>"
"13148066","1","Warning: push.default is unset; its implicit value is changing in Git 2.0","<p>I've been using Git for a while now and have recently downloaded an update only to find this warning message come up when I try to <code>push</code>.</p>

<pre><code>warning: push.default is unset; its implicit value is changing in 
Git 2.0 from 'matching' to 'simple'. To squelch this message 
and maintain the current behavior after the default changes, use: 

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use: 

  git config --global push.default simple
</code></pre>

<p>I can obviously set it to one of the values mentioned, but what do they mean? What's the difference between <code>simple</code> and <code>matching</code>?</p>

<p>If I change it on one client will I need to do anything on other clients that I share repos with?</p>
","1349","188871","<git><version-control>"
"4348590","1","How can I make git ignore future revisions to a file?","<p>I have created a default version of a file included in a git repository.  It's important that when someone clones the repository, they get a copy of this file.  However, I would like to set git so that it ignores changes to this file later.  <code>.gitignore</code> works only on untracked files.</p>

<p>My motivation is that this file contains machine-specific information.  I would like to provide default values, while allowing people to make local changes that won't get pushed back to the origin repository, creating merge conflicts when we pull new changes.</p>

<p>We are generally pretty lazy and use <code>git add .</code> a lot, so I'm pretty sure if I can't tell git to ignore this file, changes to it will end up getting committed and pushed.</p>

<p>To summarize,</p>

<ol>
<li>I would like to create a file, call it <code>default_values.txt</code> that is added to my git repository and is included when someone clones that repository.</li>
<li><code>git add .</code> should not add <code>default_values.txt</code> to the commit.</li>
<li>This behavior should be passed on to any clones of the repository. </li>
</ol>
","56","5752","<git><gitattributes>"
"4259996","1","How can I view a git log of just one user's commits?","<p>When using <code>git log</code>, how can I filter by user so that I see only commits from that user?</p>
","623","183244","<git><search><version-control><author><revision-history>"
"6624036","1","Restore file from old commit in git","<p>I have an old commit that I did a few weeks ago. I want to restore only a single file from that commit. What do I do?</p>
","86","26193","<git>"
"6543519","1","Undoing accidental git stash pop","<p>I stashed some local changes before doing a complicated merge, did the merge, then stupidly forgot to commit before running <code>git stash pop</code>.  The pop created some problems (bad method calls in a big codebase) that are proving hard to track down.  I ran <code>git stash show</code>, so I at least know which files were changed. If nothing else, I guess this is a lesson to commit more.</p>

<p>My question: is it possible to undo the stash pop without also undoing the merge?   </p>
","103","48753","<git><git-stash>"
"30024353","1","How to use Visual Studio Code as Default Editor for Git","<p>When using git at the command line, I am wondering if it is possible to use Visual Studio Code as the default editor, i.e. when creating commit comments, and looking at a diff of a file from the command line.</p>

<p>I understand that it won't be possible to use it for doing merges (at least at the minute) but does anyone know if it is possible to use it for looking at diff's, and if so, what command line options would be required in the .gitconfig file to make this happen?</p>

<p><strong>UPDATE 1:</strong></p>

<p>I have tried an approach similar to what I have done for <a href=""http://stackoverflow.com/questions/10564/how-can-i-set-up-an-editor-to-work-with-git-on-windows"">Notepad++ in the past</a>, i.e.</p>

<pre><code>#!/bin/sh

""c:/Program Files (x86)/Notepad++/notepad++.exe"" -multiInst -notabbar -nosession -noPlugin ""$*""
</code></pre>

<p>And used:</p>

<pre><code>#!/bin/sh

""C:\Users\gep13\AppData\Local\Code\app-0.1.0\Code.exe"" ""$*""
</code></pre>

<p>But this results in an error message:</p>

<pre><code>C:\temp\testrepo [master +1 ~0 -0]&gt; git commit
[8660:0504/084217:ERROR:crash_reporter_win.cc(70)] Cannot initialize out-of-process crash handler
Aborting commit due to empty commit message.
C:\temp\testrepo [master +1 ~0 -0]&gt;
</code></pre>

<p>Code opens up correctly, with the expected content, but it isn't waiting on the response, i.e. clicking save and closing the window to return to prompt.</p>

<p><strong>UPDATE 2:</strong></p>

<p>I have just heard back from one of the developers working on VSCode.  Looks like this functionality currently isn't supported :-(</p>

<p><a href=""https://twitter.com/IsidorN/status/595501573880553472"">https://twitter.com/IsidorN/status/595501573880553472</a></p>

<p>If you are interested in seeing this feature get added, you might want to think about adding your votes here:</p>

<p><a href=""http://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7756482-support-git-configure-diff-and-merge-tools"">http://visualstudio.uservoice.com/forums/293070-visual-studio-code/suggestions/7756482-support-git-configure-diff-and-merge-tools</a></p>

<p><strong>UPDATE 3:</strong></p>

<p>I have been <a href=""https://twitter.com/shanselman/status/595604230234210304"">reliably informed</a> that this feature has been picked up by the VSCode team, so I am looking forward to a future release that will include it.</p>

<p><strong>UPDATE 4:</strong></p>

<p>Thanks to @f-boucheros comment below, I have been able to get VS Code working as the default editor for commit comments, rebase, etc.  I would still  like to see if it is possible to use it as the diff tool as well.</p>

<p><strong>UPDATE 5:</strong></p>

<p>As per the accepted answer for the question, this is now possible using the V1.0 release of code.</p>
","35","5560","<git><vscode>"
"6098742","1","Using git commit -a with vim","<p>I'm new with git, so I decided to learn git using the tutorials of github. The third chapter said: </p>

<blockquote>
  <p>""For this first example we’ll modify the README file to add ourselves as an author on the project. So we simply edit the file. Now we want to commit that change, so we run the <code>git commit -a</code> command.""</p>
</blockquote>

<p>When I use the <code>git commit -a</code> command, the console opens a vim and I wrote my message, but I don't know how to close this vim editor from the console. How do I save the message and close vim?</p>
","72","57897","<git><vim>"
"23391839","1","Clone private git repo with dockerfile","<p>I have copied this code from what seems to be various working dockerfiles around, here is mine:</p>

<pre><code>FROM ubuntu

MAINTAINER Luke Crooks ""luke@pumalo.org""

# Update aptitude with new repo
RUN apt-get update

# Install software 
RUN apt-get install -y git python-virtualenv

# Make ssh dir
RUN mkdir /root/.ssh/

# Copy over private key, and set permissions
ADD id_rsa /root/.ssh/id_rsa
RUN chmod 700 /root/.ssh/id_rsa
RUN chown -R root:root /root/.ssh

# Create known_hosts
RUN touch /root/.ssh/known_hosts

# Remove host checking
RUN echo ""Host bitbucket.org\n\tStrictHostKeyChecking no\n"" &gt;&gt; /root/.ssh/config

# Clone the conf files into the docker container
RUN git clone git@bitbucket.org:Pumalo/docker-conf.git /home/docker-conf
</code></pre>

<p>This gives me the error</p>

<pre><code>Step 10 : RUN git clone git@bitbucket.org:Pumalo/docker-conf.git /home/docker-conf
 ---&gt; Running in 0d244d812a54
Cloning into '/home/docker-conf'...
Warning: Permanently added 'bitbucket.org,131.103.20.167' (RSA) to the list of known hosts.
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
2014/04/30 16:07:28 The command [/bin/sh -c git clone git@bitbucket.org:Pumalo/docker-conf.git /home/docker-conf] returned a non-zero code: 128
</code></pre>

<p>This is my first time using dockerfiles, but from what I have read (and taken from working configs) I cannot see why this doesn't work.</p>

<p>My id_rsa is in the same folder as my dockerfile and is a copy of my local key which can clone this repo no problem.</p>

<p>Edit: </p>

<p>In my dockerfile I can add:</p>

<pre><code>RUN cat /root/.ssh/id_rsa
</code></pre>

<p>And it prints out the correct key, so I know its being copied correctly.</p>

<p>I have also tried to do as noah advised and ran:</p>

<pre><code>RUN echo ""Host bitbucket.org\n\tIdentityFile /root/.ssh/id_rsa\n\tStrictHostKeyChecking no"" &gt;&gt; /etc/ssh/ssh_config
</code></pre>

<p>This sadly also doesn't work.</p>
","88","48818","<git><bitbucket><docker>"
"8965781","1","Update an outdated branch against master in a Git repo","<p>I have a Git repository that has branch (local and remote) that has become outdated. I would like to bring this branch up to date with the master branch, but I don't know how to do this. There will also probably be many merge conflicts. </p>

<p>How can I bring or update this out-of-date branch to the same state as the master branch?</p>
","41","30940","<git><git-branch>"
"6626136","1","Best Practice for Adding .gitignore to Repo","<p>What is the best practice regarding the <em>.gitignore</em> file with Git; should it be excluded from the repository or included? If it's conditional, what are the conditions for each circumstance?</p>
","36","13125","<git><gitignore>"
"6797845","1","Git says a file is unmerged and I can't commit, but the file seems to be merged","<p>I had about 12 file conflicts when I merged branches. I manually fixed all the conflicts and staged the files. But now when I try to commit, it says one of the files is unmerged.</p>

<pre><code>U      app/models/disclosure_event.rb
fatal: 'commit' is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;' as
appropriate to mark resolution and make a commit, or use 'git commit -a'.
</code></pre>

<p>When I type <code>git status</code>, it shows all the changed files, including ""disclosure_event.rb"", under <code>Changes to be committed</code>. It shows no files as unstaged. I've repeatedly tried to add the file, but it seems to do nothing. If I open the file, everything looks great.</p>

<p>Any ideas? I'm completely stuck.</p>
","34","50479","<git><merge><conflict>"
"1960799","1","Using Git and Dropbox together effectively?","<p>How do I use <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> and <a href=""http://en.wikipedia.org/wiki/Dropbox_%28service%29"">Dropbox</a> together effectively?</p>
","927","215523","<git><version-control><cloud><dropbox>"
"6188591","1","Download Github pull request as unified diff","<p>How can I download the changes contained in a Github pull request as a unified diff?</p>
","137","20888","<git><version-control><github><diff>"
"4350678","1","Git diff -w ignore whitespace only at start & end of lines","<p>I love to use <code>git diff -w</code> to ignore whitespace differences. But, I just noticed that it ignores even whitespace differences in the middle of lines. How could I only ignore whitespace differences that come at the start (^) or end ($) of lines?</p>
","195","65239","<git><diff><whitespace><ignore>"
"6188780","1","git + LaTeX workflow","<p>I'm writing a very long document in LaTeX. I have my work computer and my laptop, and I work on them both. I need to keep all the files synchronized between the two computers, and also would like to keep a revision history. I chose git as my DVCS, and I'm hosting my repository on my server. I'm also using Kile + Okular to do the editing. Kile doesn't have an integrated git plugin. I'm also not collaborating with anyone on this text. I'm also thinking about putting another private repository on codaset, if my server for some reason is not accessible.</p>

<p>What is the recommended workflow practice in this case? How can branching be fitted in this working scheme? Is there a way to compare two versions of the same file? What about using a stash?</p>
","176","42124","<git><latex>"
"1961274","1","git Warning: remote HEAD refers to nonexistent ref, unable to checkout","<p>I'm trying to setup gitosis according to the instructions <a href=""http://scie.nti.st/2007/11/14/hosting-git-repositories-the-easy-and-secure-way"">here</a>.</p>

<p>It works fine from my remote machine so the server seems to be setup fine but I'd also like to be able to do development on my gitosis server machine from a different user account (not the git user created in the gitosis setup).</p>

<p>I've copied the key and modified the gitosis.conf so that the other user account has access but when I try to clone it seems to work except at the end it says: </p>

<pre><code>git Warning: remote HEAD refers to nonexistent ref, unable to checkout
</code></pre>

<p>and I end up with an empty directory except for .git</p>

<p>I've google for this a bit but have no real insight into what the problem is</p>
","40","45190","<git><gitosis>"
"1962094","1","What is the Sign Off feature in Git for?","<p>What's the point of the <a href=""http://schacon.github.com/git/git-commit.html"">Sign Off feature in Git</a>?</p>

<pre><code>git commit --signoff
</code></pre>

<p>When should I use it, if at all? </p>
","325","61050","<git><git-commit>"
"6711670","1","Git: show more context when using git add -i or git add -e?","<p>I'm selectively committing parts of a large file and I'd like to see more context around each hunk. Is this possible?</p>
","41","6868","<git>"
"2255416","1","How to determine when a Git branch was created?","<p>Is there a way to determine <strong><em>when</em></strong> a Git branch was created? I have a branch in my repo and and I don't remember creating it and thought maybe seeing the creation timestamp would jog my memory. </p>
","133","68432","<git><branch><git-branch>"
"10845051","1","Git: show total file size difference between two commits?","<p>Is it possible to show the total file size difference between two commits? Something like:</p>

<pre><code>$ git file-size-diff 7f3219 bad418 # I wish this worked :)
-1234 bytes
</code></pre>

<p>I’ve tried:</p>

<pre><code>$ git diff --patch-with-stat
</code></pre>

<p>And that shows the file size difference for each <em>binary</em> file in the diff — but not for text files, and not the total file size difference.</p>

<p>Any ideas?</p>
","41","10532","<git><filesize><git-diff>"
"13340329","1","How to save a git commit message from windows cmd?","<p>This is my first time running git from the command line.</p>

<p>I need to know how does one save the commit message?</p>

<p>I mean what keys should I press to go past this screen:</p>

<p><img src=""http://i.stack.imgur.com/Gc6FJ.png"" alt=""Commit message interface""></p>
","40","18536","<git><git-commit>"
"1964347","1","Mercurial (and, I guess Git) with Dropbox: any drawbacks?","<p>I have a Mercurial repository for a personal project, and I have been storing the master repository in my Dropbox for a few weeks now (something along <a href=""http://iamthewalr.us/blog/2009/02/mercurial-and-dropbox/"">this line</a>; and I understand it's also <a href=""http://stackoverflow.com/questions/1960799/using-gitdropbox-together-effectively"">possible with git</a>). </p>

<p>The idea is that it serves both as a way to work with multiple machines and as a remote backup. <em>I clone the repository and work on the non-Dropbox copy, and only push updates once in a while, the same way I would, I suppose, work with Bitbucket.</em> </p>

<p>Can you think of any drawbacks to this idea, compared to using dedicating hosting (BitBucket in the case of Mercurial)? <em>I know Bitbucket has free accounts for single users, which is great, but they are limited to 150M, which isn't a huge</em>. </p>

<p>In particular, is it possible that Dropbox's sync process would corrupt the repository? I had to run <em>hg recover</em> once on the master repository, but it might be unrelated (and anyway it happily recovered). Does anyone have a bad experience with the idea? Does anyone have a longer good experience and can alleviate my worries? Does anyone have an opinion based on better understanding of the internals of these things?</p>

<p>edit: I added some clarifications to the questions. They are in <em>italics</em>. </p>
","58","8917","<git><mercurial><dropbox>"
"1964470","1","What's the equivalent of use-commit-times for git?","<p>I need the timestamps of files on my local and on my server to be in sync. This is accomplished with Subversion by setting use-commit-times=true in the config so that the last modified of each file is when it was committed.</p>

<p>Each time I clone my repository, I want the timestamps of files to reflect when they were last changed in the remote repository, not when I cloned the repo.</p>

<p>Is there any way to do this with git? </p>
","61","13293","<git>"
"6191985","1","Git http - securely remember credentials","<p>Is there a way to securely let git remember my credentials when connecting to remote repositories over HTTP(S)? </p>

<p>I've tried the <code>core.askpass</code> approach detailed in <a href=""http://git-scm.com/docs/git-config""><code>git-config</code></a> to let an external script supply my credentials. Although it works great the username and password is still stored in plain text in the small shell script. </p>
","65","47439","<git><authentication>"
"18390249","1","GitHub: make fork an ""own project""","<p>I have found a nice GitHub project which I extended a lot. I believe my changes are good, because they are working. But it seems the original author hasn't got the time to review these changes and include them. In fact, it is even possible that the features I need and implemented are not in the vision of the original author and we simply aim at different goals. I don't know as I never got responses from him.</p>

<p>That said I saw my contributions are not counted in my commit-map. This is the case as long as the original repository doesn't accept my contributions. Furthermore my work is only recognized as work and doesn't attract any other people with the same vision as I have. This is the bigger problem for me, because I see a lot of people asking for these features.</p>

<p>I am still offering my contributions to the original project, but I see it is unlikely they are ever accepted. Now I would like to make my fork a ""real project"". While I plan to sync with the original project at some points of time, I want to rename it and motivate people to contribute to my project as well. In addition, I would love if GitHub would show that this project is actively maintained (speaking of the commit map). And finally, I would love to make proper releases of it.</p>

<p>How can I get this done and well, make my fork a full-fledged project?</p>
","43","4635","<git><github>"
"10846875","1","Move (or ""Undo"") last git commit to unstaged area","<p>What's the best way to move your last git commit back into the ""Changes not staged"" + ""Untracked files"" areas (with the commit in question being not-pushed / only in your local repo, effectively removing it from HEAD)?</p>

<p>In other words, how do you roll back a commit, but automatically apply that diff to your unstaged area?</p>
","37","8672","<git>"
"8985782","1","git push fails: `refusing to update checked out branch: refs/heads/master`","<p>I want to store my local modifications to JBoss config in git. For this, I have set up the following structure:</p>

<pre><code>lrwxrwxrwx  1 jboss jboss        19 Jan 24 11:53 current -&gt; jboss-as-7.1.0.CR1b
drwxr-xr-x 11 jboss jboss      4096 Jan 24 12:13 jboss-as-7.1.0.CR1b
-rw-r--r--  1 jboss jboss 108211143 Jan 23 16:02 jboss-as-7.1.0.CR1b.tar.gz
drwxr-xr-x  6 jboss jboss      4096 Jan 24 11:36 local
</code></pre>

<p><code>local</code> is the git repository which shall be the ""origin"". The idea is that I want to be able to easily update my JBoss distribution once an update is available. I want to store all local modifications to the distributed JBoss package in git.</p>

<p>So, currently I do this:</p>

<pre><code>jboss@tpl0:~/jboss-as-7.1.0.CR1b$ git init
Initialized empty Git repository in /opt/jboss/jboss-as-7.1.0.CR1b/.git/
jboss@tpl0:~/jboss-as-7.1.0.CR1b$ git remote add origin ../local/   
jboss@tpl0:~/jboss-as-7.1.0.CR1b$ git pull origin master 
From ../local
 * branch            master     -&gt; FETCH_HEAD
</code></pre>

<p>So far so good, all my local modifications are there where I want them.</p>

<p>However, once I have local modifications and want to bush them back to the <code>local</code> repository, I get an error:</p>

<pre><code>jboss@tpl0:~/jboss-as-7.1.0.CR1b$ vim standalone/configuration/standalone.xml   
jboss@tpl0:~/jboss-as-7.1.0.CR1b$ git commit -a -m ""renamed database to project2_core,   to distinguish from other projects""
[master 3e54f34] renamed database to project2_core, to distinguish from other projects
Committer: jboss &lt;jboss@tpl0.(none)&gt;
 1 files changed, 1 insertions(+), 1 deletions(-)

jboss@tpl0:~/jboss-as-7.1.0.CR1b$ git push origin master 
Counting objects: 9, done.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (5/5), 447 bytes, done.
Total 5 (delta 3), reused 0 (delta 0)
Unpacking objects: 100% (5/5), done.
remote: error: refusing to update checked out branch: refs/heads/master
remote: error: By default, updating the current branch in a non-bare repository
remote: error: is denied, because it will make the index and work tree inconsistent
remote: error: with what you pushed, and will require 'git reset --hard' to match
remote: error: the work tree to HEAD.
remote: error: 
remote: error: You can set 'receive.denyCurrentBranch' configuration variable t
remote: error: 'ignore' or 'warn' in the remote repository to allow pushing int
remote: error: its current branch; however, this is not recommended unless you
remote: error: arranged to update its work tree to match what you pushed in som
remote: error: other way.
remote: error: 
remote: error: To squelch this message and still keep the default behaviour, se
remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.
To ../local/
 ! [remote rejected] master -&gt; master (branch is currently checked out)
error: failed to push some refs to '../local/'
</code></pre>

<p>What can I do about this? Any help is greatly appreciated!</p>

<p><strong>EDIT</strong></p>

<p>Here's what I did, which solved the problem:</p>

<pre><code>cd ~/current
git init
vim .gitignore                   # set up a basic .gitignore file
git add .gitignore
git commit -a -m ""initial commit""
cd ~/local
git clone ~/current
git branch -m master current     # rename master branch to 'current'
git branch repo
git checkout repo
</code></pre>

<p>Now, the branch <code>current</code> in directory <code>~/local</code> is always up-to-date, but it's not cheked out, so that i can push into it.</p>
","45","44648","<git>"
"3926768","1","Amend a commit that wasn't the previous commit","<p>Frequently I'll have a workflow like the following:</p>

<ol>
<li>Commit changes to a group of files</li>
<li>Commit changes to a different group of files</li>
<li>Realize I missed some changes that belong in the first commit</li>
<li>Curse</li>
</ol>

<p>I can't make use of <code>git commit --amend</code> because it's not the most recent commit that I need to change. What's the best way to add changes to the first commit <strong>without touching the second one?</strong></p>
","39","20412","<git>"
"8581609","1","git flow - how do I pause development on one feature to work on another","<p>I'm new to git and git flow. I've read all the various pages, blogs, and stackoverflow questions on it,and have been using it in my daily development.</p>

<p>But one issue has been bothering me, I just can't wrap my head around it. I know feature branches are supposed to be small, you start a feature, code a part of it, then finish the feature. This is a daily occurence, I get that. We just make sure that our develop branch is always buildable.</p>

<p>But what happens when I'm in the middle of a feature, it isn't ready to be finished, but work priorities change? I'd like to be able to switch to another feature. </p>

<p>For example, I start a new feature.</p>

<pre><code>$ git flow feature start yak-Speedup
</code></pre>

<p>I write code, commit files, etc... and am making good progress on it. But now I need to change what I am working on, mostly like because I need a resource that isn't available and the server coder won't have it ready for a day or two. I can't finish the feature because it will break the develop branch.</p>

<p>I'd like to do something like this:</p>

<pre><code>$ git flow feature pause yak-Speedup
$ git flow feature start alpaca-Sheering
#write code
$ git flow feature finish alpaca-Sheering
$ git flow feature resume yak-Speedup
</code></pre>

<p>Indeed, the existence of the ""git flow feature list"" command implies that I can have several features going at the same time. But I don't see how to create or switch between features. Indeed, I'm starting to think that this isn't a git flow issue at all, but a git issue.</p>

<p>I appreciate any help. Thanks!</p>
","34","9101","<git><git-flow>"
"6883760","1","Git for Windows: .bashrc or equivalent config files for Git Bash shell","<p>I've just installed <code>Git</code> for Windows and delighted to see that it installs <code>Bash</code>. </p>

<p>I want to customise the shell in the same way I can under Linux (e.g. set up aliases like <code>ll</code> for <code>ls -l</code>), but I can't seem to find <code>.bashrc</code> or equivalent config. </p>

<p>What should I be editing?</p>
","96","56985","<windows><git><git-bash>"
"6800692","1","How do git grafts and replace differ? (Are grafts now deprecated?)","<p>There are very few Q&amp;A's on git <code>grafts</code> versus <code>replace</code>. The search <em>[git] +grafts +replace</em> only found two that felt relevant of the 5. <a href=""http://stackoverflow.com/questions/161928/what-are-git-info-grafts-for"">what-are-git-info-grafts-for</a> and <a href=""http://stackoverflow.com/questions/6088551/git-what-is-a-graftcommit-or-a-graft-id"">git-what-is-a-graftcommit-or-a-graft-id</a>. There is also a note on <a href=""https://git.wiki.kernel.org/index.php/GraftPoint"" rel=""nofollow"">git.wiki.kernel.org:GraftPoint</a></p>

<p>Are grafts now <strong>completely overtaken</strong> by the <code>replace</code> and <code>filter-branch</code>, or do they still needed for some special corner cases (and backward compatibility) ?</p>

<p>In general, how do they differ (e.g. which are transported between repos), and how are they generically the same? 
I've seen that Linus doesn't appear to care about grafts at present in the discussion on commit generation numbers (of the max parents back to any root variety) <a href=""http://permalink.gmane.org/gmane.comp.version-control.git/177153"" rel=""nofollow"">""Grafts are already unreliable.""</a></p>

<p>EDIT: more info found.<br>
A search of www.kernel.org/pub/software/scm/git/docs for <code>graft</code> only found 3 results: </p>

<ol>
<li>git-filter-branch(1), </li>
<li>v1.5.4.7/git-filter-branch(1),</li>
<li>v1.5.0.7/git-svn(1).</li>
</ol>

<p>A slightly broader search found <a href=""http://www.kernel.org/pub/software/scm/git/docs/RelNotes/1.6.5.txt"" rel=""nofollow"">RelNotes/1.6.5.txt</a> which contains:</p>

<blockquote>
  <ul>
  <li>refs/replace/ hierarchy is designed to be usable as a replacement
  of the ""grafts"" mechanism, with the added advantage that it can be
  transferred across repositories.</li>
  </ul>
</blockquote>

<p>Unfortunately, the <a href=""http://www.kernel.org/pub/software/scm/git/docs/gitrepository-layout.html"" rel=""nofollow"">gitrepository-layout(5)</a> isn't yet up to date with the refs/replace/ repository layout info (and notes), nor any deprecation note of info/grafts.</p>

<p>This gets closer to supporting what I was thinking but I'd welcome any confirmation or clarification.</p>
","34","6406","<git>"
"6548046","1","Merging to a branch in git without switching to it","<p>I have an application running in a git repository on a branch (say <code>dev</code>). The application modifies the content in some the repository and commits them. I now have to merge these changes into another branch (say <code>master</code>) but the snag is that I don't want to <code>git checkout master</code> before doing this. Is there some way to say ""merge current branch into master""?</p>
","33","1644","<git><merge><git-merge>"
"9132144","1","How can I automatically deploy my app after a git push ( GitHub and node.js)?","<p>I have my application (node.js) deployed on a VPS (linux). I'm using git hub as a repository. How can I deploy the application automatically, on git push ?</p>
","73","48340","<git><node.js><github><push><githooks>"
"15931238","1","unable to remove file that really exists - fatal: pathspec ... did not match any files","<p>unable to remove file that really exists - fatal: pathspec ... did not match any files</p>

<p>I have a file under git control that simply will not be deleted. The failing command is:</p>

<pre><code>$ git rm .idea/workspace.xml
fatal: pathspec '.idea/workspace.xml' did not match any files
</code></pre>

<p>Below I list the directory contents, branches, etc. So far I've tried rm from within the directory, and escaping just in case there are funny characters, and I'm really stumped. I searched the web and SO but couldn't find this specifically. Thanks in advance!</p>

<pre><code>$ git branch -a
* dot-output
  master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
  remotes/origin/modelspace
$ 

$ git status
# On branch dot-output
# Untracked files:
# ...

$ ls .idea/
ant.xml         encodings.xml       modules.xml     workspace.xml
compiler.xml        inspectionProfiles  scopes
copyright       libraries       testrunner.xml
dictionaries        misc.xml        vcs.xml

$ ls -al
total 56
drwxr-xr-x  16 matt  staff    544 Apr 10 11:33 .
drwxr-xr-x@ 33 matt  staff   1122 Apr 10 09:40 ..
-rw-r--r--@  1 matt  staff  12292 Apr 10 11:19 .DS_Store
drwxr-xr-x  18 matt  staff    612 Apr 10 11:39 .git
-rw-r--r--   1 matt  staff     98 Mar  6 13:40 .gitignore
drwxr-xr-x  16 matt  staff    544 Apr 10 11:34 .idea
-rw-r--r--   1 matt  staff   1113 Feb 25 11:07 README
...

$ head -n 2 .idea/workspace.xml
&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;project version=""4""&gt;

$ git rm .idea/workspace.xml
fatal: pathspec '.idea/workspace.xml' did not match any files
</code></pre>

<p><strong>UPDATE</strong>: Answers from Nevik and Boris helped a lot. I realized that I was confused by a number of things going on, some of which were exacerbated by IntelliJ IDEA (a tool I generally love, BTW). First, the 'fatal: pathspec' message from git rm is both unhelpful and misleading (in this vanilla user's opinion). Second, I had the file in .gitignore, but had removed it before asking my question. However, it was also included in IDEA's Ignored Files feature independently of git, and showed as such in the project viewer (instead of untracked, as git status showed). Finally, I had IDEA running while I was experimenting, and it looks like it was recreating the file immediately after my rm. So, my takeaway is that if I'm getting confusing Git behavior, make sure to quit IDEA and work soley in the command line (and gitk) while debugging. And that SO users are awesome. Thanks again!</p>
","54","55099","<git><intellij-idea>"
"6802145","1","Convert shallow clone to full clone","<p>Follow-up of <a href=""http://stackoverflow.com/questions/1209999/using-git-to-get-just-the-latest-revision"">this</a> so-question: if I have a shallow clone, how to fetch all older commits to make it a full clone?</p>
","62","13822","<git><clone>"
"4181185","1","What does Bump Version stand for?","<p>I saw this comment in git many times.
What does it mean actually?</p>
","87","20309","<git><version><terminology>"
"4181861","1","src refspec master does not match any when pushing commits in git","<p>I cloned my repository with:</p>

<pre><code>git clone ssh://xxxxx/xx.git 
</code></pre>

<p>but after I changed some files and <code>add</code> and <code>commit</code> them I want to push them to server:</p>

<pre><code>git add xxx.php
git commit -m ""TEST""
git push origin master
</code></pre>

<p>But the error I get back is:</p>

<pre class=""lang-none prettyprint-override""><code>error: src refspec master does not match any.  
error: failed to push some refs to 'ssh://xxxxx.com/project.git'
</code></pre>
","1000","503028","<git><commit>"
"4181870","1","Git on Windows: What do the crlf settings mean?","<p>I don't understand the complexities related to CrLf settings in git: <code>core.autocrlf</code>, <code>core.safecrlf</code></p>

<p>I'm developing a cross-platform project in a team and would like both Windows and Linux developers to be able to work together without git marking files as modified just because of line ending style.</p>

<p>What do the various settings mean? What would be the consequences of choosing any of the options? And what would be the best solution for my case?</p>

<p>Yes, I'm aware of <a href=""http://stackoverflow.com/questions/170961/whats-the-best-crlf-handling-strategy-with-git"">this question</a> and the answers there were not insightful, thus not helpful.</p>
","58","14125","<windows><linux><git><newline><core.autocrlf>"
"8824971","1","How to amend older Git commit?","<p>I have made 3 git commits, but have not been pushed.
How can I amend the older one (ddc6859af44) and (47175e84c) which is not the most recent one?</p>

<pre><code>$git log
commit f4074f289b8a49250b15a4f25ca4b46017454781
Date:   Tue Jan 10 10:57:27 2012 -0800

commit ddc6859af448b8fd2e86dd0437c47b6014380a7f
Date:   Mon Jan 9 16:29:30 2012 -0800

commit 47175e84c2cb7e47520f7dde824718eae3624550
Date:   Mon Jan 9 13:13:22 2012 -0800
</code></pre>
","77","43385","<git><version-control><git-rewrite-history>"
"3810348","1","Setting git parent pointer to a different parent","<p>If I have a commit in the past that points to one parent, but I want to change the parent that it points to, how would I go about doing that?</p>
","99","27520","<git>"
"8475448","1","Find merge commit which include a specific commit","<p>Imagine the following history:</p>

<pre><code>       c---e---g--- feature
      /         \
-a---b---d---f---h--- master
</code></pre>

<p>How can I find when commit ""c"" has been merged into master (ie, find merge commit ""h"") ?</p>
","78","17107","<git>"
"2092810","1","Browse orphaned commits in Git","<p>My git repository has somehow gone wonky - I loaded up msysgit this morning and instead of the branch name being shown after the current directory, it says ""((ref: re...))"", 'git status' reports everything as a new file, 'git log' and 'git reflog' tell me ""fatal: bad default revision 'HEAD'"", and so on.</p>

<p>Doing 'git reflog --all' or 'gitk --all' shows me the rest of the repository is intact, but it looks like the branch I was working on has just disappeared, which explains why HEAD doesn't seem to exist/point to anything.</p>

<p>I know git keeps hold of all sorts of globs of information, and I'm assuming my commits have just been orphaned somehow, so is there some command that will show me those commits so I can reset HEAD to them?</p>

<p>EDIT: Oh dear. I discovered 'git fsck', and 'git fsck --full' reports ""fatal: object 03ca4... is corrupted"". What the devil can I do about that?</p>

<p>EDIT: Oh dear oh dear. I checked out another branch, then tried to re-create the original branch with the same name using 'git checkout -b lostbranchname', and git says ""error: unable to resolve reference refs/heads/lostbranchname: No error, fatal: Failed to lock ref for update: No error"". 'No error' must be a particularly nasty error. So it looks like it's still hanging around, but unable to be used and unable to be killed.</p>

<p>EDIT: Super duper oh dear. I've done a bunch of unpacking and repacking and replacing of things as suggested here: <a href=""http://stackoverflow.com/questions/801577/how-to-recover-git-objects-damaged-by-hard-disk-failure"">http://stackoverflow.com/questions/801577/how-to-recover-git-objects-damaged-by-hard-disk-failure</a>, but now I'm getting another hash reported as corrupt, for something as innocuous as 'git status'. I think the entire thing is hosed. Git's lovely and all, but I shouldn't have to deal with this kind of thing.</p>
","48","18485","<git>"
"2096509","1","git recover single file that was deleted during a merge","<p>I'm  currently in branch 'foo'. I just ran <code>git merge master</code>. Only problem is there was a certain file in foo that I wanted to keep. Is there a way to get it back but keep all the other changes from merge master?</p>
","43","14911","<git><repository><branch>"
"6313126","1","How to remove a directory in my GitHub repository?","<p>I have 2 directories on my GitHub repository. I'd like to delete one of them. How could I do that without deleting and re-creating entire repository?</p>
","459","371826","<git><github>"
"8588768","1","Git push: username, password, how to avoid?","<p>I <code>git push</code> my work to a remote Git repository.</p>

<p>Every <code>push</code> will prompt me to input <code>username</code> and <code>password</code>. I would like to avoid it for every push, but how to configure to avoid it?</p>
","109","85977","<git><github>"
"6315528","1","How much space can your BitBucket account have?","<p>I created a BitBucket account today, and I love the fact that they allow you to have unlimited public/private repositories. However, I didn't find the size limit of your account? Does anyone know where to find it? Github offered 300mb if I remember correctly.</p>
","114","39102","<git><mercurial><bitbucket>"
"2100907","1","How to remove/delete a large file from commit history in Git repository?","<p>Occasionally I dropped a DVD-rip into a website project, then carelessly <code>git commit -a -m ...</code>, and, zap, the repo was bloated by 2.2 gigs. Next time I made some edits, deleted the video file, and commited everything, but the compressed file is still there in the repository, in history.</p>

<p>I know I can start branches from those commits and rebase one branch onto another. But what should I do to merge together the 2 commits so that the big file didn't show in the history and were cleaned in garbage collection procedure?</p>
","282","85146","<git><version-control><git-rebase><git-rewrite-history>"
"6317169","1","using gitignore to ignore (but not delete) files","<p>I have a tmp directory in my git repo I'd like to still exist, but be ignored.  I added it to <code>.gitignore</code>, but <code>git status</code> still tells me about changes to files in that directory.  I tried <code>git rm -r --cached</code>, but that removes it from the remote repo.  How can I stop tracking changes to this directory, but still allow it to exist?  I also need to do this for 1 file, but changes to that also show up in <code>git status</code> after <code>.gitignore</code>ing them.  What should I do?</p>
","55","23381","<git><version-control>"
"11255451","1","Eclipse and EGit: How to easily review changes to ALL modified files before committing to *local* repository","<p>I'm using Eclipse Indigo SR2 with the (built-in) EGit plugin v.1.3.0.201202151440-r and haven't been able to find any way to easily review all my changes before making a commit.</p>

<p>I used Eclipse with SVN for years, and this was always very easy to do. I would typically right-click on my project, select <code>Team-&gt;Synchronize</code>, double-click on the first changed file (in the Team Sync perspective), then hit <kbd>Ctrl</kbd>-<kbd>.</kbd> repeatedly to review all changes in one file, and then proceed to the next file, as I wrote a summary of my changes for the commit message.</p>

<p>But of course, git is very different from Subversion, and so my workflow must change. With EGit, ""Team Sync"" only appears to be useful for reviewing changes between my local files and the remote repository (i.e. before a push to the remote). I need a way to review changes since my last commit to my <em>local</em> repository. I generally don't even care to (re)review changes before a push to remote (and if I did, I'd prefer a simple equivalent of <code>git log</code> to see what commits I'm about to push).</p>

<p>If I right-click on my project and select <code>Team-&gt;Commit</code>, I am presented with a window that does <em>almost</em> everything I need to do (select files to stage, commit, write a commit message, amend a previous commit, etc.). What it <em>doesn't</em> allow me to do is quickly and easily review all my changes in a compare editor. I can't believe this capability doesn't exist! It seems I am required to double-click on each individual file, review the changes, close the compare editor, and double-click on the next file. That's ridiculous!</p>

<p>TL/DR - I am looking for a simple GUI equivalent (in Eclipse) to do what I am easily able to do from the command line using <code>git vimdiff</code> (where vimdiff is a git alias that uses vimdiff as the ""difftool"" to cycle through all modified files) followed by <code>git commit</code> (with perhaps a <code>git add</code> or two in between).</p>

<p>If no one has a good solution, I am curious about how others handle their commit workflow with EGit. I've been getting along fine committing from the command line (not that Eclipse is happy about that) but I can't believe that EGit is as near-useless as it seems to me. Perhaps my google-fu is not as strong as it once was?</p>
","32","27202","<eclipse><git><egit>"
"27850222","1","What is .gitignore exactly?","<p>I just created a Github repository and was wondering what the <code>.gitignore</code> file was for. I started by not creating one, but added one due to the fact that most repositories have one.
Do I need to have one? Can/do I just ignore it, or does it have a use? 
I did some research on the subject but couldn't find a concrete explanation.</p>
","55","12917","<git><github><gitignore>"
"8594758","1","Undoing a git bisect mistake","<p>I'm doing a non-automated git bisect via command line. All is going well until I accidentally hit return on the wrong line in my command history, and rather than running the test, I run 'git bisect good' (or bad). Oops - I don't yet know if this commit should be marked good or bad, yet that's what I've done. </p>

<p>Can I undo the 'git bisect good' command, or make git forget the result of it, and go back and run the test for that commit?</p>
","67","4471","<git><git-bisect>"
"6632191","1","How to revert initial git commit?","<p>I commit a git repository at first time, I then regret the commit and want to revert it.  I try</p>

<pre><code># git reset --hard HEAD~1
</code></pre>

<p>I get this message:</p>

<pre><code>fatal: ambiguous argument 'HEAD~1': unknown revision or path not in the working tree.
</code></pre>

<p>This commit is first commit of repository, any idea how to undo git initial commit?</p>
","92","18404","<git>"
"2241055","1","Django and VirtualEnv Development/Deployment Best Practices","<p>Just curious how people are deploying their Django projects in combination with virtualenv</p>

<ul>
<li>More specifically, how do you keep your production virtualenv's synched correctly with your development machine?</li>
</ul>

<p>I use git for scm but I don't have my virtualenv inside the git repo - should I, or is it best to use the pip freeze and then re-create the environment on the server using the freeze output?  (If you do this, could you please describe the steps - I am finding very little good documentation on the unfreezing process - is something like <code>pip install -r freeze_output.txt</code> possible?)</p>
","38","8346","<python><django><git><virtualenv>"
"13583953","1","Deriving maven artifact version from git branch","<p>We have a workflow requirement that essentially mean that we need to have the artifact version of a module externally defined from the current branch in git.</p>

<p>I.e. if we are on the master branch in git, I need <code>&lt;version&gt;master-...&lt;/version&gt;</code> and if we are on the bugfixX branch, I need <code>&lt;version&gt;bugfixX-....&lt;/version&gt;</code> for the generated artifact for this pom.xml.</p>

<p>I have previously found that <a href=""https://github.com/koraktor/mavanagaiata"">https://github.com/koraktor/mavanagaiata</a> can provide the SHA-1 hash as a property and it appears from the documentation that it can also provide the branch, so perhaps if it could be run early enough in the process we could set the property and just put <code>&lt;version&gt;${our.version}&lt;/version&gt;</code> in the pom.  If this is possible, I would very much like to see a working pom.xml (and reward a 500 point bounty for it too).</p>

<p>If not, I guess we are into either preprocessing or ""git checkout"" do extra magic with some of the hooks (which I have not yet tried, working code would be great too).</p>

<p>We have a top level pom, which can be run to generate a property file in "".."" before building the modules where this functionality I'm asking about needs to go.</p>

<p>Any suggestions on how to solve this?  </p>
","39","13621","<git><maven><mavanagaiata>"
"4372435","1","How can I rollback a github repository to a specific commit?","<p>My github has 100 commits in it right now. I need to rollback the repository to commit 80, and remove all the subsequent ones.</p>

<p>Why?
   This repo is supposed to be for merging from miscellaneous users. A bunch of merges went in as commits from me, due to excessive editing. That was due to a mislabeling of my remote branches, where 3 developers were labeled as each other. I need to reset to that point, and then pull forwards.</p>

<p>I wanted to rebase, as in this example: <a href=""http://stackoverflow.com/questions/448919/how-can-i-remove-a-commit-on-github"">How can I remove a commit on github?</a></p>

<p>However, git wants me to do a lot of conflict management. Is there a simpler way?</p>
","233","141143","<git><github>"
"8717740","1","Git gist - Markdown does not work","<p>I am not able to get Markdown work in a gist. My post is available <a href=""https://gist.github.com/1556448#comments"">here</a>.</p>

<p>Notice that the same Markdown works when I add a comment.</p>

<p>What did I miss?</p>
","42","10267","<git><markdown><gist>"
"32355540","1","Complex Git branch name broke all Git commands","<p>I was trying to create a branch from <code>master</code> with the following command,</p>

<pre><code>git branch SSLOC-201_Implement___str__()_of_ProductSearchQuery
</code></pre>

<p>when Git suddenly stopped responding. I suspect the unescaped <code>()</code> must have done something to it. Now, whenever I try to run any Git command, I get the same error:</p>

<pre><code>git:176: command not found: _of_ProductSearchQuery
</code></pre>

<p>(with the number after <code>git</code> increasing every time I type a command)</p>

<p>Can anyone explain what happened? And how do I get back to normal? I'd love to be able to delete that branch, but Git won't work for me.</p>
","327","15937","<git><zsh><git-branch><parentheses>"
"4076239","1","Finding out the name of the original repository you cloned from in Git","<p>When you do your first clone using the syntax</p>

<pre><code>git clone username@server:gitRepo.git
</code></pre>

<p>Is it possible using your local repository to find the name of that initial clone? (so in the above example find gitRepo.git)</p>
","42","35292","<git><version-control><configuration-files>"
"6448242","1","Git Push Error: insufficient permission for adding an object to repository database","<p>When I try to push to a shared git remote, I get the following error:
<code>insufficient permission for adding an object to repository database</code></p>

<p>Then I read about a fix here: <a href=""http://parizek.com/?p=177"">Fix</a>  This worked for the next push, since all of the files were of the correct group, but the next time someone pushed up a change it made a new item in the objects folder that had their default group as the group. The only thing I can think of is to change all of the developer's default group for items they check in, but that seems like a hack.  Any ideas? Thanks.</p>
","298","183954","<git><push>"
"2244252","1","How to import svn branches and tags into git-svn?","<p>I have got a central SVN repository I must commit to, but I've got a passion for git (like any other developer I know). The case is well known.</p>

<p>Then I read about git-svn and gave it a try. Since I don't need the full history, just from two months or so, I did like this:</p>

<p><code>git svn clone -r 34000 -s https://svn.ourdomain.com/svn/repos/Project/SubProject</code></p>

<p>SubProject had, as usual, the subdirectories <code>trunk</code>, <code>tags</code> and <code>branches</code>. Great.</p>

<p>Then, in order to get the last revision, I did</p>

<p><code>git svn rebase</code></p>

<p>Some downloads later, great. Last revision, logs, etc. Ok, now I'll switch to my feature branch. </p>

<p><code>$ git branch</code><br>
<code>* master</code>  </p>

<p><code>$ git branch -r</code><br>
<code>trunk</code>  </p>

<p><code>$ git branch -a</code><br>
<code>* master</code><br>
<code>remotes/trunk</code></p>

<p>The questions are: Where are my branches? Have I done something wrong? How should I do in order to get my branches in the new git repo? </p>

<p>git-svn, wherever I have read about it, dealt wisely with branches and tags, but the behaviour is not what I expected. Thanks!</p>

<p><strong>EDIT</strong>: I have just found out that <code>git svn fetch</code> will do it. But it will get all revisions, which is something I wouldn't like.</p>
","41","25065","<svn><git><git-svn>"
"2246208","1","Change first commit of project with Git?","<p>I want to change something in the first commit of my project with out losing all subsequent commits. Is there any way to do this?</p>

<p>I accidentally listed my raw email in a comment within the source code, and I'd like to change it as I'm getting spammed from bots indexing GitHub.</p>
","199","45249","<git><rebase><git-filter-branch>"
"8721984","1","Git: Ignore files for public repository, but not for private","<p>I'm deploying a Rails app on Heroku (for now) via git, and would also like to have a public version for people to look at. Some files are sensitive and should only be committed and pushed in the ""heroku"" branch, but not the ""public"" branch. <strong>What is the best way to go about this?</strong></p>

<p>(I <em>do</em> know about Heroku's Config variables, which is great as a temporary solution, but not fun if and when I need to switch hosts.)</p>

<p>The two branches don't need to be synced at all times - I'm okay with periodically merging the ""master"" branch into the ""public"" branch and pushing it to github separately.</p>

<p>I have tried various things:</p>

<ul>
<li><p>separate <code>.gitignore</code> files and an ""ours"" merge strategy - this didn't work at first, and after messing with it for a while I decided it was getting too complicated just so I could achieve a seemingly simple task</p></li>
<li><p>using a custom <code>exclude</code> file, and adding the following to <code>.git/config</code>... this simply did not work:</p></li>
</ul>

<p>.git/config</p>

<pre><code>[branch ""public""]
  excludesfile = +info/exclude_from_public
</code></pre>

<p><strong>What is the best way to have a private and public repository share the same code, but ignore sensitive files in the public repository?</strong></p>

<p>You can assume that no code has been committed or pushed, i.e. this is a freshly initialized repository.</p>

<p>(This question has been asked before in various forms, but none of the answers were straight-forward or the answers seemed <em>really</em> hacky. I'm just here to ask this in a very simple manner, and hopefully receive a very simple response.)</p>
","31","3950","<git><version-control>"
"4269922","1","Permission denied (publickey) when deploying heroku code. fatal: The remote end hung up unexpectedly","<p>I'm attempting to deploy my code to heroku with the following command line:</p>

<pre><code>git push heroku master
</code></pre>

<p>but get the following error:</p>

<pre><code>Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>I have already uploaded my public SSH key, but it still comes up with this error.</p>
","782","194808","<git><heroku><deployment><public-key>"
"4082126","1","git log of a single revision","<p>I have a commit c. I want to get the changeset of that exact commit c + metainformation and no other one. Is there a simpler way than <code>git log -p c^..c</code> to do that?</p>
","91","27447","<git>"
"9135913","1","Merge pull request to a different branch than default, in Github","<p>A pull request comes into my repo hosted on Github. By default it is merged into the <code>master</code> branch.</p>

<p>Is there any way for me to change which branch the changes would be merged into?</p>
","63","17268","<git><github><pull-request>"
"4084868","1","How do I recover/resynchronise after someone pushes a rebase or a reset to a published branch?","<p>We have all heard that one should never rebase published work, that it’s dangerous, etc. However, I have not seen any recipes posted for how to deal with the situation in case a rebase <em>is</em> published.</p>

<p>Now, do note that this is only really feasible if the repository is only cloned by a known (and preferably small) group of people, so that whoever pushes the rebase or reset can notify everyone else that they will need to pay attention next time they fetch(!).</p>

<p>One obvious solution that I have seen will work if you have no local commits on <code>foo</code> and it gets rebased:</p>

<pre><code>git fetch
git checkout foo
git reset --hard origin/foo
</code></pre>

<p>This will simply throw away the local state of <code>foo</code> in favour of its history as per the remote repository.</p>

<p>But how does one deal with the situation if one has committed substantial local changes on that branch?</p>
","65","9204","<git><rebase><git-rebase><git-reset>"
"4084921","1","What does the git index contain EXACTLY?","<p>What does the git index exactly contain, and what command can i use to view the content of the index?</p>

<hr>

<p><strong>update</strong></p>

<p>Thanks for all your answers. I know that the index acts as a staging area, and what is committed is in the index rather than the working tree. I am just curious about what an index object consists of. I guess it might be a list of filename/directory_name, SHA-1 pairs, kind of virtual tree may be? And if there is, in git's terminology, any <em>plumbing</em> command that i could use to list the content of the index?</p>
","82","25798","<git>"
"6457044","1","Forgot ""git rebase --continue"" and did ""git commit"". How to fix?","<p>I was rebasing code in git, I got some merge conflicts. I resolved the conflicts and did ""git add"". At this point I forgot to do ""git rebase --continue"". I continued coding and did a ""git commit"" for the changes. Now I am on ""no branch"" and can't do ""git rebase --continue"" now. How do I fix this?</p>
","35","11594","<git>"
"4539384","1","Installing git on Windows: Git Bash Here or git-cheetah shell extension?","<p>I'm installing Git on Windows XP. During the setup, the installer asks whether I want:</p>

<blockquote>
  <p>1: Context menu entries: ""Git Bash Here"" (and the ""Git GUI Here"" option)</p>
</blockquote>

<p>or</p>

<blockquote>
  <p>2: ""git-cheetah shell extension (32-bit only)""</p>
</blockquote>

<p>Basically, which should I do? I can't do both.</p>

<p>More specifically, what is the most commonly used version? Is the Git Bash tool the same as the shell extension?</p>
","51","22210","<git><installer><installation>"
"4089430","1","How can I determine the URL that a local Git repository was originally cloned from?","<p>I pulled a project from GitHub a few days ago. I've since discovered that there are several forks on GitHub, and I neglected to note which one I took originally. How can I determine which of those forks I pulled?</p>
","1401","700043","<git><github><git-remote>"
"6889119","1","Rename file with Git","<p>I'm new to Git/Github and I needs some help.
I would like to rename file from README to README.md.
I have only one repo called ""change-z-index"".</p>

<p>1) I open and login like that:</p>

<pre><code>ssh -T git@github.com
</code></pre>

<p>And I enter my passphrase.</p>

<p>2) I try to rename the file like that:</p>

<pre><code>git mv README README.md
git commit -m ""renamed""
git push origin master
</code></pre>

<p>It gives me an error saying <strong>bad source.</strong></p>

<p>I think I need to select my repo first... it's name is ""change-z-index"". I have read manual many times, but still can't understand how to do it.</p>
","43","66463","<git><github>"
"8816107","1","How can I retrieve the remote git address of a repo?","<p>How can I retrieve the remote git address of a repo?</p>

<p>I tried git remote but that just lists the branches. </p>
","57","24270","<git>"
"20871549","1","Error when push commits with Github: fatal: could not read Username","<p>Since few time, I use Github for my projects and I have an issue when I want to push commits. </p>

<p>To beginning, I have forked a repository. Then I have cloned the fork (with command line <code>git clone https://github.com/ ...</code>) and, after doing modifications, I have committed with success (<code>git commit -a</code>).</p>

<p>After this, I have tried to push commits with command line <code>git push</code> but I obtain the following error:</p>

<pre><code>fatal: could not read Username for 'https://github.com': No such file or directory
</code></pre>

<p>Have you got an idea to resolve this issue?</p>
","47","53975","<git><github>"
"11266478","1","git add remote branch","<p>I want to add a remote, and a branch of that remote.</p>

<p>I did <code>git remote add &lt;newname&gt; &lt;url&gt;</code>, then I did <code>git fetch --all</code> but <code>git branch -a</code> is not showing any branch of the remote. My .git/config is showing the added remote.</p>

<p>Can anyone please help me out?</p>
","49","59782","<git>"
"11183788","1","In a Git repository, how to properly rename a directory?","<p>In a Git repository, how to properly rename a directory? I think it should work to copy the directory to be renamed to a new directory with desired name, and <a href=""http://stackoverflow.com/questions/1947430/git-remove-directory"">delete the old directory</a>, and <code>git add</code>,  <code>git commit</code> and <code>push</code> everything.  But is this the best way?</p>
","160","61726","<git><directory><rename>"
"4185365","1","No submodule mapping found in .gitmodule for a path that's not a submodule","<p>I have a project that has a submodule at <code>lib/three20</code></p>

<p>My <code>.gitmodule</code> file looks like this:</p>

<pre><code>[submodule ""lib/three20""]
    path = lib/three20
    url = git://github.com/facebook/three20.git
</code></pre>

<p>I have cloned this in the past without errors, (<code>git submodule init</code> followed by a <code>git submodule update</code>) and it's been working for a while.</p>

<p>I tried to clone this to a new machine, and now I'm getting this error on <code>git submodule init</code>:</p>

<pre><code>No submodule mapping found in .gitmodules for path 'Classes/Support/Three20'
</code></pre>

<p>That path is just an empty folder in Xcode that I use to house the projects from the other directory.  It's not part of the <code>.gitmodules</code> file, so I don't see where it's getting this path from.</p>

<p>Any ideas?</p>
","162","112075","<git><git-submodules>"
"4185400","1","Is there any git hook for pull?","<p>I need to perform some actions (prepare gettext *.mo message files) on my project everytime I run <code>git pull</code>. Is there any suitable git hook, which I could use for this purpose please?</p>
","85","32152","<git><hook><gettext>"
"8820668","1","The current branch is not configured for pull No value for key branch.master.merge found in configuration","<p>I get this error when I try to pull from remote repository using Egit team>pull</p>

<blockquote>
  <p>The current branch is not configured for pull No value for key
  branch.master.merge found in configuration</p>
</blockquote>
","154","65588","<eclipse><git><egit>"
"4359099","1","Git branch named origin/HEAD -> origin/master","<p>I'm fairly new to Git, and still getting the hang of it. I just recently started working with branches and am running into some questions.</p>

<p>I have two development systems, an Ubuntu desktop and an MacBookPro. I did a bunch of work in a new <code>organizations</code> branch on the Ubuntu system and performed commits and pushed to my remote repo. At this point, I had these branches:</p>

<pre><code>tauren@ubuntu:/projects$ git branch
  accounting
  master
* organizations

tauren@ubuntu:/projects$ git branch -r
  origin/accounting
  origin/master
  origin/organizations
  origin/superstar
</code></pre>

<p>Then I switched to the MBP to pull the new branch:</p>

<pre><code>tauren@osx:/projects$ git branch
  accounting
* master

tauren@osx:/projects$ git branch -r
  origin/HEAD -&gt; origin/master
  origin/accounting
  origin/master
  origin/superstar

tauren@osx:/projects$ git pull
   2e20a14..ef35730  accounting -&gt; origin/accounting
   271a1a5..7e947ab  master     -&gt; origin/master
 * [new branch]      organizations -&gt; origin/organizations

tauren@osx:/projects$ git branch
* accounting
  master

tauren@osx:/projects$ git branch -r
  origin/HEAD -&gt; origin/master
  origin/accounting
  origin/master
  origin/organizations
  origin/superstar
</code></pre>

<p>So my questions are these:</p>

<ol>
<li>Why does the MBP have a branch <code>origin/HEAD -&gt; origin/master</code>, but the Ubuntu system doesn't? What is that branch?</li>
<li>Does <code>git pull</code> automatically pull all new remote branches? I thought I had to tell it the name of new branches to pull. As you can see, it pulled the remote <code>organizations</code> branch on the commmand <code>git pull</code>.</li>
</ol>
","35","21560","<git>"
"11258737","1","Restore git submodules from .gitmodules","<p>I have a folder, which was a git repo. It contains some files and .gitmodules file. Now, when I do <code>git init</code> and then <code>git submodule init</code>, the latter command output is nothing. How can I help git to see submodules, defined in .gitmodules file without running <code>git submodule add</code> by hand again?</p>

<p>Update:
this is my .gitmodules file:</p>

<pre><code>[submodule ""vim-pathogen""]
    path = vim-pathogen
    url = git://github.com/tpope/vim-pathogen.git
[submodule ""bundle/python-mode""]
    path = bundle/python-mode
    url = git://github.com/klen/python-mode.git
[submodule ""bundle/vim-fugitive""]
    path = bundle/vim-fugitive
    url = git://github.com/tpope/vim-fugitive.git
[submodule ""bundle/ctrlp.vim""]
    path = bundle/ctrlp.vim
    url = git://github.com/kien/ctrlp.vim.git
[submodule ""bundle/vim-tomorrow-theme""]
    path = bundle/vim-tomorrow-theme
    url = git://github.com/chriskempson/vim-tomorrow-theme.git
</code></pre>

<p>and here is listing of this dir:</p>

<pre><code>drwxr-xr-x  4 evgeniuz 100 4096 июня  29 12:06 .
drwx------ 60 evgeniuz 100 4096 июня  29 11:43 ..
drwxr-xr-x  2 evgeniuz 100 4096 июня  29 10:03 autoload
drwxr-xr-x  7 evgeniuz 100 4096 июня  29 12:13 .git
-rw-r--r--  1 evgeniuz 100  542 июня  29 11:45 .gitmodules
-rw-r--r--  1 evgeniuz 100  243 июня  29 11:18 .vimrc
</code></pre>

<p>so, definitely, it is in top level. the git directory is not changed, only <code>git init</code> is done</p>
","37","12441","<git><git-submodules>"
"4273175","1","Undoing a bad pull","<p>First of all, Git sucks.  I know, I know, it's supposed to be the best thing since sliced bread, but it sucks.  It's like trying to shave with a chainsaw: one slight mistake and there are blood and teeth everywhere.  Perhaps, if I could actually make an exact distinction between a head, a ref, a commit, a branch, a stem, a gnargel, and a whizpoo, some of this might be a little easier but to an ordinary mortal with only 10 years experience of SVN, Perforce, and RCS, it all looks like rather cranky black magic.</p>

<p>Now for some reason, <code>git pull</code> has never worked for me.  I get a 10-line error message that has been, so far, about as helpful as the word ""error"".   Googling the error message produced a wide array of suggestions that only had in common the fact that they had no apparent affect whatsoever. But that's not today's problem: I've gotten used to typing <code>git pull origin branch</code>.</p>

<p>Today, I was flipping back and forth between two branches, ""master"" and ""lounge"" and at the moment I was in the master branch.  I wanted to get the latest changes from the remote repository to the local one, but I mistyped.  Instead of writing <code>git pull origin master</code>, I wrote <code>git pull origin lounge</code> and then, without thinking, typed in the correct command.  </p>

<p>There's no evidence of the first (bad) pull in log, just two merges from the master:</p>

<pre><code>commit 0c6be9569bab0581244ea8603bf2edfee82cdd7b
Merge: 43fdec5... db09f0d...
Author: Malvolio &lt;info@xcompanyx.com&gt;
Date:   Wed Nov 24 20:38:58 2010 -0500

Merge branch 'master' of github.com:xcompanyx/xRepositoryX

commit db09f0d79d744d6a354142041b47ff5d748999f3
Merge: 81b6c3d... fc73e25...
Author: Malvolio &lt;info@xcompanyx.com&gt;
Date:   Wed Nov 24 17:38:16 2010 -0800

Merge branch 'master' of github.com:xcompanyx/xRepositoryX

commit 81b6c3d04b7c464f8750a56282635526a5ef83a1
Author: Michael &lt;info@xcompanyx.com&gt;
Date:   Wed Nov 24 17:38:07 2010 -0800
    the last commit I did
</code></pre>

<p>But files newly created in the lounge branch are there in my repository.</p>

<p>So now I'm fscked, right?  Should I just torch my repository, clone the remote again, reapply all the unpushed changes manually, and chalk it up to Git sucking or is there some incantation I can recite that will make it all better?  Would it help if I sacrificed a goat?</p>
","37","4655","<git>"
"9059335","1","Get parents of a merge commit in git","<p>Given a merge commit, how can I get its parents? Some git commands take the parent as a revision; others (such as <code>git revert</code>), as a parent number. I’d like to know how to get the parents for both cases. I don’t want to use the graphical log command as that often requires scrolling down a long tree to find the second parent.</p>
","66","31817","<git><merge>"
"21101572","1","git: diff between file in local repo and origin","<p>I want to find the differences between a file I have in my local repo vs what is in the origin master.</p>

<p>I know that there is git diff, however I just want to isolate it down to this one particular file.</p>

<p>For simplicity lets say the files is named file1.txt and it has a local file path = [local_path] and in the origin it has filepath = [remote-path].</p>

<p>What would be the git command I need to type? </p>

<p>EDIT: Thank you all for your input it has been very insightful. For those that are using Eclipse (which I am and I should have stated earlier) I just found out that you can just rightclick -> Compare With -> Branch, Tag or Reference -> select appropriate version and there you go. </p>
","60","57155","<git><git-diff>"
"11262703","1","Track a new remote branch created on GitHub","<p>I have already got a local master branch tracking the remote master branch of a github project. Now, a collaborator of mine has created a new branch in the same project, and I want to do the following accordingly:</p>

<ol>
<li>create a new branch locally</li>
<li>make this new branch track the newly create remote branch.</li>
</ol>

<p>How should I do it properly?</p>
","90","36968","<git><github><git-branch>"
"21022638","1","Pod install is staying on ""Setting up Cocoapods Master repo""","<p>I'm cloning a project from a git repo, but when I execute <code>pod install</code> the first line I see is ""Setting up Cocoapods Master repo"" and after that I can't see anything more, the console stops there.</p>

<p>I don't know what is happening. Anyone knows what's happening here? Why Does cocoapods stop there?.</p>
","61","30146","<ios><iphone><objective-c><git><cocoapods>"
"27695","1","How to ""unversion"" a file in either svn and/or git","<p>It happens to me all the time. I accidentally version a file, I do not want to be versioned (i.e. developer/machine specific config-files).</p>

<p>If I commit this file, I will mess up the paths on all the other developer machines - they will be unhappy.</p>

<p>If I do delete the file from versioning, it will be deleted from the other developers machines - they will be unhappy.</p>

<p>If I choose to never commit the file, I always have a ""dirty"" checkout - I am unhappy.</p>

<p>Is a clean way to ""unversion"" a file from revision-control, that will result in no-one being unhappy?</p>

<p>edit: trying to clarify a bit: I have already commited the file to the repository and I want to only remove it from versioning - I specifically do not want it to be physically deleted from everyone doing a checkout. I initially wanted it to be ignored.</p>

<p>Answer: If I could accept a second answer, it would be <a href=""http://stackoverflow.com/questions/27695/how-to-unversion-a-file-in-either-svn-andor-git#27727"">this</a>. It answers my question with respect to git - the accepted answer is about svn.</p>
","50","31144","<svn><git><version-control><versioning>"
"8978650","1","How do I move my local Git repository to a remote Git repository","<p>I have various Git projects that are on my local machine. I have a server that I would like to use as my remote Git  Repository. How do I move my local Git Repositories (Projects) to my server while keeping the history intact?</p>

<p>Thanks!</p>

<p>EDIT:
Thanks for all the great answers. The response I choose makes sense to my limited GIT knowledge.</p>

<p>EDIT #2:
I noticed my original answer selection did not copy my tags. <code>git push --mirror &lt;path&gt;</code> does copy tags.</p>
","34","24115","<git>"
"11968531","1","What to gitignore from the .idea folder?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3041154/intellij-idea-9-10-what-folders-to-check-into-or-not-check-into-source-contro"">Intellij Idea 9/10, what folders to check into (or not check into) source control?</a>  </p>
</blockquote>



<p>I started using WebStorm for web development and am not sure what to add and what to exclude from our Git repository. Clearly some files inside the <code>.idea</code> folder are meant to be version controlled like the external library settings (<code>jsLibraryMappings.xml</code>) but others will probably change very often and are developer-specific (e.g., <code>workspace.xml</code>).</p>

<p>What is the recommended .gitignore pattern for WebStorm / IntelliJ IDEA?</p>

<p>P.S. There are already questions about this but usually focus only on whether to include the whole <code>.idea</code> folder or whether to fully exclude it. I think some of the files inside the <code>.idea</code> folder should be version controlled while others shouldn't and I'm trying to find out which ones.</p>
","196","105433","<git><intellij-idea><gitignore><webstorm>"
"39651","1","git-stash vs. git-branch","<p>In a <a href=""http://stackoverflow.com/questions/21848/switch-branch-names-in-git"" rel=""nofollow"">previous Git question</a>, Daniel Benamy was talking about a workflow in Git:</p>

<blockquote>
  <p>I was working on master and committed some stuff and then decided I wanted to put that work on hold. I backed up a few commits and then branched from before I started my crap work.</p>
</blockquote>

<p>He wanted to restore his working state to a previous point in time without losing his current changes. All of the answers revolved around, in various ways, something like</p>

<pre><code>git branch -m master crap_work
git branch -m previous_master master
</code></pre>

<p>How does this compare to <code>git stash</code>? I'm a bit confused trying to see what the different use case here when it <em>seems</em> like everything <code>git stash</code> does is already handled by branching…</p>

<p><hr /></p>

<p>@<a href=""http://stackoverflow.com/questions/39651/git-stash-vs-git-branch#39862"" rel=""nofollow"">Jordi Bunster</a>: Thanks, that clears things up. I guess I'd kind of consider ""stashing"" to be like a lightweight, nameless, branch. So anything stash can do, branch can as well but with more words. Nice!</p>
","81","29843","<git>"
"21025314","1","Who is ""us"" according to git?","<p>After a git rebase, you can find some files marked as <em>deleted by us</em> in the <code>git status</code> report. Who is <em>us</em> according to git and why? Is it referring to me sitting on this branch and it working for me? Or is it referring to itself and the guys on the branch i am rebasing against?</p>
","60","7897","<git>"
"4783599","1","Rebasing a Git merge commit","<p>Take the following case:</p>

<p>I have some work in a topic branch and now I'm ready to merge back to master:</p>

<pre><code>* eb3b733 3     [master] [origin/master]
| * b62cae6 2   [topic]
|/  
* 38abeae 1
</code></pre>

<p>I perform the merge from master, resolve the conflicts and now I have:</p>

<pre><code>*   8101fe3 Merge branch 'topic'  [master]
|\  
| * b62cae6 2                     [topic]
* | eb3b733 3                     [origin/master]
|/  
* 38abeae 1
</code></pre>

<p>Now, the merge took me some time, so I do another fetch and notice that the remote master branch has new changes:</p>

<pre><code>*   8101fe3 Merge branch 'topic'  [master]
|\  
| * b62cae6 2                     [topic]
| | * e7affba 4                   [origin/master]
| |/  
|/|   
* | eb3b733 3
|/  
* 38abeae 1
</code></pre>

<p>If I try 'git rebase origin/master' from master, I'm forced to resolve all conflicts again, and I also lose the merge commit:</p>

<pre><code>* d4de423 2       [master]
* e7affba 4       [origin/master]
* eb3b733 3
| * b62cae6 2     [topic]
|/  
* 38abeae 1
</code></pre>

<p>Is there a clean way to rebase the merge commit so I end up with a history like the one I show below?</p>

<pre><code>*   51984c7 Merge branch 'topic'  [master]
|\  
| * b62cae6 2                     [topic]
* | e7affba 4                     [origin/master]
* | eb3b733 3
|/  
* 38abeae 1
</code></pre>
","72","25156","<git><merge><rebase><git-rebase><git-rewrite-history>"
"52704","1","How do you discard unstaged changes in Git?","<p>How do I discard changes in my working copy that are not in the index?</p>
","2417","1115472","<git>"
"4460202","1","How to set patience as default git diff algorithm","<p>In .git/config I tried:</p>

<pre><code>[diff]
    patience = true
</code></pre>

<p>But no luck</p>

<p>Do I have to do:</p>

<pre><code>git diff --patience
git show --patience HEAD
</code></pre>

<p>etc., every time?</p>
","37","3750","<git><diff>"
"77485","1","What are the relative strengths and weaknesses of Git, Mercurial, and Bazaar?","<p>What do folks here see as the relative strengths and weaknesses of Git, Mercurial, and Bazaar?</p>

<p>In considering each of them with one another and against version control systems like SVN and Perforce, what issues should be considered?</p>

<p>In planning a migration from SVN to one of these distributed version control systems, what factors would you consider?</p>
","131","14175","<svn><git><version-control><mercurial><bazaar>"
"8981194","1","Changing git commit message after push (given that no one pulled from remote)","<p>I have made a git commit and subsequent push. I would like to change the commit message. If I understand correctly, this is not advisable because someone might have pulled from the remote repository before I make such changes. What if I know that no one has pulled? </p>

<p>Is there a way to do this?</p>
","250","110299","<git><push><commit>"
"6810059","1","git on Mac OS X Lion","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/6765561/git-not-found-after-installing-os-x-lion"">Git not found after installing OS X Lion</a>  </p>
</blockquote>



<p>I just upgraded my mac to LION, and now git is gone:</p>

<pre><code>$ git
-bash: git: command not found
</code></pre>

<p>Any ideas on how to get git back?</p>
","80","107726","<git><osx><osx-lion>"
"170961","1","What's the best CRLF (carriage return, line feed) handling strategy with Git?","<p>I tried committing files with CRLF-ending lines, but it failed.</p>

<p>I spent a whole work day on my Windows computer trying different strategies and was almost drawn to stop trying to use Git and instead try <a href=""http://en.wikipedia.org/wiki/Mercurial"">Mercurial</a>.</p>

<p>Please share only one best practice per answer.</p>
","437","132455","<git><cross-platform><newline><eol>"
"171550","1","Find out which remote branch a local branch is tracking","<blockquote>
  <p><strong>See also:</strong><br>
  <a href=""http://stackoverflow.com/questions/4950725/how-do-i-get-git-to-show-me-which-branches-are-tracking-what"">how do I get git to show me which branches are tracking what?</a>  </p>
</blockquote>



<p>How can I find out which remote branch a local branch is tracking?</p>

<p>Do I need to parse git config output, or is there a command that would do this for me?</p>
","263","123622","<git>"
"4456532","1","How can I see what has changed in a file before committing to git?","<p>I've noticed that while working on one or two tickets, if I step away, I'm not sure what I worked on, what changed, etcetera.</p>

<p>Is there a way to see the changes made for a given file before git add and then git commit?</p>
","131","51569","<git>"
"2405305","1","How to tell if a file is git tracked (by shell exit code)?","<p>Is there a way to tell if a file is being tracked by running some <code>git</code> command and checking its exit code?</p>

<p>In other words: is git tracking a file?</p>
","183","54895","<git>"
"9622131","1","Git rebase my feature branch","<p>I'm looking for a git command to help me with my feature branches when they're ready to go into Master. This git command would squash all my changes on my branch into a single commit on top of master. I do this today with:</p>

<pre><code>git rebase origin/master
git rebase -i HEAD~4
</code></pre>

<p>Where 4 is the number of commits to squash. However, this requires me to know how many commits I have. I do this today by running:</p>

<pre><code>git log HEAD...origin/master
</code></pre>

<p>and then counting the commits.</p>

<p>I feel as though there should be a better way to do this. Or is this how everyone else does it, too?</p>
","37","18706","<git>"
"226976","1","How can I know in git if a branch has been already merged into master?","<p>I have a git repository with multiple branches. </p>

<p>How can I know which branches are already merged into the master branch?</p>
","532","89013","<git>"
"7239333","1","How do I commit only some files?","<p>I have two projects. One is the ""official"" project and the second is a light modification (some files added). I created new branch and I put new files to them. But in during development some files common to both branches is changed.</p>

<p>How do I commit only these files?</p>
","91","86496","<git><git-branch><git-commit>"
"2428722","1","Git branch strategy for small dev team","<p>We have a web app that we update and release almost daily. We use git as our VCS, and our current branching strategy is very simple and broken: we have a master branch and we check changes that we 'feel good about' into it. This works, but only until we check in a breaking change.</p>

<p>Does anyone have a favorite git branch strategy for <strong>small teams</strong> which meets the following requirements:</p>

<ol>
<li>Works well for teams of 2 to 3 developers</li>
<li>Lightweight, and not too much process</li>
<li>Allows devs to isolate work on bug fixes and larger features with ease</li>
<li>Allows us to keep a stable branch (for those 'oh crap' moments when we have to get our production servers working)</li>
</ol>

<p>Ideally, I'd love to see your step-by-step process for a dev working on a new bug</p>
","136","54718","<git><branch><git-branch>"
"9063176","1","git multiple user names for the different projects within the same system","<p>I have a different git repository for my office and a different git repo for my hobby projects. </p>

<p>When I do <code>git config --global user.name</code>
the user name changes globally and this creates a confusion
of committing to a repo with user name. </p>

<p>Hence the question is how can i have the same username across all my hobby projects and 
the same username across the office projects. I use the same machine to work on both the places.</p>
","45","21190","<git><git-config>"
"3814926","1","Git commit date","<p>Other than parsing git log for the date string, is there a Git native way to report the date of a certain commit?</p>
","70","26131","<git>"
"3816040","1","git: Apply changes introduced by commit in one repo to another repo","<p>I have a <code>repo1</code> and <code>repo2</code> on local machine. They are very similar, but the latter is some kind of other branch (<code>repo1</code> is not maintained anymore).</p>

<pre><code>/path/to/repo1 $ git log HEAD~5..HEAD~4
&lt;some_sha&gt; Add: Introduce feature X
</code></pre>

<p>How to apply changes made by commit <code>&lt;some_sha&gt;</code> in <code>repo1</code> to <code>repo2</code>?</p>

<p>Do I need to prepare some patch, or is it possible to do some <code>cherry-pick</code> between the repos?</p>

<p>How about doing the same but for range of commits?</p>
","46","17680","<git>"
"6465699","1","Git push to wrong branch","<p>Working with git, after some 'commit', and a couple of 'push', I realized that am using the wrong branch !</p>

<p>Now I have to remove in some way my changes in wrong_branch
and commit and push the changes in right_branch</p>

<p>What's the best (and simple) way to do that ?</p>

<p>thank you </p>
","41","8486","<git><github>"
"29168","1","Deploying a Git subdirectory in Capistrano","<p>My master branch layout is like this:</p>

<p><strong>/</strong> &lt;-- top level</p>

<p><strong>/client</strong> &lt;-- desktop client source files</p>

<p><strong>/server</strong> &lt;-- Rails app</p>

<p>What I'd like to do is only pull down the /server directory in my <code>deploy.rb</code>, but I can't seem to find any way to do that. The /client directory is huge, so setting up a hook to copy /server to / won't work very well, it needs to only pull down the Rails app.</p>
","57","11199","<ruby-on-rails><git><deployment><capistrano>"
"40495","1","Bug tracker setup with Git integration?","<p>I know I can do most of this by hacking Trac and using Git hooks, but I was wondering if someone has / knows of something ready.</p>

<p>Commenting on (and closing) tickets from commit messages would be nice, specially if the diff appears inline with the comment/closing remark.</p>

<p>sha1 hashes should be auto-linked to gitweb/cigt/custom git browser.</p>

<p>I tried the GitPlugin for Trac, but the code browser was soo slow... any alternatives?</p>
","32","39094","<git><integration><version-control><bug-tracking>"
"52950","1","How to make git ignore changes in case?","<p>I'm not too sure what is going on here, but sometimes a particular file in my repository will change the case of it's name. e.g.,:</p>

<p>before: <code>File.h</code></p>

<p>after: <code>file.h</code></p>

<p>I don't really care why this is happening, but this causes git to think it is a new file, and then I have to go and change the file name back. Can you just make git ignore case changes?</p>

<p><strong>[edit]</strong>
I suspect it is Visual Studio doing something weird with that particular file, because it seems to happen most often when I open and save it after changes. I don't have any way to fix bugs in VS however, but git should be a bit more capable I hope.</p>
","52","34400","<windows><git>"
"53569","1","How to get the changes on a branch in git","<p>What is the best way to get a log of commits on a branch since the time it was branched from the current branch? My solution so far is:</p>

<pre><code>git log $(git merge-base HEAD branch)..branch
</code></pre>

<p>The documentation for <a href=""http://git-scm.com/docs/git-diff"">git-diff</a> indicates that <code>git diff A...B</code> is equivalent to <code>git diff $(git-merge-base A B) B</code>. On the other hand, the documentation for <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-rev-parse.html"">git-rev-parse</a> indicates that <code>r1...r2</code> is defined as <code>r1 r2 --not $(git merge-base --all r1 r2)</code>.</p>

<p>Why are these different? Note that <code>git diff HEAD...branch</code> gives me the diffs I want, but the corresponding git log command gives me more than what I want.</p>

<p>In pictures, suppose this:</p>

<pre>
         x---y---z---branch
        /
---a---b---c---d---e---HEAD
</pre>

<p>I would like to get a log containing commits x, y, z.</p>

<ul>
<li><code>git diff HEAD...branch</code> gives these commits</li>
<li>however, <code>git log HEAD...branch</code> gives x, y, z, c, d, e.</li>
</ul>
","197","123127","<git><branch>"
"119444","1","Locking binary files using git version control system","<p>For one and a half years, I have been keeping my eyes on the git community in hopes of making the switch away from SVN.  One particular issue holding me back is the inability to lock binary files. Throughout the past year I have yet to see developments on this issue.  I understand that locking files goes against the fundamental principles of distributed source control, but I don't see how a web development company can take advantage of git to track source code and image file changes when there is the potential for binary file conflicts.</p>

<p>To achieve the effects of locking, a ""central"" repository must be identified.  Regardless of the distributed nature of git, most companies will have a ""central"" repository for a software project.  We should be able to mark a file as requiring a lock from the governing git repository at a specified address.  Perhaps this is made difficult because git tracks file contents not files?</p>

<p>Do any of you have experience in dealing with git and binary files that should be locked before modification?</p>

<p>NOTE: It looks like Source Gear's new open source distributed version control project, Veracity, has locking as one of its goals.</p>
","66","37723","<git><version-control><binary><dvcs>"
"9605430","1","Thin web server: `start_tcp_server': no acceptor (RuntimeError) after git branch checkout","<p>A Rails 3.2.0 app, working fine with Thin web server, both locally and on Heroku cedar stack.</p>

<p>After:</p>

<pre><code>$ git branch work
$ git checkout work
$ rails server
</code></pre>

<p>I get:</p>

<pre><code>=&gt; Booting Thin
=&gt; Rails 3.2.0 application starting in development on http://0.0.0.0:3000
=&gt; Call with -d to detach
=&gt; Ctrl-C to shutdown server
&gt;&gt; Thin web server (v1.3.1 codename Triple Espresso)
&gt;&gt; Maximum connections set to 1024
&gt;&gt; Listening on 0.0.0.0:3000, CTRL+C to stop
Exiting
/Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/eventmachine-0.12.10/lib/eventmachine.rb:572:in `start_tcp_server': no acceptor (RuntimeError)
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/eventmachine-0.12.10/lib/eventmachine.rb:572:in `start_server'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/thin-1.3.1/lib/thin/backends/tcp_server.rb:16:in `connect'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/thin-1.3.1/lib/thin/backends/base.rb:53:in `block in start'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `call'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run_machine'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/eventmachine-0.12.10/lib/eventmachine.rb:256:in `run'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/thin-1.3.1/lib/thin/backends/base.rb:61:in `start'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/thin-1.3.1/lib/thin/server.rb:159:in `start'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/rack-1.4.1/lib/rack/handler/thin.rb:13:in `run'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/rack-1.4.1/lib/rack/server.rb:265:in `start'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/railties-3.2.0/lib/rails/commands/server.rb:70:in `start'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/railties-3.2.0/lib/rails/commands.rb:55:in `block in &lt;top (required)&gt;'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/railties-3.2.0/lib/rails/commands.rb:50:in `tap'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/gems/railties-3.2.0/lib/rails/commands.rb:50:in `&lt;top (required)&gt;'
from script/rails:6:in `require'
from script/rails:6:in `&lt;main&gt;'
</code></pre>

<p>Also, when I do:</p>

<pre><code>sudo bundle exec rails server thin -p 3000
</code></pre>

<p>I get:</p>

<pre><code>/Users/peter/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1/rubygems/dependency.rb:247:in `to_specs': Could not find bundler (&gt;= 0) amongst [bigdecimal-1.1.0, io-console-0.3, json-1.5.4, minitest-2.5.1, rake-0.9.2.2, rdoc-3.9.4] (Gem::LoadError)
from /Users/peter/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1/rubygems/dependency.rb:256:in `to_spec'
from /Users/peter/.rvm/rubies/ruby-1.9.3-p125/lib/ruby/site_ruby/1.9.1/rubygems.rb:1210:in `gem'
from /Users/peter/.rvm/gems/ruby-1.9.3-p125/bin/bundle:18:in `&lt;main&gt;'
</code></pre>

<p>I have bundler 1.0.22 installed. Updated and installed it. Nothing seems to work. Any ideas?</p>
","95","42226","<ruby-on-rails-3><git><thin>"
"4845505","1","gitx How do I get my 'Detached HEAD' commits back into master","<p>Using Git X and must have fumbled royally on something.  Looks like a few days ago I created a branch called <code>detached HEAD</code> and have been committing to it.  My normal process is to commit to <code>master</code> and then push that to <code>origin</code>.  But I can't push <code>detached HEAD</code>.</p>

<p>My next stop screwed me. I selected <code>git checkout master</code> - and my <code>detached HEAD</code> branch disappeared. Going back to my project all of my changes in the past few days have been wiped.</p>

<p>Is there anyway I can get those changes back?</p>
","136","42794","<git><version-control>"
"14489109","1","How to alias 'git checkout' to 'git co'?","<p>I'd like the command <code>git co</code> to be the same as typing <code>git checkout</code>.</p>

<p>A normal bash alias (<code>alias co='checkout'</code>) doesn't work.</p>
","54","12577","<git><alias><git-alias>"
"4855561","1","Difference between git remote add and git clone","<p>What clone command does?
Is there any equivalent to it in svn?</p>

<p>What is the difference between </p>

<pre><code>git remote add test git://github.com/user/test.git
</code></pre>

<p>And </p>

<pre><code>git clone git://github.com/user/test.git
</code></pre>

<p>Does the name of the created repo matter?</p>
","37","19650","<git><git-clone><git-remote>"
"244695","1","How to combine two branches from two different repositories in a single repository?","<p>The structures of my Git repositories look like this:</p>

<pre><code>A-B-C-D-E-F   # master branch in separate repo1
A-B-C-D-E-G-H # master branch in separate repo2
</code></pre>

<p>A-H are simple commits. As you can see the repositories are related (repo2 is a fork of repo1). I'm trying to combine these two repositories in one.</p>

<p>Afterwards the single repository should have the following structure:</p>

<pre><code>A-B-C-D-E-F   # master branch of previous repo1
        \
         \
          G-H # master branch of previous repo2
</code></pre>

<p>I've already spent a lot of time reading the Git User's Guide and so on. However, this (special) case of use doesn't seem to be documented anywhere.</p>
","43","17125","<git>"
"246275","1","Modified files in a git branch are spilling over into another branch","<p>I am working on a git repository with a master branch and another topic branch. I have switched to topic branch and modified a file. Now, if I switched to master branch that same file is shown as modified. </p>

<p>For example:</p>

<p>git status in git-build branch:</p>

<pre><code># On branch git-build
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       modified:   cvsup_current
#
</code></pre>

<p>Switch to master branch</p>

<pre><code>[root@redbull builder_scripts (git-build)]# git co master
M       builder_scripts/cvsup_current
Switched to branch ""master""
</code></pre>

<p>git status in master branch</p>

<pre><code>[root@redbull builder_scripts (master)]# git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       modified:   cvsup_current
#
</code></pre>

<p>Why is that the file is shown as modified in master branch even though it was modified in git-build branch? </p>

<p>My understanding was that the branches are independent of each other and when I change from one branch to another the changes do not ""spill over"" from one branch to another. So I am obviously missing some thing here. </p>

<p>Anyone got a clue stick?</p>
","35","9458","<git><git-branch>"
"7251477","1","What are the differences between double-dot "".."" and triple-dot ""..."" in Git diff commit ranges?","<p>What are the differences between the following commands?:</p>

<pre class=""lang-bash prettyprint-override""><code>git diff foo master   # a 
git diff foo..master  # b
git diff foo...master # c
</code></pre>

<p><a href=""http://jk.gs/git-diff.html#_examples"">The diff manual</a> talks about it:</p>

<blockquote>
  <p>Comparing branches</p>

<pre><code>$ git diff topic master    &lt;1&gt;
$ git diff topic..master   &lt;2&gt;
$ git diff topic...master  &lt;3&gt;
</code></pre>
  
  <ol>
  <li>Changes between the tips of the topic and the master branches.</li>
  <li>Same as above.</li>
  <li>Changes that occurred on the master branch since when the topic branch was started off it.</li>
  </ol>
</blockquote>

<p>but isn't totally clear to me.</p>
","68","7330","<git><diff><git-diff>"
"292357","1","What are the differences between 'git pull' and 'git fetch'?","<p>What are the differences between <code>git pull</code> and <code>git fetch</code>?</p>
","6357","1352353","<git><git-pull><git-fetch>"
"12104513","1","What does GitHub for Windows' ""sync"" do?","<p>With GitHub for Windows, you can ""publish"" a branch, and then ""sync"" that branch to GitHub.</p>

<p><img src=""http://i.stack.imgur.com/6NPCm.png"" alt=""enter image description here""></p>

<p>Is the sync basically a <code>git pull</code> and <code>git push</code>? Or is there more to it? If I wanted to do the exact same steps as ""sync"" from the command line, what should I do?</p>

<p>(It's not Open Source, or I'd just read that.)</p>
","63","20937","<git><github-for-windows>"
"7298598","1","What is the difference between git clone and checkout?","<p>What is the difference between <code>git clone</code> and <code>git checkout</code>?</p>
","146","84607","<git><command>"
"2500586","1","Setting git default flags on commands","<p>I want to know if there is a way to set a flag by default for git command. Specifically, I want to set the <code>--abbrev-commit</code> flag so that when executing <code>git log</code>, I want to execute <code>git log --abbrev-commit</code>.</p>

<p>Unlike the question ""<a href=""http://stackoverflow.com/questions/1278296/is-there-any-way-to-set-a-flag-by-default-for-a-git-command"">is there any way to set a flag by default for a git command?</a>"", there is apparently not a configuration flag for adding --abbrev-commit to git log. Furthermore, the git manual states that I cannot create an alias: <a href=""http://git-scm.com/docs/git-config"">""To avoid confusion and troubles with script usage, aliases that hide existing git commands are ignored""</a></p>

<p>My third option is to invent a new alias like <code>glog=log --abbrev-commit</code> in my .gitconfig file. But I'd rather not invent my own DSL with new commands. </p>

<p>Is there another way to achieve it so that the <code>abbrev-commit</code> flag is set by default??</p>
","62","12498","<git><logging>"
"7311995","1","What is `git push origin master`? Help with git's refs, heads and remotes","<p>I have a question about what <code>git push origin master</code> does:</p>

<ul>
<li>I know that <code>origin</code> is the remote (aka GitHub)</li>
<li><code>git push origin master</code> is the same as <code>git push origin master_on_my_machine:master_on_github</code></li>
</ul>

<p>I don't know if:</p>

<ul>
<li><code>master_on_my_machine</code> is equal to <code>/refs/heads/master</code></li>
<li><code>master_of_github</code> is equal to <code>/refs/remotes/origin/master</code></li>
</ul>

<p>If it's equal, should it be possible to do
<code>git push origin refs/heads/master:refs/heads/origin/master</code>?</p>

<p>Finally, what I want to do is only type <code>git push</code> and <code>git pull</code> when:</p>

<ul>
<li>I'm on a master branch</li>
<li>I want to push and pull from a my_test branch on github, only typing <code>git push</code> and <code>git pull</code>.</li>
</ul>
","41","65470","<git>"
"9706492","1","Git Diff output to file preserve coloring","<p>Is it possible to git diff, save the output to a file with the coloring somehow?</p>

<p>I know how to git diff > filename.rtf - which saves to a file but I'd like to preserve the coloring.</p>
","40","19936","<git>"
"2517190","1","How do I force git to use LF instead of CR+LF under windows?","<p>I want to force git to checkout files under Windows using just <code>LF</code> not <code>CR+LF</code>. I checked the two configuration options but I was not able to find the right combination of settings.</p>

<p>I want it to convert all files to <code>LF</code> and keep the <code>LF</code> on the files.</p>

<p>Remark: I used <code>autocrlf = input</code> but this just repairs the files when you commit them. I want to force it to get them using <code>LF</code>.</p>

<p>Probably I wasn't so clear: the repository is already using <code>LF</code> but the files checked out using msysgit are using <code>CR+LF</code> and I want to force msysgit to get them with <code>LF</code>: <strong>forcing Unix line endings</strong>.</p>

<pre><code>&gt;git config --list | grep crlf
core.autocrlf=input
</code></pre>
","129","65557","<git><msysgit>"
"9720718","1","How do I move an issue on github to another repo?","<p>It happens every now and then. Some library depends on another and a user opens an issue that belongs to the wrong repo. Can I move the issue to the other repo?</p>

<p>You could argue that the issue could be seen as being both repos' issue because one depends on the other and as long as one doesn't work properly both don't. But I'd rather talk about solutions to the issue in the repo it belongs in.</p>
","53","9927","<git><github>"
"2517339","1","git - how to recover the file permissions git thinks the file should be?","<p>I have a git checkout. All the file permissions are different than what git thinks they should be therefore they all show up as modified.</p>

<p>Without touching the content of the files (just want to modify the permissions) how do I set all the files permissions to what git thinks they should be?</p>
","132","45619","<git><file><permissions>"
"366093","1","Git commit against tag with no branch","<p>If I check out a tagged version of my source code without creating a branch, Git indicates that I'm not associated with any branch at all. It's happy to let me make changes and check them in though. Where do those changes go? If I switch back to 'master' they disappear (overwritten by what was in master) and I can't seem to find them again. What gives? If Git lets me commit changes against what's essentially an anonymous branch, surely I can get them back?</p>
","54","19367","<git><branch><tags><commit>"
"366860","1","When would you use the different git merge strategies?","<p>From the man page on git-merge, there are a number of merge strategies you can use.  </p>

<ul>
<li><p><em>resolve</em> - 
This can only resolve two heads (i.e. the current branch and another branch you pulled from) using 3-way merge algorithm. It tries to carefully detect criss-cross merge ambiguities and is considered generally safe and fast.</p></li>
<li><p><em>recursive</em> - 
This can only resolve two heads using 3-way merge algorithm. When there are more than one common ancestors that can be used for 3-way merge, it creates a merged tree of the common ancestors and uses that as the reference tree for the 3-way merge. This has been reported to result in fewer merge conflicts without causing mis-merges by tests done on actual merge commits taken from Linux 2.6 kernel development history. Additionally this can detect and handle merges involving renames. This is the default merge strategy when pulling or merging one branch.</p></li>
<li><p><em>octopus</em> - 
This resolves more than two-head case, but refuses to do complex merge that needs manual resolution. It is primarily meant to be used for bundling topic branch heads together. This is the default merge strategy when pulling or merging more than one branches.</p></li>
<li><p><em>ours</em> - 
This resolves any number of heads, but the result of the merge is always the current branch head. It is meant to be used to supersede old development history of side branches.</p></li>
<li><p><em>subtree</em> - 
This is a modified recursive strategy. When merging trees A and B, if B corresponds to a subtree of A, B is first adjusted to match the tree structure of A, instead of reading the trees at the same level. This adjustment is also done to the common ancestor tree.</p></li>
</ul>

<p>When should I specify something different than the default?  What scenarios are each best for?</p>
","301","81989","<git><merge><git-merge>"
"4991594","1","Revert a range of commits in git","<p>How can I revert a range of commits in git? From looking at the <a href=""http://www.kernel.org/pub/software/scm/git/docs/gitrevisions.html"">gitrevisions</a> documentation, I cannot see how to specify the range I need. For example:</p>

<pre><code>A -&gt; B -&gt; C -&gt; D -&gt; E -&gt; HEAD
</code></pre>

<p>I want to do the equivalent of:</p>

<pre><code>git revert B-D
</code></pre>

<p>where the result would be:</p>

<pre><code>A -&gt; B -&gt; C -&gt; D -&gt; E -&gt; F -&gt; HEAD
</code></pre>

<p>where F contains the reverse of B-D inclusive.</p>
","54","17924","<git><revert><range>"
"7374069","1","Undo git reset --hard with uncommitted files in the staging area","<p>I am trying to recover my work. I stupidly did <code>git reset --hard</code>, but before that I've done only <code>get add .</code> and didn't do <code>git commit</code>. Please help! Here is my log:</p>

<pre><code>MacBookPro:api user$ git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)

#   modified:   .gitignore
...


MacBookPro:api user$ git reset --hard
HEAD is now at ff546fa added new strucuture for api
</code></pre>

<p>Is it possible to undo <code>git reset --hard</code> in this situation?</p>
","80","39997","<git><undo><git-commit><git-reset><git-add>"
"2569459","1","Git: Create a branch from unstaged/uncommited changes on master","<p>Context: I'm working on master adding a simple feature. After a few minutes I realize it was not so simple and it should have been better to work into a new branch.</p>

<p>This always happens to me and I have no idea how to switch to another branch and take all these uncommited changes with me leaving the master branch clean. I supposed <code>git stash &amp;&amp; git stash branch new_branch</code> would simply accomplish that but this is what I get:</p>

<pre><code>~/test $ git status
# On branch master
nothing to commit (working directory clean)

~/test $ echo ""hello!"" &gt; testing 

~/test $ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   testing
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")

~/test $ git stash
Saved working directory and index state WIP on master: 4402b8c testing
HEAD is now at 4402b8c testing

~/test $ git status
# On branch master
nothing to commit (working directory clean)

~/test $ git stash branch new_branch
Switched to a new branch 'new_branch'
# On branch new_branch
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   testing
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
Dropped refs/stash@{0} (db1b9a3391a82d86c9fdd26dab095ba9b820e35b)

~/test $ git s
# On branch new_branch
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   testing
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")

~/test $ git checkout master
M   testing
Switched to branch 'master'

~/test $ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   testing
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Do you know if there is any way of accomplishing this?</p>
","514","112523","<git><git-stash>"
"9765453","1","Is git's semi-secret empty tree object reliable, and why is there not a symbolic name for it?","<p>Git has a well-known, or at least sort-of-well-known, empty tree whose SHA1 is:</p>

<pre><code>4b825dc642cb6eb9a060e54bf8d69288fbee4904
</code></pre>

<p>(you can see this in any repo, even a newly created one, with <code>git cat-file -t</code> and <code>git cat-file -p</code>).</p>

<p>If you work hard and are very careful you can sort of use this empty tree to store a directory that has no files (see <a href=""http://stackoverflow.com/a/8944077/1256452"">answer to How do I add an empty directory to a git repository</a>), although it's not really a great idea.</p>

<p>It's more useful as one argument to <code>git diff-tree</code>, which one of the sample hooks does.</p>

<p>What I'm wondering is, </p>

<ol>
<li>how reliable is this—i.e., will some future version of git not have a git object numbered <code>4b825dc642cb6eb9a060e54bf8d69288fbee4904</code>?  </li>
<li>Why is there no symbolic name for the empty tree (or is there one?).</li>
</ol>

<p>(A quick and dirty way to create a symbolic name is to put the SHA1 in, e.g., <code>.git/Nulltree</code>.  Unfortunately you have to do this for every repo.  Seems better to just put the magic number in scripts, etc.  I just have a general aversion to magic numbers.)</p>
","61","8344","<git>"
"433111","1","How to make git mark a deleted and a new file as a file move?","<p>I've moved a file manually and then I've modified it. According to Git, it is a new file and a removed file. Is there any way to force Git into treating it as a file move?</p>
","196","47814","<git>"
"12206779","1","git push heroku master Permission denied (publickey). fatal: The remote end hung up unexpectedly","<p>Please excuse a bit of frustration, which I will try to keep in check since Heroku is using SO as their customer support (which I think it shoddy to say the least).</p>

<p>For the last five hours I have been trying to get an application to publish, but invariably something goes wrong with the keys. I've read dozens of articles and tried tip after tip in an effort to figure out where, in the stupid, completely opaque process Heroku is screwing up.</p>

<p>My use case is not that difficult: I have created a new keypair for my heroku apps. I have set that key to be my key:</p>

<pre><code>  &gt; heroku keys
  === travis@xxxx.com Keys
  ssh-rsa AAAAB3NzaC...avOqfA7ZBd travis@xxxx.com
</code></pre>

<p>I can log in and ""create"" an application (stupid name, since it seems to be creating a git repo, not any sort of app) without problem. But <em>every</em> *freaking* <em>time</em> I try to push my app, I get:</p>

<pre><code>  &gt; git push heroku master
  Permission denied (publickey).
  fatal: The remote end hung up unexpectedly
</code></pre>

<p>I have no insight into WTF is going on with it; I'm just stuck banging my head against a keyboard with no recourse but to hope the almighty god of Google can answer it. And google isn't answering it (well, let me take that back, I've seen about a dozen ways to answer this).</p>

<p>For a system that is supposed to be easy, this is a joke. I like the idea of Heroku, but after taking five our to get absolutely <em>nothing</em> done, I'm thinking maybe it is the wrong choice.</p>
","83","30953","<git><heroku>"
"5064563","1","Add line break to git commit -m from command line","<p>I am using git from the command line, and trying to add a line break to the commit message (using git commit -m """") without going into <code>vim</code>.</p>

<p>Is this possible?</p>
","301","82664","<git><bash><shell>"
"14679614","1","What's the best practice for putting multiple projects in a git repository?","<p>As some reason, I only have one repository to use. But I have multiple projects including java projects, php scripts and android apps.
Now my problems is, I have to put them to different sub-folders for each projects; and for php projects and java projects, I use different IDE. You know, each IDE can have a workspace of itself.</p>

<p>Who can tell me a best practice to solve the problem?</p>
","40","35451","<git>"
"17182624","1","Contributing to project on github, how to ""rebase my pull request on top of master""","<p>Ok so I an contributing to a project on github. The project on github is <code>upstream</code>, my forked repo on github is <code>origin</code>, and my <code>local</code> repo on my computer.</p>

<pre><code>git checkout -b feature
# Working on feature
git commit -a -m 'only commit on feature'
</code></pre>

<p>then I submit a pull request </p>

<pre><code>git push origin master
</code></pre>

<p>The pull request is reviewed and a unrelated change needs to be made. Someone else makes a commit and merge into <code>upstream/master</code></p>

<p>Now I am asked by the <code>upstream</code> maintainer to <strong>""rebase my pull request on top of master""</strong></p>

<p>This is my story (insert Law and Order sound effect).....</p>

<p>I did not make any changes to the pull request and its still the same commit on branch feature. </p>

<pre><code>git checkout master
git fetch upstream
git checkout feature
git rebase master
=&gt; ""Current branch feature is up to date.""
git push origin feature
=&gt; ""Everything up-to-date""
</code></pre>

<p>I don't understand. How is this possible when I know that someone committed and merged to <code>upstream/master</code> after I pushed my pull request to <code>origin/feature</code>?</p>

<p>Can anyone tell me what the correct procedure should be in this situation?</p>
","72","15646","<git><github>"
"5131948","1","Use of an exclamation mark in a Git commit message via command line?","<p>How do I enter an exclamation point into a Git commit message from the command line?</p>

<p>It is possible to escape the exclamation point with a backslash, but then the backslash ends up in the commit message as well.</p>

<p>I want something like this:</p>

<pre><code>git commit -am ""Nailed it!""
</code></pre>
","103","6948","<git><bash>"
"2700140","1","How do I search git history for a disappeared line?","<p>I need to search the history of a specific file in a git repository to find a line that is gone.  The commit message will not have any relevant text to search on.  What command do I use?</p>

<p>Further details: this is the history of my todo list out of our non-stellar task tracking software.  I've been keeping it for two years because there's just not enough information kept for me in the software.  My commit messages usually have only the task ids, unfortunately, and what I need to do is find a closed task by subject, not by number.  Yes, the real solution is better task tracking software, but that is completely out of my hands.</p>
","34","3428","<git>"
"2751227","1","How to download source in ZIP format from GitHub?","<p>I see something strange like: </p>

<p><a href=""http://github.com/zoul/Finch.git"">http://github.com/zoul/Finch.git</a></p>

<p>Now I'm not that CVS, SVN, etc. dude. When I open that in the browser it tells me that I did something wrong. So I bet I need some hacker-style tool? Some client?</p>

<p>(I mean... why not just provide a ZIP file? Isn't the world complex enough?)</p>
","210","497416","<git><github>"
"614245","1","Git and Team Foundation Server","<p><strong>Update:</strong> I don't use TFS anymore. But from the comments I can see that <strong>git-tfs</strong> is obviously the way to go nowadays.</p>

<p>Has anybody experience using Git as an offline solution for Team Foundation Server?</p>

<p>For Subversion you could use git-svn to keep a private repository with a svn backend.</p>

<p>I tried to use <a href=""http://www.codeplex.com/SvnBridge"">SvnBridge</a> and git-svn to work with TFS. At first it looked promising but Visual Studio recognizes the solution as being under TFS version control and interferes during commit.</p>

<p>Are there other ways to combine those two?</p>
","56","19986","<git><tfs>"
"5203535","1","Practical uses of git reset --soft?","<p>I have been working with git for just over a month. Indeed I have used reset for the first time only yesterday, but the soft reset still doesn't make much sense to me.</p>

<p>I understand I can use the soft reset to edit a commit without altering the index or the working directory, as I would with <code>git commit --amend</code>. </p>

<p>Are these two commands really the same (<code>reset --soft</code> vs <code>commit --amend</code>)? Any reason to use one or the other in practical terms? And more importantly, are there any other uses for <code>reset --soft</code> apart from amending a commit?</p>
","57","60104","<git>"
"658885","1","How do you get git to always pull from a specific branch?","<p>I'm not a git master, but I have been working with it for some time now, with several different projects.  In each project, I always <code>git clone [repository]</code> and from that point, can always <code>git pull</code>, so long as I don't have outstanding changes, of course.</p>

<p>Recently, I had to revert to a previous branch, and did so with <code>git checkout 4f82a29</code>.  When I was again ready to pull, I found that I had to set my branch back to master.  Now, I can not pull using a straight <code>git pull</code> but instead, have to specify <code>git pull origin master</code>, which is annoying, and indicates to me that I don't fully understand what is going on.</p>

<p>What has changed which does not allow me to do a straight <code>git pull</code> without specifying origin master, and how to I change it back?</p>

<p>UPDATE:</p>

<pre><code>-bash-3.1$ cat config
[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
[branch ""master""]
[remote ""origin""]
    url = git@github.com:user/project.git
    fetch = refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>UPDATE 2: To be clear, I understand that my original method may have been incorrect, but I need to fix this repo so that I can simply use <code>git pull</code> again.  Currently, git pull results in:</p>

<pre><code>-bash-3.1$ git pull
You asked me to pull without telling me which branch you
want to merge with, and 'branch.master.merge' in
your configuration file does not tell me either.  Please
name which branch you want to merge on the command line and
try again (e.g. 'git pull  ').
See git-pull(1) for details on the refspec.

If you often merge with the same branch, you may want to
configure the following variables in your configuration
file:

    branch.master.remote = 
    branch.master.merge = 
    remote..url = 
    remote..fetch = 

See git-config(1) for details.
</code></pre>

<p>I can tell <code>git pull</code> which branch to merge, and it works correctly, but <code>git pull</code> does not work as it did originally before my <code>git checkout</code>.</p>
","431","176647","<git><version-control>"
"659467","1","How to apply SVN diff to Git?","<p>I have my projects in 2 repositories. One under SVN and one under Git.
Whenever I change something in SVN I want to do the same thing to the Git repository.</p>

<p>Say I make a change to SVN repository, producing revision 125. How would I apply these same changes to my Git repository (assuming my Git repository is up to date with revision 124).</p>

<p>Thank you.</p>
","44","15568","<svn><git><version-control><patch>"
"14817051","1","Why does GitHub call foreign submissions, a ""Pull Request""?","<p>I'm curious why GitHub calls submissions to merge, ""Pull requests.""</p>

<p>From my understanding, <code>git pull</code> will pull all changes, from a remote repository, into a current working branch.  Then merge those changes with <code>FETCH_HEAD</code>. (<a href=""http://www.kernel.org/pub/software/scm/git/docs/git-pull.html"">Git Pull</a>)</p>

<p>So taking a look at <code>git push</code>... a push would actually push committed changes to a repository.  And isn't that what you are doing with a Git repo?  Submitting a ""request"" to merge your code? So why isn't it called a ""Push request""?</p>
","37","2763","<git><github><terminology>"
"750172","1","Change the author of a commit in Git","<p>I was writing a simple script in the school computer, and committing the changes to Git (in a repo that was in my pendrive, cloned from my computer at home). After several commits I realized I was committing stuff as the root user.</p>

<p>Is there any way to change the author of these commits to my name?</p>
","1447","492637","<git><version-control><git-filter-branch><git-rewrite-history>"
"750765","1","Concurrency in a GIT repo on a network shared folder","<p>I want to have a bare git repository stored on a (windows) network share. I use linux, and have the said network share mounted with CIFS. My coleague uses windows xp, and has the network share automounted (from ActiveDirectory, somehow) as a network drive.</p>

<p>I wonder if I can use the repo from both computers, without concurrency problems. </p>

<p>I've already tested, and on my end I can clone ok, but I'm afraid of what might happen if we both access the same repo (push/pull), at the same time.</p>

<p>In the git FAQ there is a reference about using network file systems (and some problems with SMBFS), but I am not sure if there is any file locking done by the network/server/windows/linux - i'm quite sure there isn't.</p>

<p>So, has anyone used a git repo on a network share, without a server, and without problems?</p>

<p>Thank you,<br/>
Alex</p>

<p>PS: I want to avoid using an http server (or the git-daemon), because I do not have access to the server with the shares. Also, I know we can just push/pull from one to another, but we are required to have the code/repo on the share for back-up reasons.</p>

<p><b>Update:</b><br /><br />
My worries are not about the possibility of a network failure. Even so, we would have the required branches locally, and we'll be able to compile our sources.</p>

<p>But, we usually commit quite often, and need to rebase/merge often. From my point of view, the best option would be to have a central repo on the share (so the backups are assured), and we would both clone from that one, and use it to rebase.</p>

<p>But, due to the fact we are doing this often, I am afraid about <b>file/repo corruption</b>, if it happens that we both push/pull at the same time. Normally, we could <i>yell</i> at each other each time we access the remote repo :), but it would be better to have it secured by the computers/network.</p>

<p>And, it is possible that GIT has an internal mechanism to do this (since someone can push to one of your repos, while you work on it), but I haven't found anything conclusive yet.</p>

<p><b>Update 2:</b><br /><br />
The repo on the share drive would be a <b>bare</b> repo, not containing a working copy.</p>
","42","11236","<windows><linux><git><concurrency><network-share>"
"7614215","1","Managing conflict in schema.rb created by Git operation","<p>I created a migration, ran <code>rake db:migrate</code>, which bumped my db/schema.rb version number. Then I did a <code>git fetch origin master</code> and saw that there were changes from my team members. So I did a <code>git stash</code> and a <code>git rebase FETCH_HEAD</code>, followed by a <code>git stash pop</code>. This resulted in a conflict in db/schema.rb over the version number. </p>

<pre><code>Upstream&gt;&gt;&gt;
ActiveRecord::Schema.define(:version =&gt; 20110930179257) do
===========
ActiveRecord::Schema.define(:version =&gt; 20110930161932) do
&lt;&lt;&lt;Stashed
</code></pre>

<p>I think the appropriate fix would be to manually increment the version number to something higher than the upstream.</p>

<p>Is this sensible, or bad news?</p>

<p>Thanks,
Max</p>
","32","10328","<ruby-on-rails><git><migration>"
"804115","1","When do you use git rebase instead of git merge?","<p>When is it recommended to use <code>git rebase</code> vs. <code>git merge</code>?</p>

<p>Do I still need to merge after a successful rebase?</p>
","822","182002","<git><version-control><git-merge><git-rebase>"
"804545","1","What is this Git warning message when pushing changes to a remote repository?","<p>The description is a bit terse. I simply added a file on my local master branch and pushed it back to a remote repo. Any idea why this is coming up?</p>

<pre>
warning: updating the current branch
warning: Updating the currently checked out branch may cause confusion,
warning: as the index and work tree do not reflect changes that are in HEAD.
warning: As a result, you may see the changes you just pushed into it
warning: reverted when you run 'git diff' over there, and you may want
warning: to run 'git reset --hard' before starting to work to recover.
warning: 
warning: You can set 'receive.denyCurrentBranch' configuration variable to
warning: 'refuse' in the remote repository to forbid pushing into its
warning: current branch.
warning: To allow pushing into the current branch, you can set it to 'ignore';
warning: but this is not recommended unless you arranged to update its work
warning: tree to match what you pushed in some other way.
warning: 
warning: To squelch this message, you can set it to 'warn'.
warning: 
warning: Note that the default will change in a future version of git
warning: to refuse updating the current branch unless you have the
warning: configuration variable set to either 'ignore' or 'warn'.   
</pre>
","36","16735","<git><version-control>"
"805222","1","How to copy a local Git branch to a remote repo","<p>I've taken the following steps so far:</p>

<ol>
<li>Cloned a remote Git repo</li>
<li>Branched the master branch to an experimental</li>
<li>edited/tested/committed code in the experimental branch</li>
</ol>

<p>Now, I'm not ready to merge experimental into master. I do however want to push it back to the remote repo as that's the repository I share with a few colleagues. I'd like for them to see what I've done in the experimental branch. I typically just access the remote repo via SSH. </p>

<p>How do I share my local branch on the remote repo, without affecting the remote repo's master branch?</p>
","125","74043","<git><version-control><distributed>"
"10018533","1","is it possible to `git status` only modified files?","<p>Is it possible to <code>git status</code> and show only modified files? </p>

<p>The problem is i have too many staged files that i don't want to commit or gitignore at the moment and i can't scroll up. I have a scrollback limit set on Ubuntu.</p>
","73","24372","<git>"
"5281663","1","How do you tell git to stash the index only?","<p>I have just used ""git add -p"" to add a bunch of changes to the index, and I just realised that I missed a change that should've gone into the previous commit.</p>

<p>I can't commit --amend now because I've added all these new changes to the index, and I don't want to use 'git reset' to remove them all from the index as it will take ages to add them all back in again.</p>

<p>What I need is something like 'git stash' that will only stash the index - it should leave the working files alone.  Then I can stash the index, add the missing change, commit it, then pop the stash and have my index back the way it was.</p>

<p>It doesn't look like 'git stash' is able to do this, but am I missing something?  Thanks!</p>
","31","5841","<git>"
"5308816","1","How to use git merge --squash?","<p>I have setup where we have a remote Git server, Here is the scenario which I want to perform,</p>

<ul>
<li><p>For each bug/feature I create a different Git branch,</p></li>
<li><p>I keep on committing my code in that Git branch with un-official Git messages</p></li>
<li><p>In top repository we have to do one commit for one bug with official Git message,</p></li>
</ul>

<p>so how can I merge my branch to remote branch so that they get just one commit for all my check-ins (I even want to provide commit message for this)?</p>
","388","152670","<git><git-merge>"
"888414","1","git-checkout older revision of a file under a new name","<p>I have the file ""<code>main.cpp</code>"" open in my editor.</p>

<p>I want to see the previous revision of ""<code>main.cpp</code>"" in the editor too.</p>

<p>The way I do it now is like this.</p>

<pre><code>close ""main.cpp"" in the editor

prompt&gt; mv main.cpp tmp
prompt&gt; git checkout HEAD^ main.cpp
prompt&gt; mv main.cpp old_main.cpp
prompt&gt; mv tmp main.cpp
prompt&gt;

open ""main.cpp"" and ""old_main.cpp"" in the editor
</code></pre>

<p>Can it be simplified, so I don't have to close ""main.cpp"" in the editor? </p>

<p>What I'm hoping for is a variant of <code>git-checkout</code> that can do this.</p>

<hr>

<p>UPDATE: im using git on mac osx 10.5.7</p>

<pre><code>prompt&gt; git --version
git version 1.6.0.4
prompt&gt; 
</code></pre>

<hr>

<p>UPDATE2: Jakub Narębski answer is:</p>

<pre><code>prompt&gt; git show HEAD^:dir1/dir2/dir3/main.cpp &gt; old_main.cpp
prompt&gt;
</code></pre>

<hr>

<p>UPDATE3: Karmi's answer, for a specific revision:</p>

<pre><code>prompt&gt; git show 4c274dd91dc:higgs/Higgs.xcodeproj/project.pbxproj &gt; old_project.pbxproj
prompt&gt; 
</code></pre>
","127","29617","<git>"
"22207256","1","Undo git stash pop that results in merge conflict","<p>I began making changes to my codebase, not realizing I was on an old topic branch. To transfer them, I wanted to stash them and then apply them to a new branch off of master. I used <code>git stash pop</code> to transfer work-in-progress changes to this new branch, forgetting that I hadn't pulled new changes into master before creating the new branch. This resulted in a bunch of merge conflicts and loss of a clean stash of my changes (since I used pop).</p>

<p>Once I recreate the new branch correctly, how I can I recover my stashed changes to apply them properly? </p>
","85","23372","<git>"
"924574","1","git alternatives to ""svn info"" that can be included in a build for traceability?","<p>I'm looking for a git alternatives to ""svn info"".</p>

<p>Today I add some info that SubVersion gives me with the ""svn info"" command right into my build, and that is then pushed into a source file that prints this during startup.
That way I always know where that build came from and how to get it back again.</p>

<p>If you have ""svn info"" like URL, Repository Root, Repository UUID and the Revision, you have a good link between what is deployed and the buildsystem.
And if someone reports a bug you know where that software came from, 
and since that information was automatically included the risk off human error is smaller.</p>

<p>Now the question is, what information do I need to get from git so I can later identify where that build came from?
And how do I use that information to switch back to exactly that version? </p>

<p>(Maybe I need to add some information about the ""build computer"" as well since git is distributed.)</p>

<p>Thanks
Johan</p>

<hr>

<p><strong>Update</strong>: 
Using rev-parse was really useful, I got something like this:</p>

<pre><code>cj@zap:~/git_test$ git rev-parse HEAD
72ce5f3e13c61f76fde5c58cefc85eed91b6f1f8
</code></pre>

<p>And with that magic number it is later posible to do </p>

<pre><code>cj@zap:~/git_test$ git checkout 72ce5f3e13c61f76fde5c58cefc85eed91b6f1f8
</code></pre>

<p>And I am back where I was.</p>

<hr>

<p><strong>Update</strong>:
I think that if I take some parts from that scripts VonC provided and put them into my buildfile I will get the result I was looking for.</p>

<hr>

<p><strong>Update</strong>:
A note on ""git describe"", you need a real tag (tag -a) earlier in you branch history to make this work or you will get something like this.</p>

<pre><code>fatal: cannot describe '72ce5f3e13c61f76fde5c58cefc85eed91b6f1f8'
</code></pre>

<p>The problem is also described here <a href=""http://www.rockstarprogrammer.org/post/2008/oct/16/git-tag-does-wrong-thing-default/"">http://www.rockstarprogrammer.org/post/2008/oct/16/git-tag-does-wrong-thing-default/</a></p>

<p>But please note that a checkout seem to work anyway, even thou that was a error message.</p>

<pre><code>git checkout 72ce5f3e13c61f76fde5c58cefc85eed91b6f1f8
</code></pre>

<p>The normal thing thou seems to be that you create something like a ""ver1.0"" tag, 
and then if you continue to work you get something like this:</p>

<pre><code>cj@zap:~/git_test$ git describe 
ver1.0-2-g4c7a057
cj@zap:~/git_test$ git tag -a ver2.0
cj@zap:~/git_test$ git describe 
ver2.0
cj@zap:~/git_test$ git commit . -m ""something...""
Created commit ac38a9d: something...
 1 files changed, 1 insertions(+), 0 deletions(-)
cj@zap:~/git_test$ git describe 
ver2.0-1-gac38a9d
</code></pre>

<p>So when you use describe correctly it does work and may produce a more 
human readable results, and can be really useful as well.</p>

<p>Thanks
Johan</p>
","31","32489","<git>"
"2954477","1","How to find commits by a specific user in Git?","<p>Our project uses Git as the version control system and recently I needed to review someone's commits. How can I see a list of commits made by a specific user?</p>
","77","26327","<git><version-control><commit>"
"7726949","1","Remove local branches no longer on remote","<p>Is there a simple way to delete all local branches which do not have a remote equivalent?</p>

<p>Example:</p>

<p>Branches (local and remote)</p>

<ul>
<li>master</li>
<li>origin/master</li>
<li>origin/bug-fix-a</li>
<li>origin/bug-fix-b</li>
<li>origin/bug-fix-c</li>
</ul>

<p>Locally, I only have a master branch. Now I need to work on <em>bug-fix-a</em>, so I check it out, work on it, and push changes to the remote. Next I do the same with <em>bug-fix-b</em>.</p>

<p>Branches (local and remote)</p>

<ul>
<li>master</li>
<li>bug-fix-a</li>
<li>bug-fix-b</li>
<li>origin/master</li>
<li>origin/bug-fix-a</li>
<li>origin/bug-fix-b</li>
<li>origin/bug-fix-c</li>
</ul>

<p>Now I have local branches <em>master</em>, <em>bug-fix-a</em>, <em>bug-fix-b</em>. The Master branch maintainer will merge my changes into <em>master</em> and delete all branches he has already merged.</p>

<p>So the current state is now:</p>

<p>Branches (local and remote)</p>

<ul>
<li>master</li>
<li>bug-fix-a</li>
<li>bug-fix-b</li>
<li>origin/master</li>
<li>origin/bug-fix-c</li>
</ul>

<p>Now I would like to call some command to delete branches (in this case <em>bug-fix-a</em>, <em>bug-fix-b</em>), which are no longer represented in the remote repository.</p>

<p>It would be something like the existing command <code>git remote prune origin</code>, but more like <code>git local prune origin</code>.</p>
","129","39949","<git><remoting><git-branch>"
"928646","1","How do I tell git to always select my local version for conflicted merges on a specific file?","<p>Say I'm collaborating with someone via a git repository, and there is a particular file that I never want to accept any external changes to.</p>

<p>Is there any way for me to set up my local repo to not complain about a conflicted merge every time I git pull? I'd like to always select my local version when merging this file.</p>
","69","28431","<git><git-merge>"
"2988088","1","Do git tags get pushed as well?","<p>Since I created my repository it appears that the tags I have been
creating are not pushed to the repository. When I do git tag on the
local directory all the tags are present, but when I logon to the
remote repository and do a git tag, only the first few show up.</p>

<p>What could the problem be? </p>
","96","28559","<git><tags>"
"1016798","1","Excluding files from git-diff","<p>I am tracking a project with git. There are some Xcode project files in the working copy that I want to keep tracking, but do not want to see in diffs, because there are always dozens of changed lines that I am never interested in. Is there a simple way to have <code>git-diff</code> skip these files? I’ve tried to set up a custom “silent” diff tool:</p>

<pre>
$ cat .gitattributes 
Project.xcodeproj/* diff=nodiff

$ cat ~/.gitconfig 
[diff ""nodiff""]
    command = /bin/true
</pre>

<p>But:</p>

<pre>
$ git diff
external diff died, stopping at Project.xcodeproj/zoul.mode1v3.
</pre>

<p>What am I doing wrong?</p>
","45","14123","<git>"
"1028649","1","How do you rename a Git tag?","<p>Today I was looking through the logs for a project and realized that I fat fingered a tag name some time ago. Is there some way to rename the tag? Google hasn't turned up anything useful.</p>

<p>I realize I could check out the tagged version and make a new tag, I even tried that. But that seems to create a tag object that isn't quite right. For one,</p>

<pre><code>git tag -l
</code></pre>

<p>lists it out of order relative to all of the other tags. I have no idea if that's significant, but it leads me to believe that the new tag object isn't quite what I want. I can live with that, because I really only care that the tag name matches the documentation, but I'd rather do it ""right"", assuming there is a right way to do this.</p>
","658","107837","<git><tags><rename><git-tag>"
"1105253","1","How would I extract a single file (or changes to a file) from a git stash?","<p>I'd like to know if it is possible to extract a single file or diff of a file from a git stash without popping the stash changeset off.</p>

<p>Might anyone be able to provide some suggestions/ideas about this?</p>
","351","78506","<git><git-stash>"
"2316677","1","Can git automatically switch between spaces and tabs?","<p>I use tabs for indentation in my python programs, but I would like to collaborate (using git) with people who use spaces instead.</p>

<p>Is there a way for git to automatically convert between spaces and tabs (say, 4 spaces = 1 tab) on pushing/fetching? (similar to the CR/LF conversion)</p>
","130","28063","<git><tabs><indentation>"
"9550437","1","how to make Git ignore .idea files created by Rubymine","<p>I use Rubymine for Rails projects. Very often, Rubymine makes changes in <code>.idea/*</code> files that I don't care about. But it keeps preventing me from checking out new branches, and makes my version of <code>.idea/</code> different from my coworkers.</p>

<p>We already added <code>.idea/</code> to <code>.gitignore</code>, but it keeps tracking changes in <code>.idea</code>. How should I do this the right way?</p>

<p>Below is one of typical error messages I got:</p>

<pre><code>error: Your local changes to the following files would be overwritten by checkout:
    .idea/workspace.xml
</code></pre>
","61","68555","<git><rubymine>"
"2332349","1","Best practices for cross platform git config?","<h2>Context</h2>

<p>A number of my application user configuration files are kept in a git repository for easy sharing across multiple machines and multiple platforms. Amongst these configuration files is <code>.gitconfig</code> which contains the following settings for handling the carriage return linefeed characters</p>

<pre><code>[core]
    autocrlf = true
    safecrlf = false
</code></pre>

<h2>Problem</h2>

<p>These settings also gets applied on a GNU/Linux platform which causes obscure errors. </p>

<h2>Question</h2>

<p>What are some best practices for handling these platform specific differences in configuration files? </p>

<h2>Proposed solution</h2>

<p>I realize this problem could be solved by having a branch for each platform and keeping the common stuff in master and merging with the platform branch when master moves forward. I'm wondering if there are any <em>easier</em> solutions to this problem?</p>
","38","17617","<git><git-config>"
"2358643","1","Git: Discard all changes on a diverged local branch","<p>I have a local topic branch that's tracking a remote branch. For the sake of argument, say the commit histories look like this:</p>

<pre><code>A--B--C--O1--O2--O3 (origin/phobos)
       \
         L1--L2--L3 (phobos)
</code></pre>

<p>Having looked at the relative commit histories, I now want to discard all the changes to the local <code>phobos</code> branch and get it back to being a direct copy of <code>origin/phobos</code>, so that the local history looks like this:</p>

<pre><code>A--B--C--O1--O2--O3 (phobos origin/phobos)
</code></pre>

<p>I really don't want the local changes to the <code>phobos</code> branch, and I really don't want any merges to show up in the origin repository afterwards. (So, just merging isn't what I have in mind.)</p>

<p>This seems like it should be really easy, but my google-fu has failed me.  How do I do this?</p>
","57","28110","<git>"
"9589814","1","How do I force git pull to overwrite everything on every pull?","<p>I have a CENTRAL bare repository that has three developer repositories pulling and pushing to it normally.</p>

<p>I also have two other repositories that pull from the CENTRAL bare repo: one is the live server, and the other is a test/stage server—each pulling from its own respective branch.</p>

<p>The scenario is this: I have a <code>post-update</code> hook script on the CENTRAL repo that automatically accesses the test and live repos and runs a pull command on each. This updates both test and live servers, all depending on what branch has new commits. This all works great.</p>

<p>The problem is this: there may be times in an emergency that files may be directly updated on the server (via ftp or whatever) and the CENTRAL post-update script will then fail since merge/overwrite conflicts will occur. There is no way to avoid this scenario, and it is inevitable.</p>

<p>What I would like to have happen is this: I want the pull from the live and test sites to <em>always</em> overwrite/merge on pull. <strong><em>Always.</em></strong> These repos will be pull-only as they are not for development.</p>

<p>In all my research, i cannot find a good solution to have a pull <em>always</em> force an overwrite of the local files. Is this at all possible? It would make for a great development scenario if so.</p>

<p>Thanks in advance!  </p>
","93","115645","<git><git-pull>"
"7194877","1","How make Eclipse/EGit recognize existing repository information after update?","<p>After upgrading Eclipse from Helios to Indigo with EGit plugin 1.0.0, all my projects seem to have lost their metadata about their git repositories, respectively.</p>

<p>In Helios, every Eclipse project was a git repository on its own. When updating to Indigo, i hoped i could continue using the workspace from Helios. After the update, all projects are still present in the workspace; and in each project directory, there's still the <code>.git</code> subdirectory, but Eclipse seems to treat each project as if it wasn't a git repository already.</p>

<p>So, there's still all git metadata in the project folders, but eclipse doesn't recognize them. Is there another way to ""reactivate"" the git functionality?</p>
","173","52891","<git><eclipse>"
"9597410","1","List all developers on project in git","<p>Is it possible to list all users that contributed to project (users that have done commits) in git? Any additional statistics?</p>
","57","9742","<git>"
"173919","1","Is there a ""theirs"" version of ""git merge -s ours""?","<p>When merging topic branch ""B"" into ""A"" using <code>git merge</code>, I get some conflicts. I know all the conflicts can be solved using the version in ""B"".</p>

<p>I am aware of <code>git merge -s ours</code>. But what I want is something like <code>git merge -s theirs</code>. </p>

<p>Why doesn't it exist? How can I achieve the same result after the conflicting merge with existing <code>git</code> commands? (<code>git checkout</code> every unmerged file from B)</p>

<p>UPDATE: The ""solution"" of just discarding anything from branch A (the merge commit point to B version of the tree) is not what I am looking for.</p>
","423","195836","<git><git-merge>"
"7229885","1","What are the differences between .gitignore and .gitkeep?","<p>What are the differences between <code>.gitignore</code> and <code>.gitkeep</code>? Are they the same thing with a different name, or do they both serve a different function? I don't seem to be able to find much documentation on <code>.gitkeep</code>.</p>
","841","121484","<git><gitignore>"
"277029","1","Combining multiple git repositories","<p>Let's say I've got a setup that look something like</p>

<pre><code>phd/code/
phd/figures/
phd/thesis/
</code></pre>

<p>For historical reasons, these all have their own git repositories. But I'd like to combine them into a single one to simplify things a little. For example, right now I might make two sets of changes and have to do something like</p>

<pre><code>cd phd/code
git commit 
cd ../figures
git commit
</code></pre>

<p>It'd be (now) nice to just to perform</p>

<pre><code>cd phd
git commit
</code></pre>

<p>There seems to be a couple of ways of doing this using submodules or pulling from my sub-repositories, but that's a little more complex than I'm looking for. At the very least, I'd be happy with</p>

<pre><code>cd phd
git init
git add [[everything that's already in my other repositories]]
</code></pre>

<p>but that doesn't seem like a one-liner. Is there anything in <code>git</code> that can help me out?</p>
","159","51506","<git>"
"277077","1","How can I find the location of origin/master in git, and how do I change it?","<p>I'm a Git newbie.  I recently moved a Rails project from Subversion to Git.  I followed the tutorial here: <a href=""http://www.simplisticcomplexity.com/2008/03/05/cleanly-migrate-your-subversion-repository-to-a-git-repository/"">http://www.simplisticcomplexity.com/2008/03/05/cleanly-migrate-your-subversion-repository-to-a-git-repository/</a></p>

<p>I am also using unfuddle.com to store my code.  I make changes on my Mac laptop on the train to/from work and then push them to unfuddle when I have a network connection using the following command:</p>

<pre><code>git push unfuddle master
</code></pre>

<p>I use Capistrano for deployments and pull code from the unfuddle repository using the master branch.</p>

<p>Lately I've noticed the following message when I run ""git status"" on my laptop:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 11 commits.
#
nothing to commit (working directory clean)
</code></pre>

<p>And I'm confused as to why.  I thought my laptop was the origin... but don't know if either the fact that I originally pulled from Subversion or push to Unfuddle is what's causing the message to show up.  How can I:</p>

<ol>
<li>Find out where Git thinks 'origin/master' is?</li>
<li>If it's somewhere else, how do I turn my laptop into the 'origin/master'?</li>
<li>Get this message to go away. It makes me think Git is unhappy about something.</li>
</ol>

<p>My mac is running Git version 1.6.0.1.</p>

<p><hr /></p>

<p>When I run <code>git remote show origin</code> as suggested by dbr, I get the following:</p>

<pre><code>~/Projects/GeekFor/geekfor 10:47 AM $ git remote show origin
fatal: '/Users/brian/Projects/GeekFor/gf/.git': unable to chdir or not a git archive
fatal: The remote end hung up unexpectedly
</code></pre>

<p>When I run <code>git remote -v</code> as suggested by Aristotle Pagaltzis, I get the following:</p>

<pre><code>~/Projects/GeekFor/geekfor 10:33 AM $ git remote -v
origin  /Users/brian/Projects/GeekFor/gf/.git
unfuddle    git@spilth.unfuddle.com:spilth/geekfor.git
</code></pre>

<p>Now, interestingly, I'm working on my project in the <code>geekfor</code> directory but it says my origin is my local machine in the <code>gf</code> directory.  I believe <code>gf</code> was the temporary directory I used when converting my project from Subversion to Git and probably where I pushed to unfuddle from.  Then I believe I checked out a fresh copy from unfuddle to the <code>geekfor</code> directory.</p>

<p>So it looks like I should follow dbr's advice and do:</p>

<pre><code>git remote rm origin
git remote add origin git@spilth.unfuddle.com:spilth/geekfor.git
</code></pre>
","199","114669","<git><git-push><git-remote>"
"348170","1","Undo 'git add' before commit","<p>I mistakenly added files using the command:</p>

<pre><code>git add myfile.txt
</code></pre>

<p>I have not yet run <code>git commit</code>. Is there a way to undo this, so these files won't be included in the commit?</p>
","4890","1233899","<git><version-control><git-stage>"
"367262","1","git commit - setting timestamps into the future","<p>I need to make some commits using Git but I would like the timestamp in git-log to be in the future.</p>

<p>How can I do a commit in git that causes a future timestamp to register in the git-log?</p>
","40","14238","<git>"
"12144633","1","which gitignore rule is ignoring my file","<p>Is there any way to see why some file is getting ignored by git (i.e. which rule in a <code>.gitignore</code> file is causing the file to be ignored)?</p>

<p>Imagine I have this (or a much more complex scenario, with hundreds of folders and tens of <code>.gitignore</code> files:</p>

<pre><code>/
-.gitignore
-folder/
    -.gitignore
    -subfolder/
              -.gitignore
              -file.txt
</code></pre>

<p>If I run <code>git add folder/subfolder/file.txt</code> git may complain of it being ignored:</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
folder/subfolder/file.txt
Use -f if you really want to add them.
</code></pre>

<p>Is there any way to know which of all the possible <code>.gitignore</code> have a rule to ignore this file, and also show the rule? Like:</p>

<pre><code>The following paths are ignored by your folder/.gitignore file (line 12: *.txt)
folder/subfolder/file.txt
Use -f if you really want to add them.
</code></pre>

<p>Or just:</p>

<pre><code>$ git why-is-ignored folder/subfolder/file.txt
folder/.gitignore:12:*.txt
</code></pre>
","122","15372","<git><gitignore>"
"9750606","1","git still shows files as modified after adding to .gitignore","<p>i'm adding this to <strong>.gitignore</strong> file</p>

<pre><code>.idea/*
</code></pre>

<p>but anyway the status is:</p>

<pre><code>#       modified:   .gitignore
#       modified:   .idea/.generators
#       modified:   .idea/dovezu.iml
#       modified:   .idea/misc.xml
#       modified:   .idea/workspace.xml
</code></pre>

<p>what am i doing wrong ?
i even added .idea/* to the global <strong>~/.gitignore_global</strong>
but git status, anyway shows me:</p>

<pre><code>#       modified:   .gitignore
#       modified:   .idea/.generators
#       modified:   .idea/dovezu.iml
#       modified:   .idea/misc.xml
#       modified:   .idea/workspace.xml
</code></pre>
","68","17589","<git><gitignore>"
"12174276","1","GitHub - List commits by author","<p>Is there any way on <a href=""http://github.com/"">GitHub</a> to list all commits made by a single author, in the browser (neither locally, e.g. via <code>git log</code>, nor via the API)?</p>

<p>Clicking on a user name in the list of commits (Commit History) simply leads to that user's profile page. Examining the GitHub UI and searching (Google, StackOverflow) does not reveal a way to do this.</p>
","63","29146","<git><github>"
"5010754","1","Do collaborators have commit access on GitHub?","<p>One thing I noticed: Using the GitHub UI, I added a collaborator to a repository. I saw that they committed changes without any authority / approval from me. It was a private repository.</p>

<p>With private repositories, how do I give someone read access versus write access?</p>
","38","29517","<git><github>"
"7393274","1","Is it possible to view multiple git branches at the same time for the same project?","<p>I have 2 branches, which are not ready to be merged yet, but have some complementary logic, which I'd like to review (before merging)</p>

<p>Can I check out multiple git branches of the same project? Is it possible?</p>
","32","9008","<git><branch><git-checkout>"
"2590260","1","When will `git pull --rebase` get me in to trouble?","<p>I understand that when I use <code>git pull --rebase</code>, git will re-write history and move my local commits to occur after all of the commits in the branch I just pulled from.  </p>

<p>What I don't understand is how this would ever be a bad thing.  People talk about getting in to trouble with <code>git pull --rebase</code> where you can end up with a branch that other people can't pull from.  But I don't get how that's possible since all you're doing is replaying your local, not-yet-public, commits on top of the branch you pulled from.  So, what's the problem there?</p>
","32","2839","<git><rebase><pull>"
"14662526","1","Why Git is not allowing me to commit even after configuration?","<p>This question seems like a duplicate but it's really not. Just a slight difference that keeps on repeating. git keeps on telling me: ""please tell me who you are"", even after setting it up. when I run <code>git commit</code>, this is what I get....</p>

<pre><code>$ git commit

*** Please tell me who you are.

Run

git config --global user.email ""you@example.com""

git config --global user.name ""Your Name""

to set your account's default identity.
Omit --global to set the identity only in this repository.

fatal: unable to auto-detect email address (got 'Obby@ObbyWorkstation.(none)')
</code></pre>

<p>But when I run <code>git config --global -l</code>, it gives me all my details...</p>

<pre><code>$ git config --global -l
user.name=myname
user.mail=me.myself@gmail.com
http.proxy=proxy.XX.XX.XX:XXXX
</code></pre>

<p>I have changed my name, email and proxy but they are appearing fine when I run the command, even in the .gitconfig file I can see the values are set. what could be the missing thing, because I cannot commit at all. Every time it keeps asking me who I am ?</p>

<p>@sheu told me something that i changed, but still the same problem. when i set <code>--local</code>, still <code>git commit</code> asks me the same question. this is the output</p>

<pre><code>$ git config --local -l
core.repositoryformatversion=0
core.filemode=false
core.bare=false
core.logallrefupdates=true
core.symlinks=false
core.ignorecase=true
core.hidedotfiles=dotGitOnly
user.name=myname
user.mail=me.myself@gmail.com
</code></pre>
","48","49983","<git><github><commit><config>"
"456403","1","Can git be integrated with Xcode?","<p>Is there any way to use a git repository with the built in SCM functions of Xcode?</p>
","121","59147","<xcode><git><version-control><integration>"
"5047366","1","Why does `git stash -p` sometimes fail?","<p>I ♥ <code>git stash -p</code>. But sometimes, after a satisfying session of <code>y</code>, <code>n</code>, and <code>s</code>, I get this:</p>

<pre><code>Saved working directory and index state WIP on foo: 9794c1a lorum ipsum
error: patch failed: spec/models/thing_spec.rb:65
error: spec/models/thing_spec.rb: patch does not apply
Cannot remove worktree changes
</code></pre>

<p>Why?</p>
","56","3256","<git><git-stash>"
"457379","1","How do I edit an incorrect commit message in git (I've pushed)?","<p>I want to modify a commit message deeper in history and I've pushed many new commits. </p>

<p>How do I change the commit message? Is it possible?</p>
","96","65286","<git><commit-message>"
"26620312","1","Installing Git in PATH with GitHub client for Windows","<p>How do I install Git in my <code>PATH</code> when using the GitHub client for Windows?</p>

<p>I'm running into errors because apparently Git is not installed in PATH. For example, using Atom, trying to install the Linter plugin gives this error:</p>

<pre><code>npm ERR! not found: git
npm ERR! 
npm ERR! Failed using git.
npm ERR! This is most likely not a problem with npm itself.
npm ERR! Please check if you have git installed and in your PATH.
</code></pre>

<p>Does GitHub for Windows install Git when it installs? (It must, otherwise how does it use Git?) I don't want to double-install it... so how do I just add the Git that's already there to PATH?</p>
","43","58454","<git><github><github-for-windows>"
"5066041","1","git: moving committed (but not pushed) changes to a new branch","<p>I've done a fair bit of work (""Your branch is ahead of 'origin/master' by 37 commits."") which really should have gone into its own branch rather than into <code>master</code>.  These commits only exist on my local machine and have not been pushed to <code>origin</code>, but the situation is complicated somewhat in that other devs have been pushing to <code>origin/master</code> and I've pulled those changes.</p>

<p>How do I retroactively move my 37 local commits onto a new branch?  Based on the docs, it appears that <code>git rebase --onto my-new-branch master</code> or <code>...origin/master</code> should do this, but both just give me the error ""fatal: Needed a single revision"".  <code>man git-rebase</code> says nothing about providing a revision to <code>rebase</code> and its examples do not do so, so I have no idea how to resolve this error.</p>

<p>(Note that this is <strong>not</strong> a duplicate of <a href=""http://stackoverflow.com/questions/1394797/git-how-to-move-existing-work-to-new-branch"">Git: How to move existing work to new branch?</a> or <a href=""http://stackoverflow.com/questions/556923/git-how-to-merge-my-local-working-changes-into-another-branch"">Git: how to merge my local, working changes into another branch</a> as those questions deal with uncommitted changes in the local working tree, not changes which have been committed locally.)</p>
","151","28895","<git>"
"505467","1","Can I store the .git folder outside the files I want tracked?","<p>I have an unusual idea to use git as a backup system. So let's say I have a directory ./backup/myfiles and I want to back that up using git. To keep things clean I don't want to have a .git directory in the myfiles folder, so I thought I could create ./backup/git_repos/myfiles. From looking at the git docs, I've tried doing this:</p>

<pre><code>$ cd backup/myfiles
$ mkdir ../git_repos/myfiles
$ git --git-dir=../git_repos/myfiles init
Initialized empty Git repository in backup/git_repos/myfiles/
$ git --git-dir=""../git_repos/myfiles/"" add foo
fatal: pathspec 'foo' did not match any files
</code></pre>

<p>You can see the error message I get there. What am I doing wrong?</p>
","94","25848","<git>"
"9839083","1","Git number of commits per author on all branches","<p>I'd like to get the number of commits per author on all branches. I see that</p>

<pre><code>git shortlog -s -n
</code></pre>

<p>Prints a very nice list but it is not counting the commits that are not yet merged from other branches. If iterate this command over every branch then obviously the common commits get counted multiple times. Could you give me a script/command that would yield me the overall picture?</p>
","101","17207","<git><version-control><commit>"
"2701078","1","How to use Git on Android?","<p>I have a desktop application using git for synchronization. I have also an android application which do the same as the desktop, but I don't know how to do the synchronization part on it. I haven't found any implementation of git on android. I found a jgit, but its unwell documented and I was not able to do even a commit with that. </p>

<p>I was thinking about remote commands to my git server from my android app, but this is really a tease for me. 
Could you tell me if any other git implementation which can be used on android exists? If you have any idea how to solve that, please tell me. </p>
","44","43874","<android><git><synchronization>"
"584522","1","How to export revision history from mercurial or git to cvs?","<p>I'm going to be working with other people on code from a project that uses cvs. We want to use a distributed vcs to make our work and when we finish or maybe every once in a while we want to commit our code and all of our revision history to cvs. We don't have write access to the project's cvs repo so we can't commit very frequently. What tool can we use to export our revision history to cvs? Currently we were thinking of using git or mercurial but we could use another distributed vcs if it could make the export easier. </p>
","95","40527","<git><mercurial><export><cvs><git-cvs>"
"9903541","1","Finding diff between current and last versions?","<p>Using git, how can you find the difference between the current and the last versions?</p>

<pre><code>git diff last version:HEAD
</code></pre>
","250","134743","<git>"
"612580","1","How does Git solve the merging problem?","<p>SVN made branching much easier by making branches really cheap, but merges remain a real problem in SVN - one that Git supposedly solves.</p>

<p>Does Git achieve this, and how?</p>

<p>(disclaimer: All I know about Git is based on the Linus lecture - total git noob here)</p>
","49","15964","<svn><git><version-control>"
"7566416","1","Different commits between two branches","<p>I have two branches <code>devel</code> and <code>next</code>. In devel I have a more or less huge amount of commits. Some of the commits are cherry picked in <code>next</code>. Also I added some commits to next which are merged to <code>devel</code>.</p>

<p>Now I would like to see what is missing in <code>next</code>, so I can test the changes in detail before bringing them to <code>next</code>. My question is now, how can I see which commits are in <code>devel</code> but not in next? </p>
","106","33269","<git>"
"661018","1","Pushing an existing git repository to SVN","<p>I've been doing all my work in Git and pushing to GitHub. I've been very happy with both the software and the site and I have no wish to change my working practices at this point.</p>

<p>My PhD adviser is asking all students to keep their work in an SVN repository that's hosted at the university. I've found tons of documentation and tutorials about to pull down an existing SVN repo into git, but nothing about pushing a git repo to a fresh SVN repo. I expect there must be some way to do this with a combination of git-svn and a fresh branch and rebasing and all those wonderful terms, but I'm a git newbie and don't feel confident with any of them.</p>

<p>I then want to just run a couple of commands to push commits to that SVN repo when I choose, I wish to keep using Git and just have the SVN repo mirror what's in Git.</p>

<p>I'll be the only person ever committing to SVN, if this makes any difference.</p>

<p>Any instructions on how to do this would be very much appreciated!</p>
","317","77951","<svn><git><git-svn>"
"708202","1","Git format-patch to be svn compatible?","<p>Is there any way to get a patch created with git format-patch to be svn compatible so that I can submit it to an svn repo?</p>

<p>I'm working off an svn repo on github and want to submit my changes back to the main repo. I need to create a patch to do this, however the patch cannot be applied since git formats that patch differently then svn. Is there some secret I haven't discovered yet?</p>

<p><strong>UPDATE:</strong> Although currently there exists no script or native git way to do this, I did managed to find a post from earlier this year about how to manually accomplish this. I have followed the instructions and had success getting my git patches to work with svn.</p>

<p>If someone could take a stab at writing a script to accomplish this and contribute to the git project, I'm everyone would be much appreciated.</p>

<p><a href=""http://kerneltrap.org/mailarchive/git/2008/1/15/570308/thread#mid-570308"">http://kerneltrap.org/mailarchive/git/2008/1/15/570308/thread#mid-570308</a></p>
","72","21363","<svn><git><format-patch>"
"9994093","1","Automatic merge of pull requests on Github without the merge bubble","<p>The ""This pull request can be automatically merged [Merge pull request]"" button in github is great -- except that it creates merge bubbles. </p>

<p>Is there a way to use this button/functionality in github without it creating merge bubbles? </p>
","36","6410","<git><github>"
"7615807","1","renamed heroku app from website, now it's not found","<p>After renaming my heroku app from the heroku website, whenever I cd to it's directory in a terminal and run any heroku command, I get <code>App not found</code>. Does anybody know of a way to remedy this?</p>
","160","25014","<git><heroku>"
"5256021","1","Send a pull request on GitHub for only latest commit","<p>I forked a project on github and am successfully making changes to my local master and pushing to origin on github. I want to send a pull request, but only want to include the last commit.  The pull request UI on github.com shows the last 9 commits and I don't know how to filter that down.</p>

<p>I was trying to understand if I should create a new local branch, check that out and somehow reset or rebase to upstream?  Then apply my last commit from my master by id to the new local branch and use that for the pull request?</p>

<p>I'm trying to get the concepts right and figure out the right command lines to do what I need.</p>
","199","45350","<git><github><pull-request>"
"2835775","1","Msysgit bash is horrendously slow in Windows 7","<p>I love git and use it on OS X pretty much constantly at home.  At work, we use svn on Windows, but want to migrate to git as soon as the tools have fully matured (not just <a href=""http://code.google.com/p/tortoisegit/"">TortoiseGit</a>, but also something akin the really nice Visual Studio integration provided by <a href=""http://www.visualsvn.com/visualsvn/"">VisualSVN</a>).  But I digress...</p>

<p>I recently installed <a href=""http://code.google.com/p/msysgit/"">msysgit</a> on my Windows 7 machine, and when using the included version of bash, it is <strong>horrendously</strong> slow.  And not just the git operations; <code>clear</code> takes about five <em>seconds</em>.  AAAAH!</p>

<p>Has anyone experienced a similar issue?</p>

<hr>

<p><strong>Edit</strong>:  It <em>appears</em> that msysgit is not playing nicely with <a href=""http://en.wikipedia.org/wiki/User_Account_Control"">UAC</a> and might just be a tiny design oversight resulting from developing on XP or running Vista or 7 with UAC disabled; starting Git Bash using <code>Run as administrator</code> results in the lightning speed I see with OS X (or on 7 after starting Git Bash w/o a network connection - see @Gauthier answer).</p>

<p><strong>Edit 2</strong>: <a href=""http://code.google.com/p/msysgit/issues/detail?id=320"">AH HA!</a>  See my answer.</p>
","78","33352","<git><windows-7><msysgit>"
"2862590","1","How to replace master branch in git, entirely, from another branch? ","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/2763006/change-the-current-branch-to-master-in-git"">Change the current branch to master in git</a>  </p>
</blockquote>



<p>I have two branch in my git repo:</p>

<ol>
<li>master</li>
<li>seotweaks (created originally from master)</li>
</ol>

<p>I created ""seotweaks"" with the intention of quickly merging it back into master, however that was 3 months ago and the code in this branch is 13 versions ahead of ""master"", it has effectively become our working master branch as all the code in ""master"" is more or less obsolete now. </p>

<p>Very bad practice I know, lesson learnt.</p>

<p>Do you know how I can replace all of the contents of the ""master"" branch with those in ""seotweaks""?</p>

<p>I could just delete everything in ""master"" and merge, but this does not feel like best practice.</p>
","790","221305","<git><merge><git-branch>"
"807782","1","Google Code + SVN or GitHub + Git","<p>Let me start by telling you that I never used anything besides SVN and I'm also a Windows user.</p>

<p>I have a couple of simple projects that are open-source, others are on their way when I'm happy enough to release their source code. Either way, I was thinking of using Google Code and SVN to share the source code of my projects instead of providing a link to the source on my website. This has always been a pain because I had to update the binaries and the code every time I released a new version. This would also help me to have a backup of my code some where instead of just my local machine (I used to have a local Subversion server running).</p>

<p>What I want from a service like this is very simple... <strong>I just want a place to store my source code that people can download if they want, that allows me to control revisions and provide a simple and easy issue/bug system so people can submit bugs and stuff like that.</strong> I guess both of them have this.</p>

<p>But I don't want to host any binaries in their websites. I want this to be hosted on my website so I can control download statistics with my own scripts. I also don't have a need for wiki pages as I prefer to have all the documentation on my own website. Do any of these services provide a way to ""disable"" features like wiki and downloads and not show them at all for my project(s)?</p>

<p>Now, I'm sure there are lots of pros and cons about using Google Code with SVN and GitHub with Git (of course) but here's what's important for me on each one, and why I like them:</p>

<p><strong>Google Code:</strong></p>

<ul>
<li>As with any Google page, the complexity is almost non-existent</li>
<li>Everyone (or almost everyone) has a Google account, whcih is nice if people want to report problems using the issues system</li>
</ul>

<p><strong>GitHub:</strong></p>

<ul>
<li>May (or may not) be a little more complex (not a problem for me though) than Google's pages but...</li>
<li>...has a much prettier interface than Google's service</li>
<li>It needs people to be registered on GitHub to post about issues</li>
<li>I like the fact that with Git, you have your own revisions locally (can I use TortoiseGit for this or?)</li>
</ul>

<p>Basically that's it. Not much, I know...</p>

<p>What other common pros and cons can you tell me about each site/software? Keep in mind that my projects are simple, I'm probably the only one who will ever develop these projects on these repositories (or maybe not, but for now I am).</p>
","59","26168","<svn><git><github><google-code>"
"2863756","1","Is there a single Git command to get the current tag, branch and commit?","<p>I'm currently using a collection of three commands to get the current tag, branch and the date and SHA1 of the most recent commit.</p>

<pre><code>git describe --always --tag
git log -1 --format=""%H%n%aD""
git rev-parse --abbrev-ref HEAD
</code></pre>

<p>Which will output something like:</p>

<pre><code>1.2.3-5-gdeadbeef
deadbeef3b8d90071c24f51ac8f26ce97a72727b
Wed, 19 May 2010 09:12:34 +0200
master
</code></pre>

<p>To be honest, I'm totally fine with this. But I'm using these commands from Maven and anyone who'd used Maven before, knows how much things like external commands bloat the POM. I just want to slim down my pom.xml and maybe reduce execution time a bit.   </p>
","42","27975","<git><maven><command-line><mavanagaiata>"
"5283262","1","What is GIT_WORK_TREE, why have I never needed to set this ENV var, why now?","<p>I'm using Git under Ubuntu Linux to sync and deploy my projects.</p>

<p>I have Repo on my local Linux working machine and two repos on my server, one bare repo and the one as a deployed app.</p>

<p>It always worked fine, but now I created another repo for my other website and now I get this error:</p>

<pre><code>root@vserver5:/var/www/ninethsky# git pull origin master
fatal: /usr/lib/git-core/git-pull cannot be used without a working tree.
</code></pre>

<p>So I have to set a GIT_WORKING_TREE ENV-Var, but what is this exactly, where to set it?</p>

<p>This is my repo's .git/config:</p>

<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote ""origin""]
        url = /home/git/ninethsky/.git
        fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>There is another repo with <code>bare = true</code> and a repo on my local working machine.</p>

<p>Then I removed all the repos, but the initial one, now I get:</p>

<pre><code>root@vserver5:/var/www/ninethsky# git init
fatal: GIT_WORK_TREE (or --work-tree=&lt;directory&gt;) not allowed without specifying GIT_DIR (or --git-dir=&lt;directory&gt;)
root@vserver5:/var/www/ninethsky# git init --git-dir=/var/www/ninethsky
error: unknown option `git-dir=/var/www/ninethsky'
</code></pre>

<p>I solved the <code>git init</code> problem by unsetting GIT_WORK_TREE, which was set to blank.
GIT_WORK_TREE and GIT_DIR are unset. <code>git init</code> works again, still there is a problem with <code>git add .</code> and so on when it comes to git actions in the cloned repo, which was set to bare.</p>

<p>Thanks,
Joern.</p>
","40","51815","<git>"
"855767","1","Can I use git diff on untracked files?","<p>Is it possible to ask git diff to include untracked files in its diff output? Or is my best bet to git add the new files I've created and the existing files I have edited, and use </p>

<pre><code>git diff --cached
</code></pre>

<p>?</p>
","110","48474","<git><diff>"
"7669963","1","How can I get a side-by-side diff when I do ""git diff""?","<p>When I type ""git diff"", I'd like to see a side-by-side diff, like with ""diff -y"", or like to display the diff in an interactive diff tool like ""kdiff3"". How can this be done?</p>
","59","28322","<git><git-diff><code-visualization>"
"5338551","1","How does ""git push heroku master"" know where to push to and how to push to a different repo?","<p>When pushing to a repository hosted on Heroku one must execute the following command: </p>

<pre><code>git push heroku master
</code></pre>

<p>What do <code>heroku</code> and <code>master</code> indicate in this command?  How does git know where to push to? (the git path)</p>

<p>Also, I didn't know I can use <code>heroku rename</code> to rename an app, so before, say I was using the app name trytryheroku and now I use <code>heroku create real-thing</code> but if I push, it still pushes to trytryheroku... is there a way to push to real-thing instead?</p>
","49","34333","<git><heroku>"
"927358","1","How do you undo the last commit?","<p>I committed the wrong files to Git.</p>

<p>How can I undo this commit?</p>
","10952","3482006","<git><git-commit><git-reset><git-revert>"
"1020132","1","How to reverse apply a stash?","<p>I have a small patch saved away in my git stash.  I've applied it to my working copy using <code>git stash apply</code>.  Now, I'd like to back out those changes by reverse applying the patch (kind of like what <code>git revert</code> would do but against the stash).</p>

<p>Does anyone know how to do this?</p>

<p><strong>Clarification:</strong> There are other changes in my working copy.  My particular case is hard to describe but you can imagine some debugging or experimental code that's in the stash.  Now it's mixed in my working copy with some other changes and I'd like to see the effect with and without the changes from the stash.</p>

<p>It doesn't look like stash supports this currently, but a <code>git stash apply --reverse</code> would be a nice feature.</p>
","96","57091","<git>"
"10130341","1","Go, go get, go install, local packages, and version control","<p>I am having trouble understanding the workflow for creating a go project that has local packages.</p>

<p>Say I create a new project, using git for version control, which has a main.go file and a tools.go file which will be in package utils. So I have a directory structure such as this:</p>

<pre><code>/myproject/
   main.go
   utils/
     tools.go
</code></pre>

<p>main.go looks like this:</p>

<pre><code>package main
import ""./utils""
func main() {
    utils.DoSomthing()
}
</code></pre>

<p>and tools.go looks like this:</p>

<pre><code>package utils;
func DoSomething() {
}
</code></pre>

<p>Everything works just fine locally, using <em>go build</em> and <em>go run</em>. But this is being hosted on github, and I'd like to be able to have others use the <em>go get</em> command to install it. So the local package import must be changed to use the format ""github.com/user/project/utils"", which works, except now I have two copies of the source code, and the real problem is that the copy with the git history has an import that makes use of the downloaded copy. So if I'm working on the copy with the git history, any changes made to tools.go will go unnoticed, because it will be using the downloaded copy.</p>

<p>So I'm wondering if someone can explain the right way of using <em>go get</em>, version control, and package imports within the same project.</p>
","46","24394","<git><package><go>"
"10161198","1","Is there a way to ""autosign"" commits in Git with a GPG key?","<p>Just wanted to ask here if there were an easy way to make sure Git always signs each commit it creates, or tags that are created?</p>

<p>I tried it with something like:</p>

<pre>alias commit = commit -S</pre>

<p>But that didn't do the trick.</p>

<p>I don't want to install all different large programs to make this happen. Just if it were doable with ease and isn't a hazle to maintain.</p>

<p>Just a side question, maybe commits shouldn't be signed, only tags, which I never create, as I submit single commits. Project like Homebrew, etc.</p>
","57","12273","<git><public-key-encryption><gnupg>"
"1106529","1","How to skip ""Loose Object"" popup when running 'git gui'","<p>When I run 'git gui' I get a popup that says</p>

<pre>
This repository currently has approximately 1500 loose objects.
</pre>

<p>It then suggests compressing the database.   I've done this before, and it reduces the loose objects to about 250, but that doesn't suppress the popup.   Compressing again doesn't change the number of loose objects. </p>

<p>Our current workflow requires significant use of 'rebase' as we are transitioning from Perforce, and Perforce is still the canonical SCM.   Once Git is the canonical SCM, we will do regular merges, and the loose objects problem should be greatly mitigated.  </p>

<p>In the mean time, I'd really like to make this 'helpful' popup go away. </p>
","79","14551","<git><garbage-collection><rebase><git-gui><git-gc>"
"1108853","1","Recovering added file after doing git reset --hard HEAD^","<p>I added a new file F1 and made changes to another file F2 but then did a ""git reset --hard HEAD^"" and I have lost all the changes to the files.</p>

<p>Is there <em>SOME</em> way, I can get them back.</p>

<p>I did look at a related question here: <a href=""http://stackoverflow.com/questions/5473/undoing-a-git-reset-hard-head1"">Undoing a git reset --hard HEAD~1</a>  but, that question assumes that the one has done a git commit.</p>
","36","19302","<git><version-control>"
"1109069","1","git selective revert local changes from a file","<p>In my git repo which is tracking a svn repo I have made a number of edits to a single file.</p>

<p>Now I want to revert those changes(like svn revert), but only portions of the file.</p>

<p>I want to be able to view the diffs on the file, discard(revert) the changes that I don't want and retain the changes I want.</p>

<p>the </p>

<pre><code>git add -i
</code></pre>

<p>command seems to have an option to do that but I don't want to stage this yet.</p>
","96","21059","<git><version-control><git-svn>"
"14998923","1","How can I copy the content of a branch to a new local branch?","<p>I have worked on a local branch and also pushed the changes to remote. I want to revert the changes  on that branch and do something else on it, but I don't want to loose completely the work. I was thinking of something like create a new branch locally and copy the old branch there then I can revert the changes and continue working on the old branch. Is there a better way maybe? Or how do I do this?</p>
","81","62383","<git><branch>"
"1173676","1","How can I check out a particular version of one file in Git?","<p>How can I check out a particular version of one file in git?</p>

<p>I found <a href=""https://kerneltrap.org/mailarchive/git/2009/1/6/4608324/thread+git+checkout+a+file&amp;cd=6&amp;hl=en&amp;ct=clnk&amp;gl=us"">this mail on the mailing list</a>, which said:</p>

<pre><code>$ git checkout HEAD~43 Makefile
$ git reset Makefile
</code></pre>

<p>But I don't understand how to find out 'HEAD~43', if I do a <code>git log aFile</code>, how can I find out which 'HEAD~43' I should use?</p>

<p>And why do I need to run <code>git reset</code> for that file? What does it do?</p>
","45","26615","<git>"
"5471174","1","Git: move branch pointer to different commit without checkout","<p>To move the branch pointer of a checked out branch, one can use the <code>git reset --hard</code> command. But how to move the branch pointer of a not-checked out branch to point at a different commit (keeping all other stuff like tracked remote branch)?</p>
","346","115005","<git><git-branch>"
"10195900","1","Jenkins Git Plugin: How to build specific tag?","<p>I am having issues getting Jenkins to build a specified tag. The tag is part of a parametrized build, but I do not know how to pass this through to the git plugin to just build that tag. This has been taking 3 hours of my day and I have conceded defeat to the masters at stack overflow.</p>
","59","52175","<git><jenkins>"
"3065650","1","What's the simplest way to git a list of conflicted files?","<p>I just need a plain list of conflicted files.</p>

<p>Is there anything simpler than:</p>

<pre><code>git ls-files -u  | cut -f 2 | sort -u
</code></pre>

<p>or</p>

<pre><code>git ls-files -u  | awk '{print $4}' | sort | uniq
</code></pre>

<p>?</p>

<p>I guess I could set up a handy alias for that, however was wondering how pros do it. I'd use it to write shell loops e.g. to auto-resolve conflict etc.. Maybe replace that loop by plugging into mergetool.cmd?</p>
","281","113726","<git><git-merge><git-conflict-resolution>"
"1221840","1","Remote origin already exists on 'git push' to a new repository","<p>I have my project on GitHub at some location, <code>git@github.com:myname/oldrep.git</code>.</p>

<p>Now I want to push all my code to a new repository at some other location, <code>git@github.com:newname/newrep.git</code>.</p>

<p>I used the command:</p>

<blockquote>
  <p>git remote add origin git@github.com:myname/oldrep.git</p>
</blockquote>

<p>but I am receiving this:</p>

<blockquote>
  <p>fatal: remote origin already exists.</p>
</blockquote>
","255","173146","<git><github><git-push><git-remote>"
"11200237","1","How do I get git to default to ssh and not https for new repositories","<p>These days when I create a new repository on GitHub on the setup page I get:</p>

<pre><code>git remote add origin https://github.com/nikhilbhardwaj/abc.git
git push -u origin master
</code></pre>

<p>And whenever I have to push a commit I need to enter my GitHub username and password.</p>

<p>I can manually change that to </p>

<pre><code>git@github.com:nikhilbhardwaj/abc.git
</code></pre>

<p>in the <code>.git/config</code>. I find this quite irritating - <strong>is there some way I can configure git to use SSH by default?</strong></p>
","79","67828","<git><github><ssh>"
"11276364","1","After using git to locally track a project, how can I add it to GitHub?","<p>After using git to locally track a project, how can I add it to GitHub?</p>
","33","14823","<git><github>"
"6655052","1","Is there a way to rollback my last push to Git?","<blockquote>
  <p><strong>Possible Duplicates:</strong><br>
  <a href=""http://stackoverflow.com/questions/1270514/undoing-a-git-push"">Undoing a 'git push'</a>  </p>
</blockquote>



<p>I have pushed some bad code, and I am the only user of the repository. How can I rollback my last commit?</p>
","48","60562","<git>"
"1223354","1","Undo git pull, how to bring repos to old state","<p>Is there any way to revert or undo git pull so that my source/repos will come to old state that was before doing git pull ?
I want to do this because it merged some files which I didn't want to do so, but only merge other remaining files. So, I want to get those files back, is that possible ?
Thanks :)</p>

<p>EDIT I want to undo git merge for clarification.
After seeing some answers, I did this </p>

<pre><code>git reflog
bb3139b... HEAD@{0}: pull : Fast forward
01b34fa... HEAD@{1}: clone: from ...name...
</code></pre>

<p>Now, what should I do ? Doing <code>git reset --hard</code>  is OK ? I don't want to screw it again, so asking for detailed steps ? </p>
","489","252302","<git><version-control><git-merge>"
"10237071","1","How to amend a commit without changing commit message (reusing the previous one)?","<p>Is there a way to amend a commit without vi (or your $EDITOR) popping up with the option to modify your commit message, but simply reusing the previous message?</p>
","225","23284","<git><commit><git-commit><amend>"
"5516391","1","Git rebase will not continue after a delete/modify conflict","<p>I'm in the middle of a rebase of my master to a stage branch</p>

<pre><code>git checkout stage
git rebase master
</code></pre>

<p>At some time I deleted two files then modified the two files according to GIT.</p>

<pre><code>warning: too many files, skipping inexact rename detection
CONFLICT (delete/modify): test-recommendation-result.php deleted in HEAD and modified in [Bug] Fix test recommender. Version [Bug] Fix test recommender of test-recommendation-result.php left in tree.
CONFLICT (delete/modify): test-recommendation.php deleted in HEAD and modified in [Bug] Fix test recommender. Version [Bug] Fix test recommender of test-recommendation.php left in tree.
Failed to merge in the changes.
Patch failed at 0015.
</code></pre>

<p>I want to say ""Yeah git, go ahead and delete those files"" so ....</p>

<pre><code>git rm test-recommendation-result.php
git rm test-recommendation.php
git rebase --continue
</code></pre>

<p>Git says:</p>

<pre><code>Applying [Bug] Fix test recommender
No changes - did you forget to use 'git add', Stupid?

When you have resolved this problem run ""git rebase --continue"".
If you would prefer to skip this patch, instead run ""git rebase --skip"".
To restore the original branch and stop rebasing run ""git rebase --abort"".
</code></pre>

<p>I say ""Don't call me ""Stupid"" and just do what I told you to do!""</p>

<p>We are now at a standoff. Who is right and how do I fix this?</p>
","34","13479","<git><version-control><rebase><git-rebase>"
"3148863","1","how can I customize git's merge commit message?","<p>Every time I do a merge I need for a merge commit to be generated and I would like it to have more than just the summary of all the commits.</p>

<p><strong>My question is how can I format git-fmt-merge-msg or what determines this automated message</strong> (I can do this manually after a commit by amending it and using git-log --pretty=format:'...')</p>

<p>For example I would like to format it as such:</p>

<blockquote>
  <p>Merge branch 'test'<br>
  &nbsp;  * test:<br>
  &nbsp;&nbsp;  [BZ: #123] fifth commit subject<br>
  &nbsp;&nbsp;  [BZ: #123] fourth commit subject<br>
  &nbsp;&nbsp;  [BZ: #123] third commit subject<br>
  &nbsp;&nbsp;  [BZ: #123] second commit subject<br>
  &nbsp;&nbsp;  [BZ: #123] first commit subject  </p>
  
  <hr>
  
  <p>Merge details:<br>
  &nbsp;&nbsp; [BZ: #123] fifth commit subject<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at 2010-06-30 11:29:00 +0100<br>
  &nbsp;&nbsp;&nbsp; - fifth commit body  </p>
  
  <p>&nbsp;&nbsp; [BZ: #123] fourth commit subject<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at 2010-06-30 11:22:17 +0100<br>
  &nbsp;&nbsp;&nbsp; - fourth commit body  </p>
  
  <p>&nbsp;&nbsp; [BZ: #123] third commit subject<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at 2010-06-30 11:21:43 +0100<br>
  &nbsp;&nbsp;&nbsp; - third commit body  </p>
  
  <p>&nbsp;&nbsp; [BZ: #123] second commit subject<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at 2010-06-30 11:21:30 +0100<br>
  &nbsp;&nbsp;&nbsp; - second commit body  </p>
  
  <p>&nbsp;&nbsp; [BZ: #123] first commit subject<br>
  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; at 2010-06-30 11:29:57 +0100<br>
  &nbsp;&nbsp;&nbsp; - first commit body  </p>
</blockquote>

<p><strong>edit:</strong></p>

<p>for non-ideal fix see <a href=""http://stackoverflow.com/questions/3148863/how-can-i-customize-gits-merge-commit-message/3264341#3264341"">answer</a> below</p>

<p>but the real question is <strong>how to modify the information generated by the 'fmt-merge-msg'?</strong></p>
","38","27181","<git><git-merge>"
"12650261","1","Git says local branch is behind remote branch, but it's not","<p>Scenario:  </p>

<ol>
<li>I make a new branch<br></li>
<li>hack on it<br></li>
<li>commit it<br></li>
<li>push it<br></li>
<li>hack on it some more<br></li>
<li>commit again<br></li>
<li>try to push again<br></li>
</ol>

<p>Git responds:</p>

<blockquote>
  <p>Updates were rejected because the tip of your current branch is behind
  its remote counterpart. etc.</p>
</blockquote>

<p>I'm the only one hacking on this branch - no one else is touching it.  The remote branch is actually <em>behind</em> the local branch.  I shouldn't have to pull at all.</p>

<p>(And if I do pull, Git reports conflicts between the two, and forces me to merge the branch into itself)</p>

<p>Why is this (likely) happening?  And how can I diagnose/fix it?</p>

<p>To be clear, I'm not branching anywhere, and <em>no one else</em> is working on it:</p>

<pre><code>Remote: Commit A -------- Commit B  

Local:  Commit A -------- Commit B -------- Commit C  
</code></pre>

<p>C is a straight continuation of B, no branching involved.  But git thinks C is a branch of A:  </p>

<pre><code>Remote: Commit A -------- Commit B  

                  ------- Commit C  
                /  
Local:  Commit A -------- Commit B  
</code></pre>

<p>It's not; it's a straight continuation of B.</p>
","61","95008","<git><git-push>"
"5553156","1","How do I merge a pull request on someone else's project in git?","<p>I cloned this repo on my computer: <a href=""https://github.com/derobins/wmd.git"">https://github.com/derobins/wmd.git</a></p>

<p>There are several bugs with it though, and it looks like another user has fixed them and issued ""Pull requests"" (I assume these are requests for their changes to be committed?)</p>

<p>Is it possible to merge those changes into my local version?</p>

<p>EDIT: just to be clear, this is <em>not</em> my repository. I am using the WMD editor from derobins, but it has several bugs which those pull requests purport to fix. I have cloned the repo on Ubuntu (not in github) and was hoping to merge those changes in if possible.</p>
","46","16701","<git><github><pull-request>"
"17559719","1","How to set up a code review using Gitlab?","<p>How does one set up a code review using Gitlab?  I see it listed as a feature on the Gitlab website, but I can't seem to find instructions on how to set one up (For that matter, any link to a Gitlab user manual would be most appreciated).  </p>

<p>Some of my searching has indicated that 'Merge Requests' are the way to go... but I'm finding them limiting.  An issued merge request shows all of the commits between one branch and the other.  I seem to only be able to view diffs generated for each individual commit.  For example, let's say I have a file I want to review.  It is a new file but I've submitted changes to it over 10 commits on a dev branch.  If I issue a merge request for that dev branch from integration I see 10 commits each of which show the incremental changes made to the file... I want to review the entire thing.  It is new!  </p>

<p>Am I barking up the wrong tree here?  Is there an actual code-review tool I can use in GitLab, or are merge requests the way to go, and if they are am I using them incorrectly?  what's the best way to set up a proper code review here?</p>
","41","33502","<git><code-review><gitlab>"
"7901864","1","Git conflict markers","<p>After I pulled from remote branch, I got conflict, when I open the file it looks something like below:</p>

<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:file.txt
Hello world
=======
Goodbye
&gt;&gt;&gt;&gt;&gt;&gt;&gt; 77976da35a11db4580b80ae27e8d65caf5208086:file.txt
</code></pre>

<p>I need some explanations of the markers, which portion of code is pulled from remote and which is from local?</p>

<p>What does the code <code>77976da35a11db4580b80ae27e8d65caf5208086</code> stand for?</p>
","100","38006","<git><git-conflict-resolution>"
"3150394","1","How to undelete a file previously deleted in git's history?","<p>Using <a href=""http://stackoverflow.com/questions/3147097/how-to-prepend-the-past-to-a-git-repository/3148117#3148117"">Chris's answer</a> on another question I could prepend a snapshot-history to my git repository. Since one of the files is not part of my history but only in the snapshots, the first original commit now also contains the deletion of this file. How can I undo that?</p>

<p><em>At first I thought this was the opposite of <a href=""http://stackoverflow.com/questions/872565/how-do-i-remove-sensitive-files-from-gits-history"">How do I remove sensitive files from git’s history</a>, but actually I don't want to insert a file into history but just remove the deletion from history.</em></p>
","36","23725","<git><repository><history><undelete>"
"12651749","1","git push fails: RPC failed; result=22, HTTP code = 411","<p>I have only one branch. For a few months I have been using</p>

<pre><code>git push origin master
</code></pre>

<p>to commit to my local repository. Last night after I made some minor changes to my local repository and tried to push using the same command, I got this error:</p>

<pre><code>error: RPC failed; result=22, HTTP code = 411
fatal: The remote end hung up unexpectedly
fatal: The remote end hung up unexpectedly
Everything up-to-date
</code></pre>

<p>I googled and found questions such as <a href=""http://stackoverflow.com/q/999907/1270459"">this one</a> and <a href=""http://stackoverflow.com/q/2936652/1270459"">this one</a>, but none of the answers to these questions solves my problem.</p>

<p>Most of the answers suggest the problem of <strong>detached head</strong>. Yet I don't think my head is detached. Nor do I think I am on the wrong branch (as I only have one branch...)</p>

<p>I did a few experiments to figure out what's wrong, and here are the results I got:</p>

<p>(1) First comes my <code>git status</code> output</p>

<blockquote>
<pre><code># On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
# egal.aux
# egal.blg
# egal.out
# egal.pdf
# egalcar.aux
# egalcar.blg
# egalcar.pdf
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>
</blockquote>

<p>(2) When I type <code>git reflog</code>, I can see all my local commits, but the remote repository just won't get updated.</p>

<p>(3) When I type <code>git branch -a</code>, I get</p>

<blockquote>
<pre><code>* master
  remotes/origin/master
</code></pre>
</blockquote>

<p>(4) When I type <code>git remote show origin</code>, I get</p>

<blockquote>
<pre><code>* remote origin
  Fetch URL: http://github.com/CherryQu921/egaldoc_en
  Push  URL: http://github.com/CherryQu921/egaldoc_en
  HEAD branch: master
  Remote branch:
    master tracked
  Local ref configured for 'git push':
    master pushes to master (fast-forwardable)
</code></pre>
</blockquote>

<p>I think the last line of output (the ""fast-forwardable"") is weird, but I am not sure what is wrong...</p>
","89","31753","<git><github>"
"1265040","1","How to count total lines changed by a specific author in a Git repository?","<p>Is there a command I can invoke which will count the lines changed by a specific author in a Git repository? I know that there must be ways to count the number of commits as Github does this for their Impact graph.</p>
","207","97671","<git>"
"13594344","1","Force Git to always choose the newer version during a merge?","<p>Let's assume I <code>merge</code> git and there is a merge conflict.</p>

<p>My question is: how can I force git to always choose the newer version of code in conflict so I won't need to resolve the conflict by hand?</p>
","63","45615","<git><merge><conflict>"
"11358082","1","Empty Git submodule folder when repo cloned","<p>I have one repo hosted at <a href=""https://github.com/aikiframework/json"" rel=""nofollow"">https://github.com/aikiframework/json</a> . On my local copy, I added a submodule using the command</p>

<pre><code>git submodule add git@github.com:jcubic/json-rpc.git json-rpc
</code></pre>

<p>Then I did a commit and push, and the changes appear on GitHub (I can click on it). But when I clone the repo</p>

<pre><code>git clone https://github.com/aikiframework/json.git
</code></pre>

<p>the submodule folder json-rpc is empty.</p>

<p>What am I missing here? Did I forget about something? Why is that folder empty?</p>
","47","10006","<git><version-control><git-submodules><git-clone>"
"4384776","1","How do I contribute to other's code in GitHub?","<p>I would like to contribute to a certain project in <a href=""http://en.wikipedia.org/wiki/GitHub"">GitHub</a>. Should I <strong>fork</strong> it? <strong>Branch</strong> it? What is recommended and how to do it?</p>
","180","28823","<git><open-source><github>"
"15127078","1","Git Pull is Not Possible, Unmerged Files","<p>I've read all of the similar questions on this; it seems that none of the following have worked:</p>

<pre><code>Delete offending files
git reset --hard HEAD
git stash
git pull
</code></pre>

<p>Nearly every combination, stashing changes and pulling from repository, results in unmergable files. I'd like to discard all local changes and just use the remote, but I cannot clone again (bandwidth and internet usage limitations with the developer trying to do this). How do I do this? </p>

<p>Just tried:</p>

<pre><code>git stash
git pull
</code></pre>

<p>Also did not work.</p>

<p><strong>More Info</strong></p>

<p>There is one local commit, and the upstream has a commit as well. I've thus tried <code>git pull --rebase</code> but it's still not working properly... That gives me errors - ""exiting because of an unresolved conflict"". If I do <code>git stash, git reset --hard HEAD, git pull --rebase</code>, I get the error ""pull is not possible, unmerged changes..."" </p>
","43","85999","<git>"
"1309430","1","How to embed bash script directly inside a git alias","<p>Can I embed the following bash shell code:</p>

<pre><code>for name in $(git diff --name-only $1); do git difftool $1 $name &amp; done
</code></pre>

<p>directly into the creation of a git alias: </p>

<pre><code>git config --global alias.diffall ***my-bash-code-here***
</code></pre>

<p>This leads on from my <a href=""http://stackoverflow.com/questions/1220309/git-difftool-open-all-diff-files-immediately-not-in-serial/1291578#1291578"">previous question/answer</a> on SO, where I put the code into a .sh file and then aliased to the file:</p>

<pre><code>git config --global alias.diffall '!sh diffall.sh'
</code></pre>

<p>But in the never-ending quest for simplicity, there's gotta be a way to skip the file and insert code directly into the alias? I can't figure out the format...</p>
","44","12099","<git><bash><shell><alias>"
"4386959","1","Difference between HEAD and master","<p>What is the difference between the <code>HEAD</code> and <code>master</code> in Git?</p>

<p>I did a clone of a project on GitHub and want to push my changes to the remote. But to which one should I push?</p>

<p><img src=""https://i.stack.imgur.com/2yC3l.png"" alt=""screenshot""></p>
","113","40467","<git><github><head><master>"
"5637311","1","How to use `git diff --color-words` outside a Git repository?","<p>How to get output like in  <code>git diff --color-words</code>, but outside Git?</p>

<p>Closest thing is <code>wdiff  -t</code>, but it underlines/inverts things instead of using green/red colours and does not allow specifying my whitespace regex.</p>
","38","9553","<git><colors><diff><word><word-diff>"
"4479225","1","How to output git log with the first line only?","<p>I am trying to customize the format for <code>git log</code>. I want all commits to be shown in one line. Each line should only show the first line of the commit message.<br>
I <a href=""http://book.git-scm.com/3_reviewing_history_-_git_log.html"">found out</a> that <code>git log --pretty=short</code> should do the trick but on my computer it shows the full log as <code>git log</code> does (besides the time stamp).</p>

<p>Further, I tried to use the <a href=""http://git-scm.com/docs/git-log"">placeholders as defined in the man page</a>. Though, I could not find a command to shorten the log message. I tried this line <code>git log --pretty=format:'%h : %s'</code> which shows the shorted hash <code>%h</code>and the full message <code>%s</code> in one line.</p>

<p>I am using <code>git version 1.7.3.1.msysgit.0</code> on Vista.</p>

<hr>

<p>Maybe it has something to do with the way I write my commit messages. Here is an example:</p>

<pre><code>Added some functionality.
+ Added print function in Foo class.
+ Added conversion from foo to baz.
</code></pre>

<p>So, with the example given I only want to be output <code>Added some functionality.</code> prepended by the shortend hash.</p>
","143","60344","<git><version-control><formatting><logging><commit-message>"
"16037787","1","Convert Mercurial project to Git","<p>I need to convert a mercurial project to a git project, but I would like to keep the commit history intact. My current solution was to just remove hg related files and then git init &amp;&amp; add manually the files I needed, but that would not keep the history. Are there any solutions to this?</p>
","108","49952","<git><mercurial>"
"4479960","1","GIT: Checkout to a specific folder","<p>I want to use something similar to:</p>

<pre><code>git checkout -- &lt;path&gt;/&lt;file&gt;
</code></pre>

<p>but I want to checkout the file to some folder I choose, rather than the overwriting the local /.</p>

<p>Any idea?</p>
","61","43522","<git>"
"13677125","1","Force git to run post-receive hook, even if everything is ""up-to-date""","<p>How do I force <code>git</code> to run a <code>post-receive</code> hook on a server even if I don't have a new commit to push?</p>

<h2>Background</h2>

<p>I use git to automatically deploy a website to a server. I have a bare repo in a protected area of the server and a <code>post-receive</code> hook that checks out the contents and systematically copies over certain files into a <code>public_html</code> folder. (Inspired by <a href=""http://toroid.org/ams/git-website-howto"">this tutorial</a>)</p>

<p>I got tired of modifying the <code>post-receive</code> hook manually on the server, so my <code>post-receive</code> hook now actually copies over a new version of itself from the repo:</p>

<pre><code>#!/bin/sh

rm -rf ~/../protected/*
GIT_WORK_TREE=~/../protected git checkout -f

# Rewrite over this file with any updates from the post-receive file
cp ~/../protected/post-receive hooks/post-receive

# Delete public_html
# Copy stuff public_html
</code></pre>

<p>The problem, of course, is that the new <code>post-receive</code> hook never gets run. A seemingly simple solution would be merely to push again, but now  everything is already up to date. This is annoying, because it requires me to fake a new commit every time I update the <code>post-receive</code> hook. Is there a way to invoke the <code>post-receive</code> hook without faking a commit or <code>ssh</code>ing in?  </p>

<h2>What I tried</h2>

<pre><code>git push
git push -f
</code></pre>
","32","6873","<git>"
"21123415","1","git pull aborted with error filename too long","<p>I'm using windows as my OS.
I'm working on a project with a friend who's using a Mac.
He checked in code to our Github.
i was trying to git pull everything and it aborted with ""filename too long"" errors of 3rd party code.</p>

<p>What can I do?</p>
","66","36488","<git>"
"8021441","1",".gitignore hidden/dot directories","<p>I'd like to have git ignore all the dot or hidden files and directories, ie.  .aptitude, .ssh/ and hidden files .bash_rc, etc... Is there a simple rule to cover this without specifically adding each entry?</p>
","67","34204","<git><gitignore>"
"1402390","1","git push/clone to new server","<p>Im just learning git and there is something I cant work out. After creating and using a git repository locally on my Mac, can I push a copy to another server somewhere else? I am behind a firewall so unfortunately I can't run <code>git clone</code> from the other machine.</p>
","108","89766","<git>"
"1402776","1","How do I commit all deleted files in Git?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/492558/removing-multiple-files-from-a-git-repo-that-have-already-been-deleted-from-disk"">Removing multiple files from a Git repo that have already been deleted from disk</a>  </p>
</blockquote>



<p>If I delete some files from the disk they come up as deleted like so in the Git repo:</p>

<pre><code>C:\git\bc&gt;git status
# On branch tracking2
# Changed but not updated:
#   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       deleted:    test.txt
#
</code></pre>

<p>Is there a way to do a single command ""just delete these files from the repository""?<br>
Similar to <code>git add .</code> which would add all new and modified files to the stage.</p>

<p>I use Visual Studio and Windows explorer to work with my source tree and at some point I just delete a whole bunch of files. I then find it a pain to call <code>git rm</code> as the files are no longer around and there is no command line intellisense to help me type it in. </p>

<p>I just want a command that deletes all files from git that are also deleted from the disk.</p>
","970","224766","<git><git-add>"
"20101834","1","pip install from github repo branch","<p>Seems to be rather straightforward but I just can't get it right. Trying to <code>pip</code> install a repo's specific branch. Googling tells me to  </p>

<blockquote>
  <p>pip install <a href=""https://github.com/user/repo.git@branch"">https://github.com/user/repo.git@branch</a></p>
</blockquote>

<p>The branch's name is <code>issue/34/oscar-0.6</code> so I did <code>pip  install https://github.com/tangentlabs/django-oscar-paypal.git@/issue/34/oscar-0.6</code> but its returning a 404.</p>

<p>How do I install this branch?</p>
","176","77780","<python><git><github><pip>"
"20101994","1","git pull from master into the development branch","<p>I have a branch called dmgr2 (development) and I want to pull from the master branch (live site) and incorporate all the changes into my development branch. is there a better way to do this? 
here is what i had planned on doing:</p>

<pre><code> git checkout dmgr2
 git pull origin master
</code></pre>

<p>this should pull the live changes into my development branch, or do I have this wrong?</p>
","126","128467","<git><pull>"
"3324586","1","Push from github to heroku without downloading repo","<p>I have a github repo that I want to push to a heroku node. A 3rd host will be co-ordinating this. As I'm going to be doing this on a large scale I want to avoid having to download the contents of the repo onto the 3rd host. How do I do it?</p>
","37","16082","<git><github><heroku>"
"1450348","1","Git equivalents of most common Mercurial commands?","<p>I've been using Mercurial but would like to do a quick demo of Git.</p>

<p>What are the Git equivalents of:</p>

<pre><code>hg init . # start a project in the current directory
hg addremove # look for any added or deleted files
hg commit -m ""comment"" # commit any uncomitted changes
hg status # what have i changed since the last commit?
</code></pre>
","77","31167","<git><mercurial>"
"11514075","1","What is the difference between an annotated and unannotated tag?","<p>If I want to tag the current commit. I know both of the following command lines work:</p>

<pre><code>git tag &lt;tagname&gt;
</code></pre>

<p>and</p>

<pre><code>git tag -a &lt;tagname&gt; -m '&lt;message&gt;'
</code></pre>

<p>What is the difference between these commands?</p>
","93","22241","<git><tags>"
"5723957","1","How to setup eclipse/egit with github?","<p>I've never used <em>git</em> before and would like to learn.</p>

<p>I have a private repository with github.</p>

<p>I've installed the egit plugin for eclipse.</p>

<p>I have a workspace where I do my work, generally: <code>~/Documents/workspace</code></p>

<p>I am able to add my github repository and download it, but in doing so it creates <code>~/MyRepository</code></p>

<p>when I create a project, do I need to point it to <code>~/MyRepository</code>?</p>

<p>Also, how come when I make an edit and I say push to upstream it says up to date?</p>
","38","70971","<git><github>"
"5724513","1","In Git, how do I figure out what my current revision is?","<p>I just want to know what my current version number is.</p>
","62","48514","<git>"
"5724522","1","Creating GitHub repository with only a subset of a local repository's history","<p><em>The background:</em> I'm moving closer to <a href=""http://reference-man.blogspot.com/2011/03/sharing-research-code.html"">open sourcing a personal research code</a> I've been working on for more than two years. It started life as an SVN repository, but I moved to Git about a year ago, and I'd like to share the code on GitHub. However, it accumulated a lot of cruft over the years, and I'd prefer that the public version begin its life at its current status. However, I'd still like to contribute to it and incorporate other people's potential contributions.</p>

<p><em>The question:</em> is there a way to ""fork"" a git repository such that no history is retained on the fork (which lives on GitHub), but that my local repository still has a complete history, and I can pull/push to GitHub?</p>

<p>I've not any experience on the administrating end of large repositories, so detail is very much appreciated.</p>
","36","5337","<git><github><fork>"
"3325736","1","Eclipse Android and gitignore","<p>What files/folders can I safely ignore for inclusion with git?</p>

<p>I copied a good project, removed its gen and bin folders and tried to run the app. The Android Launch window says, ""Your project contains error(s), please fix them before running your application. There is a red X on the icon to the left of the project in the Package Explorer. While the gen folder does not exist in Windows Explorer, it does in Package Explorer.</p>
","181","56085","<android><eclipse><git>"
"4565700","1","Specify private SSH-key to use when executing shell command with or without Ruby?","<p>A rather unusual situation perhaps, but I want to specify a private SSH-key to use when executing a shell (git) command from the local computer.</p>

<p>Basically like this: <code>git clone git@github.com:TheUser/TheProject.git -key ""/home/christoffer/ssh_keys/theuser""</code></p>

<p>Or even better (in Ruby):</p>

<pre><code>with_key(""/home/christoffer/ssh_keys/theuser"") do
  sh(""git clone git@github.com:TheUser/TheProject.git"")
end
</code></pre>

<p>I have seen examples of connecting to a remote server with Net::SSH that uses a specified private key, but this is a local command. Is it possible?</p>
","356","305068","<ruby><git><bash><shell><ssh>"
"15286075","1","Difference between git stash pop and git stash apply","<p>I have been using <code>git stash pop</code> for quite a some time. I recently got to know about <code>git stash apply</code> command. When I tried it out, it seemed to work same as <code>git stash pop</code>. I am wondering what is the difference between <code>git stash pop</code> and <code>git stash apply</code>?</p>
","285","52897","<git><git-stash>"
"9162271","1","fatal: Not a valid object name: 'master'","<p>I have a private server running git 1.7
When I </p>

<pre><code>git init 
</code></pre>

<p>a folder it doesn't create a master branch.
Cause when i do: </p>

<pre><code>git branch 
</code></pre>

<p>it doesn't list anything.
When I  do:</p>

<pre><code>git --bare init
</code></pre>

<p>it creates the files.
When I type </p>

<pre><code>git branch master 
</code></pre>

<p>it says:</p>

<pre><code>fatal: Not a valid object name: 'master'.
</code></pre>
","77","72775","<git>"
"5772192","1","How can I reconcile detached HEAD with master/origin?","<p>I'm new at the branching complexities of Git. I always work on a single branch and commit changes and then periodically push to my remote origin.</p>

<p>Somewhere recently, I did a reset of some files to get them out of commit staging, and later did a <code>rebase -i</code> to get rid of a couple recent local commits. Now I'm in a state I don't quite understand.</p>

<p>In my working area, <code>git log</code> shows exactly what I'd expect-- I'm on the right trail with the commits I didn't want gone, and new ones there, etc.</p>

<p>But I just pushed to the remote repository, and what's there is different-- a couple of the commits I'd killed in the rebase got pushed, and the new ones committed locally aren't there. </p>

<p>I think ""master/origin"" is detached from HEAD, but I'm not 100% clear on what that means, how to visualize it with the command line tools, and how to fix it.</p>
","784","397694","<git>"
"10516201","1","Updating file permissions only in git","<p>Just turned an <code>some.sh</code> file into an executable (<code>chmod 755 ...</code>), the permissions were updated but not the content. Is there a way to <em>commit</em> the file into git, so that the executable bit will be restored/set on <em>clone</em> / <em>checkout</em> / <em>pull</em> ?</p>

<p><strong>Update:</strong> how can I track that the new permissions were submitted to <code>github</code>?</p>
","54","41428","<git>"
"12898278","1","Issue with adding common code as git submodule: ""already exists in the index""","<p>I'm new to git and would appreciate help with adding submodules.
I've received two projects sharing some common code. The shared code was just copied into the two projects. I created a separate git repo for the common code and removed it from the projects with the plan to add it as a git submodule. </p>

<p>I used the path option of git submodule add to specify the folder:</p>

<pre><code>git submodule add url_to_repo projectfolder
</code></pre>

<p>but then got the error:</p>

<pre><code>'projectfolder' already exists in the index""
</code></pre>

<p>This is the desired structure of my repository:</p>

<pre><code>repo
|-- projectfolder
    |-- folder with common code
</code></pre>

<p>It is possible to add the git submodule directly in the repo or into a new folder there, but not in the projectfolder. The problem is that it really need to be in the projectfolder..
What can I do about this and what have I misunderstood about the path option of git submodule add?</p>
","71","31338","<git><git-submodules>"
"4658451","1","Can a local Git clone be considered a complete backup of the repo it was cloned from?","<p>Suppose I have cloned a Git repository to my local disk using:</p>

<pre><code>git clone username@git.example.com:someproject.git
</code></pre>

<p>Now suppose that <code>git.example.com</code> is not being backed up, and it goes down in a blaze of glory.  Does my clone contain everything necessary to rebuild the remote repo that was lost?  The <a href=""http://www-cs-students.stanford.edu/~blynn/gitmagic/book.html#_ultimate_backups"">Ultimate Backups</a> section of <a href=""http://www-cs-students.stanford.edu/~blynn/gitmagic/"">Git Magic</a> suggests that the answer is ""yes,"" but it isn't clear to me.</p>

<p>Note that I'm not asking ""is my local clone a sufficient backup of the <code>master</code> branch?""  I'm asking whether my local clone can be considered a <em>complete</em> backup of <em>everything</em> that was contained in the remote repo; all branches, all tags, <em>everything</em>.  For example, what about remote branches that aren't tracked in the local repo?</p>

<p>To futher confuse the issue, the existence of <code>git clone --mirror</code> suggests to me that my local clone should <em>not</em> be considered a complete backup of the remote repo.</p>
","31","7391","<git>"
"4658606","1","Import existing source code to GitHub","<p>How can I import source code from my computer to my GitHub account?</p>
","515","191159","<git><github>"
"1556119","1","SSH Private Key Permissions using Git GUI or ssh-keygen are too open","<p>Recently I've been unable to clone or push to github, and I'm trying to find the root cause.</p>

<p><em>This is on windows</em></p>

<p>I have cygwin + git as well as msysgit.</p>

<p>Msysgit was installed with the following options:</p>

<ul>
<li>OpenSSH</li>
<li>Use Git from Windows Command Prompt</li>
</ul>

<p>That gives me 4 environments to try to use git in:</p>

<ul>
<li>Windows cmd prompt</li>
<li>Powershell</li>
<li>Git Bash</li>
<li>Cygwin</li>
</ul>

<p>Somehow I've managed to get myself into a position where when I try to clone a repository using msysgit, cmd.exe, or Powershell, I get the following error:</p>

<pre><code>&gt; Initialized empty Git repository in
&gt; C:/sandbox/SomeProject/.git/
&gt; @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&gt; @    WARNING: UNPROTECTED PRIVATE KEY FILE!          @
&gt; @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&gt; Permissions 0644 for
&gt; '/c/Users/Ben/.ssh/id_rsa' are too
&gt; open. It is recommended that your
&gt; private key files are NOT accessible
&gt; by others. This private key will be
&gt; ignored. bad permissions: ignore key:
&gt; /c/Users/Ben/.ssh/id_rsa Permission
&gt; denied (publickey). fatal: The remote
&gt; end hung up unexpectedly
</code></pre>

<p>This is using the .ssh folder in my c:\users\ben\ folder, which is what is used by msysgit. <em>I suspect cygwin works because the .ssh folder is located elsewhere, but I'm not sure why</em></p>

<p>In Git Bash, I check the permissions:</p>

<pre><code>$ ls -l -a ~/.ssh
</code></pre>

<p>Which gives me:</p>

<pre><code>drwxr-xr-x    2 Ben      Administ        0 Oct 12 13:09 .    
drwxr-xr-x   34 Ben      Administ     8192 Oct 12 13:15 ..    
-rw-r--r--    1 Ben      Administ     1743 Oct 12 12:36 id_rsa
-rw-r--r--    1 Ben      Administ      399 Oct 12 12:36 id_rsa.pub    
-rw-r--r--    1 Ben      Administ      407 Oct 12 13:09 known_hosts
</code></pre>

<p>These permissions are apparently too relaxed.  How they got this way, I have no idea.</p>

<p>I can try to change them...</p>

<pre><code>$ chmod -v -R 600 ~/.ssh
</code></pre>

<p>which tells me:</p>

<pre><code>mode of `.ssh' changed to 0600 (rw-------)
mode of `.ssh/id_rsa' changed to 0600 (rw-------)
mode of `.ssh/id_rsa.pub' changed to 0600 (rw-------)
mode of `.ssh/known_hosts' changed to 0600 (rw-------)
</code></pre>

<p>But it seems to have no effect.  I still get the same error, and doing </p>

<pre><code>$ ls -l -a ~/.ssh
</code></pre>

<p>yields the same permissions as before.</p>

<p><strong>UPDATE:</strong></p>

<p>I tried to fix the permissions to those files in cygwin, and cygwin reports their permissions correctly, gitbash does not:
<img src=""http://cdn.cloudfiles.mosso.com/c54102/app7962031255448924.jpg"" alt=""alt text"" /></p>

<p>Any ideas on how I can really fix these permissions?</p>
","204","206753","<git><ssh><cygwin><msysgit><openssh>"
"7005513","1","Pass an argument to a Git alias command","<p>Can I pass arguments to the alias of a Git command?</p>

<p>I have some alias in Git config, like so:</p>

<pre><code>rb1 = rebase -i HEAD~1
rb2 = rebase -i HEAD~2
rb3 = rebase -i HEAD~3
rb4 = rebase -i HEAD~4
....
</code></pre>

<p>Is it possible to make an <code>rb</code> alias so that <code>git rb &lt;x&gt;</code> works for any <code>&lt;x&gt;</code>?</p>

<p>I tried this alias:</p>

<pre><code>rb = rebase -i HEAD~
</code></pre>

<p>but then for instance <code>git rb 8</code> does not work.</p>
","46","10524","<git><git-config><git-alias>"
"1557183","1","Is it possible to include a file in your .gitconfig","<p>I'd like to include a file in my .gitconfig that has my github settings - is this possible?</p>

<p>Can I do something like this:</p>

<pre><code>[core]
    include = /path/to/file
</code></pre>
","144","15218","<git><github>"
"1611215","1","Remove a git commit which has not pushed","<p>I did a 'git commit' but I have not pushed to others.
so when i do 'git status', I get '# Your branch is ahead of 'master' by 1 commit.'</p>

<p>So if I want to roll back my top commit,  can I just do""</p>

<pre><code>git reset --hard eb27bf26dd18c5a34e0e82b929e0d74cfcaab316
</code></pre>

<p>given that when i do 'git log'</p>

<pre>
commit eb27bf26dd18c5a34e0e82b929e0d74cfcaab316
Date:   Tue Sep 29 11:21:41 2009 -0700


commit db0c078d5286b837532ff5e276dcf91885df2296
Date:   Tue Sep 22 10:31:37 2009 -0700</pre>
","130","107007","<git>"
"21277806","1","fatal: early EOF fatal: index-pack failed","<p>I have googled and found many solutions but none work for me.</p>

<p>I am trying to clone from one machine by connecting to the remote server which is in the LAN network. Running this command from another machine cause error. But running the SAME clone command using git://192.168.8.5 ... at the server it's okay and successful. Any ideas ?</p>

<pre><code>user@USER ~
$ git clone  -v git://192.168.8.5/butterfly025.git
Cloning into 'butterfly025'...
remote: Counting objects: 4846, done.
remote: Compressing objects: 100% (3256/3256), done.
fatal: read error: Invalid argument, 255.05 MiB | 1.35 MiB/s
fatal: early EOF
fatal: index-pack failed
</code></pre>

<p>I have added this config in .gitconfig but no help also. Using the git version 1.8.5.2.msysgit.0</p>

<pre><code>[core]
    compression = -1
</code></pre>
","65","63839","<git><cygwin><msysgit>"
"15376241","1","Why does Git say my master branch is ""already up to date"" even though it is not?","<h2>Basic Problem</h2>

<p>I just deleted ALL the code from a file in my project and committed the change to my local git (on purpose). I did </p>

<pre><code>git pull upstream master
</code></pre>

<p>to fetch and merge from upstream (so in theory that deleted code should be back).</p>

<p>Git tells me everything is up to date.</p>

<p>Everything is definitely NOT up to date -- all that deleted code is still deleted.</p>

<h3>Other Relevant Info</h3>

<p>I only have one branch called ""master"".</p>

<p>I recently set up ""master"" to track upstream like so:</p>

<blockquote>
  <p>Branch master set up to track remote branch master from upstream.</p>
</blockquote>

<p>The command <code>git branch -vv</code> yields:</p>

<pre><code>* master 7cfcb29 [upstream/master: ahead 9] deletion test
</code></pre>

<p>Why why why is this happening?  I'm on the verge of just e-mailing my project manager any changes I make to our code.</p>

<h2>Update</h2>

<p>I thought it was obvious, but anyways this is my goal:</p>

<p><strong>Get the most recent of the code on my system.</strong></p>

<p>Excuse my anger here, but why does such a simple task as that have to be so hard?</p>
","46","35129","<git><github><merge>"
"4663103","1","Multiple heroku accounts","<p>I'm having trouble when working with multiple Heroku accounts on my computer.</p>

<p>The thing is that it's worked great before by switching accounts with the heroku gem. But now (even though I've generated new SSH keys) it wont work.</p>

<p>When I do a <code>git push heroku master</code> it just says:</p>

<blockquote>
  <p>my@email.com not authorized to access my_app_name</p>
</blockquote>

<p>Does anyone have any advice on how I could solve this?</p>
","82","26589","<git><heroku>"
"7114143","1","Why does git protocol produce more objects than git-http-backend?","<p>I'm using <strong>Git 1.7.1</strong> configured with <code>git-http-backend</code> (<a href=""http://progit.org/2010/03/04/smart-http.html"" rel=""nofollow"">Smart HTTP</a>).  I wanted to see how much faster this was compared to the <strong>git://</strong> protocol, since now they are supposed to be on par.</p>

<p>Turns out <strong>git://</strong> protocol is compressing more objects (<em>33,229</em> vs <em>21,193</em>) for the <strong>exact</strong> same repo (even verified client side), and thus creating a packfile that's about 30MB bigger for my project.  </p>

<p>Is there some reason why <strong>git://</strong> protocol needs more objects?</p>

<h1>git:// Output</h1>

<pre><code>remote: Counting objects: 44510, done.
remote: Compressing objects: 100% (33229/33229), done.
Receiving objects: 100% (44510/44510), 124.07 MiB | 2.84 MiB/s, done.
remote: Total 44510 (delta 22755), reused 15866 (delta 7516)
Resolving deltas: 100% (22755/22755), done.
</code></pre>

<h1>http:// Output</h1>

<pre><code>remote: Counting objects: 24299, done.
remote: Compressing objects: 100% (21931/21931), done.
remote: Total 24299 (delta 7517), reused 0 (delta 0)
Receiving objects: 100% (24299/24299), 95.95 MiB | 2.41 MiB/s, done.
Resolving deltas: 100% (7517/7517), done.
</code></pre>
","52","1132","<git>"
"5874090","1","How to get diff between all files inside 2 folders that are on the web?","<p>So I want to <a href=""http://cloudobserver.googlecode.com/svn/branches/v0.4/Boost.Extension.Tutorial/libs/boost/extension/"">compare this folder</a> <code>http://cloudobserver.googlecode.com/svn/branches/v0.4/Boost.Extension.Tutorial/libs/boost/extension/</code> with <a href=""http://svn.boost.org/svn/boost/sandbox/boost/extension/"">this</a> <code>http://svn.boost.org/svn/boost/sandbox/boost/extension/</code>. I want to get a diff file as a result. These folders are under svn control but I'd prefer git styled diff file (like one <a href=""http://stackoverflow.com/questions/5836948/boost-extension-simple-inheritance-sample-why-we-see-no-animals-on-linux/5838527#5838527"">shown here</a>) I tried <code>git diff</code> but it seems not to work that way for web folders. So how to do the same thing with one command on Linux?</p>

<p><em><strong>Update:</em></strong>
So we had <a href=""http://stackoverflow.com/questions/5874090/linux-how-to-get-diff-between-all-files-inside-2-folders-that-are-on-the-web/5874256#5874256"">a great answer</a>. But it works strangely - it seems to me it shows that all files (same files) have all theire contents replaced with very same contents (while I know for sure that there were only like 3-4 code lines changed at all)...</p>

<p><em><strong>Update 2:</em></strong>
To achieve what I really needed (dif file with only really changed lines, with git styling, on Linux) do:</p>

<pre><code>$ svn export http://cloudobserver.googlecode.com/svn/branches/v0.4/Boost.Extension.Tutorial/libs/boost/extension/ repos2 --native-eol CRLF
$ svn export http://svn.boost.org/svn/boost/sandbox/boost/extension/ repos --native-eol CRLF
$ git diff repos repos2 &gt; fileWithReadableDiff.diff
</code></pre>
","46","61314","<linux><svn><git><file><diff>"
"11706215","1","how to fix GIT error: object file is empty?","<p>When I try to commit changes, I get this error:</p>

<pre><code>error: object file .git/objects/31/65329bb680e30595f242b7c4d8406ca63eeab0 is empty
fatal: loose object 3165329bb680e30595f242b7c4d8406ca63eeab0 (stored in .git/objects/31/65329bb680e30595f242b7c4d8406ca63eeab0) is corrupt
</code></pre>

<p>Any idea how to solve this error ?</p>

<p>EDIT</p>

<p>I tried <code>git fsck</code> I've got:</p>

<pre><code>error: object file .git/objects/03/dfd60a4809a3ba7023cbf098eb322d08630b71 is empty
fatal: loose object 03dfd60a4809a3ba7023cbf098eb322d08630b71 (stored in .git/objects/03/dfd60a4809a3ba7023cbf098eb322d08630b71) is corrupt
</code></pre>
","213","53348","<git>"
"1670970","1","How to cherry-pick multiple commits","<p>I have two branches. Commit <code>a</code> is the head of one, while the other has <code>b</code>, <code>c</code>, <code>d</code>, <code>e</code> and <code>f</code> on top of <code>a</code>. I want to move <code>c</code>, <code>d</code>, <code>e</code> and <code>f</code> to first branch without commit <code>b</code>. Using cherry pick it is easy: checkout first branch cherry-pick one by one <code>c</code> to <code>f</code> and rebase second branch onto first. But is there any way to cherry-pick all <code>c</code>-<code>f</code> in one command?</p>

<p>Here is a visual description of the scenario (thanks <a href=""/users/356895/JJD"">JJD</a>):</p>

<p><img src=""http://i.stack.imgur.com/7k9Ev.png"" alt=""enter image description here""></p>
","307","105677","<git><git-rebase><cherry-pick>"
"13941976","1","Commit history on remote repository","<p>I am trying to access a <code>branch</code>'s <code>commit</code> history on a <code>remote</code> repository.  I had a look at <a href=""http://git-scm.com/book/en/Git-Basics-Viewing-the-Commit-History"">the doc</a> but could not find any substantial information on how to access a <code>remote</code> repo's <code>commit</code> history using my local git client.  </p>
","72","58518","<git><git-log>"
"11709885","1","git rebase merge conflict","<p>I forked a github repo and worked on my github repo. I have made pull-requests and it was completed. After that the upstream had some more commits so now I want to rebase, I guess thats what I have to do.
But I'm getting these merge conflicts.</p>

<pre><code>First, rewinding head to replay your work on top of it...
Applying: Issue 135 homepage refresh
Using index info to reconstruct a base tree...
&lt;stdin&gt;:17: trailing whitespace.
      %h4 
warning: 1 line adds whitespace errors.
Falling back to patching base and 3-way merge...
Auto-merging app/views/layouts/application.html.haml
CONFLICT (content): Merge conflict in app/views/layouts/application.html.haml
Auto-merging app/views/home/index.html.haml
CONFLICT (content): Merge conflict in app/views/home/index.html.haml
Auto-merging app/views/home/_group_projects.html.haml
CONFLICT (content): Merge conflict in app/views/home/_group_projects.html.haml
Failed to merge in the changes.
Patch failed at 0001 Issue 135 homepage refresh

When you have resolved this problem run ""git rebase --continue"".
If you would prefer to skip this patch, instead run ""git rebase --skip"".
To check out the original branch and stop rebasing run ""git rebase --abort"".
</code></pre>

<p>I dont know how to fix these, please help anyone</p>
","31","29833","<git><github><git-rebase>"
"16298986","1","Unable to Connect to GitHub.com For Cloning","<p>I am trying to clone the angular-phonecat git repository <a href=""https://github.com/angular/angular-phonecat"">https://github.com/angular/angular-phonecat</a> , but i am getting the following message when i enter the command in my gitbash</p>

<p>Message I got when i type ""$ git clone git://github.com/angular/angular-phonecat.git"" in Git Bash:</p>

<blockquote>
  <p>$ git clone git://github.com/angular/angular-phonecat.git
  Cloning into 'angular-phonecat'...
  fatal: unable to connect to github.com:
  github.com[0: 204.232.175.90]: errno=No error</p>
</blockquote>

<p>ScreenShot:
<img src=""http://i43.tinypic.com/33l1is4.png"" alt=""screenshot""></p>

<p>Please help in cloning the GIT Repo. Thanks in advance for any help.</p>
","98","83988","<git><github><git-bash>"
"3590400","1","Git commit to common submodule (master branch)","<p>I've two or more projects (let's call them <em>ProjectFoo</em> and <em>ProjectBar</em>) having some <strong>common code</strong> that I put in a <strong>submodule</strong>.</p>

<p>My understanding is that if I commit changes to a submodule from within <em>ProjectFoo</em> it'll be in a detached head that only all <em>ProjectFoo</em> clones can see:</p>

<pre><code>(master) $ cd ProjectFooBarCommoneSubmodule/
(master) $ git commit -am ""Common code fix.""
(56f21fb0...) $ git push
Everything up-to-date
</code></pre>

<p>That's probably because the <code>master</code> branch hasn't changed. I could probably do something like <code>git checkout master &amp;&amp; git merge Everything up-to-date</code> but that seem pretty ugly. May be a <code>git reset --hard master</code> would do the same but it seems even uglier.</p>

<p>How to have a common code shared by project, updated <strong>from within</strong> those projects using it? In other words, committing to that submodule should update all various repositories (<em>repositories, not just clones</em>) that use this same submodule.</p>

<p>---- EDIT ----</p>

<p>Visibly my checked-out repository was messed up and broken. It should have worked right from the start like that (on <em>ProjectFoo</em> in this example):</p>

<pre><code>(master) $ cd ProjectFooBarCommoneSubmodule/
(master) $ git commit -am ""Common code fix.""
(master) $ git push
....
   fbfdd71..0acce63  master -&gt; master
(master) $ cd ..
(master) $ git add ProjectFooBarCommoneSubmodule
(master) $ git commit -m ""Submodule update.""
</code></pre>

<p>Then to get that change from on other projects, like <em>ProjectBar</em>:</p>

<pre><code>(master) $ cd ProjectFooBarCommoneSubmodule/
(master) $ git pull
</code></pre>

<p>Would update to the latest common code. A <code>git checkout master</code> may be required if it's on a detached head.</p>
","39","15558","<git><commit><git-submodules>"
"7120199","1","GitHub Merge branch 'master'","<p>Been trying out Git and Github after many years of svn use. I seem to have the basics down, but one item is confusing me.</p>

<ul>
<li><p>UserA makes a change to FileA and pushes to the remote server
(GitHub) </p></li>
<li><p>UserB makes a change to FileB. He first pulls from remote
server, and then pushes his change to FileB to the remote server</p></li>
<li><p>GitHub commit history shows the push from UserA and the push from UserB</p></li>
<li><p>However, there is an additional entry in the commit history from UserB called 'Merge branch 'master' of <a href=""https://github.com/xxx/yyy"">https://github.com/xxx/yyy</a>'. Viewing the diff in Github shows this to be an exact replica of the Changes that UserA made to FileA</p></li>
</ul>

<p>Why is this duplicate shown - both the push from UserA to FileA and the Merge branch master entries are identical...the second seems superfluous to me.</p>
","38","13395","<git><github>"
"13044749","1","BitBucket - download source as ZIP","<p>I know I can get the project through <code>git clone</code> command, but is there any way, how to download the project through the web interface from <a href=""https://bitbucket.org/"">BitBucket.org</a>?
In the best way, I am looking for a way to download a project source as ZIP compress file.</p>
","119","75777","<git><download><zip><bitbucket><git-clone>"
"20370294","1","could not resolve host github.com error while cloning remote repository in git","<p>What I did: I have created a remote repository on Github and I am trying to clone the remote repository on my local machine. While cloning I am providing the clone URL &amp; target folder.</p>

<p>But every time I try to clone, I am getting this error:</p>

<p><strong>Error: ""fatal: unable to access '<a href=""https://github.com/hyperion057/spring-repo.git/"">https://github.com/hyperion057/spring-repo.git/</a>': Could not resolve host: github.com""</strong></p>

<p>What do I need to do to connect to GitHub ?</p>
","39","50710","<git><github>"
"16408300","1","What is the differences between local branch, local tracking branch, remote branch and remote tracking branch","<p>I just start using git and I got really confused between different branches. Can anyone help me to figure out what is local branches, local tracking branches, remote branches and remote tracking branches? what difference between them. and how they work with each other. a quick demo code will be really helpful I guess : )</p>

<p>Thanks</p>
","32","11379","<git><version-control><git-branch><git-remote>"
"3651860","1","Which characters are illegal within a branch name?","<p>Which characters are illegal within a branch name?</p>
","89","16679","<git><branch><naming>"
"1797074","1","Local executing hook after a git push?","<p>I've looked at <a href=""http://git-scm.com/docs/githooks"">the githooks manpage</a> but unless I'm missing something I don't see an option for local, post-push git hooks.  I'd like to have one that updates the api docs on my web server (for which I already have a script) after I push the master branch to the GitHub repo.  Of course I could just write my own script that combines the git push and the api docs run, but that feels somewhat inelegant.</p>
","36","27173","<git><githooks>"
"16411844","1","Git/Sourcetree basic branching and merging","<p>Newbie question alert!!! I am just starting to get into using Git, and particularly Sourcetree which seems like a good application for visualizing it. On my first test it went along pretty well, branching and merging (see the top diagram). I know this structure means I'm using the development and master branch the wrong way round, but that's fine because at least it worked.</p>

<p>On my second try though, I couldn't seem to visualise any branches, even though work was being  done in both of them they seem to appear in one single branch (with a '7 ahead' note), and when I try and merge nothing seems to happen. Hopefully the second screenshot is enough for someone to tell me what is happening here? If not I will try and give some more info. </p>

<p>I'm just playing around at the moment, so still getting to grips with proper workflow, just trying to get the basic branching and merging actions to take place in a consistent manner through Sourcetree. Any help will be appreciated.</p>

<p><img src=""http://i.stack.imgur.com/eeoPx.jpg"" alt=""enter image description here""></p>
","31","36288","<git><atlassian-sourcetree>"
"9477702","1","Undo delete in GIT","<p>I made something very stupid.
I made a commit using git commit (file edits + new files) (C).
Then I made amend last commit.
Then I deleted all files recursively (!) using <code>git rm -r</code>
Then I made another git commit (C).</p>

<pre>
A-B-C
    ↑
  master
</pre>

<p>Is there any way to undelete the files but keep the changes I had in my first commit? (C)
I'd rather do not go back to (B).
I tried git reset --soft head^, so then the git status lists files I deleted, then I did git checkout, but still no luck. I don't even know if it's possible.</p>
","42","50726","<git><commit><delete-file><undo><undelete>"
"3719068","1","Move commits from master onto a branch using git","<p>I'm trying to learn how to use Git effectively and I'm wondering how I should (good practice/bad practice?) solve the following case:</p>

<p>Say I have the following chain of commits in master:</p>

<ul>
<li>Initial commit</li>
<li>Commit 1</li>
<li>Commit 2</li>
<li>Commit 3</li>
</ul>

<p>Then I realize that what's done in the last two commits is completely wrong and I need to start from Commit 1 again. Questions:</p>

<ul>
<li>How should I do that?</li>
<li>Can I move Commit 2 and 3 to a separate branch to keep for future reference (say they weren't that bad after all) and continue working from Commit 1 on master?</li>
</ul>
","51","15225","<git><commit><git-branch><git-reset>"
"9478023","1","Is the git binary diff algorithm (delta storage) standardized?","<p>Git uses a delta compression to store objects that are similar to each-other. </p>

<p>Is this algorithm standardized and used in other tools as well? Is there documentation describing the format? Is it compatible with xdelta/VCDIFF/RFC 3284? </p>
","39","11813","<git><compression><binary-diff><vcdiff>"
"3719243","1","Recommended .gitignore file for Python projects?","<p>I'm trying to collect some of my default settings, and one thing I realized I don't have a standard for is .gitignore files. There's a great thread showing a <a href=""http://stackoverflow.com/questions/2143956/gitignore-for-visual-studio-projects-and-solutions"">good .gitignore for Visual Studio projects</a>, but I don't see many recommendations for Python and related tools (PyGTK, Django).</p>

<p>So far, I have...</p>

<pre><code>*.pyc
*.pyo
</code></pre>

<p>...for the compiled objects and...</p>

<pre><code>build/
dist/
</code></pre>

<p>...for the setuptools output.</p>

<p>Any more recommendations for me?</p>
","73","50220","<python><django><git><pygtk><gitignore>"
"1869885","1","Why is the Python calculated ""hashlib.sha1"" different from ""git hash-object"" for a file?","<p>I'm trying to calculate the SHA-1 value of a file. </p>

<p>I've fabricated this script:</p>

<pre><code>def hashfile(filepath):
    sha1 = hashlib.sha1()
    f = open(filepath, 'rb')
    try:
        sha1.update(f.read())
    finally:
        f.close()
    return sha1.hexdigest()
</code></pre>

<p>For a specific file I get this hash value:<br>
<code>8c3e109ff260f7b11087974ef7bcdbdc69a0a3b9</code><br>
But when i calculate the value with git hash_object, then I get this value:  <code>d339346ca154f6ed9e92205c3c5c38112e761eb7</code></p>

<p>How come they differ? Am I doing something wrong, or can I just ignore the difference?</p>
","43","26078","<python><git><hash>"
"6106137","1","Git enter long passphrase for every push","<p>Every time I try to push anything to GitHub it asks me the address <code>git@github.com:...</code> and after that it wants the passphrase. Is there a way to automate this?</p>

<p>I am using Linux Ubuntu.</p>
","41","12082","<linux><git><ssh>"
"18880024","1","Start ssh-agent on login","<p>I have a site as a remote Git repo pulling from Bitbucket.com using an SSH alias. I can manually start the ssh-agent on my server but I have to do this every time I login via SSH.</p>

<p>I manually start the ssh-agent:</p>

<pre><code>eval ssh-agent $SHELL
</code></pre>

<p>Then I add the agent:</p>

<pre><code>ssh-add ~/.ssh/bitbucket_id
</code></pre>

<p>Then it shows up when I do:</p>

<pre><code>ssh-add -l
</code></pre>

<p>And I'm good to go. Is there any way to automate this process so I don't have to do it every time I login? The server is running RedHat 6.2 (Santiago).</p>
","80","69090","<git><ssh><bitbucket><redhat><ssh-agent>"
"11829708","1","How to keep git from tracking all files that end with a ""~""?","<p>I'm using Gedit, and each time I save a file, Gedit creates a copy of it, and the name of the copy always ends with a ~. The problem is, Git always tries to track these files, and I don't want that! Is there a way to still be able to use <code>git add .</code>, but add just those files that do not end with ~?</p>
","43","14800","<git>"
"15589682","1","ssh: connect to host github.com port 22: Connection timed out","<p>I am under a proxy and I am pushing in to git successfully for quite a while.<br>
Now I am not able to push into git all of a sudden.<br>
I have set the RSA key and the proxy and double checked them, with no avail and git is throwing me the error shown in the title of the page.</p>
","33","36145","<git><ssh>"
"1871282","1","Nested git repositories?","<p>Can I nest git repositories? I have:</p>

<pre><code> /project_root/
 /project_root/my_project
 /project_root/third_party_git_repository_used_by_my_project
</code></pre>

<p>Does it make sense to git init/add the /project_root to ease management of everything locally or do I have to manage my_project and the 3rd party one separately?</p>
","103","39585","<git>"
"1872113","1","How do I clone a github project to run locally?","<p>I am trying to follow this railscast tutorial for authlogic - and it points to the source <a href=""http://github.com/ryanb/railscasts-episodes/tree/master/episode-160/blog/"">here</a> - </p>

<p>I have git installed - how do I replicate the source onto my localhost so that I can follow the tutorial like in the screencast? </p>

<p>Thank you!</p>
","79","91014","<git><github>"
"10784523","1","How do I merge changes to a single file, rather than merging commits?","<p>I have two branches A and B and, I want to merge branch A's single file with Branch B's corresponding file. How can I do that?</p>
","140","43083","<git><merge><git-branch>"
"6199889","1","Rebasing remote branches in Git","<p>I am using an intermediate Git repository to mirror a remote SVN repository, from which people can clone and work on. The intermediate repository has it's master branch rebased nightly from the upstream SVN, and we are working on feature branches. For example:</p>

<pre><code>remote:
  master

local:
  master
  feature
</code></pre>

<p>I can successfully push my feature branch back to the remote, and end up with what I expect:</p>

<pre><code>remote:
  master
  feature

local:
  master
  feature
</code></pre>

<p>I then re-setup the branch to track the remote:</p>

<pre><code>remote:
  master
  feature

local:
  master
  feature -&gt; origin/feature
</code></pre>

<p>And all is well. What I would like to do from here is to rebase the feature branch to the master branch on the remote, but I would like to do this from my local machine. I'd like to be able to do:</p>

<pre><code>git checkout master
git pull
git checkout feature
git rebase master
git push origin feature
</code></pre>

<p>To keep the remote feature branch up-to-date with the remote master. However, this method causes Git to complain:</p>

<pre><code>To &lt;remote&gt;
 ! [rejected]        feature -&gt; feature (non-fast-forward)
error: failed to push some refs to '&lt;remote&gt;'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
</code></pre>

<p><code>git pull</code> does the trick but causes a merge commit that I'd like to avoid. I'm concerned that the message states <code>feature -&gt; feature</code> rather than <code>feature -&gt; origin/feature</code> but this may just be a presentation thing. </p>

<p>Am I missing something, or going about this in completely the wrong way? It's not critical to avoid doing the rebase on the remote server, but it makes fixing any merge conflicts from the rebase much harder.</p>
","74","50462","<git><version-control><branch><rebase><feature-branch>"
"8481488","1","Is git not case sensitive?","<p>In the first commitment of my partial called <code>_Electronics</code> it was written beginning with a capital letters, then I changed it to <code>_electronics</code>.</p>

<p>Git under cygwin ignored the case after commiting the new name, so I changed the name by hand in the target repo.</p>

<p>Now it sometimes changes the commited <code>_electronics</code> partial to <code>_Electronics</code>.</p>

<p>What have I done wrong?</p>
","59","23635","<git><version-control><case-sensitive>"
"3817967","1","Correct Git workflow for shared feature branch?","<p>I am trying to figure out the right workflow for this situation:</p>

<p>On the shared repo, we have these branches:</p>

<pre><code>-master
-feature
</code></pre>

<p>The <em>feature</em> branch is a <strong>shared</strong> branch, since many developers are working on a new feature together. They are actively pushing their changes to the feature branch.</p>

<p>I'm trying to avoid 'conflict hell' for the day that <em>feature</em> finally gets merged back into <em>master</em>. Currently, I see some options:</p>

<p>1) <strong>Actively merge <em>master</em> into <em>feature</em>, and do it often.</strong> However, this is not recommended in the git docs, and I'm starting to see why. When I try this, I seem to fix the same conflicts over and over again.</p>

<p>2) <strong>Use rebase in some way.</strong> I've read up on this, but it looks like it wont work since the <em>feature</em> branch is actually shared. All it takes is one developer to do 2 rebases, and other developers could have conflicts from mismatched history.</p>

<p>3) <strong>Turn the <em>feature</em> branch into an integration branch,</strong> and have the developers use their own independent feature branches with rebasing to keep things sane. </p>

<p>4) Something completely different?</p>
","32","6221","<git><workflow><branch>"
"2108405","1","Branch descriptions in git","<p>Is there a way in git to have a 'description' for branches? While I try to use descriptive names, working for a while on a single branch sometimes dampens my memory of why I made some of the other topic branches. I try to use descriptive names for the branches but I think a 'description' (short note about the purpose of the branch) would be nice. </p>
","175","23390","<git><branch><task-tracking>"
"3946538","1","Git Clone: Just the files, please?","<p>I want to clone a GIT repo and NOT end up with a <code>.git</code> directory. In other words I just want the files. Is there a way to do this? </p>

<p><code>git clone --no-checkout</code> did the exact opposite of what I want (gave me just the <code>.git</code> directory).</p>

<p>I am trying to do that for a <em>remote</em> repo, not a local one, meaning this is <strong>not a duplicate</strong> of ""<a href=""http://stackoverflow.com/questions/160608/how-to-do-a-git-export-like-svn-export"">How to do a “git export” (like “svn export”)</a>"" (even though the solution might end up being the same).</p>
","54","34859","<git>"
"2121230","1","Git: How to move back and forth between commits","<p>I have a newbie question about Git:</p>

<p>I need to move back and forth in a history of a branch.
That means, I need to get all the files to the state they were in in some old revision, and then I need to get back to the latest state in the repository. I don't need to commit.</p>

<p>With SVN, it would be</p>

<pre><code>svn up -r800
</code></pre>

<p>to get to revision 800, and </p>

<pre><code>svn up
</code></pre>

<p>to get in sync with the repository.</p>

<p>I know the hash of the commit I want to get back to, so I tried</p>

<pre><code>git reset &lt;hash&gt;
</code></pre>

<p>which seems to get me there. But then I tried</p>

<pre><code>git pull
</code></pre>

<p>but that complains about conflicts.</p>

<p>So what's the proper way to move through the history of the branch?</p>

<p>I'm thinking in terms of SVN, so don't hezitate to point me to some nice tutorial. Note that I've already checked <a href=""http://git.or.cz/course/svn.html"">http://git.or.cz/course/svn.html</a> and <a href=""http://www.youtube.com/watch?v=8dhZ9BXQgc4"">http://www.youtube.com/watch?v=8dhZ9BXQgc4</a> .</p>

<p>Thanks, Ondra.</p>
","53","39419","<git><reset><pull><git-pull>"
"11200839","1","Why git can't do hard/soft resets by path?","<p><code>$ git reset -- &lt;file_path&gt;</code> can reset by path.</p>

<p>However, <code>$ git reset (--hard|--soft) &lt;file_path&gt;</code> will report an error like below:</p>

<pre><code>Cannot do hard|soft reset with paths.
</code></pre>
","53","18512","<git><reset>"
"261557","1","What do I need to read to understand how git works?","<p>I would like to understand the way git works from a architects point of view. How are files stored, how are versions kept and how do changes happen (branches, merges, etc.)?</p>

<p>I am not searching for information how to use it. (I already found a lot of pages with tutorials.) But I did not find any ""behind the scenes"" details, that would make me understand.</p>
","88","34526","<git>"
"277546","1","Can I use Git to search for matching filenames in a repository?","<p>Just say I have a file: ""HelloWorld.pm"" in multiple subdirectories within a Git repository.</p>

<p>I would like to issue a command to find the full paths of all the files matching ""HelloWorld.pm"":</p>

<p>For example:</p>

<pre><code>/path/to/repository/HelloWorld.pm
/path/to/repository/but/much/deeper/down/HelloWorld.pm
/path/to/repository/please/dont/make/me/search/through/the/lot/HelloWorld.pm
</code></pre>

<p>How can I use Git to efficiently find all the full paths that match a given filename?</p>

<p>I realise I can do this with the Linux/Unix find command but I was hoping to avoid scanning all subdirectories looking for instances of the filename.</p>
","39","16010","<git>"
"6466945","1","Fastest way to download a GitHub project","<p>I need to download the source code of the project <a href=""https://github.com/SpringSource/spring-data-graph-examples/"">Spring data graph example</a> into my box. It has public read-only access. Is there is an extremely fast way of downloading this code?</p>

<p>I have no idea of working on GitHub/committing code and most tutorials out there on the web seems to assume that ""I would want to setup a project in GitHub"" and inundate me with 15-20 step processes. To me, if a source repository is available for the public, it should take less than 10 seconds to have that code in my filesystem.</p>

<p>Tutorials that provide me with 15-20 step processes:</p>

<ul>
<li><a href=""https://github.com/oscurrency/oscurrency/wiki/Setting-up-development-environment-on-ubuntu/"">Setting up development environment on Ubuntu</a></li>
<li><a href=""http://help.github.com/win-set-up-git/"">Win Setup on GIT</a></li>
</ul>

<p>I need something very very very simple. Just pull the source code, and I am more interested in seeing the source code and <em>not learn GitHub</em>.</p>

<p>Are there any fast pointers/tutorials? (I have a GitHub account.)</p>
","120","196584","<git><github>"
"10312521","1","How to fetch all git branches","<p>I cloned a git repository, which contains about 5 branches. However, when I do <code>git branch</code> I only see one of them:</p>

<pre><code>$ git branch
* master
</code></pre>

<p>I know that I can do <code>git branch -a</code> to see <strong>all</strong> the branches, but how would I pull all the branches locally so when I do <code>git branch</code>, it shows:</p>

<pre><code>$ git branch
* master
* staging
* etc...
</code></pre>
","400","321846","<git><branch><git-branch>"
"9162919","1","Whitelisting and subdirectories in Git","<p>I have created a white-list for text files only.</p>

<pre><code>*
!*.txt
</code></pre>

<p>Now, I have an untracked text file in a sub-directory - <code>sub/dir/file.txt</code>, and this is NOT shown (it is ignored). Text files in the root directory are shown, however.</p>

<p>Why is that, and how do I fix it?</p>
","39","9647","<git><gitignore>"
"8259851","1","Using git diff, how can I get added and modified lines numbers?","<p>Assuming I have a text file</p>

<pre><code>alex
bob
matrix
will be removed
git repo
</code></pre>

<p>and I have updated it to be</p>

<pre><code>alex
new line here
another new line
bob
matrix
git
</code></pre>

<p>Here, I have added lines number (2,3) and updated line number (6)</p>

<p>How can I get these line numbers info using git diff or any other git command?</p>
","37","17758","<git><diff><git-diff>"
"3538144","1","How do you git show untracked files that do not exist in .gitignore","<p>I'm using <code>git status -u</code> to show untracked files. And on the terminal, I see plenty untracked files that I need to be untracked such as unit tests, personal documentation, etc. I have put them in <code>.gitignore</code>, but it seems that <code>git status</code> still shows them.</p>

<p>How do you show only untracked files that don't exist in <code>.gitignore</code>.</p>
","70","31914","<git>"
"4665337","1","Git pushing to remote GitHub repository as wrong user","<p>I have a work GitHub account and a personal one. First I used the personal one for test projects, then I moved on and did a repository with the other account on the same computer.</p>

<p>Now I wanted to create a new repository on my personal account again, I changed the global and local <code>user.name</code>, and did a new ssh key pair, entered in the GitHub setup page. Then I set up the directory</p>

<pre><code>git init
git remote add origin &lt;url&gt;
git push origin
</code></pre>

<p>but that now tells me</p>

<blockquote>
  <p>ERROR: Permission to personaluser/newrepo.git denied to </p>
</blockquote>

<p>I have no idea how the other account is connected to this one. <code>.git/config</code> shows no <code>workusername</code> related things.</p>
","40","30275","<git><permissions><github>"
"5340724","1","Get changes from master into branch in Git","<p>In my repository I have a branch called <code>aq</code> which I'm working on.</p>

<p>I then committed new work and bugs in <code>master</code>. </p>

<p>What is the best way to get those commits into the <code>aq</code> branch? Create another new branch out of <code>master</code> and merge it with <code>aq</code>?</p>
","265","178580","<git><version-control><git-merge>"
"17756753","1","Where do the settings in my Git configuration come from?","<p>I've noticed that I have 2 listings for <code>core.autocrlf</code> when I run <code>git config -l</code></p>

<pre><code>$ git config -l
core.symlinks=false
core.autocrlf=false
color.diff=auto
color.status=auto
color.branch=auto
color.interactive=true
pack.packsizelimit=2g
help.format=html
http.sslcainfo=/bin/curl-ca-bundle.crt
sendemail.smtpserver=/bin/msmtp.exe
diff.astextplain.textconv=astextplain
rebase.autosquash=true
user.name=name
user.email=email@example.com
core.autocrlf=true
</code></pre>

<p>Those last 3 (from user.name down) are the only ones in my <code>c:\users\username\.gitconfig</code> file.  Where are all of the other ones coming from?  Why is core.autocrlf listed twice?</p>

<p>This is with msysgit 1.8.3 and I also have SourceTree installed (Windows 7).  In SourceTree I have unchecked the ""Allow SourceTree to modify your global Git config files""</p>
","37","28583","<git><msysgit><git-config>"
"4294970","1","Rails 3, capistrano tutorial to deploy to server using GIT","<p>I have a server on a VPS that has my GIT repository also.</p>

<p>I want a step by step tutorial on how to deploy using Capistrano for a rails 3 application.</p>
","45","31556","<ruby-on-rails><git><capistrano>"
"3596260","1","git remote add with other ssh port","<p>In git, how I can add a remote origin when my host use a different ssh port?  </p>

<pre><code>git remote add origin ssh://user@host/srv/git/example
</code></pre>
","183","135157","<git><ssh><port>"
"13756055","1","Git subtree - subtree up-to-date but can't push","<p>I am using Git subtree with a couple of projects that I am working on, in order to share some base code between them. The base code gets updated often, and the upgrades can happen in anyone of the projects, with all of them getting updated, eventually.</p>

<p>I have ran into a problem where git reports that my subtree is up to date, but pushing gets rejected. For example:</p>

<pre><code>#! git subtree pull --prefix=public/shared project-shared master
From github.com:****
* branch            master     -&gt; FETCH_HEAD
Already up-to-date.
</code></pre>

<p>If I push, I should get a message that there is nothing to push... Right? RIGHT? :(</p>

<pre><code>#! git subtree push --prefix=public/shared project-shared master
git push using:  project-shared master
To git@github.com:***
! [rejected]        72a6157733c4e0bf22f72b443e4ad3be0bc555ce -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@github.com:***'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<p>What could be the reason for this? Why is pushing failing?</p>
","49","9432","<git><push><pull><git-subtree>"
"6919121","1","Why are there 2 ways to unstage a file in git?","<p>Sometimes git suggests <code>git rm --cached</code> to unstage a file, sometimes <code>git reset HEAD file</code>. When should I use which?</p>

<p>EDIT:</p>

<pre><code>D:\code\gt2&gt;git init
Initialized empty Git repository in D:/code/gt2/.git/
D:\code\gt2&gt;touch a

D:\code\gt2&gt;git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       a
nothing added to commit but untracked files present (use ""git add"" to track)

D:\code\gt2&gt;git add a

D:\code\gt2&gt;git status
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use ""git rm --cached &lt;file&gt;..."" to unstage)
#
#       new file:   a
#
D:\code\gt2&gt;git commit -m a
[master (root-commit) c271e05] a
 0 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 a

D:\code\gt2&gt;touch b

D:\code\gt2&gt;git status
# On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       b
nothing added to commit but untracked files present (use ""git add"" to track)

D:\code\gt2&gt;git add b

D:\code\gt2&gt;git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       new file:   b
#
</code></pre>
","425","359076","<git><git-reset><git-rm>"
"18340453","1","Should *.xccheckout files in Xcode5 be ignored under VCS?","<p>Apple has introduced a new project-related type of file in Xcode 5: ""xccheckout"".</p>

<p>This file is located in the "".xcodeproj/project.xcworkspace/xcshareddata/"" directory,  and it seems that it is related to the project's version control system.</p>

<p>An example file is here: <a href=""http://pastebin.com/5EP63iRa"">http://pastebin.com/5EP63iRa</a></p>

<p>I suppose that this type of file should be ignored under VCS, but I'm not sure.</p>

<p>So here are the questions:</p>

<ol>
<li>Should ""xccheckout"" be ignored?</li>
<li>What is its purpose?</li>
</ol>
","148","39466","<xcode><git><version-control><xcode5>"
"1800783","1","compare local git branch with remote branch?","<p>How can I see the <code>diff</code> between a local branch and a remote branch?</p>
","403","229196","<git>"
"16122234","1","How to commit a change with both ""message"" and ""description"" from the command line?","<p>I'm new to both <code>git</code> and GitHub. I managed to set up everything locally on my Mac, so that now I can push commits to GitHub via <code>git</code> (on the command line, not the Mac app).</p>

<p>When I push commits directly from the GitHub web interface (e.g. quickly fixing a typo), I have the chance to ""comment"" the commit, and GitHub gives me a commit <em>title</em> and a commit <em>description</em>. I find this very useful.</p>

<p>Still, when I <code>git push</code> from the local machine, <code>git</code> opens my default editor: so I write the commit comment, and then GitHub automatically divides it into title and ""body"". Is there a way to pretty comment commits from terminal too?</p>
","60","10178","<git><github>"
"4770177","1","git: patch does not apply","<p>I have a certain patch called my_pcc_branch.patch.</p>

<p>When I try to apply it, I get following message:</p>

<pre><code>$ git apply --check my_pcc_branch.patch
warning: src/main/java/.../AbstractedPanel.java has type 100644, expected 100755
error: patch failed: src/main/java/.../AbstractedPanel.java:13
error: src/main/java/.../AbstractedPanel.java: patch does not apply
</code></pre>

<p>What does it mean?</p>

<p>How can I fix this problem?</p>
","101","65992","<git><msysgit>"
"1800859","1","How can I change the remote/target repository URL on Windows?","<p>I created a local GIT repository on Windows. Let's call it AAA. I staged, committed, and pushed the contents to GitHub. <code>git@github.com:username/AAA.git</code> </p>

<p>I realized I made a mistake with the name.</p>

<p>On GitHub, I renamed it to <code>git@github.com:username/BBB.git</code> </p>

<p>Now, on my Windows machine, I need to change <code>git@github.com:username/AAA.git</code> to <code>git@github.com:username/BBB.git</code> because the settings are still trying to ""push"" to <code>git@github.com:username/AAA.git</code> but I need to push to <code>git@github.com:username/BBB.git</code> now.</p>

<p>How could I do that?</p>
","81","95619","<windows><git><github>"
"7124483","1","Difference between subprojects and submodules in Git?","<p>In Git, is there a difference between a ""submodule"" (as created and managed by the git submodule command) and a ""subproject"" (literally just one Git repository that you put inside another Git repository), and if so, what is it?</p>

<p>All the documentation I've been able to find about this is rather ambiguous (and in some cases, contradictory). My suspicion is that there is no difference, but I figure I ought to confirm that and leave a question for Git newbies to find.</p>
","31","8092","<git>"
"7124486","1","What to do with commit made in a detached head","<p>Using git i made somthing like this</p>

<pre><code>git clone
git checkout {a rev number tree rev before} (here i started to be in a detached head state)
//hacking
git commit
//hacking
git commit
(some commit where made on origin/master)
git pull (wich does complete because there was some error due to the fact that i'm no more on master)
</code></pre>

<p>Because git said to me that i can still commit when in a detached head state, I did so.
But now i want to merge my detached head branch to my local master branch, and then push my changes to origin/master.</p>

<p>So my question is how could I merge the master branch with my actual state (detached head)</p>
","99","42847","<git><git-checkout>"
"7124726","1","git add only modified changes and ignore untracked files","<p>I ran ""git status"" and listed below are some files that were modified/or under the heading ""changes not staged for commit"".
It also listed some untracked files that I want to ignore (I have a "".gitignore"" file in these directories).</p>

<p>I want to put the modified files in staging so I can commit them.  When I ran ""git add ."", it added the modified files AND the files I want to ignore to staging.</p>

<p>How do I add only the modified files and ignore the untracked files if presented with the git status below.</p>

<p>Also, are my "".gitignore"" files working properly?</p>

<pre><code>$ git status
# On branch addLocation
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   someProject/path/domain/viewer/LocationDO.java
#       modified:   someProject/path/service/ld/LdService.java
#       modified:   someProject/path/service/ld/LdServiceImpl.java
#       modified:   someProject/path/web/jsf/viewer/LocationFormAction.java
#       modified:   someProject/war/WEB-INF/classes/message/viewer/viewer.properties
#       modified:   someProject/war/page/viewer/searchForm.xhtml
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       .metadata/
#       someProject/build/
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","274","125125","<git><commit><gitignore><staging>"
"3656351","1","Git for Perforce users","<p>I've been using Perforce for a number of years. I'd like to switch to using git for my personal code, but all of the git tutorials that I've seen either assume that you'e a complete source control n00b (which makes them incredibly tedious) or that you're used to svn (which I'm not).</p>

<p>I know p4, and I also understand the idea behind a distributed source control system (so I don't need a sales pitch, thanks). What I'd like is a translation table from p4 command to equivalent git commands, as well as the ""can't live without"" commands that have no p4 equivalent.</p>

<p>Since I suspect every p4 user uses a different subset of p4, here are some of the things I regularly do in p4 that I'd like to be able to do in git that aren't immediately obvious from the docs I've looked at:</p>

<ol>
<li>create multiple pending changelists in a single client. (<code>p4 change</code>)</li>
<li>edit a pending changelist. (also <code>p4 change</code>)</li>
<li>see a list of all of my pending changelists (<code>p4 changes -s pending</code>)</li>
<li>list of all of the changed files in my client (<code>p4 opened</code>) or in a pending changelist (<code>p4 describe</code>)</li>
<li>see a diff of a pending changelist (I use a wrapper script for this which uses <code>p4 diff</code> and <code>p4 describe</code>)</li>
<li>for a given file, see which submitted changelists affected which lines (<code>p4 annotate</code>)</li>
<li>for a given file, see a list of the descriptions of the changelists that affected the file (<code>p4 log</code>)</li>
<li>submit a pending changelist (<code>p4 submit -c</code>)</li>
<li>abort a pending changelist (<code>p4 revert</code>)</li>
</ol>

<p>A lot of these revolve around ""changelists"". ""changelist"" is p4 terminology. What's the git equivalent term?</p>

<p>It sounds like branches might be what git users use in place of what p4 calls changelists. A bit confusing, since p4 also has something called a branch though they seem to be only vaguely related concepts. (Though I always thought p4's concept of a branch was pretty weird it is different yet again from the classic RCS concept of a branch.)</p>

<p>Anyway... I'm not sure how to accomplish what I normally do in p4 changelists with git's branches. In p4 I can do something like this:</p>

<pre><code>$ p4 edit a.txt
$ p4 change a.txt
Change 12345 created.
</code></pre>

<p>At this point I have a changlist that contains a.txt. I can edit the description and continue working without submitting the changelist. Also, if it turns out that I need to make some changes to some other files, like say a bugfix in some other layer of the code, I can do that in the same client:</p>

<pre><code>$ p4 edit z.txt
$ p4 change z.txt
Change 12346 created.
</code></pre>

<p>Now I have two separate changelists in the same client. I can work on these concurrently, and I don't need to do anything to ""switch between"" them. When it comes time to commit, I can submit them separately:</p>

<pre><code>$ p4 submit -c 12346  # this will submit the changes to z.txt
$ p4 submit -c 12345  # this will submit the changes to a.txt
</code></pre>

<p>I can't figure out how to replicate this in git. From my experiments, it doesn't appear that <code>git add</code> is associated with the current branch. As far as I can tell, when I <code>git commit</code> it's going to commit all files that I <code>git add</code>-ed no matter what branch I was in at the time:</p>

<pre><code>$ git init
Initialized empty Git repository in /home/laurence/git-playground/.git/
$ ls
a.txt  w.txt  z.txt
$ git add -A .
$ git commit
 Initial commit.
 3 files changed, 3 insertions(+), 0 deletions(-)
 create mode 100644 a.txt
 create mode 100644 w.txt
 create mode 100644 z.txt
$ vi a.txt z.txt 
2 files to edit
$ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   a.txt
#   modified:   z.txt
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
$ git branch aardvark
$ git checkout aardvark
M   a.txt
M   z.txt
Switched to branch 'aardvark'
$ git add a.txt 
$ git checkout master
M   a.txt
M   z.txt
Switched to branch 'master'
$ git branch zebra
$ git checkout zebra
M   a.txt
M   z.txt
Switched to branch 'zebra'
$ git add z.txt 
$ git status
# On branch zebra
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   a.txt
#   modified:   z.txt
#
$ git checkout aardvark
M   a.txt
M   z.txt
Switched to branch 'aardvark'
$ git status
# On branch aardvark
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   a.txt
#   modified:   z.txt
</code></pre>

<p>In this example, the aardvark and zebra branches seem to contain exactly the same set of changes, and based on the output of <code>git status</code> it appears that doing a commit in either will have the same effect. Am I doing something wrong?</p>
","74","15776","<git><perforce>"
"10725729","1","Git: see what's in a stash without applying stash","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3573623/is-it-possible-to-preview-stash-appplication-in-git"">Is it possible to preview stash appplication in git?</a>  </p>
</blockquote>



<p>I see <a href=""http://git-scm.com/book/en/Git-Tools-Stashing"">here</a> you can apply/unapply a stash and even create a new branch off of a stash. Is it possible to simply see what is inside the stash without actually applying it?</p>
","586","182536","<git><git-stash>"
"7124914","1","How to search a Git repository by commit message?","<p>I checked some source code into GIT with the commit message ""Build 0051"".</p>

<p>However, I can't seem to find that source code any more - how do I extract this source from the GIT repository, using the command line?</p>

<p><strong>Update</strong></p>

<ol>
<li>Checked in versions 0043, 0044, 0045 and 0046 using SmartGIT.</li>
<li>Checked out 0043, and checked in versions up to 0051 on a different branch.</li>
<li>Checked out 0043 again.</li>
<li>Now, 0051 has disappeared.</li>
</ol>

<p><strong>Update</strong></p>

<p>The source code is definitely there, now its a matter of checking it out:</p>

<pre><code>C:\Source&gt;git log -g --grep=""0052""
commit 77b1f718d19e5cf46e2fab8405a9a0859c9c2889
Reflog: HEAD@{10} (unknown &lt;Mike@.(none)&gt;)
Reflog message: commit: 20110819 - 1724 - GL: Intermediate version. File version:  v0.5.0 build 0052.
Author: unknown &lt;Mike@.(none)&gt;
Date:   Fri Aug 19 17:24:51 2011 +0100

    20110819 - 1724 - GL: Intermediate version. File version: v0.5.0 build 0052.

C:\Source&gt;
</code></pre>

<p><strong>Update</strong></p>

<p>Used the following to retrieve the lost source code:</p>

<pre><code>C:\Source&gt;git checkout HEAD@{10}
Previous HEAD position was aa09ace... 20110819 - 1045 - GL: Intermediate version. File     version: v0.5.0 build 0043.
HEAD is now at 77b1f71... 20110819 - 1724 - GL: Intermediate version. File version: v0.5.0 build 0052.
</code></pre>

<p>Now, everything is visible in SmartGit again. Problem solved - you guys are the best, especially @shelhamer!</p>
","251","104874","<git><git-log>"
"4784575","1","How do I find the most recent git commit that modified a file?","<p>I want to find the most recent commit that modified a source file.  </p>

<p>I can use <code>git blame</code> to see all the dates for commits by each line, but it’s difficult to see exactly which commit was the last one to touch the file.</p>

<p>How can I find the last commit that touched a given file in my git repository?</p>
","62","17345","<git><search>"
"79165","1","How to migrate SVN repository with history to a new Git repository?","<p>I read the Git manual, FAQ, Git - SVN crash course, etc. and they all explain this and that, but nowhere can you find a simple instruction like:</p>

<p>SVN repository in: <code>svn://myserver/path/to/svn/repos</code></p>

<p>Git repository in: <code>git://myserver/path/to/git/repos</code></p>

<pre><code>git-do-the-magic-svn-import-with-history \
svn://myserver/path/to/svn/repos \
git://myserver/path/to/git/repos
</code></pre>

<p>I don't expect it to be that simple, and I don't expect it to be a single command. But I do expect it not to try to explain anything - just to say what steps to take given this example.</p>
","1064","284706","<svn><git><version-control><git-svn>"
"13846300","1","How to make Git pull use rebase by default for all my repositories?","<p>Is there a way to setup the host Git repository such that any <code>git pull</code> done from its (local) clones uses <code>--rebase</code> by default? By searching on StackOverflow, I learned about <code>branch.autosetuprebase</code>, but it needs to be configured per clone individually. </p>

<p>My project flow is set up such that we <code>pull</code> the <code>develop</code> branch before <code>merge</code>ing a feature branch to it.This <code>pull</code> nearly always uses <code>--rebase</code>, so I am trying to figure out if this can be the default. </p>

<p>(<strong>Edit</strong> Restructured the question according to discussion below with <a href=""http://stackoverflow.com/users/1248008/jonas-wielicki"">Jonas Wielicki</a>.) </p>
","52","9729","<git>"
"96615","1","Git - is it pull or rebase when working on branches with other people","<p>So if I'm using branches that are remote (tracked) branches, and I want to get the lastest, I'm still unclear if I should be doing <code>git pull</code> or <code>git rebase</code>. I thought I had read that doing <code>git rebase</code> when working on a branch with other users, it can screw them up when they pull or rebase. Is that true? Should we all be using <code>git pull</code>?</p>
","31","12269","<git><version-control>"
"7203515","1","Git: How to search for a deleted file in the project commit history?","<p>Once upon a time, there was a file in my project that I would now like to be able to get.</p>

<p>The problem is: I have no idea of when have I deleted it and on which path was it at.</p>

<p>How can I locate the commits of this file when it existed?</p>
","451","90459","<git>"
"6925099","1","git stash changes apply to new branch?","<p>I was working on master branch, made some changes and then stashed them. Now, my master is at HEAD.</p>

<p>But now, I want to retrieve these changes but to a new branch which branches from the HEAD version of the master branch. </p>

<p>How do i do this ?</p>
","113","45284","<git>"
"9171356","1","How do I exit from the text window in Git?","<p>I am using Windows and before committing, Git wants me to enter a text message and a new text window appears. </p>

<p><img src=""http://i.stack.imgur.com/DSfuw.png"" alt=""screenshot""></p>

<p>How can I exit from this? </p>

<p>I am trying to learn Git. So, a little help will be highly appreciated.</p>
","108","69438","<git><vim>"
"24159036","1","How to modify a pull request on GitHub to change target branch to merge into?","<p>I have a pull request that is requesting a merge into master from my branch, but the owner wants me to change the request to merge into a different branch from my branch.</p>

<p>Is this possible? What are the possible solutions?</p>
","36","9745","<git><github>"
"10349302","1","How to git log from all branches for the author at once?","<p>I need to get the report of all commits that the author did.  So far, I have the script that wraps the following command:</p>

<pre><code>git log --pretty=format:""%ad:%an:%d:%B"" --date=short --reverse --all --since=2.months.ago --author=Petr
</code></pre>

<p>It works fine.  However, it reports only the actions for the current branch.  Is there any option that would log the commit messages for the author <strong>from all branches</strong>, not only form the current one?</p>

<p>In other words, can git make a reverse sorted (by datetime) sequence of all the commits in repository and extract the log info from that sequence?</p>

<p><strong>Solved:</strong> (copied from the comment below that is hidden otherwise)</p>

<p>The problem was that I have one repository and two clones to work concurently on two branches. I did push the changes to the origin repository, but I forgot to fetch the changes to the cloned repository. This way it seemed that <code>--all</code> did not work when using it for the cloned repository.</p>
","72","25344","<git>"
"4847101","1","Git: which is the default configured remote for branch?","<p>I have a remote bare repository <code>hub</code>. I work only in the <code>master</code> branch.
The last sentence of this error message below makes me wonder: How do I find out which is the <em>""default configured remote for your current branch""</em>? And how do I set it?</p>

<pre><code>[myserver]~/progs $ git remote -v
hub     ~/sitehub/progs.git/ (fetch)
hub     ~/sitehub/progs.git/ (push)
[myserver]~/progs $ git branch -r
  hub/master
[myserver]~/progs $ git remote -v
hub     ~/sitehub/progs.git (fetch)
hub     ~/sitehub/progs.git (push)
[myserver]~/progs $ cat .git/HEAD
ref: refs/heads/master
[myserver]~/progs $ git pull hub
You asked to pull from the remote 'hub', but did not specify
a branch. Because this is not the default configured remote
for your current branch, you must specify a branch on the command line.
</code></pre>
","137","74424","<git><git-push><remote-branch>"
"4675726","1","Merge (no branch) into master","<pre><code>dave@dave-dev:/media/dev/belgravia$ git branch
* (no branch)
  master
</code></pre>

<p>I'm not sure how this happened, but is there a way I can merge no-branch into the master. I'm not sure how I can merge two branches when one of them is not a branch. The commits in no-branch seem to be loose. I'm afraid that <code>checkout master</code> will cause data loss.</p>
","44","16261","<git><version-control>"
"7230820","1","Skip Git commit hooks","<p>I'm looking at a git hook which looks for print statements in Python code.  If a print statement is found, it prevents the git commit. </p>

<p>I want to override this hook and I was told that there is a command to do so.  I haven't been able to find it.  Any thoughts?</p>
","102","30716","<git><githooks><git-commit>"
"8435343","1","Retrieve the commit log for a specific line in a file?","<p>Is there any way to get git to give you a commit log for just commits that touched a particular <em>line</em> in a file?</p>

<p>Like <code>git blame</code>, but <code>git blame</code> will show you the LAST commit that touched a particular line. </p>

<p>I'd really like to get a similar log of, not the list of commits to anywhere in the file, but just the commits that touched a particular line.</p>
","167","46204","<git>"
"4878249","1","How do I change the remote a git branch is tracking?","<p>The <code>central</code> repository had to be set up on a new server, so I created a new remote on my local repo, and pushed to that.</p>

<p>But now when I do <code>git pull</code>, it claims I am up to date. It's wrong&mdash;it's telling me about the <em>old</em> remote branch, not the new one, which I know for a fact has new commits to fetch.</p>

<p>How do I change my local branch to track a different remote?</p>

<p>I can see this in the git config file but I don't want to mess things up.</p>

<pre><code>[branch ""master""]
    remote = oldserver
    merge = refs/heads/master
</code></pre>
","248","104188","<git>"
"4878358","1","Why would I want stage before committing in Git?","<p>I'm new to version control and I understand that ""committing"" is essentially creating a backup while updating the new 'current' version of what you're working on.</p>

<p>What I don't understand is what staging for is from a practical perspective. Is staging something that exists in name only or does it serve a purpose? When you commit, its going to commit everything anyway, right?</p>

<p>Edit: I think I may be confusing the terminology. Is a 'staged' file the same thing as a 'tracked' file?</p>
","35","5035","<git>"
"7024483","1","Comparing the pros and cons of Bitbucket to Github","<p><sup><em>Disclaimer: This is a subjective question. Please follow <a href=""http://blog.stackoverflow.com/2010/09/good-subjective-bad-subjective/"">relevant guidelines.</a></em></sup></p>

<p>I am considering the migration of source code from a traditional <code>VCS</code> to a <code>DVCS</code>. Since having a decent <strike>GUI</strike> web-based frontend and workflow tools are a must, the two obvious candidates are <a href=""https://bitbucket.org"">Bitbucket</a> and <a href=""https://github.com/"">Github</a>.</p>

<p>Unfortunately I have no in-depth experience with either of them, so I'd really like to have a few second opinions before taking the dive. Especially welcome would be observations <em>from a team/business perspective</em> regarding day-to-day usage and features that have an impact on productivity.</p>

<p><strong>What is Your experience with either of them? Any particular highlights or annoyances?</strong></p>
","32","24680","<git><mercurial><github><dvcs><bitbucket>"
"9483757","1","How to exit git log?","<p>I'm trying to learn git with the help of git immersion <a href=""http://gitimmersion.com/"">http://gitimmersion.com/</a>
But there's one thing that frustrates me whenever I use git log.</p>

<p><img src=""http://i.stack.imgur.com/yJ0Ms.png"" alt=""enter image description here""></p>

<p>I can't figure out what to do next when I encounter this (END) word. I can't type any commands and I end up closing the current bash and open another. How do I type in the next command that I want to use?</p>
","282","67637","<git>"
"4684352","1","What does ""Git push non-fast-forward updates were rejected"" mean?","<p>I'm using Git to manage my two computers and my development. I'm trying to commit changes to GitHub and I'm getting the error.</p>

<blockquote>
  <p>Failed to push some refs to <code>&lt;repo&gt;</code>. To prevent you from losing history, non-fast-forward updates were rejected. Merge remote changes before pushing again.</p>
</blockquote>

<p>What could be causing this and how can I fix this? </p>

<p><strong>EDIT:</strong> </p>

<p>Pulling the repo returns the following:</p>

<blockquote>
  <p>*branch    master->master (non-fast-forward)
  Already-up-to-date</p>
</blockquote>

<p>Pushing still gives me the aforementioned error.</p>
","90","65799","<git><version-control>"
"7128444","1","How does Git(Hub) handle possible collisions from short SHAs?","<p>Both Git and GitHub display short versions of SHAs -- just the first 7 characters instead of all 40 -- and both Git and GitHub support taking these short SHAs as arguments.</p>

<p>E.g. <code>git show 962a9e8</code></p>

<p>E.g. <a href=""https://github.com/joyent/node/commit/962a9e8"">https://github.com/joyent/node/commit/962a9e8</a></p>

<p>Given that the possibility space is now orders of magnitude lower, ""just"" <a href=""http://www.google.com/search?q=16%5E7"">268 million</a>, how do Git and GitHub protect against collisions here? And how do they handle them?</p>
","40","8378","<git><cryptography><github><sha>"
"1404796","1","How to get the latest tag name in current branch in Git?","<p>What's the simplest way to get the most recent tag in Git?</p>

<pre><code>git tag a HEAD
git tag b HEAD^^
git tag c HEAD^
git tag
</code></pre>

<p>output:</p>

<pre><code>a
b
c
</code></pre>

<p>Should I write a script to get each tag's datetime and compare them?</p>
","175","76994","<git><checkout><git-tag><getlatest>"
"8484167","1","ANSI color in git is not displayed correctly","<p>Recently, I switched to SLES 11. I found a problem for git command. All the ANSI color could not be rendered. Instead, it shows the ANSI code like this:</p>

<p>*<strong>ESC[33m</strong>*commit 0a02124a0fd85c1f0094bcdf15bac1645e3c8630ESC[m</p>

<p>note: the ansi color in 'ls' works very well.</p>
","45","6429","<git><bash>"
"4902795","1","Undo git mv (rename)","<p>What is the right way to undo a rename in git, like:</p>

<pre><code>git mv file1 file2
</code></pre>
","60","19549","<git><rename><undo><mv>"
"1405030","1","Using GIT, how can I selectively pull / merge changes from another's 'fork'?","<p>Take this scenario:</p>

<ol>
<li>I decide to 'fork' a codebase on github.com, and start doing my routine: Edit - Commit - Push; aka hack hack hack.</li>
<li>After I made some changes, I see some changes another person has made on the same project, and I like them!</li>
<li>I decide I want to merge them into mine. Problem is, I only want a 'portion' of one particular commit, out of several commits he has made.</li>
</ol>

<p>What would be the most efficient method of getting these select amount of changes, merged into my 'fork'?</p>
","64","20587","<git><merge><pull>"
"2456954","1","git encrypt/decrypt remote repository files while push/pull","<p>Is it possible to automatically encrypt files via 'git push' before transferring to a remote repository? And automatically decode them while 'git pull'.</p>

<p>I.e, if I have some remote server with shared access with git repository there, and I don't want to our project was stolen without a permission...
Maybe there is some special git-hooks before push and after pull?</p>
","32","11323","<git><encryption>"
"278081","1","Resolving a Git conflict with binary files","<p>I've been using Git on Windows (msysgit) to track changes for some design work I've been doing.</p>

<p>Today I've been working on a different PC (with remote repo <code>brian</code>) and I'm now trying to merge the edits done today back into my regular local version on my laptop.</p>

<p>On my laptop, I've used <code>git pull brian master</code> to pull the changes into my local version. Everything was fine apart from the main InDesign document - this shows as a conflict.</p>

<p>The version on the PC (<code>brian</code>) is the latest one that I want to keep but I don't know what commands tells the repo to use this one. </p>

<p>I tried directly copying the file across onto my laptop but this seems to break the whole merge process.</p>

<p>Can anyone point me in the right direction?</p>
","254","85863","<git><merge-conflict-resolution>"
"278192","1","View the change history of a file using Git versioning","<p>How can I view the change history of an individual file in Git, complete with what has changed?</p>

<p>I have got as far as: </p>

<pre><code>git log -- [filename]
</code></pre>

<p>which shows me the commit history of the file, but how do I get at the content of each of the changes?</p>

<p>I'm trying to make the transition from MS SourceSafe and that used to be a simple right-click → show history.</p>
","1698","779314","<git><git-log>"
"12770550","1","My pull request has been merged, what to do next?","<p>I recently participated in a project from GitHub. I did the following:</p>

<p>Forked the original repository, cloned it to my local machine, made a branch to fix existing bug, fixed bug being in that branch, pushed that branch to my repo, send a pull request to the author of the repository to merge my <strong>fix</strong> branch to its master branch.</p>

<p>It was my first time I commited on another's code so I don't know what to do. Now my pull request has been merged to original repo/project by the author. </p>

<p><strong>What should I do next?</strong> Should I delete the branch? Should I merge the branch? Anything else?</p>

<hr>

<h3>Additional info:</h3>

<p>The original project has a single branch.</p>

<p>I also have a upstream set to get latest updates form the original repo. <em>(I did it like this)</em>:</p>

<pre><code>git remote add upstream https://path/to/original/repo.git
</code></pre>

<p>And I get updates like this:</p>

<pre><code>git fetch upstream
</code></pre>
","62","6430","<git><github>"
"5683253","1","Distributed Version  Control Systems and the Enterprise - a Good mix?","<p>I can see why distributed source control systems (DVCS - like Mercurial) make sense for open source projects.</p>

<p>But do they make sense for an enterprise? (over a centralized Source Control System such as TFS)</p>

<p>What features of a DVCS make it better or worse suited for an enterprise with many developers? (over a centralized system)</p>
","45","6169","<git><version-control><mercurial><tfs><dvcs>"
"11621768","1","How can I make git accept a self signed certificate?","<p>Using Git, is there a way to tell it to accept a self signed certificate?</p>

<p>I am using an https server to host a git server but for now the certificate is self signed.</p>

<p>When I try to create the repo there for the first time:</p>

<pre><code>git push origin master -f
</code></pre>

<p>I get the error:</p>

<pre><code>error: Cannot access URL     
https://the server/git.aspx/PocketReferences/, return code 22

fatal: git-http-push failed
</code></pre>
","258","207254","<git><version-control><https><self-signed>"
"1978553","1","What does the brown asterisk icon on a file mean in Eclipse?","<p>I am using the git plugin for Eclipse. Some of my files are marked with a brown asterisk. What does it mean? Where can I find documentation for what the rest of the git icons mean in Eclipse?</p>

<p><img src=""http://i48.tinypic.com/fna7ex.jpg"" alt=""alt text""></p>
","44","27906","<git><eclipse-plugin><icons>"
"2471606","1","How and/or why is merging in Git better than in SVN?","<p>I've heard a few places that one of the main ways distributed version control systems shine, is much better merging than traditional tools like SVN.
Is this actually due to inherent differences in how the two systems work, or do <em>specific</em> DVCS implementations like Git/Mercurial just have cleverer merging algorithms than SVN?</p>
","349","48212","<svn><git><version-control><mercurial><merge>"
"1979167","1","git submodule update","<p>I'm not clear on what the following means (from <a href=""http://git-scm.com/docs/git-submodule"">git submodule update</a> docs):  </p>

<blockquote>
  <p>...will make the submodules HEAD be detached, unless <code>--rebase</code> or <code>--merge</code> is specified...  </p>
</blockquote>

<p>How does <code>--rebase</code>/<code>--merge</code> change things?     </p>

<p>My main use case is to have a bunch of central repos, which I will embed via submodules into other repos. I would like to be able to improve on these central repos, either directly in their original location, or from within their embedding repos (the ones that use them via submodule).   </p>

<p>From within these submodules can I create branches/modifications and use push/pull just like I would in regular repos, or are there things to be cautious about?<br>
how would I advance the submodule referenced commit from say (tagged) 1.0 to 1.1 (even though the head of the original repo is already at 2.0), or pick which branches commit is used at all?  </p>
","164","131273","<git><git-submodules>"
"8024924","1",".gitignore ignore all files then recursively allow *.foo","<p>There's already several questions similar to this, but none of the answers work for me.</p>

<p>I want to ignore everything in the folders below my repository except files with *.foo</p>

<p>(If anyone is wondering how this can be justified - I'm actually making a git repository for all my ""Logic"" projects - music software on the mac - but I only want to store the actual project files *.logic)</p>

<p>I'm going to spell it out, so we're all on the same plate.
Here's what I do, starting from scratch:</p>

<p><strong>Setup:</strong></p>

<pre><code>mkdir temp
cd temp
mkdir testdir
cd testdir
touch include.foo
touch dontinclude.bad
cd..
git init
touch .gitignore
</code></pre>

<p><strong>Paste this in to .gitignore</strong></p>

<pre><code># Ignore all
/*

# But not these files...
!.gitignore
!*.foo
</code></pre>

<p>git status</p>

<p>And the only untracked file is .gitignore</p>

<p>if I typed 'git add .' - no change, only .gitignore is seen and my 2 files are ignored.</p>

<p>Why doesn't this work and how can you change the procedure above to make it work?</p>

<p>Here's the extremely similar question where I got the .gitignore file from.
I'm using git --version 1.7.7 (also tried 1.7.3) - <a href=""http://stackoverflow.com/questions/5876075/gitignore-to-ignore-all-files-then-recursively-allows-files-of-a-certain-type"">.gitignore to ignore all files, then recursively allows files of a certain type</a></p>
","41","14262","<git>"
"3828164","1","How do I access my SSH public key?","<p>I've just generated my RSA keypair and I want to add that key to Github.</p>

<p>I tried <code>cd id_rsa.pub</code> and <code>id_rsa.pub</code> but no luck. How can I access my SSH public key?</p>
","124","169755","<git><ssh><rsa>"
"14075581","1","git undo all uncommitted changes","<p>I'm trying to undo all changes since my last commit. I tried <code>git reset --hard</code> and <code>git reset --hard HEAD</code> after viewing <a href=""http://stackoverflow.com/questions/7999259/git-how-to-perform-the-tfs-equivalent-of-undo-pending-changes"">this post</a>. I responds with head is now at 18c3773... but when I look at my local source all the files are still there. What am I missing?</p>
","247","169454","<git><command-line><undo><git-reset>"
"1504724","1","Automatically remove *.pyc files and otherwise-empty directories when I check out a new branch","<p>So here's an interesting situation when using git and python, and I'm sure it happens for other situations as well.</p>

<p>Let's say I make a git repo with a folder /foo/. In that folder I put /foo/program.py. I run program.py and program.pyc is created. I have *.pyc in the .gitignore file, so git doesn't track it. </p>

<p>Now let's say I make another branch, dev. In this dev branch, I remove the /foo/ folder entirely.</p>

<p>Now I switch back to the master branch, and /foo/ reappears. I run the program.py and the program.pyc file reappears. All is well.</p>

<p>I switch back to my dev branch. The /foo/ directory should disappear. It only exists in the master branch, not the dev branch. However, it is still there. Why? Because the ignored program.pyc file prevents the folder from being deleted when switching branches.</p>

<p>The solution to this problem is to recursively delete all *.pyc files before switching branches. I can do that easily with this command.</p>

<pre><code>find . -name ""*.pyc"" -exec rm '{}' ';'
</code></pre>

<p>The problem is that it is annoying to have to remember to do this almost every time I change branches. I could make an alias for this command, but then I still have to remember to type it every time I change branches. I could also make an alias for git-branch, but that's no good either. The git branch command does other things besides just change branches, and I don't want to delete all pyc files every time I use it. Heck, I might even use it in a non-python repo, then what?</p>

<p>Is there a way to set a git hook that only executes when I change branches? Or is there some other way to set all *.pyc files to get erased whenever I switch branches?</p>
","48","8339","<git><python><bash>"
"1983346","1","Deleting Files using Git/GitHub","<p>First off, I'm new to Git.</p>

<p>I deleted a bunch of files locally on my Mac using Finder. I want the files that I deleted to no longer show in the current branch, but they do. </p>

<p>Any Git users know a command to update the index?</p>
","109","85798","<git><github>"
"5727555","1","Remember Password, Git bash under windows","<p>I've an automatic building service which download from a git private repository.
The problem is that when it tries to clone repository it need to provide the password, because it is not remembered; so because there is no human interaction, it waits forever the password.
How can I force it to remember from id_rsa.pub?</p>
","85","46393","<windows><git><passwords><msysgit>"
"18773598","1","Creating folders inside github.com repo without using Git","<p>I want to add a new folder to my newly created GitHub repository without installing the <code>Git</code> setup for (Mac/Linux/Win). Is it possible to do so?</p>

<p>I can't have <code>Git</code> all the time with me when I work on different systems/machines. I know how to add files directly in a repo on <code>github.com/[USER]/[REPO]</code>. Can we create a folder as well?</p>
","165","80915","<git><github><github-services>"
"3329943","1","git branch, fork, fetch, merge, rebase and clone, what are the differences?","<p>Can someone help me understand the difference between a branch, a fork and a clone in Git?</p>

<p>Similarly, what does it mean when I do a <code>git fetch</code> as opposed to a <code>git pull</code>? </p>

<p>Also, what does <code>rebase</code> mean in comparison to <code>merge</code>? </p>

<p>How can I squash individual commits themselves together?</p>

<p>How are they used, why are they used and what do they represent?</p>

<p>How does GitHub figure in?</p>
","405","115554","<git><branch><clone><git-clone><gitx>"
"23885449","1","Unable to resolve ""unable to get local issuer certificate"" using git on Windows with self-signed certificate","<p>I am using git on Windows.  I installed the msysgit package.  My test repository has a self signed certificate at the server.  I can access and use the repository using http without problems.  Moving to https gives the error ""SSL Certificate problem: unable to get local issuer certificate"".  </p>

<p>I have the self signed certificate installed in the Trusted Root Certification Authorities of my Windows 7 - client machine. I can browse to the https repository url in Internet Explorer with no error messages.</p>

<p>This blog <a href=""http://blogs.msdn.com/b/phkelley/archive/2014/01/20/adding-a-corporate-or-self-signed-certificate-authority-to-git-exe-s-store.aspx"">http://blogs.msdn.com/b/phkelley/archive/2014/01/20/adding-a-corporate-or-self-signed-certificate-authority-to-git-exe-s-store.aspx</a> explained that curl does not use the client machine's certificate store.  I followed the blog post's advice to create a private copy of curl-ca-bundle.crt and configure git to use it.  I am sure git is using my copy. If I rename the copy; git complains the file is missing.</p>

<p>I pasted in my certificate, as mentioned in the blog post, I still get the message ""unable to get local issuer certificate"".</p>

<p>I verified that git was still working by cloning a GitHub Repository via https.</p>

<p>The only thing I see that's different to the blog post is that my certificate IS the root - there is no chain to reach it.  My certificate originally came from clicking the IIS8 IIS Manager link 'Create Self Signed Certificate'.  Maybe that makes a certificate different in some way to what curl expects.</p>

<p>How can I get git/curl to accept the self signed certificate? </p>
","64","87369","<windows><git><curl><ssl-certificate><msysgit>"
"18779442","1","Error while pull from git - insufficient permission for adding an object to repository database .git/objects","<p>I have git error: ""insufficient permission for adding an object to repository database .git/objects"" every time I make ""git pull origin develop"".</p>

<pre><code>    remote: Counting objects: 70, done.
    remote: Compressing objects: 100% (7/7), done.
    remote: Total 42 (delta 35), reused 42 (delta 35)
    error: insufficient permission for adding an object to repository database     .git/objects

    fatal: failed to write object
    fatal: unpack-objects failed
</code></pre>
","35","21052","<git>"
"11722830","1","git gui not working after installing Mountain Lion","<p>When I ran <code>git gui</code>, I got this:</p>

<pre><code>$ git gui
git: 'gui' is not a git command. See 'git --help'.

Did you mean one of these?
    grep
    init
    pull
    push
</code></pre>

<p>But I ran other git commands fine, including <code>gitk</code>. How can I fix this?</p>

<p>Thanks.</p>
","47","17098","<git>"
"11835948","1","Git cherry pick vs rebase","<p>I have recently started working with Git.</p>

<p>Going over the git book online (<a href=""http://git-scm.com/book"">Git book</a>) I've found the following under the ""Git Rebase"" section:</p>

<blockquote>
  <p>With the rebase command, you can take all the changes that were
  committed on one branch and replay them on another one.</p>
</blockquote>

<p>(Quoted from: <a href=""http://git-scm.com/book/en/Git-Branching-Rebasing"">http://git-scm.com/book/en/Git-Branching-Rebasing</a>)</p>

<p>I thought this is the exact definition of git <em>cherry-pick</em> (reapply a commit or a set of commit objects on the currently checked out branch.</p>

<p>What am i missing here?</p>
","47","13163","<git><version-control>"
"1453129","1","Git create branch from current checked out master?","<p>There is a git controlled folder on a server  where the main branch is checked out and a whole pile of files have been modified and not committed. Is there a way for me to commit the changes to a separate branch so I can go back to a clean version?</p>

<p>ie  I want to effecitvely undo all this persons changes but store them in another chance so if that person wants their changes they can switch to that branch.</p>

<p>(Yes I know this is not how git is designed to work but that is my situation!) Any ideas very much appreciated.</p>
","63","76110","<git><version-control><dvcs><git-branch>"
"1981830","1","Undo part of unstaged changes in git","<p>How do I undo parts of my unstaged changes in git but keep the rest as unstaged?  The way I figured out is:</p>

<pre><code>git commit --interactive
# Choose the parts I want to delete
# Commit the changes
git stash
git rebase -i master # (I am an ancestor of master)
# Delete the line of the most recent commit
git stash apply
</code></pre>

<p>This works, but it would be nice if there were something like <code>git commit --interactive</code> only for reverting changes.  Any better methods?</p>
","80","18885","<git>"
"3826748","1","How to search in commit messages using command line?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/746684/how-to-search-through-all-commits-in-the-repository"">How to search through all commits in the repository?</a>  </p>
</blockquote>



<p>Is there a way to search through commit headers using the command line?</p>
","140","39852","<git><console>"
"19003009","1","Git: How to recover stashed uncommitted changes","<p>I had some uncommitted changes in my development branch and I stashed them using <code>git stash</code>, but there were some changes which were very important among those stashed ones. Is there any way to get back those changes?</p>

<p>Also, I have made some changes on top of the stashed code files since.  </p>

<p>Is there any chance I can retrieve the stashed changes to a new branch if possible?</p>
","118","71307","<git><git-stash>"
"2553786","1","How do I alias commands in git?","<p>I saw a screencast where someone had gotten  </p>

<pre><code>git st
git ci
</code></pre>

<p>to work. When I do it I get an error asking me if I meant something else.<br>
Being a git newb, I need to know what you have to do to get this done?</p>
","312","95300","<git>"
"20666989","1","Bower: ENOGIT Git is not installed or not in the PATH","<p>Git is installed and is in the path.</p>

<p>Platform: <a href=""https://en.m.wikipedia.org/wiki/Red_Hat_Enterprise_Linux"">Red Hat Enterprise Linux</a> 5.8.</p>

<pre><code>&gt;which git
/usr/local/bin/git
</code></pre>

<p>Yet bower can't find it:</p>

<pre><code>bower angular#1.0.6  ENOGIT git is not installed or not in the PATH
</code></pre>

<p>What is the recommended work-around?</p>
","169","186445","<git><bower>"
"1505948","1","How do I remove a single file from the staging area of Git but not remove it from the index or undo the changes to the file itself?","<p><strong>Situation:</strong> I have a Git repository with files already in the index.  I make changes to several files, open Git and add these files to my staging area with ""git add .""</p>

<p><strong>Question:</strong> How do I remove one of those files from the staging area but not remove it from the index or undo the changes to the file itself?</p>
","603","257110","<git><staging>"
"8600652","1","Git on Bitbucket: Always asked for password, even after uploading my public SSH key","<p>I uploaded my <code>~/.ssh/id_rsa.pub</code> to <a href=""https://bitbucket.org/account/#ssh-keys"">Bitbucket</a> as <a href=""http://confluence.atlassian.com/display/BITBUCKET/Using+SSH+to+Access+your+Bitbucket+Repository"">explained</a>, but Git still asks me for my password at every operation (like <code>git pull</code>). Did I miss something?</p>

<p>It is a private repository (fork of another person's private repository) and I cloned it like this:</p>

<pre><code>git clone git@bitbucket.org:Nicolas_Raoul/therepo.git
</code></pre>

<p>Here is my local <code>.git/config</code>:</p>

<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote ""origin""]
        fetch = +refs/heads/*:refs/remotes/origin/*
        url = https://Nicolas_Raoul@bitbucket.org/Nicolas_Raoul/therepo.git
[branch ""master""]
        remote = origin
        merge = refs/heads/master
</code></pre>

<p>In the same environment with the same public key, Git on Github works fine.<br>
.ssh is rwx------, .ssh/id_rsa is -rw-------, .ssh/id_rsa.pub is -rw-r--r--</p>
","66","36070","<git><bitbucket>"
"18782637","1","VisualStudio: An error was raised by libgit2. Category = Checkout","<p>I'm using TFS with Git, installed Visual Studio Tools for Git.</p>

<p>I'm trying to pull all commits (5 in total) from TFS, but I get this error below:</p>

<pre><code>An error occurred. Detailed message: An error was raised by libgit2. 
Category = Checkout (MergeConflict).
2 conflicts prevent checkout
</code></pre>

<p>How do I resolve this?</p>

<p><img src=""http://i.stack.imgur.com/Kzvlp.png"" alt=""error""></p>
","31","26786","<git><visual-studio><version-control><tfs>"
"9378760","1","git push local branch with same name as remote tag","<p>I'm trying to push a new local branch <code>product-0.2</code> to remote where there is already a tag with the same name (but the branch itself does not exist)</p>

<pre><code>git push -v --tags --set-upstream origin product-0.2:product-0.2 
Pushing to https://****@github.com/mycompany/product.git
error: src refspec product-0.2 matches more than one.
error: failed to push some refs to 'https://****@github.com/mycompany/product.git'
</code></pre>

<p>Same with:</p>

<pre><code>git push origin product-0.2:/refs/heads/product-0.2 
</code></pre>

<p>Although the other way around it works, e.g. create a branch <code>product-0.1</code>, commit on it then apply a tag <code>product-0.1</code>.</p>

<p>Some people work around this by removing the conflicting tag locally, then push the branch, then retrieve the remote tag, but it seems cumbersome and error prone.</p>

<p>How can I create my branch with minimal fuss?</p>

<p>Thanks for your input</p>
","36","16495","<git><git-branch>"
"10972289","1","How to change SmartGit's licensing option after 30 days of commercial use on ubuntu?","<p>while installing smartgit 3.0.4 I checked the commercial licensing option, because I was just clicking ""next"" button : ) (30 day trial and then you have to buy it). Now today is my 31st day of using SG and I can't change my licensing options (reinstalling smartgit doesn't help) and I'm not able to use SG anymore without paying (I'm not using it for commercial purposes). Do you know how to fix it?</p>

<p>I don't have these files on my ubuntu: <a href=""http://www.syntevo.com/smartgit/documentation.html?page=installation"">http://www.syntevo.com/smartgit/documentation.html?page=installation</a> </p>
","34","31700","<git><smartgit>"
"3949804","1","Force overwrite of local file with what's it origin repo?","<p>I want to get the latest file that's in the repository, and overwrite what I have locally. How can I do this with the git client?</p>
","97","85333","<git>"
"2113050","1","How to conclude your merge of a file?","<p>After I merged a file in Git I tried to pull the repository but error came up:</p>

<blockquote>
  <p>You have not concluded your merge. (MERGE_HEAD exists)</p>
</blockquote>

<p>How does one conclude a merge?</p>
","72","57179","<git><merge>"
"3950166","1","NuGet and distributed version control (DVCS)","<p>I wonder if it is possible to use nuget to only store references to the required packages in version control (only the package.config and ignore the packages folder).</p>

<p>Is there a way to tell nuget to (re)download all the referenced packages in the various package.config files? Or something similar which could be put into a build script.</p>

<p><strong>Update:</strong></p>

<p>Seems that I'm not the only one who requested this feature: <a href=""http://nupack.codeplex.com/workitem/165"">See this work item</a> (thanks to PHeiberg for the hint)</p>

<p><strong>Update 2:</strong></p>

<p>NuGet now has this feature builtin. See <a href=""http://docs.nuget.org/docs/workflows/using-nuget-without-committing-packages#Using_NuGet_without_committing_packages_to_source_control"">Using NuGet without committing packages to source control</a> for details. All left is to add the packages directory to .gitignore or some equivalent of your VCS (<code>/packages/</code> will do the trick if you have it in the root of your repository and are using git).</p>
","52","6086","<git><version-control><dvcs><nuget>"
"2114111","1","Where does git config --global get written to?","<p>Using the git config --global command to set things up, where is the file?</p>

<p>eg :</p>

<pre><code>git config --global core.editor ""blah""
</code></pre>

<p>Its not at these places :-</p>

<pre><code>C:\Program Files\Git\etc\gitconfig

C:\myapp\.git\config
</code></pre>

<p>I have not env set?</p>

<p>git version 1.6.5.1.1367.gcd48 on Windows7</p>
","447","266993","<git><location><config>"
"435646","1","Combine the first two commits of a Git repository?","<p>Suppose you have a history containing the three commits <i>A, B</i> and <i>C</i>:</p>

<pre><code>A-B-C
</code></pre>

<p>I would like to combine the two commits <i>A</i> and <i>B</i> to one commit <i>AB</i>:</p>

<pre><code>AB-C
</code></pre>

<p>I tried</p>

<pre><code>git rebase -i A
</code></pre>

<p>which opens up my editor with the following contents:</p>

<pre><code>pick e97a17b B
pick asd314f C
</code></pre>

<p>I change this to</p>

<pre><code>squash e97a17b B
pick asd314f C
</code></pre>

<p>Then Git 1.6.0.4 says:</p>

<pre><code>Cannot 'squash' without a previous commit
</code></pre>

<p>Is there a way or is this just impossible?</p>
","147","36061","<git><rebase><git-rebase><git-rewrite-history>"
"1507463","1","How to deal with this git error","<p>I am getting this error in my git repository:</p>

<pre><code>22:09:15 $ git status
# On branch master
error: Could not read 8124cc15c63be92d534e4cdfa33c38d54deee122
error: unable to read tree object HEAD
nothing to commit (working directory clean)
</code></pre>

<p>A Google search for <code>error: unable to read tree object HEAD</code> doesn't result in much help, this error seems to be very rare. I am not sure how to deal with it. Could it be a hard drive failure?</p>

<p><strong>Edit</strong>:
The output of <code>git fsck</code> is the following:</p>

<pre><code>broken link from  commit 607328dc80e4901a55b95c683d4fbf43e6df28bf
              to    tree 8124cc15c63be92d534e4cdfa33c38d54deee122
missing tree 8124cc15c63be92d534e4cdfa33c38d54deee122
dangling tree 56b5d4a5e429d251582ec927bca7ef1225510c41
dangling tree 0259d2d38b18b6136bb6070fb41faf3624453cc6
</code></pre>
","32","31480","<git>"
"436125","1","Two git repositories in one directory?","<p>Is it possible to have 2 git repositories in one directory?  I'd think not, but thought I'd ask.  Basically, I'd like to check in my home directory config files (e.g. .emacs) which should be common across all of the machines I work on, but have a second repository for local files (e.g. .emacs.local), which contains machine-specific configurations.  The only way I can think of to do that is to have the local config in a subdirectory and ignore that subdirectory from the main git repository.  Any other ideas?  Thanks!</p>

<p>joe</p>
","36","16576","<git>"
"1558719","1","Using a remote repository with non-standard port","<p>I am setting up my local git project for a remote repository. The remote repository is being served on a non-standard port (4019).</p>

<p>But it doesn't work. Instead I get the following error message:</p>

<pre><code>ssh: connect to host git.host.de:4019 port 22: Connection refused
fatal: The remote end hung up unexpectedly
error: failed to push to 'ssh://root@git.host.de:4019/var/cache/git/project.git'
</code></pre>

<p>My local git config is <a href=""http://pastie.org/652605"">as follows</a>:</p>

<pre><code>[core]
  repositoryformatversion = 0
  filemode = true
  bare = false
  logallrefupdates = true
[remote ""origin""]
  url = ssh://root@git.host.de:4019/var/cache/git/project.git
  fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""master""]
  remote = origin
  merge = refs/heads/master
</code></pre>

<p>(The port and host are placeholders for the actual port and host.)</p>

<p>What is wrong with my git configuration?</p>
","65","56192","<git>"
"457927","1","Git workflow and rebase vs merge questions","<p>I've been using Git now for a couple of months on a project with one other developer. I have several years of experience with <a href=""http://en.wikipedia.org/wiki/Apache_Subversion"" rel=""nofollow"">SVN</a>, so I guess I bring a lot of baggage to the relationship.</p>

<p>I have heard that Git is excellent for branching and merging, and so far, I just don't see it. Sure, branching is dead simple, but when I try to merge, everything goes all to hell. Now, I'm used to that from SVN, but it seems to me that I just traded one sub-par versioning system for another.</p>

<p>My partner tells me that my problems stem from my desire to merge willy-nilly, and that I should be using rebase instead of merge in many situations. For example, here's the workflow that he's laid down:</p>

<pre><code>clone the remote repository
git checkout -b my_new_feature
..work and commit some stuff
git rebase master
..work and commit some stuff
git rebase master
..finish the feature
git checkout master
git merge my_new_feature
</code></pre>

<p>Essentially, create a feature branch, ALWAYS rebase from master to the branch, and merge from the branch back to master. Important to note is that the branch always stays local.</p>

<p>Here is the workflow that I started with</p>

<pre><code>clone remote repository
create my_new_feature branch on remote repository
git checkout -b --track my_new_feature origin/my_new_feature
..work, commit, push to origin/my_new_feature
git merge master (to get some changes that my partner added)
..work, commit, push to origin/my_new_feature
git merge master
..finish my_new_feature, push to origin/my_new_feature
git checkout master
git merge my_new_feature
delete remote branch
delete local branch
</code></pre>

<p>There are two essential differences (I think): I use merge always instead of rebasing, and I push my feature branch (and my feature branch commits) to the remote repository.</p>

<p>My reasoning for the remote branch is that I want my work backed up as I'm working. Our repository is automatically backed up and can be restored if something goes wrong. My laptop is not, or not as thoroughly. Therefore, I hate to have code on my laptop that's not mirrored somewhere else.</p>

<p>My reasoning for the merge instead of rebase is that merge seems to be standard and rebase seems to be an advanced feature. My gut feeling is that what I'm trying to do is not an advanced setup, so rebase should be unnecessary. I've even perused the new Pragmatic Programming book on Git, and they cover merge extensively and barely mention rebase.</p>

<p>Anyway, I was following my workflow on a recent branch, and when I tried to merge it back to master, it all went to hell. There were tons of conflicts with things that should have not mattered. The conflicts just made no sense to me. It took me a day to sort everything out, and eventually culminated in a forced push to the remote master, since my local master has all conflicts resolved, but the remote one still wasn't happy.</p>

<p>What is the ""correct"" workflow for something like this? Git is supposed to make branching and merging super-easy, and I'm just not seeing it.</p>

<p><strong>Update 2011-04-15</strong></p>

<p>This seems to be a very popular question, so I thought I'd update with my two years experience since I first asked.</p>

<p>It turns out that the original workflow is correct, at least in our case. In other words, this is what we do and it works:</p>

<pre><code>clone the remote repository
git checkout -b my_new_feature
..work and commit some stuff
git rebase master
..work and commit some stuff
git rebase master
..finish the feature
git checkout master
git merge my_new_feature
</code></pre>

<p>In fact, our workflow is a little different, as we tend to do <em>squash merges</em> instead of raw merges. This allows us to turn our entire feature branch into a single commit on master. Then we delete our feature branch. This allows us to logically structure our commits on master, even if they're a little messy on our branches. So, this is what we do:</p>

<pre><code>clone the remote repository
git checkout -b my_new_feature
..work and commit some stuff
git rebase master
..work and commit some stuff
git rebase master
..finish the feature
git checkout master
git merge --squash my_new_feature
git commit -m ""added my_new_feature""
git branch -D my_new_feature
</code></pre>

<p>I've come to love Git and never want to go back to SVN. If you're struggling, just stick with it and eventually you'll see the light at the end of the tunnel.</p>
","776","158264","<git><version-control><git-merge><git-rebase>"
"2116778","1","Reduce git repository size","<p>I tried looking for a good tutorial on reducing repo size, but found none. How do I reduce my repo size...it's about 10 MB, but the thing is Heroku only allows 50 MB and I'm no where near finished developing my app.</p>

<p>I added the usual suspects (log, vendor, doc etc) to .gitignore already. Although I only added .gitignore recently.</p>

<p>Any suggestions?</p>
","120","43930","<git>"
"13965391","1","How do I see the commit differences between branches in git?","<p>I'm on branch-X and have added a couple more commits on top of it. I want to see all the differences between MASTER and the branch that I am on in terms of commits. I could just do a </p>

<pre><code>git checkout master
git log
</code></pre>

<p>and then a </p>

<pre><code>git checkout branch-X
git log
</code></pre>

<p>and visually diff these, but I'm hoping for an easier, less error-prone method.</p>
","72","41247","<git><logging><branch><git-log>"
"3954852","1","How to complete a git clone for a big project on an unstable connection?","<p>I am trying to git clone the LibreOffice codebase, but at the moment I have an internet connection of about 300kbps and it's just anything but stable. I can get the connection back any moment, but then the git clone process already stopped working, and no way to get it running again. Is there some way to have a more failure-resistant git clone download?</p>

<p>One option I considered myself is to download someone else's .git directory, but that is overly dependent of others and doesn't seem like the best possible solution to me.</p>
","106","23699","<git><git-clone>"
"14186681","1","Git & Intellij, How do I commit only parts of a changed file","<p>I can't seem to commit only a fraction of the changes in a file, it seems to be all of the file or nothing, I'm using Git with Intellij, is it possible?</p>

<p>Thanks.</p>
","34","3320","<git><intellij-idea>"
"14680711","1","How to do a GitHub pull request","<p>How do I create and/or send a pull request to another repository hosted on GitHub?</p>
","177","71109","<git><github><pull-request><git-fork>"
"482309","1","How do you get git to ignore all contents of a directory?","<p>I have a git directory which contains the a whole bunch of files and then has a directory called 'sessions'. 'sessions' contains cookie information for my web.py program. </p>

<p>I need the folder 'sessions' to remain in the git repository because without the folder the program does not function correctly. I don't need the actual contents of folder being stored in the git directory.</p>

<p>So the question is:</p>

<p>How can I get git to ignore the contents of a folder but not the folder itself?</p>
","48","12661","<git>"
"2119480","1","Edit the root commit in Git?","<p>There's ways to change the message from later commits:</p>

<pre class=""lang-sh prettyprint-override""><code>git commit --amend                    # for the most recent commit
git rebase --interactive master~2     # but requires *parent*
</code></pre>

<p>How can you change the commit message of the very first commit (which has no parent)?</p>
","167","17913","<git><git-rebase><git-commit><git-rewrite-history><amend>"
"2119942","1","How to wrap git commit comments?","<p>Is there a way to wrap git commit comments (when viewed via <code>git log</code>), so they are not cut off at the end of the line? It seems like there should be a pretty simple solution, but I haven't been able to find one.</p>

<p>Thanks.</p>
","59","19121","<git>"
"3431314","1","github: No supported authentication methods available","<p>i use github and have successfully added and synched files on my laptop in the past. </p>

<p>as of recent i started getting ""<strong>PuTTY Fatal Error: Disconnected: No supported authentication methods available</strong>"" after running:</p>

<p>git pull origin master (or push)</p>

<p>however</p>

<p>ssh git@github.com returns the correct response:
ERROR: Hi username! You've successfully authenticated, but GitHub does not provide shell access
Connection to github.com closed.</p>

<p>after digging around on github i found this morcel:</p>

<p><strong>No supported authentication methods available</strong>
You should be aware of the environment variable GIT_SSH, which is used by git to find your ssh-speaking client, if ssh doesn’t work for you. The git install may be using plink.exe (via GIT_SSH) to perform the authentication. If so, make sure you have pageant.exe running, and the key you created for github loaded into it. This provides the key to plink.exe; without it, the above error will occur.</p>

<p>not sure what plink.exe or peagant.exe is.. and the fact that ssh git@github.com seems to authenticate correctly makes me wonder what the best solution here is.. i certainly don't want to overcomplicate my setup if not necessary. </p>
","67","43104","<git><ssh><github><msysgit>"
"18514659","1","Git: what is a dangling commit/blob and where do they come from?","<p>I'm looking for the basic info on dangling commits &amp; blobs.</p>

<p>My repo seems fine. But I ran <code>git fsck</code> for the first time to see what it did and I have a long list of 'dangling blobs' and a single 'dangling commit'.  </p>

<p>What are these things?  Where did they come from?  Do they indicate anything unusual (good or bad) about the state of my repo?</p>
","43","15218","<git><git-commit><git-fsck><git-dangling>"
"11459475","1","Should I check in node_modules to git when creating a node.js app on Heroku?","<p>I followed the basic getting started instructions for node.js on Heroku here:</p>

<p><a href=""https://devcenter.heroku.com/categories/nodejs"">https://devcenter.heroku.com/categories/nodejs</a></p>

<p>These instruction don't tell you to create a .gitignore node_modules, and therefore imply that node_modules should be checked in to git.  When I include node_modules in git my getting started application ran correctly.</p>

<p>When I followed the more advanced example at:</p>

<p><a href=""https://devcenter.heroku.com/articles/realtime-polyglot-app-node-ruby-mongodb-socketio"">https://devcenter.heroku.com/articles/realtime-polyglot-app-node-ruby-mongodb-socketio</a>
<a href=""https://github.com/mongolab/tractorpush-server"">https://github.com/mongolab/tractorpush-server</a>  (source)</p>

<p>It instructed me to add node_modules to .gitignore.  So I removed node_modules from git, added it to .gitignore, then re-deployed.  This time the deployed failed like so:</p>

<pre><code>-----&gt; Heroku receiving push
-----&gt; Node.js app detected
-----&gt; Resolving engine versions
       Using Node.js version: 0.8.2
       Using npm version: 1.0.106
-----&gt; Fetching Node.js binaries
-----&gt; Vendoring node into slug
-----&gt; Installing dependencies with npm
       Error: npm doesn't work with node v0.8.2
       Required: node@0.4 || 0.5 || 0.6
           at /tmp/node-npm-5iGk/bin/npm-cli.js:57:23
           at Object.&lt;anonymous&gt; (/tmp/node-npm-5iGk/bin/npm-cli.js:77:3)
           at Module._compile (module.js:449:26)
           at Object.Module._extensions..js (module.js:467:10)
           at Module.load (module.js:356:32)
           at Function.Module._load (module.js:312:12)
           at Module.require (module.js:362:17)
           at require (module.js:378:17)
           at Object.&lt;anonymous&gt; (/tmp/node-npm-5iGk/cli.js:2:1)
           at Module._compile (module.js:449:26)
       Error: npm doesn't work with node v0.8.2
       Required: node@0.4 || 0.5 || 0.6
           at /tmp/node-npm-5iGk/bin/npm-cli.js:57:23
           at Object.&lt;anonymous&gt; (/tmp/node-npm-5iGk/bin/npm-cli.js:77:3)
           at Module._compile (module.js:449:26)
           at Object.Module._extensions..js (module.js:467:10)
           at Module.load (module.js:356:32)
           at Function.Module._load (module.js:312:12)
           at Module.require (module.js:362:17)
           at require (module.js:378:17)
           at Object.&lt;anonymous&gt; (/tmp/node-npm-5iGk/cli.js:2:1)
           at Module._compile (module.js:449:26)
       Dependencies installed
-----&gt; Discovering process types
       Procfile declares types -&gt; mongod, redis, web
-----&gt; Compiled slug size is 5.0MB
-----&gt; Launching... done, v9
</code></pre>

<p>Running ""heroku ps"" confirms the crash.  Ok, no problem, so I rolled back the change, add node_module back to the git repository and removed it from .gitignore.  However, even after reverting, I still get the same error message on deploy but now the application is running correctly again.  Running ""heroku ps"" tells me the application is running.</p>

<p>So my question is what's the right way to do this?  Include node_modules or not?  And why would I still be getting the error message when I rollback?  My guess is the git repository is in a bad state on the Heroku side?</p>
","240","65706","<git><node.js><heroku><npm><gitignore>"
"9185053","1","Git SVN error: a Git process crashed in the repository earlier","<p>I was just trying to commit changes to the Git master. From what I have read, it seems that the idea is to delete the lock file. The message says:</p>

<blockquote>
  <p>make sure no other Git processes are running and remove the file manually</p>
</blockquote>

<p>Perhaps someone knows, which file to remove and how to remove?</p>
","51","35417","<git><git-svn>"
"11541162","1","Multiple Git repositories for each Eclipse project or one Git repository","<p>I am in the process of moving to Git from SVN. In SVN I had multiple eclipse projects in a single SVN repository that is convenient for browsing projects. I was going to move to having one git repository per eclipse project but EGit suggests doing otherwise.</p>

<p>The guide for <a href=""http://wiki.eclipse.org/EGit/User_Guide/One_page#Considerations_for_Git_Repositories_to_be_used_in_Eclipse"">EGit</a> suggests putting multiple projects into a single Git repository. </p>

<p>Looking at similar questions <a href=""http://stackoverflow.com/questions/2732020/git-repository-layout-for-server-with-multiple-projects"">such as this</a> suggest one project per repository.</p>

<p>Which approach is best practice and what do people implement?</p>
","33","14912","<eclipse><git><repository><repository-pattern><egit>"
"4592838","1","Symbolic link to a hook in git","<p>I wrote my own custom post-merge hook, now I added a ""hooks"" directory to my main project folder (since git doesn't track changes in .git/hooks), somewhere I read that I can make a symbolic link from hooks to .git/hooks so I don't have to copy the file from one folder to the other every time someone changes it so I tried:</p>

<p><code>ln -s -f hooks/post-merge .git/hooks/post-merge</code></p>

<p>But it doesn't seem to work, any ideas why? ""ln hooks/post-merge .git/hooks/post-merge"" works fine but making a hard link is the same as copyin I guess....</p>
","33","6402","<linux><git><githooks>"
"4592866","1","Git: How to estimate a contribution of a person to my project in terms of added/changed lines of code?","<p>I have a GIT repository and I want to calculate how many lines of code were added/changed by one person or a group of persons during some period of time. Is it possible to calculate with git?</p>
","32","13983","<git>"
"11542687","1","git: How to ignore all present untracked files?","<p>Is there a handy way to ignore all untracked files and folders in a git repository?<br/>
(I know about the <code>.gitignore</code>.)</p>

<p>So <code>git status</code> would provide a clean result again.</p>
","51","43562","<git><gitignore>"
"6941889","1","Is it safe to shallow clone with --depth 1, create commits, and pull updates again?","<p>The <code>--depth 1</code> option in <a href=""http://git-scm.com/docs/git-clone""><code>git clone</code></a>:</p>

<blockquote>
  <p>Create a <em>shallow</em> clone with a history truncated to the specified number of revisions. A shallow repository has a number of limitations (you cannot clone or fetch from it, nor push from nor into it), but is adequate if you are only interested in the recent history of a large project with a long history, and would want to send in fixes as patches. </p>
</blockquote>

<p>But I've successfully done a shallow clone, committed some changes <strong>and pushed those changes</strong> back to the (bare clone) origin.</p>

<p>It makes sense to me - I mean why not? when the cloned HEAD is identifiable in the origin, and my commit comes on top of this, there seems no reason. But the manual says otherwise.</p>

<p>I like the idea of shallow clone - e.g. of drupal core: there's no way I need to know what went on in drupal 4 when I've started from 7. - but I don't want to shoot myself in the foot.</p>

<p>So is it safe to shallow clone, develop commits in it, pull again to keep up with updates from origin?</p>
","171","69995","<performance><git><git-clone>"
"9189575","1","git submodule tracking latest","<p>We are moving our (huge) project to git and we are thinking about using submodules. Our plan is to have three different heads in the superproject: release,stable,latest. The project leads will handle the release and stable branches. They will move the submodules as required.</p>

<p>The issue is the ""latest"" head. We would like the superproject ""latest"" head to track the master branches of all the submodules (automatically). And also it would be great if it would show the history of all commits to the submodule. </p>

<p>I have looked at gitslave, but it is not quite what we want. Any suggestions?</p>
","57","27143","<git><git-submodules><git-track>"
"16230838","1","Is it possible to pull just one file in Git?","<p>I am working on a GIT branch that has some broken tests, and I would like to pull (merge changes, not just overwrite) these tests from another branch where they are already fixed.</p>

<p>I know I can do</p>

<pre><code>git pull origin that_other_branch
</code></pre>

<p>but this will attempt to merge lots of other files, for that I am not yet ready.</p>

<p>Is it possible to pull and merge only the specified file (and not everything) from that another branch?</p>

<p>This is not a duplicate of <a href=""http://stackoverflow.com/questions/8421552/git-pull-request-for-just-one-file"">git pull request for just one file</a> as all answers to that question are how to revert the locally changed file to the repository version, without changing any branches.</p>
","58","75623","<git><git-merge><git-pull>"
"7047752","1","Git adding files to repo","<p>I followed basic Git tutorial and added README file, which worked. Then I copied my project files to the same folder and tried to add them to repository by running</p>

<pre><code>git add --all
git ci 'test' (my alias for commit)
git push origin master
</code></pre>

<p>and nothing got pushed. </p>

<p>What are the commands I should run to push my files to the remote repository (master)?</p>

<p>I tried to commit changes and run status but it says 'nothing to commit'. It does not recognize, that I copied lots of new files to that folder..</p>

<p>OK, so I type: git add .   (get no response from console)
then type to commit, and says no changes..</p>
","40","105626","<git><github>"
"7048763","1","How to stop git from making files non-executable on cygwin?","<p>I use git on Windows via cygwin and soon decided to use <code>filemode=false</code> (since otherwise I've got a lot of changes after the initial git clone). I'm definitely not interested in tracking permission at all, the only think I need is for some files to be executable. From time to time, I find that the <code>x</code> flag on some files gets lost and I strongly suppose it's because of git.</p>

<p>I'd be happy with a solution allowing to execute <code>chmod a+x ...</code> when needed.</p>
","51","14590","<git><permissions><cygwin>"
"4705517","1","GitHub: searching through older versions of files","<p>I know that using GitHub I can search through all the current versions of my files in a repo. However, I would also like to search through the older versions of my repo files. For example, say, I used to have a function called get_info() in my code, but deleted it several versions ago, is it possible to search for get_info and find the code. If it is not possible using GitHub, is it possible from the git command line?</p>

<p><strong>EDIT</strong></p>

<p>Thanks to @Mark Longair for showing how this can be done from the git command line. If it's not possible in GitHub it would be a great feature to have.</p>
","46","15412","<git><github>"
"16343659","1","How to show git log history for a sub directory of a git repo?","<p>Lets say that I have a git repo that looks like this.</p>

<pre><code>foo/
  .git/
  A/
   ... big tree here
  B/
   ... big tree here
</code></pre>

<p>Is there a way to ask git log to show only the log messages for a specific directory. For example I want to see what commits touched files in foo/A only?</p>
","55","25926","<git>"
"21544803","1","Git / Bower Errors: Exit Code # 128 & Failed connect","<p>I am using Bower to install several libraries. For demonstration purposes here, I am installing bootstrap. Regardless of the package, I receive the following errors:</p>

<pre><code>C:\Scott&gt;bower install bootstrap
bower not-cached    git://github.com/twbs/bootstrap.git#*
bower resolve       git://github.com/twbs/bootstrap.git#*
bower ECMDERR       Failed to execute ""git ls-remote --tags --heads git://github
.com/twbs/bootstrap.git"", exit code of #128

Additional error details:
fatal: unable to access 'https://github.com/twbs/bootstrap.git/': Failed connect
to github.com:443; No error    
</code></pre>

<p>I have tried using the following solution to remove the first error - which I found from this <a href=""https://github.com/bower/bower/issues/689"">search</a>:</p>

<pre><code>git config --global url.""https://"".insteadOf git://
</code></pre>

<p>However, this does not work nor do any of the other solutions found on that page. Searching for a solution for the 2nd error, it seems that setting a username/pwd for a proxy server will resolve the issue if you are on a corporate network/behind a firewall. However, I am not using a proxy server as I am on my home pc/network (windows 7 x64).</p>

<p>Thanks!</p>

<p>EDIT: Command window with errors:</p>

<p><img src=""http://i.stack.imgur.com/ISTAh.png"" alt=""enter image description here""></p>
","76","54052","<git><bower>"
"11887203","1","""You are on a branch yet to be born"" when adding git submodule","<p>I am attempting to add a few submodules to my <code>.vim/bundles</code> directory, and when I attempt to add this particular repo Git gives me a strange error I've never seen before:</p>

<pre><code>$ git submodule add -f git://github.com/derekwyatt/vim-scala.git .vim/bundle/vim-scala
fatal: You are on a branch yet to be born
Unable to checkout submodule '.vim/bundle/vim-scala'
</code></pre>

<p>Any idea what can cause this?</p>

<p>If I clone the same repo to a test directory (not through the submodule command), it works fine, and creates the expected files.</p>
","91","23144","<git><git-submodules>"
"18939421","1","What should Xcode 6 gitignore file include?","<p>What should the typical <code>.gitignore</code> include for Xcode 6?</p>

<p>Also for information regarding the <code>xccheckout</code> introduced in Xcode 5 see <a href=""http://stackoverflow.com/q/18340453/2158465"">here</a></p>
","199","63284","<ios><iphone><xcode><git>"
"21680573","1","Cocoapods setup stuck on pod setup command on terminal","<pre><code>MacBook-Pro:~ skbc$ pod setup --verbose
/System/Library/Frameworks/Ruby.framework/Versions/2.0/usr/lib/ruby/2.0.0/universal-darwin13/rbconfig.rb:212: warning: Insecure world writable dir /usr/local/bin in PATH, mode 040777

Setting up CocoaPods master repo

Cloning spec repo `master` from `https://github.com/CocoaPods/Specs.git` (branch `master`)
  $ /usr/bin/git clone 'https://github.com/CocoaPods/Specs.git' master
  Cloning into 'master'...
</code></pre>

<p>Have gone through resources provided by Cocoapods web site, SO and few video tutorials. Nothing happening even after waiting for couple of hours, however still trying to figure-out what may be the problem is? I would very much appreciate your comments and suggestions. Thank you!!! </p>
","52","27605","<ios><ruby><git><xcode5><cocoapods>"
"16606203","1","Force git stash to overwrite added files","<p>I have some files which were untracked in git.  I made some changes and wanted to commit them, but realised I had forgotten to check in the unmodified files first.  So I stashed the files, then added the unmodified versions.  </p>

<p>Then when I apply the stash to the repository, I get conflicts due to the files having already been added.  </p>

<p>How can I apply the stash, and force the versions in the stash to be used in preference to the originals in the repository?</p>

<p>Thanks</p>
","47","20127","<git>"
"21691202","1","How to create file execute mode permissions in Git on Windows?","<p>I use Git in Windows, and want to push the executable shell script into git repo by one commit.</p>

<p>Usually I need to do two steps (<code>git commit</code>).</p>

<pre><code>$ vi install.sh
$ git add install.sh  
$ git commit -am ""add new file for installation"" # first commit
[master f2e92da] add support for install.sh
 1 files changed, 18 insertions(+), 3 deletions(-)
 create mode 100644 install.sh
$ git update-index --chmod=+x install.sh
$ git commit -am ""update file permission""        # second commit
[master 317ba0c] update file permission
  0 files changed
  mode change 100644 =&gt; 100755 install.sh
</code></pre>

<p>How can I combine these two steps into one step ? git configuration ? windows command ?</p>

<p>Reference: see question in <a href=""http://stackoverflow.com/questions/6476513"">Git file permissions on Windows 7</a> for second commit</p>
","60","23873","<git>"
"16820852","1","Abort a git cherry-pick?","<p>I ran <code>git cherry-pick &lt;hash&gt;</code> and had merge conflicts. I don't want to resolve the conflicts, I just want to abort the cherry-pick. When doing an actual merge (with <code>git merge</code>) there's the handy <code>git merge --abort</code>. What's the equivalent for cherry-picking?</p>
","170","56622","<git><git-cherry-pick>"
"16824994","1","Git in Visual Studio - add existing project?","<p>I'm trying to put an existing project under Git source control but I'm unclear on several things.</p>

<p>I have setup a 'Team Foundation Service' Git account online.</p>

<p>I currently have an asp.net MVC 4 solution - in my Projects folder. I have created a git 'repository' locally (an empty folder currently). Should this just be my current application folder in Projects? Or does it need to be a copy?</p>

<p>How do I get my existing files into the online repository?</p>
","31","49214","<git><visual-studio-2012><visual-studio-2008><tfs><vs-team-services>"
"16825849","1","Choose Git merge strategy for specific files (""ours"", ""mine"", ""theirs"")","<p>I am in the middle of rebasing after a <code>git pull --rebase</code>.  I have a few files that have merge conflicts.  How can I accept ""their"" changes or ""my"" changes for specific files?</p>

<pre><code>$ git status
# Not currently on any branch.
# You are currently rebasing.
#   (fix conflicts and then run ""git rebase --continue"")
#   (use ""git rebase --skip"" to skip this patch)
#   (use ""git rebase --abort"" to check out the original branch)
#
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       modified:  CorrectlyMergedFile
#
# Unmerged paths:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#   (use ""git add &lt;file&gt;..."" to mark resolution)
#
#       both modified: FileWhereIWantToAcceptTheirChanges
#       both modified: FileWhereIWantToAcceptMyChanges
</code></pre>

<p>Normally I just open the file or a merge tool and manually accept all ""their"" or ""my"" changes.  However, I suspect I'm missing a convenient git command.</p>

<p>Also, note that I will only be able to choose a merge strategy for each file when I see what files hit conflicts an possibly what the conflicts are.</p>
","57","35720","<git><git-rebase><git-conflict-resolution>"
"4785107","1","Resolve conflicts using remote changes when pulling from Git remote","<p>I'm trying to pull code from my GitHub repo onto my server, but the pull keeps failing because of merge conflicts. I don't want to keep any of the changes that may have occurred on my local server since the last pull.</p>

<p>So is there a way I can force Git to overwrite with whatever version is in GitHub, rather than bother me about conflicts?</p>
","139","97292","<git><git-pull>"
"2333424","1","Distributing git configuration with the code","<p>In trying to standardise the platform for the developers, one of my needs would be to commit the <code>.git/config</code> so that everybody have the same CRLF config without forgetting to set it by hand.</p>

<p>How do I set this up?</p>

<p>I'm a bit concerned by all this negativity against <code>autocrlf</code>. Why not remove this feature if it doesn't work? Either the makers of this feature are misunderstood or they made a failed experiment with it and it should be removed to stop more people from wasting their time (reading the obscure man page, asking questions, people answering those questions etc.).</p>
","35","21169","<git>"
"55729","1","How often should you use git-gc?","<p>How often should you use git-gc?  </p>

<p>The <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-gc.html"">manual page</a> simply says:</p>

<blockquote>
  <p>Users are encouraged to run this task on a regular basis within each repository to maintain good disk space utilization and good operating performance.</p>
</blockquote>

<p>Are there some commands to get some object counts to find out whether it's time to gc?</p>
","144","57294","<git><git-gc>"
"2342131","1","How to bridge git to ClearCase?","<p>I've recently used <code>git svn</code> and enjoyed it very much. Now I'm starting a new project at a different customer. At that site the SCM of choice is ClearCase. I haven't found a baked equivalent of <code>git svn</code> for ClearCase. Is there anybody who has tried to use git locally as a front-end to ClearCase using some tricks, configuration or scripting with any measure of success? If so can you please explain the method used?</p>
","39","22610","<git><git-svn><clearcase>"
"67699","1","Clone all remote branches with Git?","<p>I have a <code>master</code> and a <code>development</code> branch, both pushed to <a href=""http://en.wikipedia.org/wiki/GitHub"">GitHub</a>. I've <code>clone</code>d, <code>pull</code>ed, and <code>fetch</code>ed, but I remain unable to get anything other than the <code>master</code> branch back.</p>

<p>I'm sure I'm missing something obvious, but I have read the manual and I'm getting no joy at all.</p>
","2718","692108","<git><git-branch><git-clone><remote-branch>"
"4811434","1","Clone only one branch","<p>I would like to know how I could clone only one branch instead of cloning the whole Git repository.</p>
","213","139275","<git><github>"
"2369426","1","How to move certain commits to another branch in git?","<p>The situation:</p>

<ul>
<li>master is at X;</li>
<li>quickfix1 is at X + 2 commits</li>
</ul>

<p>Then I started working on quickfix2, but by accident took quickfix1 as the source branch to copy, not the master. Now quickfix2 is at X + 2 commits + 2 relevant commits.</p>

<p>Now I want to have a branch with quickfix2, but without the 2 commits that belong to quickfix1.</p>

<p>I tried to create a patch from a certain revision in quickfix2, but the patch doesn't preserve the commit history. Is there a way to save my commit history, but have a branch without changes in quickfix1?</p>
","171","73474","<git><commit><patch>"
"4857310","1","How to get diff working like git-diff?","<p>I like the output formatting of git-diff.  The color options and the +/- representation of changes between lines is significantly easier to read (IMHO) than the standard GNU diff.</p>

<p>I see that I can run git diff on two files or directories outside of a git repository and it works fine.  However, it appears to be missing the ""--exclude"" option for excluding files or subdirectories from a recursive diff.  I was wondering if there's a way to get the best of both worlds? (i.e., color options and +/- format of git-diff, --exclude option of GNU diff).  </p>

<p>I've experimented with <a href=""http://colordiff.sourceforge.net/"">colordiff</a>, but I still prefer the output format of git-diff.</p>
","55","12775","<git><diff><git-diff>"
"19085807","1","Please enter a commit message to explain why this merge is necessary,especially if it merges an updated upstream into a topic branch","<p>I am using git. I did a pull from a remote repo and got an error message: ""please enter a commit message to explain why this merge is necessary,especially if it merges an updated upstream into a topic branch.""</p>

<p>I try to type a message and press enter but nothing happens. </p>

<p>How do I tell git/terminal I am done typing in my message? I am using terminal on OS X.</p>
","93","50004","<osx><git>"
"2419249","1","Git commit all files using single command","<p>How can I stage and commit all files, including newly added files, using a single command?</p>
","165","141815","<git>"
"9646167","1","Clean up a fork and restart it from the upstream","<p>I have forked a repository, then I made some changes and it looks like I've messed up everything.  </p>

<p>I'd wish to start it again from scratch, using the current upstream/master as base for my work.<br>
Should I rebase my repository or delete it at all?</p>
","98","23768","<git>"
"2432579","1","git: Your branch is Ahead by X commits","<p>How does this actually come about?</p>

<p>I am working in one repo by myself at the moment, so this is my workflow:</p>

<pre><code>1- change files
2- commit
3- repeat 1-2 until satisfied
4- push to master
</code></pre>

<p>Then when I do a <code>git status</code> it tells me that my branch is <em>ahead by X commits</em> (presumably the same number of commits that I have made). Is it because when you push the code it doesn't actually update your locally cached files (in the .git folders)? <code>git pull</code> seems to 'fix' this strange message, but I am still curious why it happens, maybe I am using git wrong?</p>

<hr>

<p><code>including what branch is printed in the message</code></p>

<p>My local branch is ahead of master</p>

<p><code>where do you push/pull the current branch</code></p>

<p>I am pushing to github and pulling to whichever computer I happen to be working on at that point in time, my local copy is always fully up to date as I am the only one working on it.</p>

<p><code>it doesn't actually check the remote repo</code></p>

<p>That is what I thought, I figured that I would make sure my understanding of it was correct.</p>

<hr>

<p><code>are you passing some extra arguments to it?</code></p>

<p>Not ones that I can see, maybe there is some funny config going on on my end?</p>

<pre><code>$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
nothing to commit (working directory clean)
</code></pre>
","245","147940","<git><git-commit>"
"2432764","1","Change the URI (URL) for a remote Git repository","<p>I have a repo (origin) on a USB key that I cloned on my hard drive (local). I moved ""origin"" to a NAS and successfully tested cloning it from here.</p>

<p>I would like to know if I can change the URI of ""origin"" in the settings of ""local"" so it will now pull from the NAS, and not from the USB key.</p>

<p>For now, I can see two solutions:</p>

<ul>
<li><p>push everything to the usb-orign, and copy it to the NAS again (implies a lot of work due to new commits to nas-origin);</p></li>
<li><p>add a new remote to ""local"" and delete the old one (I fear I'll break my history).</p></li>
</ul>
","1891","665939","<git><url><git-remote>"
"4891527","1","git:// protocol blocked by company, how can I get around that?","<p>Attempting something like <code>git clone git://github.com/ry/node.git</code> will not work, it results in:</p>

<pre><code>Initialized empty Git repository in /home/robert/node/.git/
github.com[0: 207.97.227.239]: errno=Connection timed out
fatal: unable to connect a socket (Connection timed out)
</code></pre>

<p>However, cloning over HTTP works fine. So far I've gathered that it's a problem with the protocol, but I'm trying to install cloud9 which is requiring the command </p>

<p><code>git submodule update --init --recursive</code></p>

<p>which is trying to use the git:// protocol and failing. Is there a way to change how that command will work or something?</p>
","150","53159","<git><github>"
"279169","1","Deploy a project using Git push","<p>Is it possible to deploy a website using <code>git push</code>? I have a hunch it has something to do with using <a href=""http://www.git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"">git hooks</a> to perform a <code>git reset --hard</code> on the server side, but how would I go about accomplishing this?</p>
","383","105637","<git><deployment><webserver><githooks>"
"2472254","1","When should I use git pull --rebase?","<p>I know of some people who use <code>git pull --rebase</code> by default and others who insist never to use it.  I believe I understand the difference between merging and rebasing, but I'm trying to put this in the context of <code>git pull</code>.  Is it just about not wanting to see lots of merge commit messages, or are there other issues?</p>
","373","102269","<git>"
"4931384","1","git - Server host key not cached","<p>I try to push changes from my local repo to a remote repo. When I type:</p>

<pre><code>git push origin
</code></pre>

<p>I get the following error:</p>

<pre><code>The server's host key is not cached in the registry. You
have no guarantee that the server is the computer you
think it is.
The server's rsa2 key fingerprint is:
ssh-rsa 2048 xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx
Connection abandoned.
fatal: The remote end hung up unexpectedly
</code></pre>

<p>How can I solve this? I'm using git from the command line in Windows 7.</p>

<p><strong>Edit</strong></p>

<p>When I try to do a simple ssh</p>

<pre><code>ssh user@hostname
</code></pre>

<p>I get the following error:</p>

<pre><code>Could not create directory '/c//%HOMEDRIVE%%HOMEPATH%/.ssh'.
percent_expand: unknown key %H
</code></pre>

<p>Somehow it will not create the directory, because the path is invalid. How to fix this?</p>

<p>@eckes: <strong>Edit2</strong></p>

<p>My Home is set to <code>%HOMEDRIVE%%HOMEPATH%</code> is this correct?</p>
","78","74661","<windows><git><ssh><putty><plink>"
"2519933","1","GIT clone repo across local file system in windows","<p>I am a complete Noob when it comes to GIT.  I have been just taking my first steps over the last few days.  I setup a repo on my laptop, pulled down the Trunk from an SVN project (had some issues with branches, not got them working), but all seems ok there.</p>

<p>I now want to be able to pull or push from the laptop to my main desktop.  The reason being the laptop is handy on the train as I spend 2 hours a day travelling and can get some good work done.  But my main machine at home is great for development.  So I want to be able to push / pull from the laptop to the main computer when I get home.  I thought the most simple way of doing this would be to just have the code folder shared out across the LAN and do:</p>

<pre><code>git clone file://192.168.10.51/code
</code></pre>

<p>unfortunately this doesn't seem to be working for me:</p>

<p>so I open a git bash cmd and type the above command, I am in C:\code (the shared folder for both machines) this is what I get back:</p>

<pre><code>Initialized empty Git repository in C:/code/code/.git/
fatal: 'C:/Program Files (x86)/Git/code' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>How can I share the repository between the two machines in the most simple of ways.</p>

<p>There will be other locations that will be official storage points and places where the other devs and CI server etc will pull from, this is just so that I can work on the same repo across two machines.</p>

<p>As per Sebastian's suggestion I get the following:</p>

<pre><code>C:\code&gt;git clone --no-hardlinks file://192.168.10.51/code
Initialized empty Git repository in C:/code/code/.git/
fatal: 'C:/Program Files (x86)/Git/code' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>*<em>EDIT - ANSWER *</em></p>

<p>Thanks to all that helped.  I tried the mapping a drive and that worked so thought I would go back and retry without mapping.  The final result was:</p>

<pre><code>git clone file://\\\\192.168.0.51\code
</code></pre>

<p>This worked great.</p>

<p>Thanks</p>
","173","151865","<windows><git><git-clone>"
"12132272","1","How can you undo the last git add?","<p>Is it possible to unstage the last staged (not committed) change in <strong>git</strong>? Suppose there were a lot of files in the current branch, some staged, some not. At some point, some foolish programmer accidentally executed:</p>

<pre><code>git add -- .
</code></pre>

<p>...instead of:</p>

<pre><code>git checkout -- .
</code></pre>

<p>Can this programmer now unstage his last changes with some magical <strong>git</strong> command? Or should he have committed before experimenting in the first place?</p>
","94","77927","<git>"
"350651","1","How do I keep an svn:external up to date using git-svn?","<p>Treating my repository as a SVN repo, I get:</p>

<pre><code>svn co http://myrepo/foo/trunk foo
...
foo/
  bar/
  baz/ -&gt; http://myrepo/baz/trunk
</code></pre>

<p>Treating it as a Git repo, I get:</p>

<pre><code>git svn clone http://myrepo/foo --trunk=trunk --branches=branches --tags=tags
...
foo/
  bar/
</code></pre>

<p>I can clone baz to my local machine elsewhere and add a symlink, but that's just a hack.  Is there a way to have <code>git svn rebase</code> automatically pull in those changes when it updates everything else, just like <code>svn up</code> does?</p>
","47","22381","<svn><git><version-control><dvcs>"
"370030","1","Why git can't remember my passphrase under Windows","<p>I have just start using git and i can't get it to remember my passphrase I'm using cmd.exe elevated and my git host is github and i have create a ssh key like that guide on github</p>

<p>but i still get  </p>

<pre><code>*\subnus.mvc&gt;git push origin master
Enter passphrase for key '/c/Users/Subnus/.ssh/id_rsa':
</code></pre>
","90","41540","<windows><git><ssh><cmd>"
"4994772","1","ways to improve git status performance","<p>I have a repo of 10 GB on a linux machine which is on NFS. The first time git status takes 36 minutes and subsequent git status takes 8 minutes. Seems GIT depends on the OS for caching files. Only the first git commands like commit,status that involves pack/repack the whole repo takes a very long time for a huge repo. Am not sure if you have used git status on such a large repo, but has anyone come across this issue?</p>

<p>I have tried ""git gc"" ""git clean"" git repack"" but the time taken is still/almost the same.
Will sub-modules or any other concepts like breaking the repo into smaller ones help? If so which is the best for splitting a larger repo. Is there any other way to improve time taken for git commands on a large repo?</p>
","40","20948","<performance><git><nfs>"
"17096311","1","Why do I need to explicitly push a new branch?","<p>I am new in <code>git</code> and I am practicing. I created a local branch but I saw that when I did <code>git push</code> my branch was not uploaded to the repository. I had to actually do: <code>git push -u origin -all</code>.<br>
Why is this? Isn't a branch a new change to be pushed by default? Why do I need to run the second command?</p>
","66","45168","<git><version-control>"
"436362","1","Shorthand for diff of git commit with its parent?","<p>Aside from writing an alias or script, is there a shorter command for getting the diff for a particular commit?</p>

<pre><code>git diff 15dc8^..15dc8
</code></pre>

<p>If you only give the single commit id <code>git diff 15dc8</code>, it diffs that commit against HEAD.</p>
","323","92907","<git><git-diff>"
"19542301","1","Delete all tags from a Git repository","<p>I want to delete all the tags from a Git repository. How can I do that?</p>

<p>Using <code>git tag -d tagname</code> delete the tag <code>tagname</code> locally, and using <code>git push --tags</code> I update the tags on the git provider.</p>

<p>I tried:</p>

<pre><code>git tag -d *
</code></pre>

<p>But I see that <code>*</code> means the files from the current directory.</p>

<pre><code>$ git tag -d *
error: tag 'file1' not found.
error: tag 'file2' not found.
...
</code></pre>

<p>Consider I have a lot of tags, and I want to delete them, all.</p>
","54","7539","<git>"
"460502","1","Is using a central repository going against GIT's purpose?","<p>If you are in a <em>corporate</em> setting with many people working on a particular application, is it going against the grain of a <a href=""http://en.wikipedia.org/wiki/Distributed_revision_control"">distributed version control</a> system to have an official central repository?</p>

<p>Sometimes I struggle to understand the concept of a distributed version control system such as <a href=""http://git-scm.com/"">GIT</a> in a corporate environment.  If you didn't have a central repository, wouldn't it be a PITA to figure out who had the latest updated version to pull from, who has feature x or bug fix y that everyone needs to grab, etc, etc.</p>

<p>Is it defeating the purpose of <a href=""http://git-scm.com/"">GIT</a> to use it in a similar fashion to <a href=""http://subversion.tigris.org/"">SVN</a>, with a central repository that everyone pushes/pulls from?  Every time I think about doing that I feel like I'm missing the point of everything.</p>

<p>Could someone enlighten me?</p>
","33","5297","<svn><git><dvcs>"
"507343","1","Using Git with Visual Studio","<p>As a long-time <code>Visual SourceSafe</code> user (and hater) I was discussing switching to <code>SVN</code> with a colleague; he suggested using Git instead. Since, apparently, it can be used as peer-to-peer without a central server (we just have a 3-developer team). </p>

<p>I have not been able to find anything about tools that integrate Git with Visual Studio, though - does such a thing exist? </p>

<p>What technologies are available for using Git with Visual Studio? And what do I need to know about how they differ before I begin?</p>
","1245","409597","<visual-studio><git>"
"5113425","1","How to make Git log show all of today's commits?","<p>I want to be able to see all of the commits I made today using <code>git log</code>. I came up with <code>git log --after=""yesterday""</code><br>
However, that seems a little awkward to me, is there a simpler command to achieve the same effect?</p>
","51","7226","<git>"
"5136381","1","How do I add a remote Git repository to an Ubuntu Server?","<p>I have created a Git repository on my Desktop machine (Windows 7) with:</p>

<pre><code>git init
git add &lt;all my files&gt;
git commit -m ""added my files""
</code></pre>

<p>Now I have installed a new Ubuntu Server 10.10 on a machine on my LAN and installed OpenSSH. My home directory is <code>/home/jonas</code> and I created a directory <code>~/code/</code> to contain my projects. I can log in to the Ubuntu Server from Windows 7 with Putty.</p>

<p>I installed Git on the server with <code>sudo apt-get install git</code></p>

<h2>Adding a remote repository</h2>

<p>Now I want to add my Git repository on my Desktop to the Server. I tried to follow the instructions from <em>Pragmatic Version Control Using Git</em>.</p>

<p>From my Desktop I run these commands:</p>

<pre><code>git remote add origin jonas@192.168.1.10/home/jonas/code/myproject.git
git push origin master
</code></pre>

<p>But I got this error message:</p>

<pre><code>fatal: 'jonas@192.168.1.180/home/jonas/code/myproject.git' does not appear to be
 a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p><strong>What is the problem? How do I create the remote repository?</strong></p>

<hr>

<p>As PerfectlyNormal suggested, I added a <code>:</code> in the address. Now it worked better, and I had to type my password to the server, but then I got a similar error message:</p>

<pre><code>fatal: '/home/jonas/code/myproject.git' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p><strong>Do I have to initialize a Git repository on the server before I can  <code>git push</code> to it?</strong></p>
","32","39645","<git><ssh><repository><git-remote><ubuntu-server>"
"16862933","1","How to resolve git's ""not something we can merge"" error","<p>I just encountered a problem when merging a branch into master in git. First, I got the branch name by running <code>git ls-remote</code>. Let's call that branch ""branch-name"". I then ran <code>git merge branch-name</code> command and got the following result:</p>

<pre><code>fatal: branch-name - not something we can merge
</code></pre>

<p>How do I resolve this error?</p>
","84","46939","<git><branching-and-merging>"
"5159185","1","Create a git patch from the changes in the current working directory","<p>Say I have uncommitted changes in my working directory. How can I make a patch from those without having to create a commit?</p>
","280","101597","<git><git-patch>"
"14759748","1","Stashing only staged changes in git - is it possible?","<p>Our company recently moved to git - the way our process works is we have several bugs we work on at the same time, and these go for review once we've submitted .patch files</p>

<p>Is there a way I can stash just my staged changes? The scenario I'm having issues with is when I've worked on several bugs at a given time, and have several unstaged changes. I'd like to be able to stage these files individually, create my .patch files, and stash them away until the code is approved. This way, when it's approved I can stash my entire (current) session, pop that bug and push the code.</p>

<p>Am I going about this the wrong way? Am I misunderstanding how git can work in other ways to simplify my process?</p>
","55","12302","<git><git-stash>"
"588414","1","Rolling back a remote Git repository","<p>I have a remote Git repository, and I need to roll back the last <code>n</code> commits into cold oblivion.</p>
","82","61350","<git>"
"5183051","1","How do you delete a remote git branch ""properly"", a.k.a. updating the remote branch list for all users?","<p>I'm trying to delete a remote git branch, however the process isn't ""fully"" deleting the branch as I'd expect.</p>

<p>Let's say for example I'm deleting a branch called <code>mybranch</code>. To do this, I run the following command,</p>

<pre><code>git push origin :mybranch
</code></pre>

<p>This removes the branch as expected, and if I do <code>git branch -a</code> it no longer appears on the list locally or remotely.</p>

<p>The problem I'm having is if I go another person's machine who did a <code>git pull</code> while the branch existed, and they perform a <code>git branch -a</code>, it's still in their list as a remote branch.</p>

<p>We've tried multiple commands, <code>pull</code>, <code>gc</code>, <code>prune</code>, but nothing is updating this list and removing the remote branch.</p>

<p><strong>Is there a command to sync (what I can only assume is) the local cache of the remote branches list, and remove any remote branches that no longer exist?</strong></p>
","33","5669","<git><branch>"
"616556","1","How do you squash commits into one patch with git format-patch?","<p>I've got eight commits on a branch that I'd like to email to some people who aren't git enlightened, yet.  So far, everything I do either gives me 8 patch files, or starts giving me patch files for every commit in the branch's history, since the beginning of time.  I used git rebase --interactive to squash the commits, but now everything I try gives me zillions of patches from the beginning of time.  What am I doing wrong?</p>

<pre class=""lang-sh prettyprint-override""><code>git format-patch master HEAD # yields zillions of patches, even though there's 
                             # only one commit since master
</code></pre>
","116","58814","<git><patch><squash><git-squash>"
"2756747","1","Mirror a git repository by pulling?","<p>I am wondering if there is an easy way, ie like a simple cron job, to regularly <em>pull</em> from a remote git repository to a local read only mirror for backup purposes?</p>

<p>Ideally it would pull all branches and tags, but the master/trunk/head would be sufficient.</p>

<p>I just need a way to make sure that if the master git server dies, we have a backup location that we could manually fail over to.</p>
","35","17226","<git><mirror>"
"9929457","1","How do I exit the results of 'git diff' in Git Bash on windows?","<p>I'm using <a href=""https://git-for-windows.github.io/"">Git Bash</a> on Windows 7. When I run <code>git diff</code>, I see this: </p>

<p><img src=""http://i.stack.imgur.com/VqmB9.jpg"" alt=""""></p>

<p>However, I'm unable to get back to a regular prompt. Pressing <kbd>Ctrl</kbd>+<kbd>C</kbd> seems to work, but as soon as I start typing a command, it's covered up with <code>(END)</code> as in that image.</p>
","239","45649","<git><diff><msysgit>"
"665600","1","How can I get Emacs to revert all unchanged buffers when switching branches in git?","<p>Often, when I switch branches in git, if the files are open in emacs, then emacs asks if I want to revert them (as it thinks they've changed on disk) even though the contents are identical.</p>

<p>Firstly I'd like to find a way for emacs to not ask me about it at all if the contents on disk are identical to those in the buffer.</p>

<p>Secondly I'd like a command that reverted (without query) all my open buffers that have no unsaved changes, and queried me about those that do have unsaved changes.</p>

<p>Alternatively, I'd be open to suggestions about other solutions, ways of working, etc I could try.  I'm fairly happy writing emacs-lisp if people can give me pointers on where to start.</p>

<p>PS I'm using Aquamacs on OSX if that matters.</p>

<p>Edit:</p>

<p>Well, I've found the revbuffs package to be pretty much what I need.  Certainly enough to stop me wanting to try and write anything new myself.  (I mapped revbuffs to Cmd-R which works quite nicely. Kind of similar to Cmd-R in other Mac apps).</p>

<p>Global-auto-revert mode would have been a perfectly fine solution, and I wish I could choose two answers.  I prefer revbuffs simply because of a, possibly irrational, feeling of wanting to be in control of what happens.</p>

<p>I'd kind of guessed that if I accessed git from within emacs, then it could probably be handled easier, but I currently prefer accessing git through the commandline.  (I haven't quite been using emacs long enough to make it my operating system).  I will investigate magit a little more thoroughly though.</p>

<p>Edit2:</p>

<p>I've been using magit for a year now and can highly recommend it for dealing with git from within emacs.  However I still use revbuffs whenever I do a rebase outside of emacs.</p>
","48","4439","<git><emacs><elisp><aquamacs>"
"16873848","1","git: How do I get rid of ""warning: CRLF will be replaced by LF"" without disabling safecrlf?","<p>I'm new to git, and I've read a lot about line endings and
how git treats them. I'm on Windows by the way. I have made
a <code>.gitattributes</code> file and set for example *.txt to text.
When I commit a .txt file, I get the warning:</p>

<blockquote>
  <p>warning: CRLF will be replaced by LF in whatever.txt</p>
</blockquote>

<p>But I know that. I don't need that warning. Replacing line
endings in text files is what I want. </p>

<p>Now, setting <code>safecrlf</code> to false makes the warning
disappear, but the manual for <code>safecrlf</code> reads:</p>

<blockquote>
  <p>If true, makes git check if converting CRLF is reversible
  when end-of-line conversion is active. Git will verify if
  a command modifies a file in the work tree either directly
  or indirectly. For example, committing a file followed by
  checking out the same file should yield the original file
  in the work tree. If this is not the case for the current
  setting of core.autocrlf, git will reject the file.</p>
</blockquote>

<p>From that, <code>safecrlf</code> seems like a good idea to have.
However, I don't understand why setting <code>safecrlf</code> to true
gives me warnings about my text files; it seems to me that
those are different issues -- the warning on text files and
the checking if reversible. Indeed, git does not reject my
file.</p>

<p>Can I get rid of the warnings for text files, and still have
<code>safecrlf</code> set? Or am I misunderstanding something?</p>
","34","20569","<git>"
"14821358","1","Git mergetool with Meld on Windows","<p>In Linux, my favorite merge tool is Meld, and I've had no problems using or configuring it to work with Git.  However, in Windows it has been a different story.</p>

<p>First, I installed Meld from a bundle I found here: <a href=""https://code.google.com/p/meld-installer/"">https://code.google.com/p/meld-installer/</a></p>

<p>Then, I configured my .gitconfig like so to support Meld as the default mergetool</p>

<pre><code>[merge]                                                      
    tool = meld                                                                         

[mergetool ""meld""]                                           
    path = C:\\Program Files (x86)\\Meld\\meld\\meld.exe
    keepBackup = false                                   
    trustExitCode = false
</code></pre>

<p>So, when I have a conflict, I do git difftool and Meld does in fact open.  However, the paths to the files that Git writes to pass to the diff tool is incorrect.  For example, even though Git generates the BASE, LOCAL, and REMOTE files in the repository directory (the location I called git mergetool from), Meld tries to open each of those files in the directory of the executable.  </p>

<p>Instead of opening C:\repo\roses.txt.LOCAL.2760.txt, Meld tries to open C:\Program Files (x86)\Meld\meld\roses.txt.LOCAL.2760.txt.</p>

<p>Has anyone ran into this before or know how to configure Git / Meld to work correctly in Windows?</p>
","42","20742","<git><meld>"
"14821583","1","Pull request without forking?","<p>Here are steps of code contribution from the topic ""<a href=""http://stackoverflow.com/questions/4384776/how-do-i-contribute-to-others-code-in-github"">How do I contribute to other&#39;s code in GitHub?</a>""</p>

<ol>
<li>Fork the project</li>
<li>Make one or more well commented and clean commits to the repository. You can make a new branch here if you are modifying more than one part or feature.</li>
<li>Perform a pull request in github's web interface.</li>
</ol>

<p>Is it possible to make a pull request without forking a repo?</p>

<p>It's quite sad to see more than 20 repos in my account which were forked for some pull requests. They have no activity then and zero stars / followers. Looks like I'm just copying somebody's code for a black day.</p>
","37","7432","<git><github><fork><repository>"
"14843696","1","Checkout multiple git repos into same Jenkins workspace","<p>Using Jenkins 1.501 and Jenkins Git plugin 1.1.26</p>

<p>I have 3 different git repos each with multiple projects.</p>

<p>Now I need to checkout all projects from the 3 git repos into the same workspace on a Jenkins slave. I have defined each git repo in: <strong>Source code Management: Multiple SCMs</strong>. But each time a repo is checked out the previous repo (and its associated projects) is deleted.</p>

<p>I have read this:</p>

<p><a href=""http://jenkins.361315.n4.nabble.com/multiple-git-repos-in-one-job-td4633300.html"">http://jenkins.361315.n4.nabble.com/multiple-git-repos-in-one-job-td4633300.html</a></p>

<p>but its does not really help. I have tried to specify the same folder under <strong>Local subdirectory for repo (optional)</strong> for all repos but it gives the same result.</p>

<p>If this is simply impossible using Jenkins I guess some pre-build step/scripting could be used to move the projects into the right location. Its not an option to modify the build configuration of the projects.</p>
","51","36391","<git><jenkins>"
"19730565","1","How to remove files from git staging area?","<p>I made changes to some of my files in my local repo, and then I did <code>git add -A</code> which I think added too many files to the staging area. How can I delete all the files from the staging area?</p>

<p>After I do that, I'll just manually so <code>git add ""filename""</code>.</p>
","135","99650","<git>"
"2839253","1","Git history - find lost line by keyword","<p>I had somewhere in my Git repository a line containing word ""Foo"" a couple hundreds commits before.</p>

<p>If there is any way to find its revision number where it was the last time without buying FishEye?</p>
","36","4552","<git><version-control>"
"813822","1","How to make git merge handle uncommitted changes to my working tree?","<p>A co-worker and I are both working on the master branch at the moment.  I have some code in my working tree that I don't want to commit (debugging statements and the like).  Now if he commits changes to some of those same files, I can't merge them:</p>

<pre><code>$ git merge origin/master
Updating 1b8c5c6..eb44c23
error: Entry 'blah.java' not uptodate. Cannot merge.
</code></pre>

<p>Coming from a subversion background, I'm used to having my working tree automatically merged when I pull changes from the repository and if there are conflicts, I resolve them manually.</p>

<p>The quickest way I have found to do this in git is:</p>

<pre><code>$ git stash
$ git merge origin/master
$ git stash pop
</code></pre>

<p>Essentially, removing my uncommitted changes, doing the merge and then re-applying the changes.  How can I tell merge to automatically merge my working tree with the changes I'm trying to pull in?</p>
","39","22565","<git><git-merge><git-stash>"
"2866872","1","How can I upload fresh code at github?","<p>I have a directory with all my coding projects. </p>

<p>I want to upload (correct terminology?) it to <a href=""http://github.com"">GitHub</a> using the command line.</p>

<p>I have already looked at <a href=""http://stackoverflow.com/questions/315911/"">Old question</a>.</p>

<p>I know how to clone an existing project, and how to push it after making any changes.</p>

<p>But in this case, I want to make a new project and add files to that. </p>

<p>How can I accomplish this using the command line?</p>
","86","111103","<git><github>"
"14893399","1","Rebase feature branch onto another feature branch","<p>I have two (private) feature branches that I'm working on.</p>

<pre><code>a -- b -- c                  &lt;-- Master
     \     \
      \     d -- e           &lt;-- Branch1
       \
        f -- g               &lt;-- Branch2
</code></pre>

<p>After working on these branches a little while I've discovered that I need the changes in Branch2 in Branch1. I'd like to rebase the changes in Branch2 onto Branch1. I'd like to end up with the following:</p>

<pre><code>a -- b -- c                  &lt;-- Master
           \
            d -- e -- f -- g &lt;-- Branch1
</code></pre>

<p>I'm pretty sure I need to rebase the second branch <em>onto</em> the first, but I'm not entirely sure about the correct syntax and which branch I should have checked out.</p>

<p>Will this command produce the desired result?</p>

<pre><code>(Branch1)$ git rebase --onto Branch1 Branch2
</code></pre>
","81","34258","<git><git-rebase><feature-branch>"
"5343068","1","Is there a way to skip password typing when using https:// on GitHub?","<p>I recently switched to synchronising my repositories to https:// on GitHub (due to firewall issues) and it asks for a password every time. It used to be that I had an <a href=""http://en.wikipedia.org/wiki/Secure_Shell"">SSH</a> certificate, and it was enough. Is there a way to bypass the password in my case (using http/https)?</p>
","1034","442687","<git><authentication><github>"
"2928584","1","How to grep (search) committed code in the git history?","<p>I have deleted a file or some code in a file sometime in the past. Can I grep in the content (not in the commit messages)?</p>

<p>A very poor solution is to grep the log:</p>

<pre><code>git log -p | grep &lt;pattern&gt;
</code></pre>

<p>However this doesn't return the commit hash straight away. I played around with <code>git grep</code> to no avail.</p>
","748","163483","<git><grep><diff>"
"2961240","1","Get back the changes after accidental checkout?","<p>The following was the status of my repo.</p>

<pre><code>[~/rails_apps/jekyll_apps/nepalonrails (design)⚡] ➔ gst
# On branch design
# Changed but not updated:
#   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   _layouts/default.html
#   deleted:    _site/blog/2010/04/07/welcome-to-niraj-blog/index.html
#   deleted:    _site/blog/2010/04/08/the-code-syntax-highlight/index.html
#   deleted:    _site/blog/2010/05/01/showing-demo-to-kalyan/index.html
#   deleted:    _site/config.ru
#   deleted:    _site/index.html
#   deleted:    _site/static/css/style.css
#   deleted:    _site/static/css/syntax.css
#   modified:   static/css/style.css
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Accedently, I did <code>git checkout -f</code> and now the changes are gone which I wasnt supposed to do.</p>

<pre><code>[~/rails_apps/jekyll_apps/nepalonrails (design)⚡] ➔ git co -f
[~/rails_apps/jekyll_apps/nepalonrails (design)] ➔ gst
# On branch design
nothing to commit (working directory clean)
[~/rails_apps/jekyll_apps/nepalonrails (design)] ➔ 
</code></pre>

<p>Can I get back the changes back?</p>
","31","13183","<git><git-checkout>"
"931882","1","How to apply a git patch from one repository to another?","<p>I have two repositories, one is the main repo for a library, and the other is a project using that library.</p>

<p>If I make a fix to the in the subservient project, I'd like an easy way to apply that patch back upstream.</p>

<p>The file's location is different in each repository.</p>

<ul>
<li>Main repo: <strong><em><code>www.playdar.org/static/playdar.js</code></em></strong></li>
<li>Project: <strong><em><code>playlick.com/lib/playdar.js</code></em></strong></li>
</ul>

<p>I tried using <code>git format-patch -- lib/playdar.js</code> on the playlick project, and then <code>git am</code> on the main playdar repo, but the differing file locations in the patch file raised an error.</p>

<p>Is there an easy way to apply the patch from a given commit on a given file to another arbitrary file elsewhere?</p>

<p>For bonus points, what if the file you want to apply the patch to isn't in a git repository?</p>
","35","21076","<git><patch><git-submodules><git-patch>"
"12501324","1","How to use gitignore command in git","<p>I'm working first time on git. I have pushed my branch on github and it pushed all the library and documents into the github. Now what can I do and how can I use gitignore command to avoid the same  mistake again.</p>
","36","61502","<git><github>"
"14947789","1","github clone from pull request?","<p>I would like to clone a repo from github. Problem is I don't want the main branch, I want the version in <a href=""https://github.com/dweldon/frappe/pull/2"">this unapproved pull request</a>.</p>

<p>Is it possible for me to clone the pull request version instead of the main repo?</p>
","39","12910","<git><github><pull-request>"
"17413493","1","Create a submodule repository from a folder and keep its git commit history","<p>I have a web application that explores other web applications in a particular way. It contains some web demos in a <code>demos</code> folder and one of the demo should now have it's own repository. I would like to create a separate repository for this demo application and make it a <del>subpackage</del> <a href=""http://git-scm.com/book/en/Git-Tools-Submodules"">submodule</a> from main repository without loosing its commit history.</p>

<p><em>Is it possible to keep the commit history from the files in a repository's folder and create a repository from it and use it as a <a href=""http://git-scm.com/book/en/Git-Tools-Submodules"">submodule</a> instead?</em></p>
","37","10824","<git><git-submodules><revision-history>"
"933329","1","Git undo changes in some files","<p>While coding I added print statements into some files to keep track of what was going on.</p>

<p>When I am done, is it possible to revert changes in some files, but commit the file I actually worked on? </p>

<p>Say I added print in file <code>A</code>, but I modified file <code>B</code>. <code>B</code> is what I want to commit and <code>A</code>, I want to be set back to its old state.</p>
","131","104059","<git><version-control>"
"1042400","1","git releases management","<p>I couldn't find anything what is the ""right"" approach to manage the releases using git. Say, I have master, release-1, release-2 and release-3 branches. Release 1 is already released and I do only bugfixing and released versions tagging on it. Release 2 is going to be released soon and I develop mostly on this branch while on 3 I develop things which will be needed in the further future.</p>

<ol>
<li><p>When I add some feature on release-2 and it should go to 3 as well, but not to 1, should I:</p>

<ul>
<li>merge release-2 to master and cherry-pick feature related commit to release-3?</li>
<li>cherry-pick feature related commit to master and than cherry-pick it to release-3?</li>
<li>sth else?</li>
</ul></li>
<li><p>When I need to changes sth in all the versions, should I do it on master and cherry-pick it to all the branches?</p></li>
<li><p>Should I keep master up to date with the newest(release-3 branch) or rather developer on release-3 and merge to the master just before I will need release-4 branch? </p></li>
<li><p>When I fix sth on release-1 or release-2, should I merge or cherry-pick it to master or rather?</p></li>
</ol>

<p>I'm not quite sure when should I cherry-pick, when should I merge and if the flow of the code between the branches it right.</p>
","32","15923","<git><release>"
"1042280","1","Is there a Subversion user's guide to Git?","<p>I am a new user in Git world. I used to use Subversion (using TortoiseSVN) and it is pretty easy. I would like to try Git but i got confused by the terms. Is there any documentation/guides that can explain me how to use Git?</p>

<p>For example, in Subversion I use checkout; in Git which commands should I use? Any good book about Git that I could use?</p>
","44","9254","<svn><git>"
"1043388","1","Record file copy operation with Git","<p>When I move a file in git using git-mv the status shows that the file has been renamed and even if I alter some portions it still considers to be almost the same thing (which is good because it lets me follow the history of it). </p>

<p>When I copy a file the original file has some history I'd like to associate with the new copy.</p>

<p>I have tried moving the file then trying to re-checkout in the original location - once moved git won't let me checkout the original location.</p>

<p>I have tried doing a filesystem copy and then adding the file - git lists it as a new file.</p>

<p>Is there any way to make git record a file copy operation in a similar way to how it records a file rename/move where the history can be traced back to the original file?</p>
","97","31330","<git><file><copy>"
"1044446","1","How to get git-status of a single subfolder?","<p>When I do git status in a subfolder of my repository it includes the status of parent folders also.</p>

<p>Is there a way to constrain git-status to just a particular folder?</p>
","45","10399","<git>"
"38301318","1","Channel is not opened Errors in automatic merge on Teamcity (git)","<p>I am using <strong>TeamCity</strong> on ubuntu (<code>TeamCity Professional 9.1.7 (build 37573)</code>). And having some problems with automatic merges lately (git).
I haven't changed anything in the configuration from when it used to work.
I tried to remove the work directory. it only helped for a couple of merges.</p>

<p><strong>Symptoms:</strong>
The build log looks clean, and I am getting this on the build overview:</p>

<pre><code>Failed to merge sources in VCS root foo. Merge error 'git fetch'     command failed.
stderr: git@bitbucket.org:foo/foo.git: channel is not opened.
exit code: 1.
</code></pre>

<p><strong>Although</strong>, in the agent running this i am getting a totally different error in <code>teamcity-vcs.log</code>:</p>

<pre><code>[2016-03-30 15:14:31,722]   INFO -      jetbrains.buildServer.VCS - [/home/ubuntu/BuildAgent/work/7676127c0a691f42]: /usr/bin/git show-ref refs/remotes/origin/foo 
[2016-03-30 15:14:31,775]   INFO -      jetbrains.buildServer.VCS - [/home/ubuntu/BuildAgent/work/7676127c0a691f42]: /usr/bin/git log -n1 --pretty=format:%H%x20%s 193f46d88205c5e419a8a7458e742ce9b598cca8 
-- 
[2016-03-30 15:14:31,797]   WARN -      jetbrains.buildServer.VCS - '/usr/bin/git log -n1 --pretty=format:%H%x20%s 193f46d88205c5e419a8a7458e742ce9b598cca8 --' command failed.
stderr: fatal: bad object 193f46d88205c5e419a8a7458e742ce9b598cca8 
[2016-03-30 15:14:31,798]   INFO -      jetbrains.buildServer.VCS - [/home/ubuntu/BuildAgent/work/7676127c0a691f42]: /usr/bin/git fetch --progress origin +refs/heads/foo:refs/remotes/origin/foo 
[2016-03-30 15:14:35,832]   WARN -      jetbrains.buildServer.VCS - Error output produced by: /usr/bin/git fetch --progress origin +refs/heads/foo:refs/remotes/origin/foo 
[2016-03-30 15:14:35,832]   WARN -      jetbrains.buildServer.VCS - remote: Counting objects: 2, done.ESC[K
remote: Compressing objects:  50% (1/2)   ESC[K
remote: Compressing objects: 100% (2/2)   ESC[K
remote: Compressing objects: 100% (2/2), done.ESC[K
remote: Total 2 (delta 1), reused 0 (delta 0)ESC[K
From bitbucket.org:bar/bar
   62ba378..193f46d  foo  -&gt; origin/foo 
</code></pre>

<p>As if the log command failed..</p>

<p>Thanks.</p>

<hr>

<p>Update: I got an update that there is anecdotal evidence that this is due to changes specifically in BitBucket's git over SSH servers.</p>
","35","1331","<git><teamcity><bitbucket><teamcity-9.0>"
"1046276","1","What does the message ""rewrite ... (90%)"" after a git commit mean?","<p>When git does a commit it rewrites binary files with something similar to <code>rewrite foobar.bin (76%)</code>. What is that %? Is it percent changed or percent retained from the older file. I know that git uses a binary delta for files, but I just don't know how much of a rewrite the % represents and it doesn't seem to be in the help page for <code>git help commit</code>.</p>

<p>Thanks!</p>
","59","9876","<git>"
"7759193","1","git diff renamed file","<p>I have a file <code>a.txt</code>.</p>

<pre><code>cat a.txt
&gt; hello
</code></pre>

<p>The contents of <code>a.txt</code> is ""hello"".</p>

<p>I make a commit.</p>

<pre><code>git add a.txt
git commit -m ""first commit""
</code></pre>

<p>I then move <code>a.txt</code> into a <code>test</code> dir.</p>

<pre><code>mkdir test
mv a.txt test
</code></pre>

<p>I then make my second commit.</p>

<pre><code>git add -A
git commit -m ""second commit""
</code></pre>

<p>Finally, I edit <code>a.txt</code> to say ""goodbye"" instead.</p>

<pre><code>cat a.txt
&gt; goodbye
</code></pre>

<p>I make my last commit.</p>

<pre><code>git add a.txt
git commit -m ""final commit""
</code></pre>

<p>Now here is my question:</p>

<p>How do I diff the contents of <code>a.txt</code> between my last commit and my first commit?  </p>

<p>I've tried:
 <code>git diff HEAD^^..HEAD -M a.txt</code>, but that didn't work.  <code>git log --follow a.txt</code> properly detects the rename, but I can't find an equivalent for <code>git diff</code>.  Is there one?</p>
","57","11716","<git><diff><rename>"
"14970728","1","Homebrew’s `git` not using completion","<p>When using OSX’s git, after I modify a file I can simply do <code>git commit &lt;tab&gt;</code>, and that’ll auto complete the file’s name to the one that was modified. However, if I install a newer version of git from homebrew and I use it, that feature no longer works (meaning I press <code>&lt;tab&gt;</code> and it just “asks” me what file I want to do it on, even including the ones that have no changes).</p>

<p>Can anyone shed some light as to why, and how to solve that? I’d prefer using homebrew’s git, since it’s more up-to-date.</p>

<p>My shell is zsh, and Neither installing <code>bash-completion</code> or <code>zsh-completions</code> worked (even after following homebrew’s post-install instructions).</p>

<p>Also, after installing git with homebrew it says</p>

<pre><code>Bash completion has been installed to: /usr/local/etc/bash_completion.d
zsh completion has been installed to: /usr/local/share/zsh/site-functions
</code></pre>

<p>So shouldn’t I be able to use one of those?</p>
","59","20129","<osx><git><autocomplete><zsh>"
"1115854","1","How to resolve ""Error: bad index – Fatal: index file corrupt"" when using Git","<p>After <code>git init</code>, I added and committed a few files, made some changes, added and committed.  Set up the git daemon (running under Cygwin on WinXP) and cloned the repository once.
Now, I get this error with the cloned repository:</p>

<pre><code>$ git status
error: bad index file sha1 signature
fatal: index file corrupt
</code></pre>

<p>Is there any way to fix this, other than getting a new copy of the repository?</p>
","311","80263","<git><corruption>"
"1117725","1","How to make vi redraw screen?","<p>When I use </p>

<pre><code>git commit --amend
</code></pre>

<p>It will enter into a vi window to let me input comments for commit, the problem is the vi windows will show some dirty characters from former shell background. So I wonder how can I let vi to reload or redraw the screen to make the screen normal.</p>

<p>So far, I try reset terminal and Ctrl+L, it works, but I wonder is there best answer for such situation?</p>
","59","25376","<git><vim>"
"17470691","1","Remove old remote branches from Git","<p>When I use bash autocompletion in Git, it keeps showing me branches of old remotes that I don't have anymore. When I do a <code>git branch -la</code> it shows those old remotes and branches while a <code>git branch -l</code> won't. A <code>ls .git/refs/remotes/</code> also shows them. However, they are not present in my <em>.git/config</em> and neither are they shown when I run <code>git remote show</code>.</p>

<p>So how do I get rid of them because my autocomplete list is too long right now. </p>

<p>I have already tried:</p>

<pre><code>git reflog expire --expire=now --all
git gc --prune=now
rm .git/refs/remotes/theoldremote
git remote prune theoldremote
</code></pre>

<p>I'm also aware of the fact that I can just re-clone the repo but that's just cheating ;-)</p>
","34","11068","<git>"
"19892232","1","How to Connect Visual Studio 2012 with git (github)?","<p>Microsoft launched Visual studio 2012 which can be integrated with git (and github), I'm using the following reference <a href=""http://tfs.visualstudio.com/en-us/learn/create-code-project-vs-git.aspx"">linking visual studio 2012 with git</a>, but am not getting any option to commit my code. Do i need to install/use Github for windows? Or is is possible to integrate with github directly from visual studio?</p>

<p><img src=""http://i.stack.imgur.com/U0mCy.jpg"" alt=""This is the solution explorer not showing the Git context menu items.""></p>
","31","25601","<c#><angularjs><git><github><visual-studio-2013>"
"22327758","1","Should bower_components be gitignored?","<p>Would it be good practice to keep only the <code>bower.json</code> file and gitignore the whole <code>bower_components</code> directory?</p>
","104","24818","<git><gitignore><bower>"
"3069979","1","what's the Git equivalent of TFS commands shelve/unshelve? cherry-pick?","<p>I found that the shelve/unshelve commands in TFS are very handy and very simple to use. What's the equivalent in Git ?</p>

<p>here's the scenario in TFS :</p>

<ul>
<li>I made changes in the trunk</li>
<li>I shelve : the change set is saved on the server (with a label) and I get the source back before the changes</li>
<li>I work in the trunk</li>
<li>Someone can unshelve : get the change set in his workspace</li>
</ul>

<p>I know that there's a command call cherry-pick but i""m not sure of the workflow and if it fits the need.</p>
","39","12623","<git><tfs>"
"15027873","1","Untrack and stop tracking files in git","<p>I have a deep subfolder called <code>objects</code> with files called <code>*.object</code> which I don't want tracked by git (Windows).</p>

<p>In .gitignore I have tried various combinations (e.g. <code>**/objects/*</code> or <code>**/objects/*</code> etc.) to no avail: each time, when I do <code>git status</code> I see:</p>

<pre><code># Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       foo/src/objects/a.object
#       foo/src/objects/b.object
</code></pre>

<p>It is only when I add <code>*.object</code> to .gitignore that the files disappear from the untracked files list. What's wrong with my wild cards?</p>

<p>Also, when is <code>git update-index</code> required and when should I do <code>git rm --cached myfile</code>?</p>

<p>Is there a wildcard feature for rm like <code>git rm --cached **/foo/*.zip</code>?</p>

<p>UPDATE: Similarly, adding the line <code>.gitignore</code> to <code>.gitignore</code> (not always desirable but still) has no effect. Is this weirdness because the files may have been tracked in the past?</p>
","35","41258","<git>"
"1228437","1","Are DVCS like Git inappropriate for teams using continuous integration?","<p>My team's development processes are based on <a href=""http://martinfowler.com/articles/continuousIntegration.html"">continuous integration</a>. The only branches we create are maintenance branches when we release, but otherwise developers are expected to commit regularly (daily if not more often) to trunk, so that everyone's work is always integrated, continually tested, and all that good stuff.</p>

<p>My understanding of <a href=""http://en.wikipedia.org/wiki/Distributed%5Frevision%5Fcontrol"">DVCS</a> is that it is great for branching. I worked some years ago in a team where this would have been very useful, as every bit of development was done on a branch, and only merged when complete and tested. But this was a different philosophy from continuous integration.</p>

<p>But it seems to me that for a team that uses continous integration, the groovy features of DVCS tools like <a href=""http://git-scm.com/"">Git</a> would not be particularly relevant, and might even hinder the continuous integration process if merging changes requires extra steps that may be forgotten.</p>

<p>I'm sure there are other benefits of a DVCS (e.g. committing is very fast because it is local, presumably merging with the main branch could happen in the background while the developer carries on working).</p>

<p>But for this question, I'm interested in how teams which use DVCS and continous integration reconcile the two seemingly conflicting philosophies. I'm mainly interested in hearing from people who are actually doing this.</p>
","33","3710","<git><version-control><continuous-integration><dvcs>"
"1230084","1","How to have git log show filenames like svn log -v","<p>SVN's log has a ""-v"" mode that outputs filenames of files changed in each commit, like so:</p>

<pre>jes5199$ svn log -v
------------------------------------------------------------------------
r1 |   jes5199 | 2007-01-03 14:39:41 -0800 (Wed, 03 Jan 2007) | 1 line
Changed paths:
   A /AUTHORS
   A /COPYING
   A /ChangeLog
   A /EVOLUTION
   A /INSTALL
   A /MacOSX
</pre>

<p>Is there a quick way to get a list of changed files in each commit in git?</p>
","520","166616","<svn><git><logging>"
"12657168","1","Can I use my existing git repo with openshift?","<p>Is it necessary to have git repo on openshift only? I already have bitbucket / github git repo and would prefer to push there only. Can I simply hook into it so that openshift gets intimation ?</p>

<p>Or for simplification, I push only at github, but when I want to deploy, I do something with openshift?</p>

<p>I did check <a href=""https://openshift.redhat.com/community/kb/kb-e1006-sync-new-git-repo-with-your-own-existing-git-repo"">this</a> but it confused me:  it's talking about merging exiting and new (openshift) git ?</p>
","85","43113","<git><openshift>"
"3156744","1","Git svn rebase : checksum mismatch","<p>I have a problem when I try to do a git svn rebase on my repository. It displays :</p>

<pre><code>Checksum mismatch: code/app/meta_appli/app_info.py
expected: d9cefed5d1a630273aa3742f7f414c83
     got: 4eb5f3506698bdcb64347b5237ada19f
</code></pre>

<p>I searched a lot but haven't found a way to solve this problem.</p>

<p>If anybody knows, please share your knowledge.
Thanks in advance.</p>
","32","5985","<svn><git><git-svn>"
"1272007","1","Refresh all files in buffer from disk in vim","<p>The command to refresh a file from version on disk is <code>:e!</code></p>

<p>How can I do the same for all files in the buffer? </p>

<p>Background: I need that because I am using git with multiple branches with one vim open that contains a buffer. When I checkout a branch, I would like to have vim refresh.</p>
","93","14455","<git><vim><buffer>"
"5561161","1","How to do a pull request in GitHub with only the latest commit in the master branch of my forked repository","<p>I forked a repository on github. I made some changes and did a pull request.</p>

<p>Now I made some other changes and want to do a new pull request, but on the preview screen before doing the pull request it shows the old commits too (the ones that were already accepted).</p>

<p>How do I select only the latest commit in the master branch of my forked repository so that I can do a pull request with only that commit?</p>
","33","6214","<git><github><branch><fork><pull-request>"
"5561295","1","What does git push -u mean?","<p>I have two different versions of git.
In the 1.6.2 version, <code>git push</code> does not have the <code>-u</code> option. It only appears in the 1.7.x version.</p>

<p>From the docs, the <code>-u</code> is related to the variable</p>

<pre><code>branch.&lt;name&gt;.merge
</code></pre>

<p>in <code>git config</code>. This variable is described below:</p>

<pre><code>Defines, together with branch.&lt;name&gt;.remote, the upstream branch 
for the given branch. It tells git fetch/git pull which branch to merge.
</code></pre>

<p>What is an upstream branch ?</p>
","220","51991","<git>"
"1273108","1","How do I git rm a file without deleting it from disk?","<p>The command removes the file in my system. I meant it to remove only the file from Git-repository.</p>

<p>How can I remove the file from a Git repository, without removing the file in my system? </p>
","241","77966","<git><git-rm>"
"5601931","1","Best (and safest) way to merge a git branch into master","<p>A new branch from <code>master</code> is created, we call it <code>test</code>.</p>

<p>There are several developers who either commit to <code>master</code> or create other branches and later merge into <code>master</code>.</p>

<p>Let's say work on <code>test</code> is taking several days and you want to continuously keep <code>test</code> updated with commits inside <code>master</code>.</p>

<p>I would do <code>git pull origin master</code> from <code>test</code>. </p>

<p><strong>Question 1:</strong> Is this the right approach?  Other developers could have easily worked on same files as I have worked btw.</p>

<hr>

<p>My work on <code>test</code> is done and I am ready to merge it back to <code>master</code>. Here are the two ways I can think of:</p>

<p><strong>A:</strong>  </p>

<pre><code>git checkout test
git pull origin master
git push origin test
git checkout master
git pull origin test 
</code></pre>

<p><strong>B:</strong> </p>

<pre><code>git checkout test
git pull origin master
git checkout master
git merge test
</code></pre>

<p>I am not using <code>--rebase</code> because from my understanding, rebase will get the changes from <code>master</code> and stack mine on top of that hence it could overwrite changes other people made.</p>

<p><strong>Question 2:</strong> Which one of these two methods is right?  What is the difference there?</p>

<p>The goal in all of this is to keep my <code>test</code> branch updated with the things happening in <code>master</code> and later I could merge them back into <code>master</code> hoping to keep the timeline as linear as possible.</p>
","617","342560","<git><git-merge>"
"7947078","1","git tag delete and re-add","<p>On git hub I re-added the tag by doing: </p>

<pre><code>git tag -d 12.15
git push origin :refs/tags/12.15
git tag -a 12.15 -m '12.15'
git push --tags
</code></pre>

<p>The tag is still referring to the old tag on github, but locally it is done right.</p>

<p>UPDATE: It seems github is listing the last commit wrong, but downloading it correctly.</p>
","54","30128","<git><github>"
"7947322","1","Preferred Github workflow for updating a pull request after code review","<p>I've submitted a change to an Open Source project on Github, and received code review comments from one of the core team members (github code review is awesome by the way!). Most of the code is OK but a few things need changing.</p>

<p>Anyway, I would like to update the code taking into account the review comments, and re-submit it. What is the best workflow for doing this? From my limited knowledge of git/github, I could do any of the following:</p>

<ol>
<li><p>Update the code as a new commit, and add both the initial and updated commit to my pull request.</p></li>
<li><p>Somehow (??) rollback the old commit from my repository, and create a single new commit containing everything, then raise a pull request for that?</p></li>
<li><p><code>git commit</code> has an amend feature, but I've heard that you shouldn't use it after you've pushed the commit outside of your local repository? In this case I have made the change on my local PC and pushed to my github branch of the project. Would this be OK to use 'amend'?</p></li>
<li><p>Something else??</p></li>
</ol>

<p>It seems like option 2/3 would be nice, as the open source project would only have one commit in their history which would implement everything, but I'm not sure how to do this.</p>

<p>Note: I don't know if this affects the answer or not, but I didn't make the changes in a seperate branch, I just did a commit on top of master</p>
","192","39609","<git><version-control><github><pull-request>"
"17604232","1","Edit a commit message in SourceTree Windows (already pushed to remote)","<p>How do I edit an incorrect commit message in SourceTree without touching the command line?</p>

<p><strong>Additional details:</strong></p>

<ul>
<li>This is not the latest commit.</li>
<li>Everything was already pushed to Bitbucket.</li>
<li>This is a private repository and I am the only collaborator.</li>
<li>I don't mind losing any of the previous commits, as I can re-commit them anytime.</li>
<li>I don't want however to lose any code modification ever made.</li>
</ul>

<p><strong>Outcome:</strong></p>

<ul>
<li>As it seems impossible at the moment according to your comments and replies, I'm going to create a new repository and start all over. Thanks all for your help!</li>
</ul>
","78","44266","<git><atlassian-sourcetree>"
"7949036","1","Moving a git repository","<p>This question may be dumb, but I've been wondering it for a while. It's about git repositories, but I assume it's the same for local repositories for other DVCS'.</p>

<p>Lets say my project is like this when it starts:</p>

<ul>
<li>Project
<ul>
<li>.git</li>
<li>all the other folders in the project</li>
</ul></li>
</ul>

<p>So that's how it would work when you set it up right?</p>

<p>Lets say I move the Project folder somewhere else, would I have to change anything? Or is all the repository stuff in the .git folder relative only to the Project folder ignoring the whole file tree above Project.</p>

<p>I'm pretty sure moving Project wouldn't matter but I just wanted to make sure.</p>
","49","34109","<git><repository>"
"3242282","1","How to configure an existing git repo to be shared by a UNIX group","<p>I have an existing git repo (a bare one) which has up to this point only been writable by me.  I want to open it up to some UNIX user group, foo, so that all members of foo can push to it.  I'm aware that I can easily set up a <em>new</em> git repo with:</p>

<pre><code>git init --bare --shared=group repodir
chgrp -R foo repodir
</code></pre>

<p>But I need the equivalent operation for an <em>existing</em> repo dir.</p>
","49","32700","<git><permissions><group><shared><share>"
"1362952","1","detail change after git pull","<p>After git pull, its output gives a summary on the change amount.</p>

<p>How can I see each or some of the files detailed changes?</p>

<p>Update:</p>

<p>Thanks. I am not sure why I cannot add comment or vote on your answers. Okay, here is my question to Jefromi:</p>

<ol>
<li><p>How do I know if I was pulling to master? All I did is ""git pull"". </p></li>
<li><p>What does master point to and what is the difference between master and HEAD, the two default heads of git</p></li>
<li><p>how to see the detail change in a specific file?</p></li>
<li><p>how to see the change in summary output by last git pull again?</p></li>
<li><p>what's difference between git diff and git whatchanged?</p></li>
</ol>
","50","17810","<git><git-pull>"
"7987687","1","What is the difference between ""git branch"" and ""git checkout -b""?","<p>I used <code>git checkout -b</code> to create a new branch. I think that <code>git branch</code> does the same thing.
How do these two commands differ, if they differ at all?</p>
","99","24235","<git><git-branch><git-checkout>"
"3244320","1","Source control in Visual Studio 2010?","<p>After doing some search on SO, Google and MSDN forums I've become frustrated that there is so little information for what might seem like an obvious question and possibly a dumb question.</p>

<p>I need to use source control in Visual Studio 2010 Professional. I do not have separate Team Foundation Server 2010. Some people have mentioned SourceSafe? I haven't seen any SourceSafe inside of the Visual Studio 2010 to be honest.</p>

<p>What are some alternatives (preferably free) for source control in Visual Studio 2010? Or is it already integrated in Visual Studio 2010 that I am so blind to have missed that?</p>

<p><strong>Update #1: Thank you everyone, I will go with SVN, in particular <em>AnkhSVN</em> for Visual Studio 2010.</strong></p>

<p><strong>Update 3/23/2011</strong>: It's been almost a year since I have asked this question. I highly recommend using either <em>Mercurial</em> or <em>Git</em> over Subversion. So for those of you who are looking for Visual Studio 2010 version control system, look no further than Git or Mercurial extensions from the Visual Studio Extension Library.</p>

<p><strong>Update 5/16/2013</strong>: I would now strongly encourage you to use <em>Git</em> over <em>Mercurial</em>, <em>TFS</em> or <em>SVN</em>. Take a look at <em>CodeSchool's</em> <strong><a href=""http://try.github.com/"">Try GitHub</a></strong> in the browser to see how awesome it is!</p>

<ul>
<li><p><strong><a href=""http://blogs.msdn.com/b/visualstudioalm/archive/2013/01/30/getting-started-with-git-in-visual-studio-and-team-foundation-service.aspx"">Getting Started with Git on Visual Studio 2012</a></strong> - in-depth tutorial by <em>Andy Lewis</em>.</p></li>
<li><p><strong><a href=""http://visualstudiogallery.msdn.microsoft.com/abafc7d6-dcaa-40f4-8a5e-d6724bdb980c"">Visual Studio Tools for Git</a></strong> - An extension for Team Explorer to provide source control integration for Git. Enables integration with local Git repositories and provides tools to work with remote repositories.</p></li>
</ul>

<p><img src=""http://i.stack.imgur.com/4r9KC.png"" alt=""enter image description here""></p>
","45","32753","<visual-studio-2010><git><version-control><visual-studio-2012><visual-sourcesafe>"
"20107701","1","What are the big differences between TFS and Git for source control when using Visual Studio 2013?","<p>There are tons of questions and answers about Git versus TFVC Source Control, but no current answers given the integration of Git into Team Foundation Server/Service that I can find.   </p>

<p>I'm starting green pasture development using a wide variety of languages (C#, C++, PHP, Javascript, MySSQL) using Visual Studio 2013. In the future, there will be some iOS development. I'm very familiar with SVN, VSS and TFS for source control. However, I have never used Git. I prefer TFS for process management/agile development... It's not perfect, but it integrates well into Visual Studio.</p>

<p>So, to help me decide between these two systems...</p>

<h3>What are the big differences between TFS and Git for source control when using Visual Studio 2013?</h3>

<ul>
<li>Is the only benefit in my case a local repository (not saying that it's insignificant) and iOS development support?</li>
<li>Is the only drawback to Git the command line interface (some would argue that's not a drawback ;-P).</li>
<li>Have you experienced in the Visual Studio 2013 GUI for Git? Is that enough to support basic branching/merging without the command line interface?</li>
<li>Is there a detailed start-up guide for Git that shows Git being used with Visual Studio 2013? Microsoft has a video for integrating an existing Git repository into Visual Studio 2013, but I'm looking for a start from scratch with Git and VS 2013.</li>
</ul>

<p>I am not looking for a book here, but just a few bullet points and maybe some relevant links from folks that have used both TFS and Git.</p>
","69","37408","<git><visual-studio-2013><tfs2013><vs-team-services>"
"3334475","1","git: how to update (checkout) a single file from remote origin master","<p>The scenario:</p>

<ol>
<li>I make some changes in a single file locally and run git add, git commit and git push</li>
<li>The file is pushed to the remote origin master repository</li>
<li>I have another local repository that is deployed via capistrano with the ""remote_cache"" method from that remote repository</li>
<li>Now I don't want to deploy the whole application but just update/checkout that single file.</li>
</ol>

<p>Please, is this somehow possible with git? I wasn't able to find anything that would work nor was I able to figure it out. With svn I just did svn up file and viola.</p>

<p>I'll be glad for any help, thanks!</p>
","85","127082","<git><checkout>"
"5733699","1","Gitolite One User - Many Keys - Different usernames","<p>I have set up gitolite hopefully as per the instructions, and everything is working as planned. </p>

<p>I am slightly unsure as to how the usernames part works, and looking through the docs hasn't helped me - perhaps I'm missing something simple. </p>

<p>If I have two client machines, for use by one real person, but on each of those machines the usernames are, let's say dave and david. How can I organise the keys in keydir and any config file so that they both represent the same user? I get the suffix thing, dave@laptop, dave@desktop (I think), just not how to have different client machine usernames connecting, as it seems to look for this when authenticating (perhaps because of the public key containing user@host information?)</p>

<p>I can give more details if needed - I just didn't want to bombard you all with irrelevant information. </p>

<p>Thanks very much.</p>
","31","14975","<git><authentication><ssh><gitolite>"
"1510798","1","Trying to fix line-endings with git filter-branch, but having no luck","<p>I have been bitten by the Windows/Linux line-ending issue with git.  It seems, via GitHub, MSysGit, and other sources, that the best solution is to have your local repos set to use linux-style line endings, but set <code>core.autocrlf</code> to <code>true</code>.  Unfortunately, I didn't do this early enough, so now every time I pull changes the line endings are borked.</p>

<p>I thought I had found an answer <a href=""http://stackoverflow.com/questions/1011985/line-endings-messed-up-in-git-how-to-track-changes-from-another-branch-after-a/1060828#1060828"">here</a> but I can't get it to work for me.  My Linux command line knowledge is limited at best, so i am not even sure what the ""xargs fromdos"" line does in his script.  I keep getting messages about no such file or directory existing, and when I manage to point it to an existing directory, it tells me I don't have permissions. </p>

<p>I've tried this with MSysGit on Windows and via the Mac OS X terminal.  Any help would be GREATLY appreciated.</p>
","223","44072","<git><newline><msysgit><line-endings>"
"3382679","1","GIT: How do I update my bare repo?","<p>I created a bare repo to publish my repository, but I can't figure out how to update the bare repo with the current state of the main repository.</p>
","67","48958","<git>"
"1514054","1","How do I delete a local repository in git?","<p>I can't find the command. I tried Googling ""git 'delete a repository'"".</p>
","140","228380","<git>"
"22639815","1","Does GitHub for Windows work with GitLab?","<p>While working on a project using GitHub I've fallen in love with GitHub for Windows as a client. Now a new project beckons where I'll be using GitLab instead of GitHub.</p>

<p>Will I still be able to use GitHub for Windows as a client for GitLab? After all, they're both based on git, right? If not, what clients are available for GitLab?</p>
","31","32301","<git><gitlab><github-for-windows>"
"8214321","1","Git gc using excessive memory, unable to complete","<p><em><strong>Final update and fix</strong>: The solution here turned out to be a combination of two things: using Windows Git rather than Cygwin Git as <a href=""http://stackoverflow.com/users/385478"">Graham Borland</a> <a href=""http://stackoverflow.com/a/8215746/220155"">suggested</a>, and the Git config settings <code>pack.threads = 1</code> and <code>gc.aggressiveWindow = 150</code>.</em></p>

<p>I have a large local Git repository, a <code>git svn clone</code> of an SVN repository with about 40,000 commits. I'm trying to run <code>git gc</code> over this repository, and getting nowhere:</p>

<pre><code>$ git gc --auto
Auto packing the repository for optimum performance. You may also
run ""git gc"" manually. See ""git help gc"" for more information.
Counting objects: 25966, done.
Compressing objects: 100% (25249/25249), done.
fatal: Out of memory, malloc failed (tried to allocate 426523986 bytes)
error: failed to run repack
</code></pre>

<p>I'm running Git 1.7.5.1 inside Cygwin on a 64-bit dual-core Win7 machine with 4GB RAM. The <code>.git</code> directory is currently a little over 6.1GB.</p>

<p>I've tried running <code>git gc --aggressive</code>, to see if the more complete system is able to fix it, but no luck: I get a similar message to the above, with the same size attempted <code>malloc</code>, but a considerably higher object count (508,485 counted, 493,506 compressed).</p>

<p>I've also tried—as suggested by Google—assorted twiddles to the <code>[pack]</code> part of my <code>.gitconfig</code> file; the most complete being from <a href=""http://stackoverflow.com/questions/3095737"" title=""Is there a way to limit the amount of memory that &quot;git gc&quot; uses?"">another StackOverflow question</a>. My <code>.gitconfig</code> now has the following relevant lines, but setting these appears to have made no difference:</p>

<pre><code>[pack]
        windowMemory = 16m
        threads = 1
        window = 1
        depth = 1
        deltaCacheSize = 1
</code></pre>

<p>Any suggestions on how I can get <code>git</code> to <code>gc</code> my repository?</p>

<p><strong>Edit</strong>: <a href=""http://stackoverflow.com/users/223092"">Mark Longair</a> <a href=""http://stackoverflow.com/a/8214778/220155"">suggested</a> some more <code>.gitconfig</code> file changes. Which I made, new lines below. But the changes made no difference whatsoever.</p>

<pre><code>[core]
        packedGitWindowSize = 1m
        packedGitLimit = 256m
[pack]
        packSizeLimit = 128m
</code></pre>

<p><strong>Edit 2</strong>: <a href=""http://stackoverflow.com/users/95382"">Michael Krelin</a> <a href=""http://stackoverflow.com/a/8214444/220155"">suggested</a> increasing the swap/page file size (WinXP instructions <a href=""http://www.microsoft.com/resources/documentation/windows/xp/all/proddocs/en-us/sysdm_advancd_perform_change_vmpagefile.mspx?mfr=true"">here</a>, and it's similar for Win7). I tried that, but it made no difference, and indeed I only increased the maximum size available, and it looks as if Windows never tried to increase the size of the page file it was using.</p>

<p>I'm now looking at whether this was caused by a memory limit within or imposed upon Cygwin. To check ""imposed upon"", I'm trying running Cygwin with administrator privileges. To check ""within"" (which looks more likely), I'm having a play with <a href=""http://cygwin.com/cygwin-ug-net/setup-maxmem.html"">Cygwin's maximum memory settings</a>.</p>

<p><strong>Edit 3</strong>: Much though I may prefer using Cygwin, it turns out the Windows Git client deals with the memory issue just fine. Seems I'll be falling back to that every so often when my repository needs a tidy.</p>
","34","11153","<git><git-svn><git-gc>"
"3489173","1","How to clone git repository with specific revision/changeset?","<p>How can I clone git repository with specific revision, something like I usually do in Mercurial:</p>

<pre><code>hg clone -r 3 /path/to/repository
</code></pre>
","141","172734","<git><git-clone><revision>"
"10573957","1","Pushing from local repository to GitHub hosted remote","<p>I created a local repository of my Visual Studio 2010 solution folder using Git GUI on my dev machine. I then created a remote repository in my GitHub account. Now, I am looking for how to push my local repository to the remote repository.</p>

<p>In SVN I can just commit using TortoiseSVN and changes are pushed to the remote repository. I don't see any tool like that available for Git. </p>

<p>How do I push my local repo to my remote repo on GitHub?</p>
","83","120714","<git><github><git-push>"
"1624705","1","How can I merge many commits, but leaving one out?","<p>Suppose I have this feature branch ""foo"". Now I want to merge it back into master, but I've added some debugging code that I don't want in master. </p>

<p>The debug code is in it's own commit, so I could use <code>git cherry-pick</code> on each commit and leave out this commit. But that's gonna be quite tiresome. </p>

<p>Is there some ""inverse cherry-pick"" that does this? or an interactive merge?</p>

<p>How can I do this in an easy way?</p>
","69","33260","<git>"
"1687262","1","Link to the issue number on GitHub within a commit message","<p>Is it somehow possible to <strong>automatically</strong> have a link to GitHub issue number in the <code>git commit</code> message?</p>
","536","83176","<git><github><git-commit>"
"16350673","1","Depend on a branch or tag using a git URL in a package.json?","<p>Say I've forked a node module with a bugfix and I want to use my fixed version, on a feature branch of course, until the bugfix is merged and released. </p>

<p>What would I scribble into the <code>dependencies</code> of my <code>package.json</code>?</p>
","153","43216","<git><dependencies><npm><branch><git-tag>"
"9415534","1","Cherry pick using TortoiseGit","<p>How do I run the cherry pick command using TortoiseGit UI?</p>
","66","18629","<git><tortoisegit>"
"1811730","1","How do I work with a git repository within another repository?","<p>I have a Git media repository where I'm keeping all of my JavaScript and CSS master files and scripts that I'll use on various projects. </p>

<p>If I create a new project that's in its own Git repository, how do I use JavaScript files from my media repository in my new project in a way that makes it so I don't have to update both copies of the script when I make changes? </p>
","161","42617","<git><git-submodules><multiple-repositories>"
"14005854","1","What to do with branch after merge","<p>I had two branches: master and branch1.  I just merged branch1 back into master and I'm done with that branch.  Should I delete it or just let it sit around?  Will deleting it cause any loss of data?</p>
","80","20904","<git><merge><branch>"
"6217156","1","Break a previous commit into multiple commits","<p>Without creating a branch and doing a bunch of funky work on a branch...  Is it possible to break a single commit into a few different commits after it's been committed to the local repository?</p>
","415","74976","<git>"
"1992364","1","Git: Recover deleted (remote) branch","<p>I need to recover two Git branches that I somehow deleted during a push.</p>

<p>These two branches were created on a different system and then pushed to my ""shared"" (github) repository.</p>

<p>On my system, I (apparently) retrieved the branches during a fetch:</p>

<pre><code>~/myfolder&gt; git fetch
remote: Counting objects: 105, done.
remote: Compressing objects: 100% (58/58), done.
remote: Total 62 (delta 29), reused 0 (delta 0)
Unpacking objects: 100% (62/62), done.
From github.com:mygiturl
 * [new branch]      contact_page -&gt; origin/contact_page
   731d1bb..e8b68cc  homepage   -&gt; origin/homepage
 * [new branch]      new_pictures -&gt; origin/new_pictures
</code></pre>

<p>Right after that I did a push to send my local changes up to the central repo. For some reason, these branches were deleted from both my local system and the central repo:</p>

<pre><code>~/myfolder&gt; git push
Counting objects: 71, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (43/43), done.
Writing objects: 100% (49/49), 4.99 KiB, done.
Total 49 (delta 33), reused 0 (delta 0)
To git@github.com:mygiturl.git
 - [deleted]         contact_page
 + e8b68cc...731d1bb homepage -&gt; homepage (forced update)
   bb7e9f2..e0d061c  master -&gt; master
 - [deleted]         new_pictures
   e38ac2e..bb7e9f2  origin/HEAD -&gt; origin/HEAD
   731d1bb..e8b68cc  origin/homepage -&gt; origin/homepage
   e38ac2e..bb7e9f2  origin/master -&gt; origin/master
 * [new branch]      origin/contact_page -&gt; origin/contact_page
 * [new branch]      origin/new_pictures -&gt; origin/new_pictures
</code></pre>

<p>It's not terribly easy to get the branches off of their birthplace machine, so I'd like to try and recover them from my local if possible.</p>

<p>All of the git ""undo"" information I've googled has to with recovering lost commits. I don't think that applies here, since I don't have commit UIDs for these branches.</p>

<p>I'd like to know how I can get these back. I'd also like to know how they were deleted in the first place and how I can avoid this in the future.</p>

<p>EDIT: by request, here's my repo configuration</p>

<pre><code>user.name=Craig Walker
user.email=github@softcraft.ca
alias.unadd=reset HEAD
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
remote.origin.url=git@github.com:MyGitURL.git
remote.origin.mirror=true
branch.master.remote=origin
branch.master.merge=refs/heads/master
alias.undo=reset --hard
alias.test=push -f ci HEAD:master
alias.st=status
alias.ci=commit
alias.br=branch
alias.co=checkout
alias.ch=checkout
alias.df=diff
alias.lg=log -p
alias.who=shortlog -s --
remote.ci.url=ContinuousIntegrationGitURL
remote.ci.fetch=+refs/heads/*:refs/remotes/ci/*
branch.photo.remote=origin
branch.photo.merge=refs/heads/photos
remote.foo.url=FooGitURL
remote.foo.fetch=+refs/heads/*:refs/remotes/cynthia/*
branch.homepage.remote=origin
branch.homepage.merge=refs/heads/homepage
</code></pre>
","63","45267","<git><github>"
"6218199","1","Git commit with no commit message","<p>How can I commit changes without specifying commit message? Why is it required by default?</p>
","44","30021","<git><message><commit>"
"6481575","1","Undo a merge by pull request?","<p>Someone accepted a pull request which they shouldn't have. Now we have a bunch of broken code merged in. How do you undo a pull request? I was just going to revert the changes to the commit just before the merge, but I noticed that it merged in a bunch of commits. So now there are all these commits from this person from days before the merge. How do you undo this?</p>
","66","53082","<git><github><merge><pull-request>"
"7434449","1","Why use 'git rm' to remove a file instead of 'rm'?","<p>On SVN, removing something from the filesystem directly (rather than using svn) created a load of headaches. So far, using git, I haven't found this to be an issue, but I notice that git has it's own rm implementation.</p>

<p>Is there a difference? Am I doing something wrong?</p>
","44","18229","<git>"
"15296473","1","What do git checkouts really mean?","<p>What are <code>checkout</code>s in git? </p>

<p>I know once you do <code>checkout</code> to a particular branch, the <code>HEAD</code> points to that branch. But what does it really mean? Does it mean I can then work on that branch? If yes, then, without checking out a branch, I am not able to work on it?</p>

<p>Also, what does <code>remote checkout</code> mean? How is it useful?</p>
","36","10679","<git><checkout>"
"4220416","1","Can I specify multiple users for myself in .gitconfig?","<p>In my <code>~/.gitconfig</code>, I list my personal email address under <code>[user]</code>, since that's what I want to use for Github repos.</p>

<p>But, I've recently started using git for work, too. My company's git repo allows me to commit, but when it sends out announcements of new changesets, it says they are from Anonymous because it doesn't recognize the email address in my <code>.gitconfig</code> - at least, that's my theory.</p>

<p>Is it possible to specify multiple <code>[user]</code> definitions in <code>.gitconfig</code>? Or is there some other way to override the default <code>.gitconfig</code> for a certain directory? In my case, I check out all work code in <code>~/worksrc/</code> - is there a way to specify a <code>.gitconfig</code> for only that directory (and its subdirectories)?</p>
","286","70321","<git>"
"19109542","1","Installing Latest version of git in ubuntu","<p>My Current git version 1.7.9.5...</p>

<p>I need to upgrade to at least git 1.7.10 to have <code>git clone</code> command to work properly</p>

<p>I tried <code>sudo add-apt-repository ppa:git-core/ppa</code> for upgrading but resulted in this : </p>

<pre><code>Traceback (most recent call last):
  File ""/usr/bin/add-apt-repository"", line 125, in &lt;module&gt;
    ppa_info = get_ppa_info_from_lp(user, ppa_name)
  File ""/usr/lib/python2.7/dist-packages/softwareproperties/ppa.py"", line 80, in get_ppa_info_from_lp
    curl.perform()
pycurl.error: (7, ""couldn't connect to host"")
</code></pre>

<p>What am I supposed to do to get the latest git installed (to upgrade)? </p>
","131","37095","<git><ubuntu>"
"14290113","1","Git - Pushing code to two remotes","<p>I have <strong>two</strong> remote git repositories. <code>origin</code> and <code>github</code></p>

<p>I push my branch <code>devel</code> to both repositories.</p>

<pre><code>git push -u origin devel
git push -u github devel
</code></pre>

<p>But then, when I do. <code>git push</code> It would only get pushed to <code>github</code>.</p>

<p>Is there anyway I can set up my two remotes, so that I can push changes to both repositories with one command ?</p>
","173","46669","<git><github>"
"16646205","1","How to install Github for Windows offline?","<p>As the question says how to install Github for Windows without an internet connection? 
If it is not possible then is there some alternative client with the following features:</p>

<ul>
<li>Support for proxy</li>
<li>Offline installer</li>
</ul>

<p>I found smartgit which has an offline installer but it seems it doesn't have proxy support.</p>

<p>If there is no such client then what can be done to extend the functionality of github for windows or some other client? I mean is there a way to use some API to extend it? Any links for that would be helpful.</p>
","31","37109","<git><github><smartgit>"
"15387640","1","Github Windows 'Failed to sync this branch'","<p>I am using Github Windows 1.0.38.1 and when I click the 'Sync' button after committing, I get the error </p>

<p><img src=""http://i.stack.imgur.com/U3x8D.png"" alt=""enter image description here""></p>

<p>How do I debug this problem? If in the shell, what should I do?</p>

<p>The sync works fine if i do a <code>git push</code> or <code>git pull</code>, but the next time I want to sync using Github windows, I get the same error.</p>
","96","69020","<git><github><github-for-windows>"
"6855712","1","Why does Git treat this text file as a binary file?","<p>I wonder why git tells me this:?</p>

<pre><code>$ git diff MyFile.txt
diff --git a/MyFile.txt b/MyFile.txt
index d41a4f3..15dcfa2 100644
Binary files a/MyFile.txt and b/MyFile.txt differ
</code></pre>

<p>Aren't they text files?</p>

<p>I have checked the .gitattributes and it is empty. Why I am getting this message? I cannot get diffs as I use to anymore</p>

<p><strong>ADDED:</strong></p>

<p>I've noticed there is an <code>@</code> in the file permissions, what is this? Could this be the reason?</p>

<pre><code>$ls -all
drwxr-xr-x   5 nacho4d  staff    170 28 Jul 17:07 .
drwxr-xr-x  16 nacho4d  staff    544 28 Jul 16:39 ..
-rw-r--r--@  1 nacho4d  staff   6148 28 Jul 16:15 .DS_Store
-rw-r--r--@  1 nacho4d  staff    746 28 Jul 17:07 MyFile.txt
-rw-r--r--   1 nacho4d  staff  22538  5 Apr 16:18 OtherFile.txt
</code></pre>
","59","31223","<git><binary>"
"13698978","1","Git - undoing git rm","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/2125710/how-to-revert-a-git-rm-r"">How to revert a “git rm -r .”?</a>  </p>
</blockquote>



<p>Git SOS here. I worked 10 hours on a project without committing (I know, I know) and then I git added too many files, so I tried using git rm and accidentally deleted EVERYTHING. Is there hope for me? :(((</p>
","39","28969","<git><git-rm>"
"6857082","1","Redo merge of just a single file","<p>I'm in the middle of a large merge, and I've used <code>git mergetool</code> to resolve all the conflicts, but I have not committed yet, as I wanted to make sure the merge was ok first.</p>

<p>It turns out that I made a mistake while resolving the conflicts in one file, and I would like to redo the conflict resolution with <code>git mergetool</code> on that file. As this is a large merge I would like to avoid redoing the merge on all the other files, as I understand I would have to do with <code>git merge --abort</code>.</p>

<p>I know I could just edit the file manually, but this would be quite tedious and it would be much easier to just redo the <code>git mergetool</code> operation. Is this possible?</p>
","52","6078","<git><merge>"
"10242924","1","How to close a branch WITHOUT removing it from history in git?","<p>I'd like to make a commit and close its branch, <strong>without removing it from history</strong>.</p>

<p>With mercurial I'd <code>commit --close-branch</code>, then <code>update</code> to a previous one, and go on working. With git... I'm confused.</p>
","41","7798","<git><branch>"
"11646107","1","You have not concluded your merge (MERGE_HEAD exists)","<p>I made a branch called 'f' and did a checkout to master. When I tried the <code>git pull</code> command I got this message:</p>

<pre><code>You have not concluded your merge (MERGE_HEAD exists).
Please, commit your changes before you can merge.
</code></pre>

<p>When I try the <code>git status</code>, it gave me the following:</p>

<pre><code>On branch master
# Your branch and 'origin/master' have diverged,
# and have 1 and 13 different commit(s) each, respectively.
#
# Changes to be committed:
#
#   modified:   app/assets/images/backward.png
#   modified:   app/assets/images/forward.png
#   new file:   app/assets/images/index_background.jpg
#   new file:   app/assets/images/loading.gif
#   modified:   app/assets/images/pause.png
#   modified:   app/assets/images/play.png
#   new file:   app/assets/javascripts/jquery-ui-bootstrap.js
#   new file:   app/assets/stylesheets/jquery-ui-bootstrap.css
#   modified:   app/controllers/friends_controller.rb
#   modified:   app/controllers/plays_controller.rb
#   modified:   app/mailers/invite_friends_mailer.rb
#   modified:   app/mailers/send_plays_mailer.rb
#   modified:   app/mailers/shot_chart_mailer.rb
#   modified:   app/views/friends/show_plays.html.erb
#   modified:   app/views/layouts/application.html.erb
#   modified:   app/views/plays/_inbox_table.html.erb
#   modified:   app/views/plays/show.html.erb
#   modified:   app/views/welcome/contact_form.html.erb
#   modified:   app/views/welcome/index.html.erb
#   modified:   log/development.log
#   modified:   log/restclient.log
#   new file:   tmp/cache/assets/C1A/C00/sprockets%2Fb7901e0813446f810e560158a1a97066
#   modified:   tmp/cache/assets/C64/930/sprockets%2F65aa1510292214f4fd1342280d521e4c
#   new file:   tmp/cache/assets/C73/C40/sprockets%2F96912377b93498914dd04bc69fa98585
#   new file:   tmp/cache/assets/CA9/090/sprockets%2Fa71992733a432421e67e03ff1bd441d8
#   new file:   tmp/cache/assets/CCD/7E0/sprockets%2F47125c2ebd0e8b29b6511b7b961152a1
#   modified:   tmp/cache/assets/CD5/DD0/sprockets%2F59d317902de6e0f68689899259caff26
#   modified:   tmp/cache/assets/CE3/080/sprockets%2F5c3b516e854760f14eda2395c4ff2581
#   new file:   tmp/cache/assets/CED/B20/sprockets%2F423772fde44ab6f6f861639ee71444c4
#   new file:   tmp/cache/assets/D0C/E10/sprockets%2F8d1f4b30c6be13017565fe1b697156ce
#   new file:   tmp/cache/assets/D12/290/sprockets%2F93ae21f3cdd5e24444ae4651913fd875
#   new file:   tmp/cache/assets/D13/FC0/sprockets%2F57aad34b9d3c9e225205237dac9b1999
#   new file:   tmp/cache/assets/D1D/DE0/sprockets%2F5840ff4283f6545f472be8e10ce67bb8
#   new file:   tmp/cache/assets/D23/BD0/sprockets%2F439d5dedcc8c54560881edb9f0456819
#   new file:   tmp/cache/assets/D24/570/sprockets%2Fb449db428fc674796e18b7a419924afe
#   new file:   tmp/cache/assets/D28/480/sprockets%2F9aeec798a04544e478806ffe57e66a51
#   new file:   tmp/cache/assets/D3A/ED0/sprockets%2Fcd959cbf710b366c145747eb3c062bb4
#   new file:   tmp/cache/assets/D3C/060/sprockets%2F363ac7c9208d3bb5d7047f11c159d7ce
#   new file:   tmp/cache/assets/D48/D00/sprockets%2Fe23c97b8996e7b5567a3080c285aaccb
#   new file:   tmp/cache/assets/D6A/900/sprockets%2Fa5cece9476b21aa4d5f46911ca96c450
#   new file:   tmp/cache/assets/D6C/510/sprockets%2Fb086a020de3c258cb1c67dfc9c67d546
#   new file:   tmp/cache/assets/D70/F30/sprockets%2Facf9a6348722adf1ee7abbb695603078
#   new file:   tmp/cache/assets/DA3/4A0/sprockets%2F69c26d0a9ca8ce383e20897cefe05aa4
#   new file:   tmp/cache/assets/DA7/2F0/sprockets%2F61da396fb86c5ecd844a2d83ac759b4b
#   new file:   tmp/cache/assets/DB9/C80/sprockets%2F876fbfb9685b2b8ea476fa3c67ae498b
#   new file:   tmp/cache/assets/DBD/7A0/sprockets%2F3640ea84a1dfaf6f91a01d1d6fbe223d
#   new file:   tmp/cache/assets/DC1/8D0/sprockets%2Fe5ee1f1cfba2144ec00b1dcd6773e691
#   new file:   tmp/cache/assets/DCC/E60/sprockets%2Fd6a95f601456c93ff9a1bb70dea3dfc0
#   new file:   tmp/cache/assets/DF1/130/sprockets%2Fcda4825bb42c91e2d1f1ea7b2b958bda
#   new file:   tmp/cache/assets/E23/DE0/sprockets%2Fb1acc25c28cd1fabafbec99d169163d3
#   new file:   tmp/cache/assets/E23/FD0/sprockets%2Fea3dbcd1f341008ef8be67b1ccc5a9c5
#   modified:   tmp/cache/assets/E4E/AD0/sprockets%2Fb930f45cfe7c6a8d0efcada3013cc4bc
#   new file:   tmp/cache/assets/E63/7D0/sprockets%2F77de495a665c3ebcb47befecd07baae6
#   modified:   tmp/pids/server.pid
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Coachbase/
#   log/development.log.orig
#   log/restclient.log.orig
</code></pre>

<p>What should I do?</p>
","298","206356","<git>"
"4600445","1","Git log output to XML, JSON, or YAML?","<p>This is a pretty simple question: as a Git newbie I was wondering if there's a way for me to output my git log to a file, preferably in some kind of serialized format like XML, JSON, or YAML. Any suggestions?</p>
","33","14607","<git><file><logging><version-control><io>"
"6764953","1","What is the reason for the /a /b prefixes of git diff","<p>I've been using git for some years now and always wondered why git diff prefixes the names of modified files with a/ and b/. I expected to eventually stumble upon a use-case where it is useful, but until now it was always annoying and never helpful.</p>

<p>What is it good for? Why is this enabled by default? In which situations is it useful?</p>
","31","5367","<git><git-diff>"
"14000173","1","TortoiseGit save user authentication / credentials","<p>Is there a way to save <code>GITHUB's user credentials</code> with TortoiseGit?</p>

<p>It prompts me the below dialog every time whenever I do a push/pull.</p>

<p>I would like to save my user credential information somewhere like how I did with TortoiseSVN.</p>

<p><img src=""//i.stack.imgur.com/t8aJn.png"" alt=""enter image description here""></p>
","200","81868","<git><github><tortoisegit>"
"30474447","1","git: fatal: I don't handle protocol '​​http'","<p>I copy and pasted an git clone command from a web page: <a href=""https://fedorahosted.org/ibus-typing-booster/"">https://fedorahosted.org/ibus-typing-booster/</a></p>

<p>I got this:</p>

<pre><code>user@host&gt; git clone ​​http://git.fedorahosted.org/git/ibus-typing-booster.git

Cloning into 'ibus-typing-booster'...
fatal: I don't handle protocol '​​http'
</code></pre>
","60","20436","<git><clone><whitespace>"
"4603221","1","Git: Merge in only one commit","<p>Usually, I work with branches in Git, but I don't like to see hundreds of branches in my working tree (Git history). I'm wondering if there is a method in Git to ""join"" all commits in a branch in only one commit (ideally with a clear commit message).</p>

<p>Something like this:</p>

<pre><code>git checkout -b branch
&lt;some work&gt;
git commit -a -m ""commit 1""
&lt;some work&gt;
git commit -a -m ""commit 2""
&lt;some work&gt;
git commit -a -m ""commit 3""
git checkout master
git SUPER-JOIN branch -m ""super commit""
</code></pre>

<p>After this, only ""super commit"" will exist in the git log.</p>
","38","24971","<git><branch>"
"2868432","1","Github: readonly access to a private repo","<p>I am developing some private projects on Github, and I would like to add nightly cronjobs to my deployments servers to pull the latest version from github. I am currently doing this by generating keypairs on every deployment server and adding the public key to the github project as 'Deployment key'. </p>

<p>However, I recently found out that these deployment keys actually do have write access to the project. Hence, every of the server administrators could potentially start editing. Furthermore I can add every deployment key to only one repository, whereas I would like to be able to deploy multiple repositories on one and the same deployment server.</p>

<p>Is there a way to provide read-only access for private repositories to selected users on Github?</p>
","87","37262","<git><github><collaboration><readonly><public-key>"
"350907","1","git-svn on Windows. Where to get binaries?","<p>I want to use git as a local repository against a remote SVN repository. I installed version 1.6.0.2 from <a href=""http://code.google.com/p/msysgit/downloads/list"">http://code.google.com/p/msysgit/downloads/list</a>.</p>

<p>According to the documentation synchronization is done via the command </p>

<pre><code>git svn
</code></pre>

<p>or a separate command wrapper called </p>

<pre><code>git-svn
</code></pre>

<p>Neither of them is available in my installation and I could not find a separate download for Windows binaries. </p>

<p>I'm currenty using the MSYS build. Must I switch to cygwin?</p>
","62","35439","<windows><svn><git>"
"11771378","1","'ssh-keygen' is not recognized as an internal or external command","<p>I run <code>git push -u origin master</code></p>

<p>It tells me that ""Permission denied (public key) fatal: The remote end hung up unexpectedly""</p>

<p>Then I looked up on the internet and found that I had to generate an ssh key for my account on GitHub. However, upon doing so, when I tried to do ssh-keygen -t rsa ""email@youremail.com"" it simply said ssh-keygen is not recognized. I tried doing mkdir C:\ssh but that didn't work. If it helps I'm using Ruby Rails and I'm on a Windows computer. Could anyone help me?</p>
","54","78039","<windows><git><ssh><github>"
"28633956","1","Why does git keep telling me it's ""Auto packing the repository in background for optimum performance""?","<p><strong>Note</strong>: I <strong>don't</strong> think this is a duplicate of <a href=""http://stackoverflow.com/questions/8633981/what-does-auto-packing-the-repository-for-optimum-performance-mean"">this question</a>, which is talking about a non-background pack which <em>hangs</em> git <em>with a subtly different error message</em>.</p>

<hr>

<p>In one of my git repositories, each time I invoke (for example) <code>git fetch</code>, git prints:</p>

<pre><code>Auto packing the repository in background for optimum performance.
See ""git help gc"" for manual housekeeping.
</code></pre>

<p>It appears to print this every time if I do a <code>git fetch</code> repeatedly, even when there are no changes and nothing for <code>git fetch</code> to do. This doesn't make a lot of sense to me. It also seems to happen with other network operations, such as <code>git push</code> and <code>git pull</code>.</p>

<p>The command returns back to the prompt instantly with no further output, and I cannot find any git process running on my machine. It seems to happen only with this repository, and only on this machine. <code>git config -l | grep gc</code> returns nothing.</p>

<p>What can I do to diagnose or fix this problem?</p>

<pre><code>$ git --version 
git version 2.0.1
</code></pre>

<p>I am using OS X 10.9.</p>
","40","4375","<git><background-process><packing>"
"16358418","1","How to avoid merge-commit hell on GitHub/BitBucket","<p>We're ending up with a lot of commits like this in our repo:</p>

<pre><code>Merge branch 'master' of bitbucket.org:user/repo
</code></pre>

<p>This happens every time a developer syncs his/hers local fork to the top-level repo.</p>

<p>Is there anyway to avoid this merge-commit hell from cluttering all the repo log? Can one avoid them when initiating the pull-requests in some way?</p>

<p>I know I can do git rebase if this is done in my local VM only, is there any equivalence in the GitHub/BitBucket UI?</p>

<p>How do you guys do it?</p>
","54","12057","<git><github><bitbucket>"
"4604486","1","How do I move an existing Git submodule within a Git repository?","<p>I would like to change the directory name of a Git submodule in my Git superproject.</p>

<p>Lets suppose I have the following entry in my <code>.gitmodules</code> file:</p>

<pre><code>[submodule "".emacs.d/vimpulse""]  
path = .emacs.d/vimpulse  
url = git://gitorious.org/vimpulse/vimpulse.git
</code></pre>

<p>What do I have to type to move the <code>.emacs.d/vimpulse</code> directory to <code>.emacs.d/vendor/vimpulse</code> without deleting it first (explained 
  <a href=""http://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule"">here</a> and <a href=""https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial"">here</a>) and then re-adding it.</p>

<p>Does Git really need the whole path in the submodule tag</p>

<pre><code>[submodule "".emacs.d/vimpulse""]
</code></pre>

<p>or is it also possible to store just the name of the subproject?</p>

<pre><code>[submodule ""vimpulse""]
</code></pre>
","183","41630","<git><git-submodules>"
"4604663","1","Download single files from GitHub","<p>I guess most of you, developers, use any <a href=""https://en.wikipedia.org/wiki/Revision_control"">VCS</a>, and I hope some of you use Git. Do you have any tip or trick how to get a download URL for a single file in a repository?</p>

<p>I don't want the URL for displaying the raw file; in case of binaries it's for nothing.</p>

<p><a href=""http://support.github.com/discussions/feature-requests/41-download-single-file"">http://support.github.com/discussions/feature-requests/41-download-single-file</a></p>

<p>Is it even possible to use GitHub as a ""download server""?</p>

<p>If we decide to switch to Google Code, is the mentioned functionality presented here?</p>

<p>Or is there any free-of-charge hosting and VCS for open-source projects?</p>
","234","236415","<git><version-control><github>"
"4313125","1","How to sync with a remote Git repository?","<p>I forked a project on github, made some changes, so far so good.</p>

<p>In the meantime, the repository I forked from changed and I would like to get those changes into my repository. How do I do that ?</p>
","62","114090","<git><synchronization><github>"
"4708465","1","How do I rename a Git repository created with gitolite?","<p>I created a Git repository using gitolite. Now I would like to rename that repository.</p>

<p>How can I do this? </p>

<p>In gitolite's readme is says that I should not work directly on the server. But I guess I have to do some work on the server in this case, right?</p>
","72","13740","<git><gitolite>"
"4708645","1","VIM for Windows - What do I type to save and exit from a file?","<p>Using WinXP I accidentally typed <code>git commit -a</code> instead of <code>git commit -am ""My commit message""</code>, and now I'm viewing my CMD prompt filled with the file version of my commit message (""Please enter the commit message for your...""). I've added my message to the top, but now I can't figure out how to save and leave. I tried to press <kbd>CTRL</kbd> + <kbd>W</kbd> + <kbd>Q</kbd>, but it doesn't do anything but add <code>^</code> where the cursor is.</p>

<p>I also tried <kbd>esc</kbd> first, and then <kbd>CTRL</kbd> + <kbd>W</kbd> + <kbd>Q</kbd>, but it says <code>No write since last change (add ! to override)</code>.</p>
","153","62503","<git><vim><windows-xp><git-commit>"
"4708655","1","Git: renamed file manually, Git confused","<p>I am using Git and manually renamed a file that I had added to the repository. Now, I have added the ""new"" file which I renamed to the repository but Git complains that the ""old"" file has been deleted. So how can I make Git forget about the old file? Better yet, how do I tell Git that the ""new"" file really is the ""new"" file so that I can keep the change history intact?</p>
","38","13580","<git><version-control>"
"11774397","1","Git push error: Unable to unlink old (Permission denied)","<p>In the remote server I have a post-receive hook set up in order to make a git checkout of my repository:</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/var/www/&lt;website&gt; git checkout -f
</code></pre>

<p>But when I make a push from my local machine to the git repository in the server, I get the following error messages:</p>

<pre><code>remote: error: unable to unlink old '&lt;file&gt;' (Permission denied)
</code></pre>

<p>This appears many times over, one error message for almost every file.</p>

<p>However I have a README.txt file that I'm able to change using git, here are its permissions:</p>

<pre><code>-rw-r--r--  1 &lt;serverusername&gt;  &lt;serverusername&gt;  2939 Aug  2 10:58 README.txt
</code></pre>

<p>But other files with exactly the same owner and same permissions, give me that error.</p>

<p>In another local repository for another website, I have the files with my local machine username as owner, and when I push to the remote server it respects the remote server owner of the files and works like a charm.</p>

<p>Obviously it seems a permissions related error, but I can't find a way to fix it, any suggestions?</p>
","68","39088","<git><git-push><git-checkout>"
"18356502","1","GitHub - failed to connect to github 443 windows/ Failed to connect to gitHub - No Error","<p>Q - I intalled git to get the latest version of Angular. When i tried called</p>

<pre><code>git clone https://github.com/angular/angular-phonecat.git
</code></pre>

<p>I got failed to connect to github 443 error</p>

<p>I even tried </p>

<pre><code>git clone git://github.com/angular/angular-phonecat.git
</code></pre>

<p>That gave me failed to connect no error message.</p>

<p>I am behind my company firewall. I can not see my proxy details when I go to <code>control panel-&gt;Internet Options -&gt; connections -&gt; lan setting</code>.IT guys are not sharing proxy information with me. I do not know what to do ??</p>

<p>I finally managed to do it. I will update the procedure that I had taken in order to
Just wanted to compile all the steps that I did to get it to work</p>
","76","84285","<git><github>"
"13788485","1","Create new repo on Bitbucket from Git Bash terminal?","<p>Is it possible to create a new repository in Bitbucket by using command line Git? I have tried the following:</p>

<pre><code>git clone --bare https://username@bitbucket.org/username/new_project.git
</code></pre>

<p>I get this message:</p>

<blockquote>
  <p>Cloning into bare repository 'new_project.git'...<br>
  fatal: <code>https://username@bitbucket.org/username/new_project.git/info/refs</code> not found: did you run git update-server-info on the server?</p>
</blockquote>

<p>It would be nice to do this without going to the web app.</p>
","41","16024","<git><bitbucket>"
"7053996","1","How do I install imagemagick with homebrew?","<p>I'm trying to install Imagemagick on OSX Lion but something is not working as expected.</p>

<pre><code>-&gt; brew install imagemagick

/usr/local/git/bin/git
==&gt; Cloning https://github.com/adamv/ImageMagick.git
Cloning into /Users/klebershimabuku/Library/Caches/Homebrew/imagemagick--git...
fatal: https://github.com/adamv/ImageMagick.git/info/refs not found: did you run git      update-server-info on the server?
Error: Failure while executing: git clone --depth 1 https://github.com/adamv/ImageMagick.git /Users/kleber/Library/Caches/Homebrew/imagemagick--git
</code></pre>

<p>brew doctor says:</p>

<pre><code>-&gt; brew doctor
We couldn't detect gcc 4.0.x. Some formulae require this compiler.

Some ""config"" scripts were found in your path, but not in system or Homebrew folders.

`./configure` scripts often look for *-config scripts to determine if software packagesare installed, and what additional flags to use when compiling and linking.

Having additional scripts in your path can confuse software installed via Homebrew if the config script overrides a system or Homebrew provided script of the same name.

/Users/kleber/.rvm/gems/ruby-1.9.2-p180@global/bin
passenger-config

Setting DYLD_LIBARY_PATH can break dynamic linking.
You should probably unset it.
</code></pre>

<p>And yes, I have XCode 4.1 installed and running.</p>

<pre><code>-&gt; brew update
From http://github.com/mxcl/homebrew
* branch            master     -&gt; FETCH_HEAD
Already up-to-date.
</code></pre>
","83","87938","<git><gcc><homebrew><osx-lion><gcc4>"
"13788945","1","How to cherry-pick from a remote branch?","<p>I'm having trouble performing a cherry-pick. On my local machine, I'm currently on my ""master"" branch. I want to cherry-pick in a commit from another branch, named ""zebra"". The ""zebra"" branch is a remote branch. </p>

<p>so git status:</p>

<pre><code># On branch master
nothing to commit (working directory clean)
</code></pre>

<p>ok, now I try to cherry-pick the commit I want:</p>

<pre><code>git cherry-pick xyz
fatal: bad object xyz
</code></pre>

<p>where ""xyz"" is the signature of the commit I'm interested in, that happened on branch ""zebra"".</p>

<p>So the first obvious question is, why can't git find the commit I'm referencing? I don't really understand how this is working in the first place to be honest. Does git store something like a database of commits locally in my working directory, for all other branches? When executing the cherry-pick command, does it go and search that local database to find the commit I'm talking about?</p>

<p>Since ""zebra"" is a remote branch, I was thinking I don't have its data locally. So I switched branches:</p>

<pre><code>git checkout zebra
Switched to branch 'zebra'
</code></pre>

<p>so now here on my local machine, I can see that the files in the directory reflect zerbra's state correctly. I switch back to master, try to cherry-pick again (hoping the commit data is available now), but some problem.</p>

<p>I've got a fundamental misunderstanding of what's going on here, any help would be great.</p>
","39","32146","<git>"
"4315948","1","git partial merge, not whole branch","<p>I've read about some tricks with merge in <a href=""http://stackoverflow.com/questions/1807036/git-merging-public-and-private-branches-while-while-keeping-certain-files-intact"">Git: merging public and private branches while while keeping certain files intact in both branches</a> and others and not found a solution.</p>

<p>In my case I'm feeling need to do opposite merge strategy. In parallel development I have to keep some files same across the arbitrary branches. From other side I do not want to do squash or no-commit merge, while difference are significant and could break current state of testing branch. </p>

<p>What I want something like </p>

<p><code>git checkout testing</code></p>

<p><code>git merge config.xml -b development</code> or <code>git merge config\*.xml -b development</code></p>

<p>I guess this is like <code>git merge-files ...</code> command, but second file delivered from the branch, not from the filesystem.
Is it possible? or may be there is a kind of workaround? submodules? attributes?</p>

<p>Thanks</p>
","34","18937","<git><merge>"
"2141611","1","A pretty and feature rich git GUI for Linux","<p>I was checking out for a <code>rich GUI</code> for <code>Git</code> on <code>Linux</code>. Of late I have started using it a lot and find that even though command-line is very useful, I would still want a GUI at my disposal since I am not still very much aware with the advanced features.</p>

<p>I came across <a href=""http://stackoverflow.com/questions/1516720/git-gui-client-for-linux"">this question on SO before</a>, but I still have to ask this question again, as that question doesn't have my answer</p>

<ul>
<li><p>I have used <code>git-cola</code> and <code>gitk</code>, but they look half-baked and gitk looks like I am working on some other DE. All the features I require in gitGUI is not in either or them.</p></li>
<li><p>I tried <code>giggle</code> , but it is more useful for watching diffs</p></li>
<li>I tried <code>QGit</code>, but it is not fully complete.</li>
</ul>

<p>Now let me tell how I want a foo-Git-GUI to look like:</p>

<ul>
<li>You can have a look at <a href=""http://doc.bazaar.canonical.com/explorer/en/""><code>Bzr Explorer</code></a> , it is highly usable and has many features than many of the above mentioned GUIs</li>
</ul>

<p>Anyone knows of any Git GUI which looks like the above  example I posted above?</p>
","61","47186","<git><user-interface><dvcs><gitk>"
"3512202","1","GitHub - HTTPS access","<p>I am unable to clone my repository via HTTPS:</p>

<pre><code>$ git clone https://github.com/walterjwhite/project.configuration.git
Initialized empty Git repository in ./project.configuration/.git/
error: Failed connect to github.com:443; Connection refused while accessing https://github.com/walterjwhite/project.configuration.git/info/refs
fatal: HTTP request failed
</code></pre>

<p>I have configured .netrc with my login and password as well as the machine or server I am connecting to.</p>
","33","64116","<git><https><github>"
"552360","1","Git hook to send email notification on repo changes","<p>How do I configure the appropriate Git hook to send a summary email whenever a set of changes is pushed to the upstream repository?</p>
","92","61773","<git><githooks>"
"552659","1","How to assign a Git SHA1's to a file without Git?","<p>As I understand it when Git assigns a SHA1 hash to a file this SHA1 is unique to the file based on its contents. </p>

<p>As a result if a file moves from one repository to another the SHA1 for the file remains the same as its contents have not changed. </p>

<p>How does Git calculate the SHA1 digest? Does it do it on the full uncompressed file contents? </p>

<p>I would like to emulate assigning SHA1's outside of Git.</p>
","127","18569","<git><sha1>"
"10998792","1","How to color the Git console in Ubuntu?","<p>I recently saw that the Git console in Windows is colored, e.g. Green for additions, red for deletions, etc. How do I color my Ubuntu Git console like that?</p>

<p>To install it, I used the command: <code>$ apt-get install git-core</code></p>
","306","102290","<git><ubuntu><colors><console>"
"5955891","1","Has anyone implemented a git clone or interface library using nodejs?","<p>I'm looking for an implementation of git which is accessible from nodejs - does such a beast exist?</p>
","53","19033","<git><node.js>"
"12752288","1","Git merge doesn't use default merge message, opens editor with default message","<p>How can I force <code>git merge</code> to use the default merge message instead of loading my editor with said message?</p>

<p>I have no editor listed in <code>git config -l</code>, so I'm not sure why it opens an editor.</p>
","39","8092","<git><git-merge>"
"24853847","1","How to install a bower package using a private git server (SSH)?","<p><strong>EDIT</strong>: <a href=""http://www.frontendjunkie.com/2014/01/using-bower-as-package-management-tool.html"">this guy do exactly the same with success</a>, can't figure out why it's not working for me.</p>

<p>I've just installed <code>git</code> and setup permissions/SSH authentication with public/private key (Centos 6.5). I'm able to pull/push without problems using i.e.:</p>

<pre><code>git clone git@code.organization.com:projects/boilerplate-template
</code></pre>

<p>Username is <code>git</code>, code placed in <code>/home/git/projects</code>, repository created with <code>git --init --shared boilerplate-template</code>.</p>

<p>How can I require <code>boilerplate-template</code> with Bower in another project?</p>

<p>I've tried with the following bower.json file without luck:</p>

<pre><code>{
    ""name"": ""my/newproject"",
    ""dependencies"": {
        ""boilerplate-template"": ""git://code.organization.com:projects/boilerplate-template""
    }
}
</code></pre>

<blockquote>
  <p><strong>ECMDERR</strong>: Failed to execute ""git ls-remote --tags --heads 
  git://code.organization.com:projects/boilerplate-template, exit code
  128
  unable to lookup code.organization.com (port project)...</p>
</blockquote>

<p>Sadly it fails  because <code>:project</code> is not the port but the path. I've also tried with <code>ssh://</code> instead of <code>git://</code>:</p>

<blockquote>
  <p><strong>ENOTFOUND</strong>: Package
  ssh://code.organization.com:projects/boilerplate-template not found.</p>
</blockquote>
","41","25199","<git><ssh><bower><bower-install>"
"916822","1","Unable to diff files in two separate branches in Git","<p>I have FileA in branchA and FileB in branchB.</p>

<p>The problem is that I can access only one file at time.
I would like to be able to compare the files by FileMerge or meld, since they are the only diffTools whichI have found for Mac.</p>

<p><strong>How can you diff by meld/FileMerge the two files</strong>?</p>

<p><hr /></p>

<p>[Solved]: <strong>1st developed Problem:</strong> FileMerge does not allow standard input</p>

<blockquote>
  <p>Masi: You can use <a href=""http://kerneltrap.org/index.php?q=mailarchive/git/2007/3/29/242485/thread"">opendiff to allow FileMerge</a> to have files from standard input. So the next problem is to find how to make git's diff tool to use opendiff.</p>
</blockquote>

<p><hr /></p>

<p><strong>2nd developed Problem:</strong> to make Git's diff tool to use opendiff in Mac</p>
","58","42550","<git><unix><merge><diff>"
"2719579","1","Howto add a changed file to an older (not last) commit in Git","<p>I changed several things over the last hour and committed them step by step. But I just realized I've forgot to add a changed file some commits ago.</p>

<p>The Log looks like this:</p>

<pre><code>GIT TidyUpRequests u:1 d:0&gt; git log 
commit fc6734b6351f6c36a587dba6dbd9d5efa30c09ce 
Author: David Klein &lt;&gt; 
Date:   Tue Apr 27 09:43:55 2010 +0200

    The Main program now tests both Webservices at once

commit 8a2c6014c2b035e37aebd310a6393a1ecb39f463 
Author: David Klein &lt;&gt;
Date:   Tue Apr 27 09:43:27 2010 +0200

    ISBNDBQueryHandler now uses the XPath functions from XPath.fs too

commit 06a504e277fd98d97eed4dad22dfa5933d81451f 
Author: David Klein &lt;&gt; 
Date:   Tue Apr 27 09:30:34 2010 +0200

    AmazonQueryHandler now uses the XPath Helper functions defined in XPath.fs

commit a0865e28be35a3011d0b6091819ec32922dd2dd8 &lt;--- changed file should go here
Author: David Klein &lt;&gt; 
Date:   Tue Apr 27 09:29:53 2010 +0200

    Factored out some common XPath Operations
</code></pre>

<p>Any ideas? :)</p>
","144","26079","<git>"
"12320863","1","How do you take a git diff file, and apply it to a local branch that is a copy of the same repository?","<p>I have a .diff file created by a coworker, and would like to apply the changes listed in that diff file to my local branch of the exact same repository.  I do not have access to that worker's pc or branch that was used to generate this diff file.</p>

<p>Obviously I could go line by line and retype everything, but i'd rather not subject the system to human error. What's the easiest way to do this?</p>
","143","70740","<git><diff><git-diff>"
"604399","1","how do you push only some of your local git commits?","<p>Suppose I have 5 local commits. I want to push only 2 of them to a centralized repo (using an SVN-style workflow). How do I do this? </p>

<p>This did not work: </p>

<pre><code>git checkout HEAD~3  #set head to three commits ago
git push #attempt push from that head
</code></pre>

<p>That ends up pushing all 5 local commits. </p>

<p>I suppose I could do git reset to actually undo my commits, followed by git stash and then git push -- but I've already got commit messages written and files organized and I don't want to redo them. </p>

<p>My feeling is that some flag passed to push or reset would work. </p>

<p>If it helps, here's my git config</p>

<pre><code>[ramanujan:~/myrepo/.git]$cat config 
[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote ""origin""]
        url = ssh://server/git/myrepo.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""master""]
        remote = origin
        merge = refs/heads/master
</code></pre>
","98","29138","<git><version-control>"
"2745076","1","What are the differences between ""git commit"" and ""git push""?","<p>In a Git tutorial I'm going through, <code>git commit</code> is used to store the changes you've made. </p>

<p>What is <code>git push</code> used for then?</p>
","495","257301","<git><push><git-push><git-commit>"
"1704907","1","How can I get my C code to automatically print out its Git version hash?","<p>Is there an easy way to write C code that can access its Git version hash? </p>

<p>I wrote software in C to collect scientific data in a laboratory setting. My code records the data it collects in a .yaml file for later analysis. My experiments change from day-to-day and I often have to modify the code. To keep track of  revisions, I use a git repository. </p>

<p>I would like to be able to include the Git revision hash as a comment in my .yaml data files. That way, I could look at the .yaml file and know exactly what code was used to generate the data shown in that file. Is there an easy way to do this automatically? </p>
","53","22200","<c><git><version-control><workflow>"
"2949738","1","git merge different repositories?","<p>I've been using SVN for all my projects.
Sometimes project B is originating as a copy from project A.
When project A has a generic change, I can use <code>svn merge A</code> within directory B and it will merge those changes.</p>

<p>Now, if I wanted to use git. I don't like having all my projects in the same repository since I then have to clone <em>everything</em> and can't pick just one project like in SVN.
But having one repository for each project, how do I go about doing the same like I did earlier with SVN?</p>

<p><strong>The question is:</strong>
What's the best way to structure it if I want several subprojects that really all relates to one original project and to keep them in sync? And that I also want to be able to check them out separately</p>
","40","19020","<git><git-svn>"
"1384325","1","In git, is there a simple way of introducing an unrelated branch to a repository?","<p>While helping a friend with a git problem today, I had to introduce a
branch that needed to be totally separate from the <code>master</code> branch.
The contents of this branch really had a different origin from what
had been developed on the <code>master</code> branch, but they were going to be
merged into the <code>master</code> branch at a later time.</p>

<p>I remembered from reading John Wiegley's <a href=""http://ftp.newartisans.com/pub/git.from.bottom.up.pdf"">Git from the bottom
up</a> how
branches are essentially a label to a commit that follows a certain
convention and how a commit is tied to a tree of files and, optionally
to parent commits. We went to create a parentless commit to the
existing repository using git's plumbing:</p>

<p>So we got rid of all files in the index ...</p>

<pre><code>$ git rm -rf .
</code></pre>

<p>... extracted directories and files from a tarball, added those to the
index ...</p>

<pre><code>$ git add .
</code></pre>

<p>... and created a tree object ...</p>

<pre><code>$ git write-tree
</code></pre>

<p>(<code>git-write-tree</code> told us the sha1sum of the created tree object.)</p>

<p>Then, We committed the tree, without specifying parent commits...</p>

<pre><code>$ echo ""Imported project foo"" | git commit-tree $TREE
</code></pre>

<p>(<code>git-commit-tree</code> told us the sha1sum of the created commit object.)</p>

<p>... and created a new branch that points to our newly created
commit.</p>

<pre><code>$ git update-ref refs/heads/other-branch $COMMIT
</code></pre>

<p>Finally, we returned to the <code>master</code> branch to continue work there.</p>

<pre><code>$ git checkout -f master
</code></pre>

<p>This seems to have worked as planned. But this is clearly not the kind
of procedure I would recommend to someone who is just getting started
using git, to put it mildly. <strong>Is there an easier way of creating a
new branch that is entirely unrelated to everything that has happened
in the repository so far?</strong></p>
","199","43674","<git><branch>"
"8006393","1","Force add despite the .gitignore file","<p>Is there a way to force <code>git</code> to add a file despite the <code>.gitignore</code> file?</p>
","135","41617","<git><gitignore>"
"2143956","1",".gitignore for Visual Studio Projects and Solutions","<p>Which files should I include in <code>.gitignore</code> when using <code>Git</code> in conjunction with Visual Studio Solutions (<code>.sln</code>) and Projects?</p>
","831","198287","<git><visual-studio><visual-studio-2012><gitignore>"
"11000869","1","Command-line Git on Windows","<p>I have installed msysGit 1.7.10 on my Windows 7 machine.
What I need to know is if I can still use Git from command line?</p>

<p>When I try the <code>git</code> command in the command line right now I see:</p>

<blockquote>
  <p>'git' is not recognized as an internal or external command, operable program or batch file.</p>
</blockquote>

<p>Is there any way I can enable the Git command line?</p>
","44","77969","<windows><git><command-line>"
"7853332","1","Git Log Date Formats","<p>I am trying to display the last commit within git. I need the date in special format however. I know that the log pretty format %ad respect the --date format, but the only --date format I can find is short. I want to know the others, and if I can create a custom one such as:</p>

<pre><code>git -n 1 --date=**YYMMDDHHmm** --pretty=format:""Last committed item in this release was by %%an, %%aD, message: %%s(%%h)[%%d]""
</code></pre>
","44","38884","<git><command-line>"
"2144406","1","Git shallow submodules","<p>Is it possible to have shallow submodules? I have a superproject with several submodules, each with a long history, so it gets unnecessarily big dragging all that history.</p>

<p>All I have found is <a href=""http://kerneltrap.org/mailarchive/git/2009/1/19/4766964/thread"">this unanswered thread</a>.</p>

<p>Should I just <a href=""http://repo.or.cz/w/git.git/blob/HEAD:/git-submodule.sh#l107"">hack git-submodule</a> to implement this?</p>
","71","12355","<git><git-submodules>"
"3685001","1","Git - How to fix ""corrupted"" interactive rebase?","<p>I managed to create a little mess in my local git repository. I was trying to fix a broken commit by using the <a href=""http://stackoverflow.com/questions/1186535/how-to-modify-a-specified-commit"">following instructions</a>. Before running the ""git commit --amend"" (and after the git rebase --interactive) I decided that my changes were incorrect and so I executed ""git reset HEAD --hard"". Not a good idea, I tell you.</p>

<p>Now the interactive rebase seems to be ""stuck"". Git shows the current branch as (|REBASE-m). Every command (cd .., ls, git rebase...) inside my repository gives the following error:</p>

<blockquote>
  <p>cat: .git/rebase-merge/head-name: No such file or directory</p>
</blockquote>

<p>Here's how git rebase --abort looks like:</p>

<pre><code>$ git rebase --abort
cat: c:/_work/project/src/git/.git/rebase-merge/quiet: No such file or directory
cat: c:/_work/project/src/git/.git/rebase-merge/head-name: No such file or directory
cat: c:/_work/project/src/git/.git/rebase-merge/orig-head: No such file or directory
HEAD is now at 4c737fb Revert ""Modified file names""
rm: cannot remove `c:/_work/project/src/git/.git/rebase-merge/done': Permission denied
rm: cannot remove directory `c:/_work/project/src/git/.git/rebase-merge': Directory
not empty
cat: .git/rebase-merge/head-name: No such file or directory
</code></pre>

<p>Here's the result of git rebase --continue:</p>

<pre><code>$ git rebase --continue
cat: c:/_work/project/src/git/.git/rebase-merge/prev_head: No such file or directory
cat: c:/_work/project/src/git/.git/rebase-merge/end: No such file or directory
cat: c:/_work/project/src/git/.git/rebase-merge/msgnum: No such file or directory
cat: c:/_work/project/src/git/.git/rebase-merge/onto: No such file or directory
cat: c:/_work/project/src/git/.git/rebase-merge/quiet: No such file or directory
prev_head must be defined
cat: .git/rebase-merge/head-name: No such file or directory
</code></pre>

<p>Any ideas? I would like to reset the situation back to the state it was before I started my well-thought rebase operation.</p>

<p>Here's how git log --oneline shows the situation:</p>

<pre><code>4c737fb Revert ""Modified file names""
247ac02 Modified file names
33141e6 Message modifications
10a4a04 Modified db script
</code></pre>

<p>And this is fine. </p>

<p>I'm using msysgit v1.7.0.2.</p>
","51","25646","<git><msysgit><git-rebase>"
"3689838","1","Difference between HEAD / Working Tree / Index in Git","<p>Can someone tell me difference between HEAD / Working Tree / Index in Git?</p>

<p>From what I understand, they are all names for different branches. Is my assumption correct?</p>

<p><b>EDIT:</b>
I found this ""A single git repository can track an arbitrary number of branches, but your working tree is associated with just one of them (the ""current"" or ""checked out"" branch), and HEAD points to that branch."" Does this mean that HEAD and working tree are always the same?</p>
","191","50455","<git><version-control>"
"31935776","1","What would I use git-worktree for?","<p>I read <a href=""https://github.com/blog/2042-git-2-5-including-multiple-worktrees-and-triangular-workflows"">Github's post on git-worktree</a>. They write:</p>

<blockquote>
  <p>Suppose you're working in a Git repository on a branch called <code>feature</code>, when a user reports a high-urgency bug in <code>master</code>. First you create a linked working tree with a new branch, <code>hotfix</code>, checked out relative to master […] You can fix the bug, push hotfix, and create a pull request.</p>
</blockquote>

<p>When I'm working on a branch called feature and some high-urgency bug in master is reported, I usually stash away whatever I'm working on and create a new branch. When I'm done, I can continue working. This is a very simple model, I've been working like that for years.</p>

<p>On the other hand, using git-worktree has its own limitations:</p>

<blockquote>
  <p>For example, it's not allowed to have the same branch checked out in two linked working trees at the same time, because that would allow changes committed in one working tree to bring the other one out of sync.</p>
</blockquote>

<p>Why would I choose a more complicated workflow for a problem that's already been solved?</p>

<p><strong>Is there anything about <code>git-worktree</code> that couldn't be done beforehand and that justifies this whole new, complex feature?</strong></p>
","34","5455","<git><git-worktree>"
"2982055","1","Detach many subdirectories into a new, separate Git repository","<p>This question is based on <a href=""http://stackoverflow.com/questions/359424/detach-subdirectory-into-separate-git-repository"">Detach subdirectory into separate Git repository</a> </p>

<p>Instead of detaching a single subdirectory, I want to detach a couple. For example, my current directory tree looks like this:</p>

<pre><code>/apps
  /AAA
  /BBB
  /CCC
/libs
  /XXX
  /YYY
  /ZZZ
</code></pre>

<p>And I would like this instead:</p>

<pre><code>/apps
  /AAA
/libs
  /XXX
</code></pre>

<p>The <code>--subdirectory-filter</code> argument to <code>git filter-branch</code> won't work because it gets rid of everything except for the given directory the first time it's run. I thought using the <code>--index-filter</code> argument for all unwanted files would work (albeit tedious), but if I try running it more than once, I get the following message:</p>

<pre><code>Cannot create a new backup.
A previous backup already exists in refs/original/
Force overwriting the backup with -f
</code></pre>

<p>Any ideas? TIA</p>
","53","15788","<git><git-filter-branch>"
"5667884","1","How to squash commits in git after they have been pushed?","<p>This gives a good explanation of squashing multiple commits:</p>

<p><a href=""http://git-scm.com/book/en/Git-Branching-Rebasing"">http://git-scm.com/book/en/Git-Branching-Rebasing</a></p>

<p>but it does not work for commits that have already been pushed. How do I squash the most recent few commits both in my local and remote repos? </p>

<p><strong>EDIT:</strong> When I do <code>git rebase -i origin/master~4 master</code>, keep the first one as <code>pick</code>, set the other three as <code>squash</code>, and then exit (via c-x c-c in emacs), I get:</p>

<pre><code>$ git rebase -i origin/master~4 master
# Not currently on any branch.
nothing to commit (working directory clean)

Could not apply 2f40e2c... Revert ""issue 4427: bpf device permission change option added""
$ git rebase -i origin/master~4 master
Interactive rebase already started
</code></pre>

<p>where 2f40 is the <code>pick</code> commit. And now none of the 4 commits appear in <code>git log</code>. I expected my editor to be restarted so that I could enter a commit message. What am I doing wrong?</p>
","220","63281","<git><squash>"
"7610073","1","Get Information about a SHA-1 commit object?","<p>I searched for a topic of interest in a commit log:</p>

<pre><code>$ git log --pretty=oneline | grep -i ...

$SHA1 &lt; ... commit message ... &gt;
</code></pre>

<p>I now have a <code>SHA1</code>, and I want to know information about the files affecting that <code>SHA1</code> and maybe later <code>diff</code> them with their parent. How can I get this done? </p>
","39","11545","<git>"
"3765234","1","Listing and deleting Git commits that are under no branch (dangling?)","<p>I've got a git repository with plenty of commits that are under no particular branch, I can <code>git show</code> them but when I try to list branches that contain them, it reports back nothing:</p>

<p>I thought this is the dangling commits/tree issue (as a result of -D branch), so I pruned the repo, but I still see the case after that:</p>

<pre><code>$ git fetch origin

$ git fsck --unreachable
$ git fsck
</code></pre>

<p>No output, nothing dangling (right?)</p>

<pre><code>$ git show 793db7f272ba4bbdd1e32f14410a52a412667042
commit 793db7f272ba4bbdd1e32f14410a52a412667042
Author: ..
</code></pre>

<p>But</p>

<pre><code>$ git branch --contains 793db7f272ba4bbdd1e32f14410a52a412667042
</code></pre>

<p>Gives no output</p>

<p>What exactly is the state of that commit? How can I list all commits with similar state, How can I delete commits like those?</p>
","65","27295","<git><branch><dangling><git-dangling>"
"1918111","1","My Git repository is in the wrong root directory. Can I move it? (../ instead of ./)","<p>Somehow when I 'git init'ed my latest project a month or so ago I ran the command in the directory one directory higher than the root of my project.</p>

<p>So my repository is in the <code>./project directory</code> and not the <code>./project/my-new-project directory</code>.  I don't know how I didn't realize the issue earlier, but I just never looked for the .git directory until now.</p>

<p>Is there a way, without killing my project, to move the repository to the proper directory and then tell git what the new base of the project is?  Just moving the directory doesn't work.  Git thinks all files have been deleted.</p>
","56","31882","<git>"
"6150188","1","How to update a git clone --mirror?","<p>I have created a git repository to mirror a live site (which is a non-bare git repository):</p>

<pre><code>git clone --mirror ssh://user@example.com/path/to/repo
</code></pre>

<p>Now, to keep this mirror clone updated with all changes from its remote origin, which command or commands I must use?</p>

<p>I'd like to keep everything updated: commits, refs, hooks, branches, etc.</p>

<p>Thanks!</p>
","88","103967","<git><mirror><git-clone><git-remote><git-fetch>"
"10260311","1","git how to disable push","<p>I am using git and I am doing my development work, which I don't want to push, even by mistake. Is there a method to disable push in certain local repository. One method is to rename the branch, another is to <a href=""http://stackoverflow.com/questions/1270514/undoing-a-git-push"">undo push</a> if one does it by mistake, but I hope there should be a more direct method.</p>
","58","18083","<git><push>"
"5540883","1","What's the -practical- difference between a Bare and non-Bare repository?","<p>I've been reading about the bare and non-bare / default repositores in Git. I haven't been able to understand quite well (theoretically) about the differences between them, and why I should ""push"" to a bare repository. Here's the deal:</p>

<p>Currently, I'm the only one working on a project on 3 different computers, but there will be more people involved in it later, so I'm using Git for the version control. I clone the bare repo on all computers, and when I finish my modifications on one of them, I commit and push the changes to the bare repo. From what I've read, the bare repository does NOT have a ""working tree"", so if I clone the bare repo, I won't have a ""working tree"".</p>

<p>I'm guessing that the working tree stores the commit information, branches, etc. from the project. That wouldn't appear in the bare repo. So it seems better for me to ""push"" the commits to the repo with the working tree.</p>

<p>Then, <strong>why should I use the bare repository and why not? What's the practical difference?</strong> That would not be beneficial to more people working on a project, I suppose.</p>

<p>What are your methods for this kind of work? Suggestions?</p>
","69","25788","<git><repository><git-bare>"
"796991","1","Fork and synchronize Google Code Subversion repository into GitHub","<p>How can I fork and keep in sync with an Google Code Subversion repository that I don't have write access to, into a GitHub repository?</p>

<p>I want to be able to develop my own features in my Git repository, but I also want to synchronise against the Google Code Subversion repository. To fetch fixes from Google Code project side.</p>

<p>I know about git-svn and used it before to up- and downstream to an Subversion repository I had full control over. But I don't know how keep in sync with a Google Code Subversion repository.</p>
","130","17252","<svn><git><github>"
"18115411","1","How to merge specific files from Git branches","<p>I have 2 git branches branch1 and branch2 and I want to merge file.py in branch2 into file.py in branch1 and only that file.</p>

<p>In essence I just want to work on the file.py in branch1 but want to take advantage of the merge command. What is the best way to do this?</p>
","34","22345","<git><git-merge>"
"7663451","1","View a specific Git commit","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/7610073/get-information-about-a-sha-1-commit-object"">Get Information about a SHA-1 commit object?</a>  </p>
</blockquote>



<p>I needed to check when a specific change was added to a file I'm working on, so I used the <code>git blame</code> command. From that I obtained the hash of the relevant commit. <strong>Is there a way to see the log notes of just that commit, using the hash?</strong> All the docs talk about how to look at the whole tree.</p>

<p>I realize could just do <code>git log &lt;filename&gt;</code>, but there are a lot of commits for the file, and I'm loathe to go through all of them looking for this one. A simple way to view the log notes would be appreciated.</p>
","140","93686","<git>"
"5423517","1","How do I push a local Git branch to master branch in the remote?","<p>I have a branch called develop in my local repo, and I want to make sure that when I push it to origin it's merged with the origin/master. Currently, when I push it's added to a remote develop branch. </p>

<p>How can I do this?</p>
","240","161568","<git><git-branch><remote-server><git-push>"
"5303496","1","How to change a git submodule to point to a subfolder?","<p>Skimming through <a href=""https://git.wiki.kernel.org/index.php/GitSubmoduleTutorial"">the SubModule tutorial</a>, I created a submodule out of the <a href=""https://github.com/boto/boto"">boto project</a>. Then, I discovered that I actually need only a subset of this project - specifically, the <a href=""https://github.com/boto/boto/tree/master/boto"">boto</a> folder.</p>

<p>I would like to change my submodule to point to this folder. When I look in .gitmodules, I see</p>

<pre><code>[submodule ""backup/src/boto""]
    path = backup/src/boto
    url = https://github.com/boto/boto.git
</code></pre>

<p>What URL should I use instead of <a href=""https://github.com/boto/boto.git"">https://github.com/boto/boto.git</a>? After I change the URL, should I delete the boto folder locally and re-pull?</p>
","42","17762","<git><git-submodules>"
"849308","1","pull/push from multiple remote locations","<p>Short: is there a way to have a git repo push to and pull from a list of remote repos (rather than a single ""origin"")?</p>

<p>The long: I often have a situation when I'm developing an app in multiple computers, with different connectivity -- say a laptop while on transit, a computer ""A"" while I'm in a certain location, and another computer ""B"" while on another. Also, the laptop might have connectivity with only either ""A"" or ""B"", and sometimes both.</p>

<p>What I would like to is for git to always ""pull"" from and ""push"" to all the computers it can currently connect to, so it's easier to jump from one machine to the other and continue working seamlessly.</p>
","414","148888","<git>"
"7690108","1","How to push local changes to a remote git repository on bitbucket","<p>I'm testing out Git and Bitbucket.</p>

<p>I've created a repository on Bitbucket and have created a local copy of the repo and am committing files into it. I cann't seem to push the files from my local repo to the remote repo.</p>

<p>Here's what I'm doing:</p>

<pre><code>git clone https://me@bitbucket.org/me/test.git
cd test
touch dummy
git add dummy
git commit dummy -m ""my first git commit""
git push
</code></pre>

<p>the final line outputs:</p>

<pre><code>Everything up-to-date
</code></pre>

<p>and when I log on to Bitbucket I cann't see my dummy file.</p>

<p>What am I doing wrong?</p>

<p><strong>EDIT:</strong></p>

<p>Doing this worked:</p>

<pre><code> git push origin master:master
</code></pre>

<p>Any explanations as to the difference between this and a simple <code>git push</code>?</p>
","47","108778","<git><bitbucket>"
"880957","1","Pull all commits from a branch, push specified commits to another","<p>I have the following branches:</p>

<ul>
<li><code>master</code></li>
<li><code>production</code></li>
</ul>

<p>and the following remote branches:</p>

<ul>
<li><code>origin/master</code></li>
<li><code>origin/production</code></li>
</ul>

<p>I have a script that fetches the <code>origin/master</code> branch and gets the diff of what changed from my last fetch (<code>log -p master..origin/master</code>). Then I merge <code>origin/master</code>.</p>

<p>The commits found are pushed to a code review tool.</p>

<p>I want to push the successful commits – and only them – to the production branch, and then of course to <code>origin/production</code>.</p>

<p>How can I do so?</p>

<p>Also, I have 2 scripts running: the one that fetch from <code>origin/master</code>, push commits details to a database, and merge, and the other that I'm currently writing that will have to push the successful commits. </p>

<p>I'd like to have those 2 scripts running while avoiding race conditions/merge conflict.  Since I only want to work with specified commits, maybe there's a way to get rid of the commits that I don't want?</p>
","61","42972","<git><branch>"
"881092","1","How to merge a specific commit in Git","<p>I have forked a branch from a repository in GitHub and committed something specific to me. Now I found the original repository had a good feature which was at <code>HEAD</code>.</p>

<p>I want to merge it only without previous commits. What I should do? I have known how to merge all commits:</p>

<pre><code>git branch -b a-good-feature
git pull repository master
git checkout master
git merge a-good-feature
git commit -a
git push
</code></pre>
","541","336685","<git><merge>"
"881158","1","Is there a migration tool from CVS to Git?","<p>I intend to switch over from CVS to Git. 
In the case of SVN, there seems to be <code>cvs2svn</code>.  Is there a similar tool to easily migrate from CVS to Git? </p>
","59","30660","<git><version-control><migration><cvs>"
"1251681","1","Git mergetool generates unwanted .orig files","<p>When I do a merge conflict resolution with Kdiff3 (and other merge tool I tried) I noticed that on resolution a <code>*.orig</code> file is created. Is there a way for it to not create that extra file?</p>
","252","49383","<git><version-control>"
"2916845","1","Different default remote (tracking branch) for git pull and git push","<p>Is there a way to set up a git repository, so that <code>git pull</code> defaults to one remote and <code>git push</code> defaults to another? I know I can set <em>both</em> by changing the value of the <code>remote</code> variable in branch section of <code>.git/config</code>, but how to do it for each direction separately?</p>
","39","6338","<git><branch>"
"2916849","1","What do these words mean in Git: Repository, fork, branch, clone, track?","<p>I'm honestly not clear on the semantics here.  They're all about copies/variants of a code+history unit, but past that I'm not sure I could say.  Is this logical structure explained somewhere?</p>
","101","39167","<git><branch><clone>"
"14989858","1","Get the current git hash in a Python script","<p>I would like to include the current <code>git hash</code> in the output of a Python script (as a the <em>version number</em> of the code that generated that output).</p>

<p>How can I access the current <code>git hash</code> in my Python script?</p>
","33","10793","<python><git><git-hash>"
"6012073","1","How do I code against one github repo on 2 computers?","<p>I have two computers from which I want to contribute to one github repo. How can I accomplish this?</p>
","36","12094","<git><github>"
"2947653","1","git, whitespace errors, squelching and autocrlf, the definitive answers","<p>Please can you explain about whitespace errors in git, what do they mean, what is 'squelching', and do I need to worry about it?</p>

<p>(Running msysgit, but with other users on linux).</p>

<p><em>There is already a 'definitive' answer for autocrlf <a href=""http://stackoverflow.com/questions/2016673/definitive-recommendation-for-git-autocrlf-settings"">here</a></em> (set it to false <code>git config --global core.autocrlf false
</code>)</p>
","32","14739","<git><whitespace><newline>"
"1251713","1","Backup a GitHub repository","<p><strong>What is the best way to create a local backup of a git repository hosted on GitHub, given the following requirements?:</strong></p>

<ol>
<li><p>The local backup should be a bare repo.</p></li>
<li><p>The backup should include all branches.</p></li>
<li><p>It should be easy to (incrementally) update the backup.</p></li>
</ol>

<p>Basically, I want a perfect mirror, with the possibility to update easily. As such, the command</p>

<pre><code>git clone --mirror git://github.com/...
</code></pre>

<p>comes to mind, but as far as I can tell, that doesn't allow for an easy update (I'd have to delete and recreate my local backup). Also, the mirror option for git clone seems quite recent, I don't have it on some of the systems I'm working on (which have slightly older versions of git running).</p>

<p>What is your recommended solution for this kind of problem?</p>
","49","34374","<git><backup>"
"1090309","1","git: undo all working dir changes including new files","<p>How to delete all changes from working directory including new untracked files. I know that <code>git checkout -f</code> does that, but it doesn't delete new untracked files created since last commit.</p>

<p>Does anybody have an idea how to do that?</p>
","633","273168","<git>"
"6235379","1","How to send pull request on GIT","<p>We have recently <strong>migrated to GIT</strong> from SVN. We have setup a <code>BARE</code> repository on one machine in our LAN network and cloned on other machines. Now when anyone do the changes and commits we want that he sends the pull request to the BARE repo (by telling or emailing or any other way) after that one will go through the changes and pull it on BARE repository (same as it works on github) </p>

<p>Do we need to install any interface or there is some commands in GIT itself.</p>

<p>Thanks</p>
","40","27067","<git><git-svn><pull-request>"
"11025980","1","How to add /usr/local/bin in $PATH on Mac","<p>When I do 'open .profile' in the terminal I have the following:</p>

<pre><code>export PATH=$PATH:/usr/local/git/bin 
</code></pre>

<p>Now I installed node.js for Mac and it says, </p>

<blockquote>
  <p>Make sure that /usr/local/bin is in your $PATH.</p>
</blockquote>

<p>How can I add <code>/usr/local/bin</code> to export <code>PATH=$PATH:/usr/local/git/bin</code>?</p>
","52","64299","<osx><git><node.js><path><profile>"
"8515040","1","What Node.JS-specific files and folders are usually excluded via .gitignore?","<p>I'm a newbie Node.JS developer... </p>

<p>What do developers usually exclude from their Node.JS git repositories in production via .gitignore? </p>

<p>node_modules? bin? Etc...</p>
","44","15940","<git><node.js>"
"8515729","1","Aborting a stash pop in Git","<p>I popped a stash and there was a merge conflict. Unlike the question that is listed as a duplicate, I already had some uncommitted changes in the directory which I wanted to keep. I don't just want to make the merge conflict disappear, but also to get my directory back to the state it was before the pop.</p>

<p>I tried <code>git merge --abort</code>, but git claimed no merge was in progress. Is there an easy way to abort a pop without destroying the changes I originally had in the directory?</p>
","86","22072","<git><git-stash>"
"8048584","1","See changes to a specific file using git","<p>I know in git, I can use the <code>git diff</code> command to check the changes, but (what I understood is that) it is directory based. This means it gives all the changes of all files on the current directory.</p>

<p><strong>How can I check only the changes on one specific file?</strong> Say, I have changed file_1.rb, file_2.rb, ..., file_N.rb, but I am only interested in the changes on file file_2.rb. How to check then?</p>

<p>I'd like to check the changes before I commit it.</p>
","173","123695","<git><git-svn>"
"2013091","1","Coloured Git diff to HTML","<p>I enjoy using <code>git diff --color-words</code> to clearly see the words that have changed in a file:</p>

<p><img src=""http://i.stack.imgur.com/HnM4B.png"" alt=""Screenshot""></p>

<p>However I want to share that diff with someone without git or a colour terminal for that matter. So does anyone know of a tool or trick that can convert <strong>colour escaped terminal output</strong> into HTML?</p>
","46","20462","<html><git><colors><diff><terminal>"
"10888300","1","gitosis vs gitolite?","<p>I am looking for installing a git server to share projects with my team. I don't want to create a user account on the server with SSH access for each developer that needs a git access.
It seems there is two concurrent solutions that cover this issue : gitosis &amp; gitolite.</p>

<p>I could not find any comparison between both solutions. What are the main differences between them? Are there other similar solution?</p>
","134","66212","<git><gitosis><gitolite>"
"7927230","1","Remove directory from remote repository after adding them to .gitignore","<p>I committed and pushed some directory to github. After that, I altered the <code>.gitignore</code> file adding a directory that should be ignored. Everything works fine, but the (now ignored) directory stays on github.</p>

<p>How do I delete that directory from github and the repository history?</p>
","223","75642","<git><github><gitignore>"
"2173726","1","Prevent local changes getting pushed in Git","<p>I have cloned a repository and the <code>master</code> branch in my repo is tracking <code>origin/master</code>. I created a <code>work</code> branch and changed some config files specific to my dev machine to make the app work.</p>

<p>My normal workflow will be to switch to <code>master</code> branch, merge changes made in <code>work</code> branch and <code>push</code> those changes upstream. The problem is that i don't want my specific chnages to get pushed. When i merge my <code>work</code> branch into <code>master</code> those changes are merged also. </p>

<p>The only solution I've found so far is not to commit those changes in <code>work</code> but that's not a satisfactory solution.</p>
","59","12542","<git><git-push>"
"13073062","1","Git: warning: refname 'master' is ambiguous","<p>I saw a few people asking the same question on here but it seems none of their advice is applicable to me. I'm getting the warning that is in the title of this but I don't have any tags named ""master"". This is the result of <code>git branch -a</code>:</p>

<pre><code>* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>

<p>Any idea what could be going wrong here? I've only been using git for a few months now, so it mostly just worries me that this ambiguity might mess with the repo in the future.</p>

<p>Thanks for your help.</p>
","36","14540","<git>"
"7751555","1","How to resolve git stash conflict without commit?","<p>As <a href=""http://stackoverflow.com/q/7517124/11343"">asked in this question</a>, I also want to know how to resolve a conflicting <code>git stash pop</code> without adding all modifications to a commit (just like ""git stash pop"" without a conflict does).</p>

<p>My current approach is very uncool because I do it this way:</p>

<pre><code>git stash pop -&gt; CONFLICT
git stash drop
[resolve conflict]
[add conflict files]
git reset HEAD &lt;all files that are in commit-mode&gt;
</code></pre>

<p>[Update] A way to reproduce it:</p>

<pre><code>mkdir foo; cd foo; git init
echo ""1"" &gt; one
echo ""2"" &gt; two
git add -A; git commit -m ""first""
echo ""1.1"" &gt; one
echo ""2.1"" &gt; two
git stash
echo ""2.2"" &gt; two
git commit -a -m ""second""
echo ""Only this file would stay in HEAD without the conflict"" &gt; third
git add third
git stash pop
git status
</code></pre>

<p>2016-06-27: Added a new file called 'third' to the example to show that workarounds like the solution from scy only work for empty HEADs but don't fix the initial problem that the HEAD doesn't have the same content like for a <code>git stash pop</code> without a conflict.</p>
","154","79716","<git><git-stash>"
"2016404","1","git status shows modifications, git checkout -- <file> doesn't remove them","<p>I would like to remove all changes to my working copy.<br />
Running 'git status' shows files modified.<br />
Nothing I do seems to remove these modifications.<br />
E.g.:<br /></p>

<pre><code>rbellamy@PROMETHEUS /d/Development/rhino-etl (master)
$ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   Rhino.Etl.Core/Enumerables/CachingEnumerable.cs
#       modified:   Rhino.Etl.Core/Pipelines/SingleThreadedPipelineExecuter.cs
#       modified:   Rhino.Etl.Tests/Rhino.Etl.Tests.csproj
#       modified:   Rhino.Etl.Tests/SingleThreadedPipelineExecuterTest.cs
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")

rbellamy@PROMETHEUS /d/Development/rhino-etl (master)
$ git checkout -- Rhino.Etl.Core/Enumerables/CachingEnumerable.cs

rbellamy@PROMETHEUS /d/Development/rhino-etl (master)
$ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   Rhino.Etl.Core/Enumerables/CachingEnumerable.cs
#       modified:   Rhino.Etl.Core/Pipelines/SingleThreadedPipelineExecuter.cs
#       modified:   Rhino.Etl.Tests/Rhino.Etl.Tests.csproj
#       modified:   Rhino.Etl.Tests/SingleThreadedPipelineExecuterTest.cs
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")

rbellamy@PROMETHEUS /d/Development/rhino-etl (master)
$ git checkout `git ls-files -m`

rbellamy@PROMETHEUS /d/Development/rhino-etl (master)
$ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   Rhino.Etl.Core/Enumerables/CachingEnumerable.cs
#       modified:   Rhino.Etl.Core/Pipelines/SingleThreadedPipelineExecuter.cs
#       modified:   Rhino.Etl.Tests/Rhino.Etl.Tests.csproj
#       modified:   Rhino.Etl.Tests/SingleThreadedPipelineExecuterTest.cs
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")

rbellamy@PROMETHEUS /d/Development/rhino-etl (master)
$ git reset --hard HEAD
HEAD is now at 6c857e7 boo libraries updated to 2.0.9.2 and rhino.dsl.dll updated.

rbellamy@PROMETHEUS /d/Development/rhino-etl (master)
$ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   Rhino.Etl.Core/Enumerables/CachingEnumerable.cs
#       modified:   Rhino.Etl.Core/Pipelines/SingleThreadedPipelineExecuter.cs
#       modified:   Rhino.Etl.Tests/Rhino.Etl.Tests.csproj
#       modified:   Rhino.Etl.Tests/SingleThreadedPipelineExecuterTest.cs
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","102","41339","<git><working-copy><not-revert>"
"2016673","1","Definitive recommendation for git autocrlf settings","<p>I use Windows, Mac OS X and linux on a daily basis. I use git in all these environments, pulling from repos that are used by folks with different choices for line endings.</p>

<p>Are there definitive recommendation for setting core.autocrlf in my situation?</p>
","42","23172","<git><line-endings>"
"3623739","1","Locate Git installation folder on Mac OS X","<p>I'm just curious, Where Git get installed (via DMG) on Mac OS X file system?</p>
","46","61784","<git><osx>"
"3623755","1","Why does my 'git branch' have no master?","<p>I'm a git newbie and I keep reading about a ""master"" branch. Is ""master"" just a conventional name that people used or does it have special meaning like <code>HEAD</code>?</p>

<p>When I do <code>git branch</code> on the clone that I have, I only see 1 single branch - the one I'm on. No ""master"" at all. If I type <code>git checkout master</code> (as I see in alot of tutorials or guides), I get</p>

<pre><code>error: pathspec 'master' did not match any file(s) known to git.
</code></pre>

<p>I'm just confused as to why my clone doesn't have a <code>master</code> that everyone seems to imply that it always exists.</p>
","51","63549","<git>"
"2016901","1","Viewing Unpushed Git Commits","<p>How can I view any local commits I've made, that haven't yet been pushed to the remote repository? Occasionally, <code>git status</code> will print out that my branch is X commits ahead of <code>origin/master</code>, but not always.</p>

<p>Is this a bug with my install of Git, or am I missing something?</p>
","841","277957","<git><git-diff><git-log>"
"978052","1","How can I make my local repository available for git-pull?","<p>I have a working copy repository that I've been working in no problem; the origin for this repository is on GitHub.  </p>

<p>I'd like to make my working copy repository available as the origin for my build machine (a VM on another physical host), so that commits I make to my working copy can be built and tested on the build machine without having to go via GitHub first.  I already have a build for the GitHub repository going, but I'd like this to be a ""golden"" repository/build; i.e., if something goes in there, the build against GitHub should be guaranteed to pass.  </p>

<p>I've looked at the documentation on Git URLs, and see that there's the option of using a URL in the form <code>git://host.xz[:port]/path/to/repo.git/</code> (see, e.g., <a href=""http://git-scm.com/docs/git-clone"" rel=""nofollow"">git-clone documentation</a>).  I want to do this in the simplest possible way, with the minimum of configuration: I don't want to have to set up an SSH daemon or web server just to publish this to my build machine.  </p>

<p>I'm running Windows 7 x64 RC, I have MSysGit and TortoiseGit installed, and I have opened Git's default port (9814) on the firewall.  Please assume working copy repo is at <code>D:\Visual Studio Projects\MyGitRepo</code>, and the hostname is <code>devbox</code>.  The build machine is Windows Server 2008 x64.  I have been trying the following command on the build machine, with the associated output:</p>

<pre><code>D:\Integration&gt;git clone ""git://devbox/D:\Visual Studio Projects\MyGitRepo""
Initialized empty Git repository in D:/Integration/MyGitRepo/.git/
devbox[0: 192.168.0.2]: errno=No error
fatal: unable to connect a socket (No error)
</code></pre>

<p>Am I missing something?</p>
","65","47446","<git><pull><git-pull><working-copy>"
"3860112","1","Multiple github accounts on the same computer?","<p>Trying to work on my both my actual ""work"" repos, and my personal repos on git hub, from my computer.</p>

<p>The work account was set up first, and everything works flawlessly.</p>

<p>My personal account, however cannot seem to push to my personal repo, which is set up under a different account/email.</p>

<p>I've tried copying my work key up to my personal account, but that throws an error, because of course a key can be only attached to one account.</p>

<p>How can I push/pull to and from both accounts, from their respective github credentials?</p>
","118","53128","<git><version-control><github>"
"1094269","1","What's the purpose of git-mv?","<p>From what I understand, Git doesn't really need to track <em>file</em> rename/move/copy operations, so what's the real purpose 
of <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-mv.html"">git mv</a>? The man page isn't specially descriptive...</p>

<p>Is it obsolete? Is it an internal command, not meant to be used by regular users?</p>
","175","41694","<git>"
"12794568","1","How to configure Git post commit hook","<p>I am new to Jenkins. How to trigger a build remotely from Jenkins?<br>
Can anybody tell how to configure Git post commit hook?</p>

<p>My requirement is whenever changes are made in the Git repository for a particular project it will automatically start Jenkins build for that project.  </p>

<p>In Jenkins trigger build section I selected trigger build remotely.<br>
In <code>.git</code> directory, hooks directory is there in that we have to configure post commit file.<br>
I am confusing how to trigger a build from there (I know some part we should use curl command).</p>

<hr>

<pre><code>curl cmbuild.aln.com/jenkins/view/project name/job/myproject/buildwithparameters?Branch=feat-con
</code></pre>

<p>I have placed this command in my git server hooks directory (post commit hook).<br>
Whenever the changes happen in repository it is running automate build.  </p>

<p>I want to check in changeset whether in at least one java file is there the build should start.<br>
Suppose the developers changed only xml files or property files the build should not start.<br>
Along with <code>xml</code>, suppose the <code>.java</code> files is there the build should start.  </p>
","66","79269","<git><jenkins><hook><commit>"
"7927750","1","Specify an SSH key for git push for a given domain","<p>I have the following use case: I would like to be able to push to <code>git@git.company.com:gitolite-admin</code> using the private key of user <code>gitolite-admin</code>, while I want to push to <code>git@git.company.com:some_repo</code> using 'my own' private key. AFAIK, I can't solve this using <code>~/.ssh/config</code>, because the user name and server name are identical in both cases. As I mostly use my own private key, I have that defined in <code>~/.ssh/config</code> for <code>git@git.company.com</code>. Does anyone know of a way to override the key that is used for a single <code>git</code> invocation?</p>

<p>(Aside: gitolite distinguishes who is doing the pushing based on the key, so it's not a problem, in terms of access, ownership and auditing, that the user@server string is identical for different users.)</p>
","189","106296","<git><ssh><gitolite>"
"2020812","1","How can I view all the git repositories on my machine?","<p>Is there a way in which I can see all the git repositories that exist on my machine? Any command for that?</p>
","36","16610","<git>"
"10183724","1","List of remotes for a git repository?","<p>I have a git repository. This repo has multiple remote repositories (I think). How can I get a list of the remote repositories that belong to said repo? Some thing like <code>git list --origins</code> or something like that?</p>
","165","103639","<git>"
"8633981","1","What does ""Auto packing the repository for optimum performance"" mean?","<p>I'm having a problem with my git repo. For the last couple of days whenever I do a push to the server I get this message: ""Auto packing the repository for optimum performance"", and it does not seem to go away and return the shell.</p>

<p>I also tried checking out to a new branch and then doing a rebase on my previous branch and then did <code>git gc</code> to remove the unused history objects and then did a push but still this message appears. Please let me know what's going on with my repo.</p>
","115","21028","<git><git-rebase><git-push>"
"3051461","1","git rebase, keeping track of 'local' and 'remote'","<p>When doing a git rebase, I often have difficulty working out what is happening with the 'local' and 'remote' when resolving conflicts. I sometimes have the impression that they swap sides from one commit to the next.</p>

<p>This is probably (definitely) because I still haven't properly understood.</p>

<p>When rebasing, who is 'local' and who is 'remote'?</p>

<p>(I use P4Merge for resolving conflicts)</p>
","73","12753","<git><conflict><rebase>"
"8634356","1","Filter git log to show only my changes","<p>How can I filter the <code>git log</code> to show only my changes (excluding the changes committed by other developers)?</p>
","45","12396","<git><version-control>"
"1161609","1","How can I get the diff between all the commits that occured between two dates with Git?","<p>Or just all the commits that occurred between two dates? In SVN, you could do something like </p>

<pre><code>svn diff -r{date}:{date}
</code></pre>

<p>to do it! I can't seem to find a Git equivalent to this.</p>

<p>Specifically I'm looking at writing a script to send out daily emails with all the code committed that day and by who.</p>
","74","37068","<git><diff><git-diff><git-log>"
"1161869","1","How to get SHA of the latest commit from remote git repository?","<p>Does anyone know how to get the latest SHA of a given branch <strong>from outside</strong> a git repository?</p>

<p>If you are inside a git repository, you can do:</p>

<pre><code>git log origin/branch_X | head -1
</code></pre>

<p>However, I am not inside a git repository, and I would like to avoid having to <code>clone</code> a repository just to get the latest SHA of a tag/branch. Is there a clever way of doing this?</p>
","32","30407","<git>"
"5581857","1","Git and the Umlaut problem on Mac OS X","<p>Today I discovered a bug for Git on Mac&nbsp;OS&nbsp;X. </p>

<p>For example, I will commit a file with the name überschrift.txt with the German special character Ü at the beginning. From the command <code>git status</code> I get following output.</p>

<pre><code>Users-iMac: user$ git status

On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   ""U\314\210berschrift.txt""
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>It seems that Git 1.7.2 has a problem with German special characters on Mac&nbsp;OS&nbsp;X.
Is there a solution to get Git read the file names correct?</p>
","49","11207","<git><osx><versioning>"
"7813030","1","How can I have linked dependencies in a git repo?","<p>In my scripts, I often use libraries (mine or others') that have their own repos. I don't want to duplicate those in my repo and get stuck with updating them every time a new version comes out. 
However, when somebody clones the repo, it should still work locally and not have broken links.</p>

<p>Any ideas about what I could do?</p>
","82","16133","<git><github><dependencies><git-submodules><githooks>"
"7813194","1","How do I edit an existing tag message in git?","<p>We have several annotated tags in our git repository. The older tags have bogus messages that we would like to update to be in our new style.</p>

<pre><code>% git tag -n1
v1.0 message
v1.1 message
v1.2 message
v2.0 Version 2.0 built on 15 October 2011.
</code></pre>

<p>In this example, we would like to make v1.x messages look like the v2.0 message. Anyone know how we would do this?</p>
","101","23188","<git><git-tag>"
"13273852","1","How do I update my forked repo using SourceTree?","<p>I am using SourceTree (with BitBucket) to manage my code.  I have forked a repo, and the parent repo has been updated.</p>

<p>How do I use SourceTree to merge the upstream code into my forked repo?</p>
","56","13924","<git><github><mercurial><bitbucket><atlassian-sourcetree>"
"3178566","1","Deflate command line tool","<p>I'm looking for a command line wrapper for the DEFLATE algorithm.</p>

<p>I have a file (git blob) that is compressed using DEFLATE, and I want to uncompress it. The gzip command does not seem to have an option to directly use the DEFLATE algorithm, rather than the gzip format.</p>

<p>Ideally I'm looking for a standard Unix/Linux tool that can do this.</p>

<p>edit: This is the output I get when trying to use gzip for my problem:</p>

<pre><code>$ cat .git/objects/c0/fb67ab3fda7909000da003f4b2ce50a53f43e7 | gunzip

gzip: stdin: not in gzip format
</code></pre>
","43","24559","<git><blob><deflate>"
"5582208","1","Checkout GIT tag","<p>I'm developing a deployment script for my git project and I just started using tags, so I'm no expert. I've added a new tag called v2.0:</p>

<pre><code>git tag -a v2.0 -m ""Launching version 2.0""
</code></pre>

<p>And I've pushed this tag to the remote repository</p>

<pre><code>git push --tags
</code></pre>

<p>When I try to execute the deployment script and checking out the v2.0 tag I get this message:</p>

<blockquote>
  <p>*You are in 'detached HEAD' state. You can look around, make experimental changes and commit them, and you can discard any commits
  you make in this state without impacting any branches by performing
  another checkout. If you want to create a new branch to retain commits
  you create, you may do so (now or later) by using -b with the checkout
  command again. Example:   git checkout -b new_branch_name HEAD is now
  at*</p>
</blockquote>

<p>Is that normal? The repository is in a limbo because if I do:</p>

<pre><code>git branch
</code></pre>

<p>I get this output:</p>

<pre><code>* (no branch)
  master
</code></pre>

<p>Sorry if this is obvious but I couldn't figure it out.</p>
","125","98328","<git><deployment><tags><git-tag>"
"6142437","1","Make .git directory web inaccessible","<p>I have a website that I use github (closed source) to track changes and update site. The only problem is, it appears the .git directory is accessible via the web. How can I stop this and still be able to use git?</p>

<p>Should I use .htaccess?
Should I change permissions of .git?</p>
","67","21923","<git><.htaccess><apache2>"
"3989837","1","How secure would github hosting be for private repositories?","<p>I have read <a href=""http://stackoverflow.com/questions/109440/best-git-repository-hosting-for-commercial-project"">this thread</a> but I'm wondering how secure such a solution would be? I know that github offers ssh/ssl support and am familiar but could someone give me a breakdown of what sort of internal security they would use to make sure my committed conf/credential files don't get hacked?</p>

<p><strong>EDIT</strong>: I've read <a href=""http://help.github.com/security/"">http://help.github.com/security/</a> but I would like an answer from someone who has worked with multiple repository hosts and has real-world experience with this.</p>
","32","15115","<git><version-control><github>"
"6245570","1","How to get the current branch name in Git?","<p>I'm from a Subversion background and, when I had a branch, I knew what I was working on with ""These working files point to this branch"".</p>

<p>But with Git I'm not sure when I am editing a file in NetBeans or Notepad++, whether it's tied to the master or another branch.</p>

<p>There's no problem with <code>git</code> in bash, it tells me what I'm doing.</p>
","875","374507","<git>"
"10697463","1","Resolve Git merge conflicts in favor of their changes during a pull","<p>How do I resolve a git merge conflict in favor of pulled changes? </p>

<p>Basically I need to remove all conflicting changes from a working tree without having to go through all of the conflicts with a <code>git mergetool</code> while keeping all conflict-free changes. Preferably doing this while pulling, not afterwards.</p>
","290","174686","<git><git-merge><git-conflict-resolution>"
"2155887","1","Git submodule head 'reference is not a tree' error","<p>I have a project with a submodule that is pointing to an invalid commit: the submodule commit remained local and when I try to fetch it from another repo I get:</p>

<pre><code>$ git submodule update
fatal: reference is not a tree: 2d7cfbd09fc96c04c4c41148d44ed7778add6b43
Unable to checkout '2d7cfbd09fc96c04c4c41148d44ed7778add6b43' in submodule path 'mysubmodule'
</code></pre>

<p>I know what the submodule HEAD should be, is there any way I can change this locally, without pushing from the repo that <em>does</em> have commit <code>2d7cfbd09fc96c04c4c41148d44ed7778add6b43</code> ?</p>

<p>I'm not sure if I'm being clear... <a href=""http://www.mail-archive.com/bug-coreutils@gnu.org/msg16418.html"">here's a similar situation</a> I found.</p>
","239","97730","<git><git-submodules>"
"8640887","1","git merge without auto commit","<p>Is it possible to do a ""git merge"", but without a commit?</p>

<p>""man git merge"" says this:</p>

<pre><code>With --no-commit perform the merge but pretend the merge failed and do not autocommit,
to give the user a chance to inspect and further tweak the merge result before
committing.
</code></pre>

<p>But when I try to use git merge with the --no-commit it still auto-commits.  Here's what I did:</p>

<pre><code>$&gt; ~/git/testrepo$ git checkout master
Switched to branch 'master'

$&gt; ~/git/testrepo$ git branch
* master
  v1.0

$&gt; ~/git/testrepo$ git merge --no-commit v1.0
Updating c0c9fd2..18fa02c
Fast-forward
 file1 |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

$&gt; ~/git/testrepo$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
nothing to commit (working directory clean)
</code></pre>

<p>A subsequent ""git log"" reveals all the commits from the v1.0 branch merged into master.</p>
","151","63192","<git>"
"1482824","1","Setup a Git server with msysgit on Windows","<p>My friends and I are trying to setup Git for Windows using the tutorial <em><a href=""http://www.markembling.info/blog/view/git-server-gitosis-and-cygwin-on-windows"">Git Server: Gitosis and Cygwin on Windows</a></em>, but we just keep running into problems. </p>

<p>What would a ""Setup Git Server"" guide for Windows using <a href=""http://en.wikipedia.org/wiki/Git_%28software%29#Portability"">msysgit</a> be like?</p>

<p>There is a comment in the tutorial above suggesting it can't be done with msysgit because gitosis requires the use of an SSH Server and Bash? What is a step by step guide (as there is not one available)?</p>

<ol>
<li><p>Install mysisgit</p></li>
<li><p>?</p></li>
</ol>
","160","125061","<windows><git><msysgit>"
"1910082","1","git stash apply version","<p>I really hope someone can advise.</p>

<p>I have 2 branches master | design</p>

<p>Working in design I did a stash and switched to master made some adjustments. Switched back to design and done a stash apply only to loose all my changes in the design branch.</p>

<p>I am hoping all my work is within a stash as I have not cleared or removed these.</p>

<p>If I do a stash list I get 4 results:</p>

<pre><code>stash@{0}: WIP on design: f2c0c72... Adjust Password Recover Email
stash@{1}: WIP on design: f2c0c72... Adjust Password Recover Email
stash@{2}: WIP on design: eb65635... Email Adjust
stash@{3}: WIP on design: eb65635... Email Adjust
</code></pre>

<p>If I try <code>git stash apply f2c0c72</code> I am getting error:</p>

<pre><code>fatal: Needed a single revision
f2c0c72: no valid stashed state found
</code></pre>

<p>How can I apply a specific stash?</p>

<p>Hope someone can help !!</p>
","146","69845","<git>"
"6368987","1","How do I fetch only one branch of a remote git repository?","<p>I'd like to grab a single branch (not all of them) of a remote repository and create a local tracking branch that can track further updates to that remote branch.  The other branches in the remote repository are very big, so I'd like to avoid fetching them.  How do I do this?</p>

<p>Edit: I figured this out myself but StackOverflow refuses to let me provide the answer as an answer so I'll put it here in the question instead.</p>

<p>You use the -t option to git remote add, e.g.:</p>

<pre><code>git remote add -t remote-branch remote-name remote-url
</code></pre>

<p>You can use multiple ""<code>-t branch</code>"" options to grab multiple branches.</p>
","79","33632","<git>"
"10298291","1","Cannot push to GitHub - keeps saying need merge","<p>I'm new to <a href=""http://en.wikipedia.org/wiki/GitHub"">GitHub</a>. Today I met some issue when I was trying to push my code to GitHub.</p>

<pre><code>Pushing to git@github.com:519ebayproject/519ebayproject.git
To git@github.com:519ebayproject/519ebayproject.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@github.com:519ebayproject/519ebayproject.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<p>I have not pushed anything in the repository yet, so why do I need to pull something?</p>
","325","276496","<git>"
"3993426","1","Git: updating remote branch information","<p>In a git repository, a remote branch I am not tracking was deleted. When I type</p>

<pre><code>git branch -r
</code></pre>

<p>the deleted branch still shows up (and I can check it out)</p>

<p>What git command do I have to run to update this info?</p>
","72","43897","<git>"
"2281772","1","How to view remote Git revision on Heroku","<p>For deploying to Heroku, I use <code>git push heroku master</code>. But how do I see which revision I pushed up to heroku? (I'm often in doubt if I pushed the recent version up)</p>

<p>For those not familiar with it, Heroku's create script generates a remote git repository that you push to. Upon push, the code is deployed magically.</p>

<p>Heroku adds a remote repository to the local one in the form:</p>

<pre><code>$ git remote add heroku git@heroku.com:appname.git
</code></pre>

<p>More info in Heroku's manual <a href=""http://docs.heroku.com/git"">""Deploying with Git""</a></p>

<p>Question is: How can I see latest version in Heroku repository?</p>
","58","31494","<git><heroku><git-remote>"
"6143285","1","Git: add vs push vs commit","<p>What is the difference between git <code>add</code>, <code>push</code> and <code>commit</code>?</p>

<p>Just a little confused coming from SVN, where ""update"" will 'add' stuff, and commit does a ""push"" and will 'add' as well</p>

<p>There are all different functions within git. Hoping for some explanation from your experience.</p>
","64","53449","<git><repository><push><commit><add>"
"2160638","1","How can I format patch with what I stash away","<p>In git, I stash away my changes.  Is it possible that I can create a patch with what I stash away? And the apply that patch in some other repository (my co-worker's)?</p>

<p>I know 'git format-patch -1' but I think that is for what I have committed. But I am looking for the same thing for changes I stashed away?</p>

<p>And how can I apply a patch in other repository?</p>
","66","17469","<git><git-stash><git-patch>"
"4114095","1","Revert Git repository to a previous commit","<p>How do I revert from my current state to a snapshot made on a certain commit? </p>

<p>If I do <code>git log</code>, I get the following output:</p>

<pre><code>$ git log
commit a867b4af366350be2e7c21b8de9cc6504678a61b`
Author: Me &lt;me@me.com&gt;
Date:   Thu Nov 4 18:59:41 2010 -0400

blah blah blah...

commit 25eee4caef46ae64aa08e8ab3f988bc917ee1ce4
Author: Me &lt;me@me.com&gt;
Date:   Thu Nov 4 05:13:39 2010 -0400

more blah blah blah...

commit 0766c053c0ea2035e90f504928f8df3c9363b8bd
Author: Me &lt;me@me.com&gt;
Date:   Thu Nov 4 00:55:06 2010 -0400

And yet more blah blah...

commit 0d1d7fc32e5a947fbd92ee598033d85bfc445a50
Author: Me &lt;me@me.com&gt;
Date:   Wed Nov 3 23:56:08 2010 -0400

Yep, more blah blah.
</code></pre>

<p>How do revert to the commit from November 3, i.e. commit <code>0d1d7fc</code>?</p>
","3637","2301928","<git><git-reset><git-revert>"
"1910783","1","Git: 1.List all files in a branch, 2.compare files from different branch","<ol>
<li>Looking for a command like <code>ls -R</code> or <code>dir/s</code> can list all files in a commit/branch. </li>
<li>Is there any command can compare two files from different branch?
Thanks! a lot!</li>
</ol>
","41","31372","<git>"
"2176278","1","Preview a git push","<p>How can I see which commits are <em>actually</em> going to be pushed to a remote repository?</p>

<p>As far as I know, whenever I pull master from the remote repository, commits are likely to be generated, even if they're empty.</p>

<p>This causes the local master to be 'forward' even if there is really nothing to push.</p>

<p>Now, if I try (from master):</p>

<p>git cherry origin master</p>

<p>I have an idea of what's going to be pushed, though this also display some commits that I've already pushed.
Is there a way to display only the new content that's going to be pushed? </p>
","37","13883","<git><push>"
"6485508","1","Git interactive rebase no commits to pick","<p>I'm on master I did:</p>

<p>rebase -i </p>

<p>Got this:</p>

<pre><code>noop

# Rebase c947bec..7e259d3 onto c947bec
#
# Commands:
#  p, pick = use commit
#  r, reword = use commit, but edit the commit message
#  e, edit = use commit, but stop for amending
#  s, squash = use commit, but meld into previous commit
#  f, fixup = like ""squash"", but discard this commit's log message
#  x &lt;cmd&gt;, exec &lt;cmd&gt; = Run a shell command &lt;cmd&gt;, and stop if it fails
#
# If you remove a line here THAT COMMIT WILL BE LOST.
# However, if you remove everything, the rebase will be aborted.
#
</code></pre>

<p>I would like to pick some commits not all as some of them are not welcome.
Also how do you work when you want to keep some files or changes always 'local' to some branch ? Is there some helper like .gitignore ?g</p>
","42","13715","<git><rebase>"
"4114887","1","Is it possible to do a sparse checkout without checking out the whole repository first?","<p>I'm working with a repository with a very large number of files that takes hours to checkout. I'm looking into the possibility of whether Git would work well with this kind of repository now that it supports sparse checkouts but every example that I can find does the following:</p>

<pre><code>git clone &lt;path&gt;
git config core.sparsecheckout true
echo &lt;dir&gt; &gt; .git/info/sparse-checkout
git read-tree -m -u HEAD
</code></pre>

<p>The problem with this sequence of commands is the original clone also does a checkout. If you add -n to the original clone command, then the read-tree command results in the following error:</p>

<p>error: Sparse checkout leaves no entry on working directory</p>

<p>How can do the sparse checkout without checking out all the files first?</p>
","67","29854","<git>"
"13363553","1","Git error: ""Host Key Verification Failed"" when connecting to remote repository","<p>I am trying to connect to a remote Git repository that resides on my web server and clone it to my machine.</p>

<p>I am using the following format for my command:</p>

<pre><code>git clone ssh://username@domain.com/repository.git
</code></pre>

<p>This has worked fine for most of my team members.  Usually after running this command Git will prompt for the user's password, and then run the cloning.  However, when running on one of my machines I get the following error:</p>

<blockquote>
  <p>Host key verification failed. </p>
  
  <p>fatal: Could not read from remote
  repository.</p>
</blockquote>

<p>We are not using SSH keys to connect to this repository, so I'm not sure why Git is checking for one on this particular machine.</p>
","34","50478","<git><ssh><ssh-keys>"
"11124053","1","Accidentally committed .idea directory files into git","<p>I have accidentally committed the .idea/ directory into git. This is causing conflicts everywhere else I need to checkout my repo. I was wondering how do I remove these files from the remote?</p>

<p>I still need these files locally since the intellij IDE needs them. I just dont want them in the remote. I have added the directory .idea/ to my .gitignore and committed and pushed this file into remote. This seems to have no effect during my checkout on my other machine though. I still get the error message:</p>

<pre><code>error: The following untracked working tree files would be overwritten by checkout:
.idea/.name
.idea/compiler.xml
.idea/copyright/profiles_settings.xml
.idea/encodings.xml
.idea/misc.xml
.idea/modules.xml
.idea/scopes/scope_settings.xml
.idea/uiDesigner.xml
.idea/vcs.xml
.idea/workspace.xml
</code></pre>
","117","51059","<git>"
"3866733","1","How to clone only a folder from a git submodule?","<p>I'm trying to get just a folder from an external github repo to use in my project.</p>

<p>I want my project setup to be like this:</p>

<pre><code>-my_project
    -submodule
        -code.py
    -MY_README
    -.git
</code></pre>

<p>And I have the remote repo named some-submodule with this structure:</p>

<pre><code>-submodule
    -code.py
-README
-.gitignore
</code></pre>

<p>So I just want the submodule folder added to my project.</p>

<p>But I end up with this after <pre>git submodule add <a href=""http://github.com/user/submodule.git"">http://github.com/user/submodule.git</a> submodule</pre></p>

<pre><code>-my_project
    -submodule
        -submodule
            -code.py
        -README
        -.gitignore
    -MY_README
    -.gitignore
</code></pre>

<p>I new to git so I really don't know if it possible using just git. If it is of some help I'm using msysgit on windows.</p>

<p>So, is there anyway that I can get a clean submodule folder in my project from a public repo?</p>

<p>If you're curious of exactly what I'm trying to do I'm trying to take directly from their repos these django plugins <a href=""http://github.com/adieu/django-dbindexer"">1</a> <a href=""http://github.com/adieu/djangotoolbox"">2</a> to add them to my project.</p>
","36","14101","<git><git-submodules>"
"3866951","1","Change a branch name in a Git repo","<p>How do I rename an existing branch in a Git repo?</p>

<p>I want the current branch to have a new name.</p>
","184","83285","<git><git-branch>"
"6248231","1","git rebase after previous git merge","<p>I have the following situation:</p>

<ul>
<li>I created a <code>clone</code>(Y) from a main repository(X), because there were many people working on Y we didn't do any <code>rebase</code> but only <code>merge</code>s. When we want to deliver(<code>push</code>) Y to X we would like to do a <code>rebase</code> in order to have things nice and clean</li>
</ul>

<p>The problem is that when doing <code>rebase</code> we are asked to do all the merges that we already did in the previous <code>merge</code> steps. Is there a solution to this, beside the one that means actually re-doing the merges? I expect it to be pretty straightforward since we already solved the conflicting merges.</p>

<p>Thanks for any suggestions,</p>

<p>Iulian</p>
","39","11098","<git><merge><rebase><git-rebase>"
"8758612","1","Can I make a pull request on a gist on GitHub?","<p>Can I make a pull request on some else's gist on GitHub?</p>

<p>I'm aware of the fork, clone and commit workflow for a gist I own. I'd like to know if I can request to update someone else's gist with my fork.</p>
","119","9004","<git><github><gist><pull-request>"
"8527139","1","Showing commits made directly to a branch, ignoring merges in Git","<p>When using git, is there a way to show commits made to a branch, while ignoring all commits that were brought in by merging?  </p>

<p>I'm trying to review the code changes made on a branch while ignoring the ones we made on other branches that were merged in.  I know it's damn near impossible to show a diff in that fashion, but I'd like to be able to find out which commits I need to review.</p>
","33","7396","<git><merge><branch><diff>"
"4120001","1","what is the git equivalent for revision number?","<p>we use svn at work but for my personal projects I decided to use git. So I installed git yesterday and I wonder what is the <strong>revision number</strong> equivalent <strong>in git</strong>.</p>

<p>Let's say we work on version 3.0.8 and every bug fix has its own revision number we can use when we talk about this bug fix. So if I tag the code in git to 3.0.8 what then I can use as a revision number or some other more detailed kind of identification. I find the hash not so user friendly for humans.</p>
","157","104007","<git><version-control>"
"3357122","1","git pull VS git fetch git rebase","<p><a href=""http://stackoverflow.com/questions/292357/whats-the-difference-between-git-pull-and-git-fetch"">Another question</a> said <code>git pull</code> is like a <code>git fetch</code> + <code>git merge</code>.</p>

<p>But what is the difference between <code>git pull</code> VS <code>git fetch</code> + <code>git rebase</code>?</p>
","196","77066","<git><git-rebase><git-pull><git-fetch>"
"2290016","1","Git Commit Messages : 50/72 Formatting","<p>Tim Pope argues for a particular git commit message style in his blog post:
<a href=""http://www.tpope.net/node/106"">http://www.tpope.net/node/106</a></p>

<p>Here is a quick summary of what he recommends:</p>

<ul>
<li>First line is 50 characters or less</li>
<li>Then a blank line</li>
<li>Remaining text should be wrapped at 72 characters</li>
</ul>

<p>His blog post gives the rationale for these recommendations (which I will call ""50/72 formatting"" for brevity):</p>

<ul>
<li>In practice, some tools treat the first line as a subject line and the second paragraph as a body (similar to email)</li>
<li><code>git log</code> does not handle wrapping, so it is hard to read if lines are too long.</li>
<li><code>git format-patch --stdout</code> converts commits to email -- so to play nice it helps if your commits are already wrapped nicely.</li>
<li>a point I would like to add that I think Tim would agree with: the act of summarizing your commit is a good practice inherently in any version control system. It helps others (or a later you) find relevant commits more quickly.</li>
</ul>

<p>So, I have a couple of parts to my question:</p>

<ul>
<li>What chunk (roughly) of the 'thought leaders' or 'experienced users' of git embrace the 50/72 formatting style? I ask this because sometime newer users don't know or don't care about community practices.</li>
<li>For those that don't use this formatting, is there a principled reason for using a different formatting style? (Please note that I'm looking for an argument on the merits, not ""I've never heard of it"" or ""I don't care."")</li>
<li>Empirically speaking, what percentage of git repositories embrace this style? (In case someone wants to do an analysis on GitHub repositories... hint, hint.)</li>
</ul>

<p>My point here is not to recommend the 50/72 style or shoot down other styles. (To be open about it, I do prefer it, but I am open to other ideas.) I just want to get the rationale for why people like or oppose various git commit message styles. (Feel free to bring up points that haven't been mentioned, too.)</p>
","171","45788","<git>"
"8527597","1","How do I ignore files in a directory in git?","<p>What is the proper syntax for the <code>.gitignore</code> file to ignore files in a directory? Would it be</p>

<pre><code>config/databases.yml
cache/*
log/*
data/sql/*
lib/filter/base/*
lib/form/base/*
lib/model/map/*
lib/model/om/*
</code></pre>

<p>or</p>

<pre><code>/config/databases.yml
/cache/*
/log/*
/data/sql/*
/lib/filter/base/*
/lib/form/base/*
/lib/model/map/*
/lib/model/om/*
</code></pre>
","326","221978","<git><gitignore>"
"1209999","1","Using git to get just the latest revision","<p>I want to track a project that uses git. I don't want to clone the full repository and the full history, I just want the latest revision, and I want to be able to update to new revisions from the remote project.</p>

<p>I have tried using git clone, but this creates a copy of the entire repository (huge file size), and tracking changes makes the disk space even bigger (100mb of files now takes up over 2gb).</p>

<p>I'm not going to be submitting patches, and I don't need the history. I just want the latest version like in subversion.</p>

<p>Is this possible in git?</p>
","155","48987","<git>"
"3357280","1","Print commit message of a given commit in git","<p>I need a plumbing command to print the commit message of one given commit - nothing more, nothing less.</p>
","77","28665","<git><commit-message>"
"3686452","1","What are the differences between these git diff commands?","<p>What are the differences between the following git commands?</p>

<ol>
<li><code>git diff HEAD</code></li>
<li><code>git diff HEAD^</code></li>
<li><code>git diff --cached</code> or the synonym <code>git diff --staged</code></li>
<li><code>git diff</code></li>
</ol>
","33","6415","<git><git-diff>"
"8762601","1","How do I rename my git 'master' branch to 'release'?","<p>We would like to enforce a new policy for our projects that the master branch now be called the release branch to ensure it is more clear as to how the branch should be used. Naturally, we will have develop and release candidate branches as well.</p>

<p>I understand I can rename the master branch locally by simply using the following:</p>

<pre><code>git branch -m master release
</code></pre>

<p>However, that is only locally. Even if I push this up to the remote, the HEAD still points to the remote master branch. I want to get rid of the master branch completely and make the default local branch upon initial clone, be release.</p>

<p>How can I achieve this?</p>

<p><strong>EDIT:</strong> It seems that since the origin is on a gitorious server, I get errors deleting the master branch. I'm trying to see now if it is possible to change this so that the default branch is 'release'.</p>
","39","24717","<git><version-control><branch><git-branch>"
"1484648","1","How to migrate GIT repository from one server to a new one","<p>I have a server that I'm taking down.  The only thing I have left to migrate is my repository.  This server is listed as the origin (master) for one of my projects.  What is the proper way to move the repository to keep the history.</p>
","144","70711","<git>"
"4124792","1","Remove an Existing File from a Git Repo","<p>I want git to stop tracking my local development log (log/development.log) in our repositories.  Is this possible and how can I do it?</p>
","122","27756","<git>"
"2293498","1","Git commit hooks - global settings","<p>I've written a Git post-commit hook and it works correctly.  However, I want to add this hook to apply to all current (and future) git repositories I am working on.  I tried adding the hook to my <code>~/.git/hooks/</code> instead of in the hooks directory in the project directory, however, this did not seem to work.</p>

<p>Is there any way to create global Git hooks that will apply to all repositories on my system (without having to copy them into each project directory)?  If not, what would be the best solution going forward -- perhaps a git-init template?</p>
","164","32996","<git><hook><githooks>"
"11131197","1","Undo git update-index --skip-worktree","<p>A while ago I did this to ignore changes to a file tracked by git:</p>

<pre><code>git update-index --skip-worktree &lt;file&gt;
</code></pre>

<p>Now I actually want to commit changes to that file to source. How do I do undo the effects of <code>skip-worktree</code>?</p>

<p>Thanks,
Kevin</p>
","46","7109","<git><undo>"
"2294024","1","cloned project from github. heroku does not work","<p>I cloned a project from github over to my desktop.  I used to work on it form my laptop.</p>

<p>However, on laptop heroku does not seem to work for this app eventhough i have it installed. </p>

<p>First problem:</p>

<pre><code>heroku open
&gt;No app specified.
&gt;Run this command from app folder or set it adding --app &lt;app name&gt;
</code></pre>

<p>I did not have to specify the <code>--app</code> on my laptop. Because I guess I did command <code>heroku create</code> initially on the lapop. </p>

<p>Second Probelm:</p>

<pre><code>git push heroku master
</code></pre>

<p>gives errors</p>

<pre><code>fatal: 'heroku' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>and <code>heroku list</code></p>

<p>says</p>

<pre><code> !   This version of the heroku gem has been deprecated.
 !   Please update it by running: gem update heroku
</code></pre>
","36","13862","<ruby-on-rails><git><heroku>"
"2294313","1","How to download a branch with git?","<p>I have a project hosted on GitHub. I created a branch on one computer, then pushed my changes to github with </p>

<pre><code>git push origin branch-name
</code></pre>

<p>Now I am on a different computer, and I want to download that branch. So I tried:</p>

<pre><code>git pull origin branch-name
</code></pre>

<p>...but all this did was overwrite my master branch with the changes in my new branch.</p>

<p>What do I need to do to properly pull my remote branch?</p>
","102","91294","<git>"
"11133290","1","Git merging using Meld","<p>When there's a collison during <code>git merge</code>, I open a mergetool called <a href=""http://meldmerge.org/"">Meld</a>. It opens three files LOCAL, BASE and REMOTE. As I've read LOCAL is my local branch, BASE is common ancestor and REMOTE is the branch to be merged.</p>

<p>Now to my question: which version of the file will be finally used? Is it REMOTE? If so, can I edit it as I want, regardless what's in the BASE branch for example?</p>
","111","53516","<git><git-merge><meld>"
"8766525","1","'git branch -av' showing remote branch that no longer exists","<p>This is probably a dumb question, but I'm brand new to git and am seeing a remote branch that no longer exists.</p>

<pre><code>$ git branch -a
* master
  remotes/origin/master
  remotes/origin/production
</code></pre>

<p>I don't believe the production branch exists remotely and can't figure out why it still shows locally. How can I delete/remove this branch? Here's what an attempt to remove it looks like:</p>

<pre><code>$ git push origin :production

error: unable to push to unqualified destination: production
The destination refspec neither matches an existing ref on the remote nor
begins with refs/, and we are unable to guess a prefix based on the source ref.
error: failed to push some refs to 'git@IP:puppet.git'
</code></pre>

<p>I can checkout the supposedly remote production branch but get this:</p>

<pre><code>$ git checkout origin/production
Note: checking out 'origin/production'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at c323996... added powerdns module, no really
</code></pre>

<p>I have no clue what the heck I'm doing. Any help would be appreciated.</p>
","67","7962","<git>"
"2302736","1","Trimming Git Commits/Squashing Git History","<p>I check my code into a Git branch every few minutes or so, and the comments end up being things like ""Everything broken starting again"" and other absurdities.</p>

<p>Then every few minutes/hours/days I do a serious commit with a real comment like, ""Fixed bug #22.55, 3rd time."" <strong>How can I separate these two concepts?</strong> I would like to be able to remove all my frequent-commits and just leave the serious ones.</p>
","53","10516","<git><branch>"
"6591213","1","How do I rename the local branch?","<p>I do not want to rename a remote branch, as described in <em><a href=""http://stackoverflow.com/questions/1526794/rename-master-branch-for-both-local-and-remote-git-repositories?answertab=votes#tab-top"">Rename master branch for both local and remote Git repositories</a></em>.</p>

<p>Instead, I want to use the simplest way to rename a local branch, which is not pushed to a remote branch.</p>
","3984","1002397","<git><git-branch>"
"8855317","1","git push Out of memory, malloc failed","<p>I am trying to push my changes remotely to GitHub, every so often <strong><em>git</em></strong> fails due to </p>

<pre><code>C:\dev\projects&gt;git push -v
Pushing to https://user@github.com/mycompany/My-Project.git
Password for 'github.com':
fatal: Out of memory, malloc failed (tried to allocate 524288000 bytes)
fatal: write error: Invalid argument
</code></pre>

<p>This is very, very aggravating.  I have run the following commands, upgraded <strong><em>git</em></strong> (which wiped out my settings and caused lots of pain, but I digress)</p>

<pre><code>git gc --auto --prune=today --aggressive
git repack
</code></pre>

<p>I have even bumped the value of</p>

<pre><code>http.postbuffer
</code></pre>

<p>but eventually it will fail again.</p>

<p>This is a typical Rails 3.1 application, total project size on disk is 9.69 MB.</p>
","32","24028","<git><github>"
"11219266","1","how to fix ""WARNING: terminal is not fully functional"" error in command console?","<p>I was using hg, now I am converting to Git.</p>

<p>But after installing it, every time I do ""git diff"" or ""git log"", I get this error: WARNING: terminal is not fully functional.</p>

<p>How do I get rid of this?</p>
","46","17228","<git><command-line>"
"1535524","1","Git submodule inside of a submodule (nested submodules)","<p>Is it possible for a git submodule to be made of several other git submodules, and the super git repo to fetch the contents for each submodule?</p>

<p>I have tried to do this using the obvious/naive approach of creating a git repo holding several submodules.</p>

<p>Then adding this git repo to another git repo as a submodule.</p>

<p>Then attempting to pull from the root directory of the super git repo by <code>git submodule init</code> and then <code>git submodule update</code>.  But this fails to fetch the sub-submodules.</p>
","83","20726","<git>"
"5802426","1","Git error: src refspec master does not match any","<p>I need to create a repo named <code>carboncake</code>.</p>

<p><strong>I tried this:</strong></p>

<p>Cloned the gitosis-admin repository to my local machine</p>

<pre><code>$ git clone gitosis@myserver.net:repositories/gitosis-admin.git
$ cd gitosis-admin
$ vim gitosis.conf
</code></pre>

<p>Added the <code>[repo carboncake]</code> and <code>[group carboncake]</code> section to the end of the file</p>

<pre><code>[gitosis]

[group team]
writable = sweepshots
members = git_id_rsa

[group gitosis-admin]
writable = gitosis-admin
members = git_id_rsa

[repo carboncake]
description = A brand new app by Mithun.
owner = Mithun P

[group carboncake]
writable = myappname
members = mithun @core
</code></pre>

<p>Then copied the pub key file generated by Putty (I'm using Git basg for Windows):</p>

<p><code>$cp /some/where/mithun.pub keydir/mithun.pub</code></p>

<p>Executed the following commands:</p>

<pre><code>$ git add gitosis.conf keydir/mithun.pub
$ git commit -m ""Added 'carboncake' repository and 'mithun' user.""

$ git pull --rebase
$ git push
</code></pre>

<p>But it doesn't create any carboncake.git in My Server.</p>

<p><strong>So I followed this:</strong></p>

<p>Executed the following commands on the server:</p>

<pre><code>$ su gitosis 
$ git init --bare /srv/gitosis/repositories/carboncake.git
</code></pre>

<p><strong>Here's my problem:</strong> </p>

<p>I tried to checkout/clone the new repository from my local machine</p>

<pre><code>$ mkdir carboncake
$ cd carboncake
$ git init 
$ touch a_text_file.txt 
$ git add a_text_file.txt 
$ git remote add origin gitosis@myserver.net:repositories/carboncake.git
$ git push origin master
</code></pre>

<p>Which returned the error:</p>

<pre><code>error: src refspec master does not match any.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to 'gitosis@myserver.net:repositories/carboncake.git'
</code></pre>

<p>When I tried <code>git push origin HEAD:master</code> it returned the error:</p>

<pre><code>error: src refspec HEAD does not match any.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to 'gitosis@myserver.net:repositories/carboncake.git'
</code></pre>

<p>When I tried <code>git push origin master:refs/heads/master</code> it returned the error:</p>

<pre><code>error: src refspec master does not match any.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to 'gitosis@myserver.net:repositories/carboncake.git'
</code></pre>

<p><code>git show-ref</code> on the local machine does not display anything</p>

<p>Also <code>/srv/gitosis/repositories/carboncake.git/refs/heads/</code> directory on the server is empty.</p>

<p>How can I fix this?</p>
","126","116653","<git><repository>"
"17659206","1","Git push results in ""Authentication Failed""","<p>I have been using Github for a little while and I have been fine with <code>git add</code>, <code>git commit</code>, and <code>git push</code> so far with no problems. Suddenly I am having an error that says:</p>

<blockquote>
  <p>fatal: Authentication Failed</p>
</blockquote>

<p>In the terminal I cloned a repository, worked on a file and then I used <code>git add</code> to add the file to the commit log and when I did <code>git commit</code>, it worked fine. Finally, <code>git push</code> asks for username and password. I put those in correctly and every time I do this, it says the same error.</p>

<p>Does anyone have any idea what the cause of this problem is and how I can fix it?</p>

<p>The contents of <code>.git/config</code> are:</p>

<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote ""origin""]
        url = http://www.github.com/######/Random-Python-Tests
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""master""]
        remote = origin
        merge = refs/heads/master
[user]
        name = #####
        email = ############
</code></pre>
","91","92351","<git><github>"
"1386291","1","git --git-dir not working as expected","<p>I am trying to run git from a different directory than I am in. So for example if I am in:</p>

<pre><code>cd /home/domain/
git status &lt;&lt; runs perfect ie
# On branch master
# Your branch is ahead of 'origin/master' by 6 commits.
</code></pre>

<p>So now I want to run this command from a different directory using the <code>--git-dir</code> option.</p>

<p>So lets say I'm in <code>root/</code> and try this:</p>

<pre><code>git --git-dir=""/home/domain/"" status
## Error 
fatal: Not a git repository: '/home/domain/'
</code></pre>

<p>I've also tried to include the <code>.git</code> folder i.e.</p>

<pre><code>git --git-dir=""/home/domain/.git/"" status
</code></pre>

<p>But this looks like it's trying to run git from the root, i.e. deleting everything from my domain folder and adding everything in root.</p>

<p>Hope someone can advise on what I'm doing wrong.</p>

<p>Thank you in advance if you can advise.</p>
","133","42656","<git>"
"2298047","1","git ls-files: howto identify new files (added, not committed)?","<p>After I called <code>git add &lt;file&gt;</code> the command <code>git status</code> will show me something like:</p>

<pre><code>...
new file:    &lt;file&gt;
</code></pre>

<p>Somehow I can't manage it to get the same information by using <code>ls-files</code>, it (<code>ls-files -tc</code> in this case) will show me:</p>

<pre><code>H &lt;commited file&gt;
H &lt;other commited file&gt;
H &lt;file&gt;
</code></pre>

<p>There seems no commandline switch to exist for new files. The file is reported as cached, which is ok, but how do I find out that it is not committed at this time?</p>

<p>Is this possible with <code>ls-files</code> or some similar command (where I do not have to parse a lot of output like in the case of <code>git status</code>)?</p>
","34","27912","<git>"
"6372044","1","How do I merge a specific commit from one branch into another in Git?","<p>I have <code>BranchA</code> which is 113 commits ahead of <code>BranchB</code>.</p>

<p>But I only want the last 10 or so commits from <code>BranchA</code> merged into <code>BranchB</code>.</p>

<p>Is there a way to do this?</p>
","71","50738","<git><github>"
"8939808","1","Git Remove unwanted commits from a Pull Request","<p>I have started working on a project and I made some unwanted commits which I pushed to origin master. Now, when I try to do a pull request, Github wants to commit all of the previous commits. </p>

<p>My question is, how do I remove the unwanted commits and commit the changes that I want to commit so that I am up to date with master? </p>
","43","25295","<git><github><pull-request>"
"8939977","1","Git push rejected after feature branch rebase","<p>OK, I thought this was a simple git scenario, what am I missing?</p>

<p>I have a <code>master</code> branch and a <code>feature</code> branch. I do some work on <code>master</code>, some on <code>feature</code>, and then some more on <code>master</code>. I end up with something like this (lexicographic order implies order of commits):</p>

<pre><code>A--B--C------F--G  (master)
       \    
        D--E  (feature)
</code></pre>

<p>I have no problem to <code>git push origin master</code> to keep the remote <code>master</code> updated, nor with <code>git push origin feature</code> (when on <code>feature</code>) in order to maintain a remote backup for my <code>feature</code> work. Up until now, we're good.</p>

<p>But now I wanna rebase <code>feature</code> on top of the <code>F--G</code> commits on master, so I <code>git checkout feature</code> and <code>git rebase master</code>. Still good. Now we have:</p>

<pre><code>A--B--C------F--G  (master)
                 \
                  D'--E'  (feature)
</code></pre>

<p><strong>Problem:</strong> the moment I want to backup the new rebased <code>feature</code> branched with <code>git push origin feature</code>, <strong>the push is rejected</strong> since the tree has changed due to the rebasing. This can only be solved with <code>git push --force origin feature</code>.</p>

<p>I hate using <code>--force</code> without being sure I need it. So, do I need it? Does the rebasing <em>necessarily</em> imply that the next <code>push</code> should be <code>--force</code>ful?</p>

<p>This feature branch is not shared with any other devs, so I have no problem <em>de facto</em> with the forced push, I'm not gonna lose any data, the question is more conceptual.</p>
","280","58050","<git>"
"15314760","1","Managing SSH keys within Jenkins for Git","<p>I'm trying to get Jenkins up and running with a GitHub hosted repository (using the Jenkins Git plugin). The repository has multiple git submodules, so I'm not sure I want to try and manage multiple deploy keys.</p>

<p>My personal GitHub user account is a collaborator of each of the projects I wish to pull in with Jenkins, so I've generated an SSH key within <code>/var/lib/jenkins/.ssh</code> and added it to my personal GitHub account.</p>

<p>However, when I try and add the repository URL to my Jenkins project configuration, I get:</p>

<pre><code>Failed to connect to repository : Command ""git ls-remote -h git@github.com:***/***.git HEAD"" returned status code 128:
stdout: 
stderr: Host key verification failed. 
fatal: The remote end hung up unexpectedly
</code></pre>

<p>Likewise, when I schedule a build I get:</p>

<pre><code>stderr: Host key verification failed.
fatal: The remote end hung up unexpectedly
</code></pre>

<p>I've also tried setting up an SSH config file as outlined <a href=""http://blog.firmhouse.com/configuring-multiple-private-ssh-deploy-keys-in-jenkins-for-github-com"">here</a>, but to no avail.</p>

<p>Can anyone shed any light? Thanks</p>

<p><strong>EDIT</strong></p>

<p>I should add that I'm running CentOS 5.8</p>
","35","72294","<git><ssh><jenkins><continuous-integration>"
"6682740","1","How can I unstage my files again after making a local commit?","<p>I have done the following command</p>

<pre><code>git add &lt;foo.java&gt;
git commit -m ""add the foo java""
</code></pre>

<p>How can I delete my local commit now and make foo.java in an unstaged state?</p>

<p>If I type <code>git reset --hard</code>, I found that it will revert my modify foo.java to the original one.</p>
","65","55075","<git>"
"6500524","1","Git subtree or GitSlave as alternatives to Git Submodules?","<p>I feel that using Git submodules is somehow troublesome for my development workflow. I found out that Git subtree and gitslave might be a better solution. I can't find any comparison information about these 2 options.  </p>

<h2>Questions</h2>

<p><em>Which is better and why?</em></p>

<p><em>Do these 2 have a windows version to work with?</em></p>
","45","7786","<git><git-submodules><git-slave>"
"11302639","1","Delete forked repo from GitHub","<p>I'm starting with git and GitHub and there's a project I'm watching on GitHub. I unintentionally clicked to fork it. Now it appears as a new project to me.</p>

<p>I have some doubts about it:</p>

<ul>
<li>I know if commit or do another thing to my forked repo, it will be updated, but the updated code will take effect only after the project's author request the pull. Right?</li>
<li>If I go to admin panel on GitHub there's a delete option. If I delete it as the option above, will it make any effect in the original one or not?</li>
</ul>

<p>I'd like to delete it. By now I'm just studying the code and don't really need the fork.</p>

<p>Thanks!</p>
","168","77660","<git><github>"
"6373277","1","git: sync local repo with remote one","<p>I have local &amp; remote git repositories. I want to sync my local repository with remote repository so that my local repository becomes 100% copy of remote repository. Meaning that if certain files differ in these repos we override local ones with remote ones. And if there are files in local repos that do not exist in remote repo, local files get removed.</p>

<p>Is there a way to achieve that other than doing a fresh clone of remote repo?  </p>
","92","131049","<git>"
"4323440","1","How do I stop a Git commit when VI is on the screen waiting for a commit message?","<p>I have asked Git to perform a commit from within git bash, It has brought up VI as it always does.</p>

<p>I now wish to cancel the commit, how do I prevent proceeding with the commit from this point?</p>
","87","14730","<git>"
"6500880","1","git turn off ""LF will be replaced by CRLF"" warning","<p>I understand what the warning is for and how to turn off the function, but what I need is to turn off the warning itself. Help please?</p>
","50","9519","<git>"
"4131164","1","How do I pull from another computer's repository in Git?","<p>For example, I have cloned the origin repository on two computers. Then, I go ahead and make some changes and commit to the local repository of computer A. How do I now pull these changes to computer B? Both computer A and B are connected to a network. </p>

<p>What I am looking for will be the equivalent of someone manually creating a patch and sending it to me, which I can apply to my working copy/local repo. </p>
","53","38324","<git><git-pull>"
"5803768","1","In XCode 4 how do I add a remote GitHub repository to an existing local project?","<p>The Git integration in XCode 4 is very welcome however it seems to be a bit flaky when it comes to dealing with remote repositories.
For clarity I'm using OS X version 10.6.7 and XCode 4.0.2 (4A2002a). </p>

<p>If I create a new XCode 4 Project and accept the option to create a local Git repository, all is well. I can commit locally and that's great.</p>

<p>When I want to push the new project to GitHub I want to add a remote repository and push my local changes up to GitHub. I can add a GitHub repository to XCode 4 as a new Repository in the Organizer window but there's no method of setting it as a remote repository for my existing project. </p>

<p>So I switch to using git commands in Terminal.</p>

<pre><code>git remote add origin https://&lt;username&gt;@github.com/&lt;organization&gt;/&lt;repository&gt;.git
</code></pre>

<p>If I then go back to XCode 4 and try to use </p>

<blockquote>
  <p>File -> Source Control -> Push...  </p>
</blockquote>

<p>then the <strong>Choose the repository to which to push changes.</strong> dialog appears listing the <em>origin</em> remote repository. There's a yellow indicator saying that Authentication is required, which is fine as I've not been able to enter my credentials yet for HTTPS. 
However when I click 'Push'  and it tries to push the changes it says ""The operation could not be performed because access to the repository 'origin' is denied.""</p>

<p>A dialog prompting me for my username and password then appears with my  pre-filled out so it must be reading this correctly from the local repository's config.</p>

<p>When I enter my password XCode 4 then crashes with the following error</p>

<pre><code>ASSERTION FAILURE in /SourceCache/IDEKit/IDEKit-303/Framework/Classes/SourceControl/IDESourceControlOperationInfo.m:59
Details:  Message sent to invalidated object: &lt;IDESourceControlPushOperationInfo, 0x200bd2a80&gt;. Backtrace for invalidation:
 (null)
Object:   &lt;IDESourceControlPushOperationInfo: 0x200bd2a80&gt;
Method:   -invalidate
Thread:   &lt;NSThread: 0x200020700&gt;{name = (null), num = 1}
Hints:   None
</code></pre>

<p>If I restart XCode an <em>origin</em> repository has been added to the Repositories browser in Organizer and I can see the master branch on GitHub so I know the credentials are right without me changing anything.</p>

<p>Has anyone found a reliable way of using XCode 4 with GitHub starting with a local project first?</p>

<p>If I clone an existing GitHub repository with an XCode project in it, open it with XCode 4 then even though the first Push seems to fail, the 2nd push did then work. So maybe starting from absolute scratch with XCode 4 creating the repository for me isn't the best pattern (until they improve the Git tooling in a later version of XCode 4).</p>

<h2>EDIT WITH FURTHER DETAILS OF ONE WORKAROUND</h2>

<p>This example only really applies to the first project you're adding to a GitHub repository. As such I think you're better off with the following steps, bearing in mind there still seem to be some XCode 'gotchas' in this solution.</p>

<ol>
<li>List item</li>
<li>'Connect to a repository' from Welcome to XCode dialog.</li>
<li>Use GitHub SSH URL for Location</li>
<li>Give it a name (<em>RepositoryName</em>)and Clone to a directory</li>
<li>1st attempt appears to fail even though contents are downloaded</li>
<li>Try Again and it works.</li>
<li>There is now a new Repository defined in the Organizer window with its origin set to the GitHub remote SSH URL.</li>
<li>Create a New Project within the directory you just cloned into but DO NOT tick the 'Create local git repository for this project' option.</li>
<li>Do initial commit to local Git repository.</li>
<li>Try Source Control -> Push and XCode 4 fails with 'The operation could not be performed because access to the repository <em>RepositoryName</em> was denied. Check username and password'</li>
<li>Try Source Control -> Push and XCode 4 pops up the remote Repository dialog again but this time has detected a remote Repository called <em>origin</em>. Next to it there's a yellow ball and 'Authentication required'.</li>
<li>Clicking 'Push' again caused the remote Push to work.</li>
</ol>

<p>One thing I've spotted and not managed to work out yet is that the response messages back from GitHub with the checkin hash value and any messages seem to get reported in XCode Log navigator as Push failures, even though the Push is successful as far as GitHub is concerned.</p>

<p>Anyone else have a better solution?</p>
","48","57085","<git><github><xcode4><push>"
"13541615","1","How to remove files that are listed in the .gitignore but still on the repository?","<p>I have some files in my repository that should be ignored, i added them to the .gitignore but, of course, they are not removed from my repository.</p>

<p>So my question is, is there a magic command or script using filter-branch that can rewrite my history and remove all these files easily? Or simply a command that will create a commit that will remove them ?</p>
","78","32457","<git><ignore><gitignore>"
"3998881","1","Git pull into wrong branch","<p>Myself and one other developer had been merging and pushing our work to a non-master branch called toolwork. That way, we didn't impact the rest of the team. My topic branch was called DPM-93 and my git workflow was this.</p>

<pre><code># do some work
git checkout DPM-93
git commit -m ""did some work""

# catch up
git checkout toolwork
git pull origin toolwork

# rebase my topic branch
git checkout DPM-93
git rebase toolwork

# merge and push my changes
git checkout toolwork
git merge --no-ff DPM-93
git push origin toolwork
</code></pre>

<p>That was mostly working fine until I accidently issued these git commands</p>

<pre><code>git checkout toolwork
git pull origin master
</code></pre>

<p>At that point, a bunch of new stuff showed up in branch toolwork and I'm not sure how to get rid of it short of deleting my workspace and re-cloning from the repo.</p>

<p>Is there any way to back this out to the state before the pull?</p>
","42","11407","<git><branch><undo><pull>"
"5667106","1","How to delete a ""git clone"" on a local computer","<p>Used <em><code>git clone [url]</code></em> to clone an open source project but it cloned to the </p>

<p><strong><code>C:\Documents and Setings\$USER\project</code></strong></p>

<p>What I wanted to do is clone the project to <strong><code>C:\project</code></strong>. I don't want to have duplicate project clones on my local machine.</p>

<p>How do I go about moving it to that location or deleting the existing repository(hopefully that's a correct term) and cloning it again?</p>

<p>I assume after deleting I should use something like the following to clone it to the desired location?</p>

<p><em><code>$ git clone [url] C:\project</code></em></p>
","32","56788","<git><windows-xp><move>"
"1836742","1","Using git, how do I ignore a file in one branch but have it committed in another branch?","<p>I've got a project that I'm deploying to <a href=""http://heroku.com"">heroku</a>.  The source code tree includes a bunch of mp3 files (the website will be for a recording project I was heavily involved with). </p>

<p>I'd like to put the source code for it up on <a href=""http://github.com"">github</a>, but github has a 300 MB limit on their free accounts.  I don't want to use 50 MB of my limit on a bunch of mp3 files.  Obviously, I could add them to the <code>.gitignore</code> file to keep them out of my repo.</p>

<p>However, I deploy to heroku using <code>git push heroku</code>.  The mp3 files must be present in the branch I push to heroku so that they get get deployed.</p>

<p>Ideally, I'd like to <code>.gitignore</code> the mp3 files in my local master branch so that when I push that to github, the mp3s are not included.  Then I'd keep a local production branch that has the mp3s committed rather than ignored.  To deploy, I would merge master into production, and then push the production branch to heroku.</p>

<p>I can't get this to work right.</p>

<p>Here's an example of what I'm trying to do...</p>

<pre><code>$ git init git-ignore-test
$ cd git-ignore-test
$ echo ""*.ignored"" &gt;&gt; .gitignore
$ git add .gitignore &amp;&amp; git commit -m ""Ignore .ignored files""
$ touch Foo.ignored
</code></pre>

<p>At this point, Foo.ignored is ignored in my master branch, but it's still present, so my project can use it.</p>

<pre><code>$ git checkout -b unignored
$ cat /dev/null &gt; .gitignore
$ git add Foo.ignored .gitignore &amp;&amp; git commit -m ""Unignore .ignored files""
</code></pre>

<p>Now I've got a branch with these files committed, as I want.  However, when I switch back to my master branch, Foo.ignored is gone.</p>

<p>Anyone got any suggestions for a better way to set this up?</p>

<p>Edit: just to clarify, I want the mp3 files to be present in both branches so that when I run the site locally (using either branch) the site works.  I just want the files ignored in one branch so when I push to github they are not pushed as well.  Usually .gitignore works well for this kind of thing (i.e. keeping a local copy of a file that does not get included in a push to a remote), but when I switch to the branch with the files checked in, and then back to the branch with the files ignored, the files vanish.</p>
","85","25456","<git><github><heroku><gitignore>"
"10755655","1","Git: Ignore tracked files","<p>I have some tracked files in a repository which are automatically modified when building the code. I don't want to untrack them, I just don't want them to appear as modified and I don't want them to be staged when I git add.</p>

<p>Is this possible? </p>
","54","16511","<git>"
"4415127","1","Git vs Team Foundation Server","<p>I introduced Git to my dev team, and everyone hates it except me. They want to replace
it with Team Foundation Server. I feel like this is a huge step backwards, although I am not very familiar with TFS. Can someone with experience compare branching support on TFS to Git branching? Also, in general, what are the pros and cons of TFS? Am I going to hate it after
using Git for a few years?</p>
","146","78630","<git><tfs>"
"3999541","1","After git clone, I do not see my branch","<p>I have the repository on github. It contains master and one branch.  When I clone, I obtain only master and do not see my branch. Why is it so? How can I see all branches in the repository?</p>

<p>Thanks. </p>
","32","12614","<git><github>"
"2164581","1","Remove file from git repository (history)","<p>(solved, see bottom of the question body)<br>
Looking for this for a long time now, what I have till now is:</p>

<ul>
<li><a href=""http://dound.com/2009/04/git-forever-remove-files-or-folders-from-history/"">http://dound.com/2009/04/git-forever-remove-files-or-folders-from-history/</a>
and</li>
<li><a href=""http://progit.org/book/ch9-7.html"">http://progit.org/book/ch9-7.html</a></li>
</ul>

<p>Pretty much the same method, but both of them leave objects in pack files... Stuck.<br>
What I tried:</p>

<pre><code>git filter-branch --index-filter 'git rm --cached --ignore-unmatch file_name'
rm -Rf .git/refs/original
rm -Rf .git/logs/
git gc
</code></pre>

<p>Still have files in the pack, and this is how I know it:  </p>

<pre><code>git verify-pack -v .git/objects/pack/pack-3f8c0...bb.idx | sort -k 3 -n | tail -3
</code></pre>

<p>And this:</p>

<pre><code>git filter-branch --index-filter ""git rm -rf --cached --ignore-unmatch file_name"" HEAD
rm -rf .git/refs/original/ &amp;&amp; git reflog expire --all &amp;&amp;  git gc --aggressive --prune
</code></pre>

<p>The same...</p>

<p>Tried <code>git clone</code> trick, it removed some of the files (~3000 of them) but the largest files are still there...</p>

<p>I have some large legacy files in the repository, ~200M, and I really don't want them there... And I don't want to reset the repository to 0 :(</p>

<p>SOLUTION:
This is the shortest way to get rid of the files:</p>

<ol>
<li>check .git/packed-refs - my problem was that I had there a <code>refs/remotes/origin/master</code> line for a remote repository, delete it, otherwise git won't remove those files</li>
<li><em>(optional)</em> <code>git verify-pack -v .git/objects/pack/#{pack-name}.idx | sort -k 3 -n | tail -5</code> - to check for the largest files</li>
<li><em>(optional)</em> <code>git rev-list --objects --all | grep a0d770a97ff0fac0be1d777b32cc67fe69eb9a98</code> - to check what are those files</li>
<li><code>git filter-branch --index-filter 'git rm --cached --ignore-unmatch file_names'</code> - to remove a file from all revisions</li>
<li><code>rm -rf .git/refs/original/</code> - to remove git's backup</li>
<li><code>git reflog expire --all --expire='0 days'</code> - to expire all the loose objects</li>
<li><code>git fsck --full --unreachable</code> - to check if there are any loose objects</li>
<li><code>git repack -A -d</code> - repacking</li>
<li><code>git prune</code> - to finally remove those objects</li>
</ol>
","64","25169","<git><version-control><git-rewrite-history>"
"11384928","1","Change Git repository directory location.","<p>With Git/Github for Windows, if I have a repository with this directory: <code>C:\dir1\dir2</code>, what do I need to do to move the repo files to <code>C:\dir1</code>?  I can obviously physically copy and paste the files, but what do I need to do on the Git side?</p>

<p>I have this repo on GitHub and I use Git Bash and GitHub for Windows. </p>
","69","52158","<git><github><github-for-windows>"
"1537616","1","Handling renames: svn vs. git vs. mercurial","<p>How do each of these VCS handle renames?</p>

<p>I have found a lot of contradicting information stating that git tracks LOC (lines of code) instead of files, renames would therefore have no meaning for it.</p>
","41","9185","<svn><git><version-control><mercurial><rename>"
"5667476","1","Git non-fast-forward rejected","<p>I feel like this question has been asked many times, but the solution is typically ""I deleted the directory and re-did my work with a fresh checkout."" I did a commit and push but realized that I referred to the wrong ticket number in the commit message. So I looked on SO for a quick <a href=""http://stackoverflow.com/questions/179123/how-do-i-edit-an-incorrect-commit-message-in-git"">solution</a> and ended up typing the following into the terminal:</p>

<pre><code>$ git reset --soft HEAD^
$ git commit -m ""... correct message ...""
</code></pre>

<p>The only problem is I am getting the following error message:</p>

<pre><code>To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes before pushing again.  See the 'Note about
fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>I am using the git-flow model and am working on the develop branch. How can I merge things back in to make git happy again?</p>
","83","80523","<git><version-control>"
"1911109","1","Clone a specific Git branch","<p>Git clone will behave copying remote current working branch into local. </p>

<p>Is there any way to clone a specific branch by myself without switching branches on remote repository?</p>
","1086","981997","<git><git-branch><git-clone>"
"8186441","1","Multiple bitbucket accounts","<p>I have a Bitbucket account for my 9-5 job and I also have a personal Bitbucket account. My goal is to be able to use both on the same computer. I have installed the latest git on a Windows 7 pc.</p>

<p>So currently everything with my companies Bitbucket account works fine, I can pull/push with no problems. I created a new ssh key using ssh-keygen and assigned a new name in my case ""tech"". But I am having issues on how to tell a local repo to use the new ssh key I created. I am assuming everytime I try to connect it uses the first ssh key.</p>

<p>I get the error:</p>

<p>$ git push
conq: repository access denied.
fatal: The remote end hung up unexpectedly</p>

<p>I found some advice on the internet but it seems to relate to a linux/git setup, for example I can't find the ""config"" file on windows. </p>
","32","10224","<git><ssh><bitbucket>"
"5851966","1","Moving a git repo to a second computer?","<p>I have a project with a simple local git repo, and I want to <em>move</em> this project (folders etc.) to another computer and work from there from now on. I don't want to have anything left on the old machine (except of course my other git projects). I want it to be as if I have been working from the new machine all along.</p>

<p>Can I simply move all the files over to that computer, or will there be a problem with keys? Should I have the same key across two machines? If simply moving all the folders can't be done, what should I do? I want to avoid the hassle of setting up and learning to use a server, since this seems complicated and I don't want to alter my workflow.</p>
","34","11950","<git>"
"30208928","1","Can ""git pull"" automatically stash and pop pending changes?","<p>I know how to solve this:</p>

<pre><code>user@host$ git pull
Updating 9386059..6e3ffde
error: Your local changes to the following files would be overwritten by merge:
    foo.bar
Please, commit your changes or stash them before you can merge.
Aborting
</code></pre>

<p>But isn't there a way to let <code>git pull</code> do the <code>stash</code> and <code>pop</code> dance for me?</p>

<p>If this command has a different name, it's ok.</p>

<p>Creating a shell alias for <code>git stash; git pull; git stash pop</code> is a solution, but I search for a better solution.</p>
","31","4054","<git><git-pull><git-stash>"
"5709687","1","What are the ""loose objects"" that the Git GUI refers to?","<p>When I open the <strong>Git GUI</strong>, I get a popup message that refers to <code>loose objects</code>. I did <code>git gc</code> and that removed the message.</p>

<p>What are <code>loose objects</code> and how could I prevent this from occurring again?</p>
","99","22161","<git>"
"13195814","1","Trying to git pull with error: cannot open .git/FETCH_HEAD: Permission denied","<p>Help me pls. I am run this in terminal </p>

<pre><code>asgard@asgard-A7N8X2-0:~/CollegePortal$ git pull
error: cannot open .git/FETCH_HEAD: Permission denied
</code></pre>

<p>Then I  try this one</p>

<pre><code>asgard@asgard-A7N8X2-0:~/CollegePortal$ sudo git pull
Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>Help me, I don't understand this problem.</p>

<p>Thank you.</p>
","75","91666","<git><github><pull>"
"3458685","1","How can I completely remove a file from a git repository?","<p>I noticed recently that the project files my text editors use (along with some other junk) got added the git repository for the project.  Since they aren't actually part of the project, I'd like to remove them, but <code>git rm</code> doesnt remove the old versions from the repository, and I couldnt find anything else that looks promising.</p>
","37","12704","<git>"
"4133904","1","PS1 line with git current branch and colors","<p>Here is my current PS1</p>

<pre><code>export PS1='[\u@\h \W$(__git_ps1 "" (%s)"")]\$ '
</code></pre>

<p>How can I display the current branch in a different color?</p>
","35","38916","<git><command-prompt><bash>"
"12795790","1","How to colorize git-status output?","<p>I want to colorize git-status output so that: </p>

<pre><code>untracked files = magenta
new files = green
modified files = blue
deleted files = red
</code></pre>

<p>I am instead seeing staged files in green and unstaged files in blue:
<img src=""http://i.stack.imgur.com/bhW0W.png"" alt=""screenshot of git-status""></p>

<p>My .gitconfig is setup with the following based on some searching:</p>

<pre><code>[color]
status = auto

[color ""status""]
added = green
changed = blue
untracked = magenta
deleted = red
</code></pre>
","42","15807","<git><git-config><git-status>"
"13711455","1","How can I merge a specific file from one branch into another branch in Git","<p>I have 2 branches in a git repo, lets call them, dev and test.  I have changes in a single file, somecode.js.  Both branches have changes to somecode.js.  The 2 branches have diverged significantly (but manageably) so a straight ""merge"" is insufficient.</p>

<p>I have tried <a href=""http://jasonrudolph.com/blog/2009/02/25/git-tip-how-to-merge-specific-files-from-another-branch/"">http://jasonrudolph.com/blog/2009/02/25/git-tip-how-to-merge-specific-files-from-another-branch/</a> but it doesn't merge the contents of both files.  You basically just write over the file instead of actually merging the contents of the file.</p>

<p>I have also tried:</p>

<pre><code>git checkout -b newbranch
git checkout test somecode.js
git commit -m ""somecode changes from newbranch""
git checkout dev
git merge newbranch
</code></pre>

<p>And</p>

<pre><code>git checkout -m test somecode.js
</code></pre>

<p>(I was really hopeful with the -m for merge, but it didn't appear to work for me...)</p>

<p>I thought I was close to what I needed, but then I realized that it just fast-forwarded the commit meaning it didn't merge, it wrote over the original file in test.</p>

<p>So, to reiterate, how can I merge a specific file from one branch into another branch without just writing over the file in the branch I am merging into using git.</p>
","35","16394","<git>"
"1591107","1","Git: reset other branch to current without a checkout","<p>I'm writing some scripts for my Git workflow.</p>

<p>I need to reset other (existing) branch to the current one, without checkout.</p>

<p>Before:</p>

<pre><code> CurrentBranch: commit A
 OtherBranch: commit B
</code></pre>

<p>After:</p>

<pre><code> CurrentBranch: commit A
 OtherBranch: commit A
</code></pre>

<p>Equivalent of</p>

<pre><code> $ git checkout otherbranch 
 $ git reset --soft currentbranch
 $ git checkout currentbranch
</code></pre>

<p>(Note --soft: I do not want to affect working tree.)</p>

<p>Is this possible?</p>
","59","7032","<git>"
"8651708","1","Git, adding files to repository gives fatal error for LF ->CRLF","<p>I'm new to git and I need some help. I'm using msysgit on windows.</p>

<p>When I execute the command <code>git add [folderName]</code> I get the response:</p>

<pre><code>fatal: LF would be replaced by CRLF in [.css file or .js file]
</code></pre>

<p>and then if you try to do a commit nothing happens.</p>

<pre><code>$ git commit
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       so01/
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>Some of these css/js files were downloaded from the net so I guess that's why the have LF.
If I open the file and cut/paste the content, then I get the error on the next file and so on.</p>

<p>Any help will be much appreciated.</p>

<p><strong>Edit</strong></p>

<p>Setting <code>core.autocrlf</code> to false seems to solve the problem, but I read on many posts not to set this option to false.</p>

<p>Can somebody point me where can I find out what problems may arise in this situation? </p>
","40","25161","<git><version-control><newline><msysgit><core.autocrlf>"
"6872223","1","How do I revert master branch to a tag in git?","<p>We have branches origin and develop. 
The initial state of master was tagged at <code>tag_ABC</code>.</p>

<p>We have few changes made to the develop branch and pushed to origin.
Then we have accidentally merged develop into master and pushed to origin. </p>

<p>Now we would like to revert master to the checkpoint <code>tag_ABC</code>. How can we do that?</p>
","42","19996","<git>"
"10414769","1","git pull keeping local changes","<p>How can I safely update (pull) a git project, keeping specific files untouched, even if there's upstream changes?</p>

<p>myrepo/config/config.php</p>

<p>Is there a way, of, even if this file was being changed on remote, when I git pull, everything else is updated, but this file is unchanged (not even merged)?</p>

<p>PS. I need to do what I am asking because I'm only writing git-based deploy scripts. I cannot change config files to templates.</p>

<p>so, I need way to write update scripts that does not lose what was locally changed. I was hoping for something as simple as:</p>

<pre><code>git assume-remote-unchanged file1
git assume-remote-unchanged file2
</code></pre>

<p>then <code>git pull</code></p>
","58","38069","<git>"
"1435754","1","How do I resolve a conflict after git pull?","<p>I have to solve some conflict after a <code>git pull</code>.</p>

<pre><code>$ git pull
CONFLICT (rename/add): Renamed vignette_generator_mashed.h-&gt;vision_problem_8.h in 49423dd0d47abe6d839a783b5517bdfd200a202f. vision_problem_8.h added in HEAD
Added as vision_problem_8.h~HEAD_1 instead
Removed vignette_generator_cross_square.cc
Automatic merge failed; fix conflicts and then commit the result.
</code></pre>

<p>So I googled it a bit, and found people saying using <code>git mergetool</code>. But here is what I got:</p>

<pre><code>$ git mergetool
merge tool candidates: meld kdiff3 tkdiff xxdiff meld gvimdiff emerge opendiff emerge vimdiff
No files need merging
$ git mergetool opendiff
merge tool candidates: meld kdiff3 tkdiff xxdiff meld gvimdiff emerge opendiff emerge vimdiff
opendiff: file not found
</code></pre>

<p>So does it mean I have to install something?</p>

<p>What if I simply want the version from <code>git pull</code> to overwrite everything?</p>
","46","74250","<git><conflict><git-merge><git-pull>"
"1435953","1","How can I pass git SHA1 to compiler as definition using cmake?","<p>In a Makefile this would be done with something like:</p>

<pre><code>g++ -DGIT_SHA1=""`git log -1 | head -n 1`"" ...
</code></pre>

<p>This is very useful, because the binary knows exact commit SHA1 so it can dump it in case of segfault.</p>

<p>How can I achieve the same with CMake?</p>
","31","9224","<git><cmake><sha1>"
"1914579","1","Set up git to pull and push all branches","<p>I'd like to push and pull all the branches by default, including the newly created ones.</p>

<p>Is there a setting that I can define for it?</p>

<p>Otherwise, when I add a new branch, locally and I want to pull it from the server, what is the simplest way to do it?</p>

<p>I created a new branch with the same name and tried to pull but it doesn't work. Asks me for all the remote config of the branch. How do I set it.</p>
","309","104171","<git><version-control><branch><push>"
"6378850","1","Git revert local commit","<p>I have a git repo hooked up in phpstorm on windows. I committed a few change sets then pushed them to our ""central repo"". After this I have then made a few more commits. I no longer want these commits that have not been pushed to the central repo. How do I clean my working copy to be the same as the central repo (origin)?</p>
","50","57248","<windows><git><msysgit>"
"10415100","1","Want to exclude file from ""git diff""","<p>I am trying to exclude a file (<code>db/irrelevant.php</code>) from a Git diff. I have tried putting a file in the <code>db</code> subdirectory called <code>.gitattributes</code> with the line <code>irrelevant.php -diff</code>
and I have also tried creating a file called <code>.git/info/attributes</code> containing <code>db/irrelevant.php</code>. </p>

<p>In all cases, the <code>db/irrelevant.php</code> file is included in the diff as a Git binary patch. What I want is for the changes to that file to be ignore by the diff command. What am I doing wrong?</p>
","48","16399","<git><diff><git-diff>"
"5711120","1","gitignore without binary files","<p>How can binary files be ignored in <code>git</code> using the <code>.gitignore</code> file? </p>

<p>Example:  </p>

<pre><code>$ g++ hello.c -o hello
</code></pre>

<p>The ""hello"" file is a binary file. Can <code>git</code> ignore this file ? </p>
","62","24135","<git><gitignore>"
"11023194","1","git - vim - automatically wrap long commit messages","<p>Using git, my editor for commits is vim.  I'm constantly doing a poor job of remembering to wrap lines and so I get long lines (see <a href=""http://stackoverflow.com/a/2120040/748858"">this answer</a> for example).  Is there a way using some <code>git config</code> or <code>.vimrc</code> magic that I can get vi to automatically wrap lines at 72 columns? </p>

<p><a href=""http://stackoverflow.com/questions/1874030/wrap-long-lines-in-vim"">related question</a></p>
","31","8556","<git><vim>"
"3311774","1","How to convert existing non-empty directory into a Git working directory and push files to a remote repository","<ol>
<li><p>I have a non-empty directory (eg /etc/something) with files that cannot be renamed, moved, or deleted.</p></li>
<li><p>I want to check this directory into git in place.</p></li>
<li><p>I want to be able to push the state of this repository to a remote repository (on another machine) using ""git push"" or something similar.</p></li>
</ol>

<p>This is trivial using Subversion (currently we do it using Subversion) using:</p>

<pre><code>svn mkdir &lt;url&gt; -m &lt;msg&gt;
cd &lt;localdir&gt;
svn co &lt;url&gt; .
svn add &lt;files etc&gt;
svn commit -m &lt;msg&gt;
</code></pre>

<p>What is the git equivalent?</p>

<p>Can I ""git clone"" into an empty directory and simply move the .git directory and have everything work?</p>
","374","150684","<git>"
"8051991","1","How to have git-svn take care of empty directories gracefully?","<p>I am very happily using git-svn, though I noticed that git has a different approach when it comes to empty directories as SVN. I need a way to get around the following particular situation:</p>

<p>I have in my project's SVN repository several empty directories that belong in there and should not be touched. Due to some refactoring, I had to delete another directory that used to have files in it. <code>git svn dcommit</code> deletes the files, but leaves the directory. It strikes me that git's ignorance of empty directories is resulting in inconsistency in my SVN repo. </p>

<p>I would like to have that particular directory removed from my SVN repository. Can git-svn do that? And if not, how should I be doing that? (And - eventually - how can I do that while committing other files with them as well in the same changeset?)</p>
","31","6398","<git><directory><git-svn>"
"15231937","1","heroku and github at the same time","<p>So I understand that heroku functions as a git repository, but let's say i want to use github as well as a repository. How do I set it up such that I have two repositories and both are in sync? </p>
","46","14175","<git><heroku><github>"
"3055506","1","git is very very slow when tracking large binary files","<p>My project is six months old and git is very very slow. We track around 30 files which are of size 5 MB to 50 MB. Those are binary files and we keep them in git. I believe those files are making git slow.</p>

<p>Is there a way to kill all files of size > 5MB from the repository. I know I would lose all of these files and that is okay with me.</p>

<p>Ideally I would like a command that would list all the big files ( > 5MB) . I can see the list and then I say okay go ahead and delete those files and make git faster.</p>

<p>I should mention that git is slow not only on my machine but deploying the app on staging environment is now taking around 3 hours. </p>

<p>So the fix should be something that will affect the server and not only the users of repository.</p>
","70","56265","<git>"
"7856416","1","View a file in a different Git branch without changing branches","<p>Is it possible to open a file in a git branch without checking out that branch? How?</p>

<p>Essentially I want to be able to open a file in my <a href=""http://pages.github.com/"">github pages</a> branch without switching branches all the time. I don't want to modify it, just want to view it.</p>
","282","47426","<git><version-control><branch><git-branch>"
"5506339","1","how can I git stash a specific file?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3040833/how-to-stash-only-one-file-out-of-multiple-files-that-have-changed"">How to stash only one file out of multiple files that have changed</a>  </p>
</blockquote>



<p>How can I stash a specific file leaving the others currently modified out of the stash I am about to save?</p>

<p>For example, if git status gives me this:</p>

<pre><code>younker % gst      
# On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   app/controllers/cart_controller.php
#   modified:   app/views/cart/welcome.thtml
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>and I only want to stash app/views/cart/welcome.thtml, how would I do that? Something like (but of course this does not work):</p>

<pre><code>git stash save welcome_cart app/views/cart/welcome.thtml
</code></pre>
","572","170667","<git><git-stash>"
"5755449","1","Deleting Git Repository Gitolite?","<p>I am wondering what the proper way is to delete a repository when using gitolite.</p>

<p>Is there anything else I have to do besides delete the repository from the server and remove all configurations related to the repository I am removing?</p>
","50","16046","<git><version-control><gitolite>"
"1213430","1","How to fully delete a git repository created with init?","<p>I created a git repository with <code>git init</code>. I'd like to delete it entirely and init a new one.</p>
","925","530428","<git>"
"10228760","1","Fix a Git detached head?","<p>I was doing some work in my repository and noticed a file has local changes. I didn't want them anymore so I deleted the file, thinking I can just checkout a fresh copy. I wanted to do the git equivalent of</p>

<pre><code>svn up .
</code></pre>

<p>Using <code>git pull</code> didn't seem to work. Some random searching led me to a site where someone recommended doing</p>

<pre><code>git checkout HEAD^ src/
</code></pre>

<p>(<code>src</code> is the directory containing the deleted file). </p>

<p><strong>Now I find out I have a detached head. I have no idea what that is. How can I undo?</strong></p>
","490","397985","<git>"
"12641469","1","List submodules in a git repository","<p>I have a git repository that has several submodules in it. How do I list the names of all the submodules after <code>git submodule init</code> has been run?</p>

<p>The <code>git submodule foreach</code> command could echo the names of the submodule, but that only works once they have been checked out which has not happened after the init step. There are more steps in the chain that need to happen before they can be checked out and I don't want to have to hard-wire names of submodules into the script. </p>

<p>So is there a git command to get the names of all currently registered but not yet checked out submodules?</p>
","73","40788","<git><git-submodules>"
"5542910","1","How do I ""commit"" changes in a git submodule?","<p>I have, in my naivety, set up a git submodule and treated it like a Subversion external - i.e. it's now full of changes that I've just realized haven't been committed or pushed anywhere.</p>

<p>Is there some easy way to commit/push the submodule changes back to the upstream repo? And what's the recommended technique in Git for doing simultaneous development on separate (but linked) repositories in this way?</p>
","127","63847","<git><git-submodules>"
"20913962","1","GitHub authentication failing over https, returning wrong email address","<p>Initiating a push or any other action with GitHub from the command line (over https, not ssh) that calls for the username and password not only fails but, when it does, it returns </p>

<pre><code>Username for 'https://github.com': username
Password for 'https://username@github.com': 
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/username/repository.git/'
</code></pre>

<p>I do not have an <code>@github.com</code> address. The password and username are correct.</p>

<p>I know I could switch to SSH and use keys but that doesn't answer why the authentication is failing over https.</p>
","58","49723","<git><github><https>"
"20168639","1","git commit get fatal error ""fatal: CRLF would be replaced by LF in""","<p>I'm using Ubuntu 13.10 x64, and I am working on a project that some developers are using Windows , I recently changed the git config <code>core.eol</code> to ""lf"" and <code>core.autocrlf</code> to ""input"" and <code>core.safecrlf</code> to ""true"". Since then, when I try to commit file into my local repository, I get this error:<br/>
<code>fatal: CRLF would be replaced by LF in ......</code><br/>
From what I understand, if I set <code>core.eol</code> to ""lf"" and <code>core.autocrlf</code> to ""input"", git will automatically convert CRLF to LF, but why this error come out? How can I fix this problem?</p>

<p>Thank you.</p>
","37","31461","<git><eol>"
"6149725","1","How does the Android repo manifest repository work?","<p>The <a href=""http://source.android.com/"">Android source</a> is a <a href=""http://android.git.kernel.org/"">large hierarchy of git repositories</a>. They are managed by a custom script called <a href=""http://source.android.com/source/version-control.html"">repo</a>. Repo determines which git repositories to manage using a manifest.xml. The <a href=""http://android.git.kernel.org/?p=platform/manifest.git;a=summary"">manifest.xml of Android</a> is hosted in a git repository along with all the other git repositories.</p>

<p><strong>How is this repository managed in Android? Specifically how are the different branches and the different files hosted in each branch organised?</strong></p>
","35","24350","<android><git><android-manifest><android-source><repository>"
"19982053","1","How do I add an existing Solution to GitHub from Visual Studio 2013","<p>I have looked through many web pages on the new Git integration in VS 2013 and they do not deal with adding an existing solution to Github.  In fact I can't find much on using GitHub instead of Visual Studio Online.</p>

<p>Can anyone tell me how I start from an existing solution and add it to Github using the tools in VS 2013.</p>
","127","58998","<git><github><visual-studio-2013>"
"1485578","1","Change a Git remote HEAD to point to something besides master","<p>How do I set a Git remote's HEAD reference to point to something besides ""master""?</p>

<p>My project has a policy not to use a ""master"" branch (all branches are to have meaningful names). Furthermore, the canonical master repository is only accessible via ssh://, with no shell access (like GitHub or Unfuddle).</p>

<p>My problem is that the remote repository still has a HEAD reference to refs/heads/master, but I need it to point to a different branch.  This is causing two problems:</p>

<ol>
<li><p>When cloning the repo, there this, </p>

<blockquote>
  <p>warning: remote HEAD refers to nonexistent ref, unable to checkout.</p>
</blockquote>

<p>That's confusing and inconvenient.</p></li>
<li><p>The web-based code browser depends on HEAD as a basis for browsing the tree. I need HEAD to point to a valid branch, then.</p></li>
</ol>
","91","108317","<git><git-branch><git-remote>"
"17552457","1","How Do I Upload Eclipse Projects to GitHub?","<p>I have code in Eclipse that I'd like to upload to GitHub but so far I can't figure out how. It says ""create a repository"" but that looks more like a folder that holds your projects and I'm not sure how to upload my code to it. Apologies for the seemingly dumb question. Also, how does one delete repositories? Didn't see a way to do that either.</p>
","34","42287","<java><eclipse><git><github>"
"7929369","1","How to rebase local branch with remote master","<p>I have cloned project from master branch from remote repository <code>remote_repo</code>. I create new branch and I commit to that branch. Other programmers pushed to <code>remote_repo</code> to master branch. I need now to rebase my branch RB with <code>remote_repo</code> master. How to do this ? What commands to type to terminal ?</p>
","216","127371","<git><git-rebase>"
"4610744","1","Can I get a patch-compatible output from git-diff?","<p>I am doing something very simple wrong.  I'm trying to prepare an ordinary patch file, so I can reapply some changes:</p>

<pre><code>$ git diff &gt; before
$ git diff something_here &gt; save.patch
$ git checkout . 
$ patch &lt; save.patch
$ git diff &gt; after
$ diff before after
$
</code></pre>

<p>With <code>something_here</code> <em>blank</em> it almost works, but the file names aren't right.  I think I'm just I'm missing some option.</p>

<p>In real life, I am going to do a merge after the checkout, so the patch might fail there, but you see what I'm getting at. </p>

<p><strong>Edit</strong>
My fault here for asking the wrong question.  The actual question is, I want to save my changes away, do a merge, then re-apply the changes, if possible?  I asked it the wrong way because I am <em>used</em> to using patch to solve these sorts of problems and <code>git diff</code> looked like that's what it wanted me to do.</p>

<p>Charles Bailey's <em>comment</em> had the right answer.  For me, git-apply is the right thing to do (git-stash looks more heavy-weight than I need and rebasing and bundles is definitely beyond my current skill level.)  I'm going to accept the answer Charles gave (because you can't accept a comment).  Thanks for all the suggestions.</p>
","87","41718","<git>"
"4318161","1","Can ""git pull --all"" update all my local branches?","<p>I often have at least 3 remote branches: master, staging and production. I have 3 local branches that track those remotes.</p>

<p>Updating all my local branches is tedious:</p>

<pre><code>git fetch --all
git rebase origin/master
git co staging
git rebase origin/staging
git co production
git rebase origin/production
</code></pre>

<p>I'd love to be able to just do a ""git pull -all"", but I haven't been able to get it to work. It seems to do a ""fetch --all"", then updates (fast forward or merges) the current working branch, but not the other local branches.</p>

<p>I'm still stuck manually switching to each local branch and updating.</p>
","282","134627","<git>"
"11557759","1","Gem file with git remote failing on heroku push","<p>I have the following line in my gemfile:</p>

<pre><code>gem 'client_side_validations', :git =&gt; ""git@github.com:Dakuan/client_side_validations.git"", :branch =&gt; ""master"", ref: '2245b4174ffd4b400d999cb5a2b6dccc0289eb67'
</code></pre>

<p>The repo it's pointing at is public and I can run bundle install / update locally just fine. When I try to push to Heroku I get the following error:</p>

<blockquote>
<pre><code>   Fetching git@github.com:Dakuan/client_side_validations.git
   Host key verification failed.
   fatal: The remote end hung up unexpectedly
   Git error: command `git clone 'git@github.com:Dakuan/client_side_validations.git' ""/tmp/build_1xa9f06n4k1cu/vendor/bundle/ruby/1.9.1/cache/bundler/git/client_side_validations-56a04875baabb67b5f8c192c6c6743df476fd90f"" --bare --no-hardlinks` in directory /tmp/build_1xa9f06n4k1cu has failed.
</code></pre>
  
  <p>!
   !     Failed to install gems via Bundler.
   !
   !     Heroku push rejected, failed to compile Ruby/rails app</p>
</blockquote>

<p>Anyone got any ideas about what's going on here?</p>
","47","8743","<ruby-on-rails><ruby><git><heroku><bundler>"
"20984802","1","How can I keep my fork in sync without adding a separate remote?","<p>Let's assume there is a repository <code>someone/foobar</code> on GitHub, which I forked to <code>me/foobar</code>.</p>

<p>How do I <strong>pull new commits</strong> from the parent repository <strong>directly to my fork</strong>, without having to <a href=""https://stackoverflow.com/questions/7244321/how-to-update-github-forked-repository"">add a separate remote</a> <em>and remember to pull regularly from there</em> ?</p>

<p>The goal is to:</p>

<ul>
<li><code>git pull</code> to fetch from the parent repository</li>
<li><code>git push</code> to send everything to my fork</li>
</ul>
","81","13771","<git><github>"
"4611512","1","Is there a way to make git pull automatically update submodules?","<p>Is there a way to automatically have <code>git submodule update</code> (or preferably <code>git submodule update --init</code> called whenever <code>git pull</code> is done?</p>

<p>Looking for a git config setting, or a git alias to help with this.</p>
","82","22273","<git><git-submodules>"
"7057194","1","What is the difference between Forking and Cloning on GitHub?","<p>I'd like to know the differences between doing a Fork of a project and doing a <code>clone</code> of it.</p>

<p>Can I only send pull requests via GitHub if I've forked a project?</p>
","52","30909","<git><github>"
"4713088","1","How to use git bisect?","<p>I have read some articles saying that <code>git bisect</code> is awesome, however I'm not native speaker and I can't understand why it's awesome.</p>

<p>Could you please demonstrate on some code sample what is so amazing about it? Is it just like <code>svn blame</code>?</p>
","132","22368","<git><blame><git-bisect>"
"4410091","1","Github: Import upstream branch into fork","<p>I have a fork (<code>origin</code>) from a project (<code>upstream</code>) on github. Now the upstream project has added a new branch, I want to import into my fork. How do I do that?</p>

<p>I tried checking out the remote and creating a branch on top of that, but that configures the branch the way that <code>git push</code> is trying to push to the <code>upstream</code>:</p>

<pre><code>git checkout upstream/branch
git checkout -b branch
</code></pre>

<h3>edit</h3>

<p>Maybe that wasn't clear, but I want to add the branch to my local repository, so I can push it to <code>origin</code> (my fork) via <code>git push</code>. Because upstream repositories are usually read-only and you fork it to contribute.</p>

<p>So I basically want to checkout a non-existant branch on <code>origin</code> which contents will be pulled in from <code>upstream</code>.</p>
","74","21967","<git><github>"
"6767518","1","What is the difference between github and gist?","<p>What is the purpose of gist and how is it different from regular code sharing/maintaining using github?  </p>
","109","22289","<git><github><repository><gist>"
"9207260","1","Merge conflict resolution","<p>When there's a merge conflict in Git, junk like the following is inserted into the conflicting files. Three questions:</p>

<ol>
<li>How do you read these annotations?</li>
<li>What are some strategies to use when fixing these merge conflicts?</li>
<li>Is there a GUI tool for Mac that knows how to read these files and display the two versions side-by-side to make it easier to fix the problem?</li>
</ol>

<p><img src=""http://i.stack.imgur.com/mFWUP.png"" alt=""enter image description here""></p>

<p>Note: In case it's relevant, I am using GitHub's Mac GUI client.</p>
","47","19510","<git><user-interface><merge-conflict-resolution>"
"9299651","1","Git says ""Warning: Permanently added to the list of known hosts""","<p>Every time I use git to interact with a remote, such as when pulling or pushing, I am shown the following message:</p>

<blockquote>
  <p>Warning: Permanently added '...' (RSA) to the list of known hosts.</p>
</blockquote>

<p>How can I prevent this annoying message from displaying? It is only an annoyance—everything functions properly.</p>
","123","80028","<git><shell><command-line><ssh><terminal>"
"11383094","1","Unstaged changes left after git reset --hard","<p>Titles says it all.</p>

<p>After <code>git reset --hard</code>, <code>git status</code> gives me files within the <code>Changes not staged for commit:</code> section.</p>

<p>I've also tried <code>git reset .</code>, <code>git checkout -- .</code> and <code>git checkout-index -f -a</code>, to no avail.</p>

<p>So how can I get rid of those unstaged changes ?</p>

<p>EDIT:</p>

<p>This seems to hit only Visual Studio project files. Weird. See this paste: <a href=""http://pastebin.com/eFZwPn9Z"">http://pastebin.com/eFZwPn9Z</a> . What is special with those files is that in .gitattributes I have:</p>

<pre><code>*.sln        eol=crlf
*.vcproj     eol=crlf
*.vcxproj*   eol=crlf
</code></pre>

<p>Also, <code>autocrlf</code> is set to false in my global <code>.gitconfig</code> is that would be somehow relevant.</p>
","83","29825","<git><git-reset>"
"27828404","1","Why does git status show branch is up-to-date when changes exist upstream?","<p>Changes exist upstream in a tracked branch, but when I type <code>git status</code> it indicates that my local branch is up-to-date.  Is this new behavior, did I change a config setting, or is something wrong?</p>

<p>Thanks for the help.</p>

<pre><code>ubuntu@host:/my/repo# git status
On branch master
Your branch is up-to-date with 'origin/master'.

nothing to commit, working directory clean


ubuntu@host:/my/repo# git pull
remote: Counting objects: 11, done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 11 (delta 6), reused 0 (delta 0)
Unpacking objects: 100% (11/11), done.
From bitbucket.org:my/repo
   1234567..abcdefg  master     -&gt; origin/master
Updating 1234567..abcdefg
Fast-forward
 file1        |  1 -
 file2        | 43 +++++++++++++++++++++++++++++++++++++++++++
 file3        | 21 ++++++++++++---------
 file4        | 21 ++++++++++++---------
 4 files changed, 67 insertions(+), 19 deletions(-)
 create mode 100644 file5
</code></pre>
","32","8068","<git>"
"6964297","1","Untrack files from git","<p>I have setup a local git on my machine. When I initialized git, I added pre-compiled libs and binaries. However, now during my development I don't want to check in those files intermittently. I dont want to remove these files from repo. Is there any way to not keep a track of these files till I complete my development. (I think I can not use .gitignore as it works only for those files which are not in git. I want to temporarily disable tracking of files.)</p>
","218","140663","<git><github><repository>"
"23528761","1","No refs in common and none specified; doing nothing","<p>I had a local git project that I wanted to add to gitolite. Apparently this is hard so I abandoned the idea. I created a new gitolite repo by adding it to gitolite-admin/conf/gitolite.conf and committing and pushing the changes. Then I cloned the new repot with <code>git clone git-noah:project-name</code> successfully. I then copied all files and folders except .git to the project-name folder. I did,</p>

<pre><code>git add -A
git commit -a -m ""Moved to new repo.""
git push
</code></pre>

<p>I get this error</p>

<pre><code>warning: push.default is unset; its implicit value is changing in
Git 2.0 from 'matching' to 'simple'. To squelch this message
and maintain the current behavior after the default changes, use:

  git config --global push.default matching

To squelch this message and adopt the new behavior now, use:

  git config --global push.default simple

See 'git help config' and search for 'push.default' for further information.
(the 'simple' mode was introduced in Git 1.7.11. Use the similar mode
'current' instead of 'simple' if you sometimes use older versions of Git)

No refs in common and none specified; doing nothing.
Perhaps you should specify a branch such as 'master'.
fatal: The remote end hung up unexpectedly
error: failed to push some refs to 'git-noah:project-name'
</code></pre>
","32","32689","<git><gitolite>"
"9110310","1","Update git commit author date when amending","<p>I found myself amending my commits quite often. I don't <code>stash</code> so much because I tend to forget I did so, especially when I want to save what I did before I leave or before a weekend, so I do a ""draft"" commit. Only thing is, when I amend the commit, it is still set to the original author date. Is there a (simple) way to update it when amending?</p>
","127","29497","<git>"
"9210446","1","Replace local branch with remote branch entirely","<p>I have two branches:</p>

<ol>
<li>local branch (the one which I work with)</li>
<li>remote branch (public, only well-tested commits go there)</li>
</ol>

<p>Recently I seriously messed up my local branch (guess every git-newbie has been on my place at some point of time)</p>

<p>How would I replace the local branch entirely with the remote one, so I can continue my work from where the remote branch is now?</p>

<p>(I already searched SO and checking out to the remote branch locally does not have any effect)</p>
","204","76589","<git>"
"4746672","1","Put current changes in a new Git branch","<p>I've been editing some modules on the master branch but I haven't committed them. I'm now thinking that these changes should really be on an experimental branch and not the master branch.</p>

<p>How can I get these edits into an experimental branch? Copy them to some temp location, create the branch, and then copy them back in?</p>

<p>And how do I configure things so that when I do a git push from the new experimental branch it will it go into a branch of the same name in my GitHub repo?</p>
","133","46332","<git><github><git-branch>"
"9211405","1","How to migrate code from SVN to GIT without losing commits history?","<p>I would like to know the recommended way to move our code from a SVN repository to a GIT repository, so that we transition our developers team &amp; start using GIT.</p>

<p>Can we do the transition and keep all the commits done in the SVN repository ?</p>

<p>Also, our team is happy with SVN currently, but, they don't know that branching in GIT is much easier than SVN, where can I find a practical example that proves power of GIT in branching ?</p>
","60","33420","<git><svn><version-control><git-svn>"
"16244969","1","How to tell git to ignore individual lines, i.e. gitignore for specific lines of code","<p><code>.gitignore</code> can ignore whole files, but is there a way to ignore specific lines of code while coding?</p>

<p>I frequently and repeatedly add the same debug lines in a project, only to have to remember to remove them before committing. I'd like to just keep the lines in the code and have git disregard them.</p>
","79","11948","<git><gitignore><ignore>"
"21150060","1","How can you disable Git integration in Visual Studio 2013 permanently?","<p>I know that you can disable git integration by using the Tools / Options dialog, but what I've noticed is that this setting doesn't seem to persist across sessions; i.e., as soon as close and reopen the solution, Git integration is enabled again. I'm guessing Visual Studio is seeing the .git folder in my solution file system tree.</p>

<p>There are a variety of Visual Studio 2013 plugins that behave incorrectly when the Git plug-in is enabled, I prefer to manage my source control at the command line, and I work on a few very large projects for which the Git integration introduces noticeable slowdowns in opening and working with the solution. I'd like to turn it off for good, as I simply don't use it or need it. Is this possible?</p>
","58","13245","<git><visual-studio-2013>"
"9113280","1","diff current working copy of a file with another branch's committed copy","<p>I have a repo with file <code>foo</code> in the master branch. I switch to a branch <code>bar</code> and make some changes to <code>foo</code>. How can I now run a <code>git diff</code> between this copy (which isn't committed yet) and the copy of the master branch?</p>
","53","36815","<git>"
"4621072","1","git ignore all files of a certain type, except those in a specific subfolder","<p>I have a directory structure like this:</p>

<ul>
<li>root
<ul>
<li>folder1
<ul>
<li>abc.json</li>
<li>def.json</li>
<li>somedir
<ul>
<li>more.json</li>
</ul></li>
</ul></li>
<li>folder2
<ul>
<li>qwe.json</li>
<li>rty.json</li>
</ul></li>
<li>spec
<ul>
<li>mock1.json</li>
<li>mock2.json</li>
<li>somedir
<ul>
<li>more_mocks.json</li>
</ul></li>
</ul></li>
</ul></li>
</ul>

<p>Now using a <code>.gitignore</code> I want to ignore all <code>*.json</code> files except for the ones in the <code>spec</code>.  I don't want to use a <code>.gitignore</code> in <code>folder1</code> and <code>folder2</code> because there are a ton of these and they will get added to a lot, and i'm sure I will forget to move the right <code>.gitignore</code> file in place.</p>

<p>In addition there may be more nested directories with json files, and this rule needs to apply to all subdirectories as well.</p>

<p>So how do I ignore all files of a type, except for a certain subdirectory?</p>
","72","45992","<git><gitignore>"
"6865302","1","Push local Git repo to new remote including all branches and tags","<p>I have a local Git repo that I would like to push to a new remote repo (brand new repo set up on Beanstalk, if that matters). My local repo has a few branches and tags and I would like to keep all of my history. It looks like I basically just need to do a git push, but that only uploads the master branch. How do I push everything so I get a full replica of my local repo on the remote?</p>
","192","54390","<git>"
"7060727","1","How to deal with IntelliJ IDEA project files under Git source control constantly changing?","<p>Everyone on our team uses IntelliJ IDEA, and we find it useful to put its project files (.ipr and .iml) into source control so that we can share build configurations, settings, and inspections. Plus, we can then use those inspection settingss on our continuous integration server with TeamCity. (We have the per-user workspace .iws file in the .gitignore file and not in source control.)</p>

<p>However, those files change in little ways when you do just about anything in IDEA. There's an issue in IDEA's issue database for it (<a href=""http://youtrack.jetbrains.net/issue/IDEA-64312"">IDEA-64312</a>), so perhaps one might consider this a bug in IDEA, but it's one we'll need to live with for the foreseeable future.</p>

<p>Up until recently, we were using Subversion, but we recently switched to Git. We had each just gotten used to having a change list of project files that we ignored and didn't check in unless there were project file changes that we wanted to share with others. But with Git, the real power seems to be (from what we're exploring) the continuous branching that it encourages, and switching between branches is a pain with the project files always having been modified. Often it can just merge in the changes somehow, and tries to deal with the project file changes now being applied to the new branch. However, if the new branch has changed project files (such as the branch is working on a new module that isn't in the other branches yet), git just throws an error that it doesn't make any sense to merge in the files when both the branch has changes and you have changes locally, and I can rather understand its point. From the command line, one can use ""-f"" on the ""git checkout"" command to force it to throw out the local changes and use the branch's instead, but (1) the Git Checkout GUI command in IDEA (10.5.1) doesn't seem to have that as an option that we can find, so we'd need to switch to the command line on a regular basis, and (2) We're not sure we want to be in the habit of using that flag and telling Git to throw out our local changes.</p>

<p>So, here are some thoughts we have on options we have to deal with this:</p>

<ol>
<li>Take the project files out of source control entirely. Put them in the .gitignore, and distribute them to each person and TeamCity via some other means, maybe by putting them in source control somewhere else or under other names. Our team's small enough this option is feasible enough to consider, but it doesn't seem great.</li>
<li>Continue living with it, trying to be sure to manage which files we have on which branches at a given time. As part of this, we might encourage each developer to have more than one copy of each project on their system, so they can have each checked out to a different branch with possibly different sets of project files.</li>
<li>Try having just the project (.ipr) in source control, with the module (.iml) files not in source control and in the .gitignore file. The main thing that seems to switch around on its own in the .ipr on a regular basis is the order of the shared build configurations, but maybe we can just share the information separately on how to set those up. I'm not quite sure how IDEA deals with this kind of thing of only having some of its files though, especially on a new checkout.</li>
</ol>

<p>I guess I'm hoping there's some obvious (or non-obvious) solution we've missed, perhaps dealing with the huge customizability that Git and IDEA both seem to have. But it seems like we couldn't possibly be the only team having this problem. Questions that are kind of similar on StackOverflow include <a href=""http://stackoverflow.com/questions/3495181/need-a-strategy-to-put-intellij-idea-project-files-in-git"">3495191</a>, <a href=""http://stackoverflow.com/questions/1000512/merges-on-intellij-idea-ipr-and-iws-files"">1000512</a>, and <a href=""http://stackoverflow.com/questions/3873872/best-practices-for-using-git-with-intellij-idea"">3873872</a>, but I don't know as they're exactly the same issue, and maybe someone can come up with the pros and cons for the various approaches I've outlined, approaches listed in the answers to those questions, or approaches that they recommend.</p>

<p>Thank you.</p>
","108","43441","<git><version-control><intellij-idea>"
"16068186","1","git - How to cherry pick only changes for only one file, not the whole commit","<p>I need to apply changes introduced in one branch to another branch.
I can use cherry pick to do that. However, in my case I want to apply changes wich
are relevant only for one file, I don't need to cherry pick whole commit.
How to do that?</p>
","40","15895","<git>"
"4515580","1","How do I remove the old history from a git repository?","<p>I'm afraid I couldn't find anything quite like this particular scenario.</p>

<p>I have a git repository with a lot of history: 500+ branches, 500+ tags, going back to mid-2007. It contains ~19,500 commits. We'd like to remove all of the history before Jan 1, 2010, to make it smaller and easier to deal with (we would keep a complete copy of the history in an archive repository).</p>

<p>I know the commit that I want to have become the root of the new repository. I can't, however, figure out the correct git mojo to truncate the repo to start with that commit. I'm guessing some variant of </p>

<pre><code>git filter-branch
</code></pre>

<p>involving grafts would be necessary; it might also be necessary to treat each of the 200+ branches we want to keep separately and then patch the repo back together (something I <em>do</em> know how to do).</p>

<p>Has anyone ever done something like this? I've got git 1.7.2.3 if that matters.</p>
","112","56509","<git><git-filter-branch>"
"6866838","1","what should be in the git description file?","<p>After initialising a new local repo there is a <code>description</code> file present.</p>

<p>What is it used for and how should I format it? Or is it simply a local helper file.</p>

<p>This thread <a href=""http://lists.gnu.org/archive/html/savannah-hackers/2009-03/msg00051.html"">Accessing git's `description' file</a> suggests one style, but no man page or other reference to why it should be the way it is. </p>
","45","13393","<git>"
"9301782","1","Need to reset git branch to origin version","<p>I was accidentally working on a branch I shouldn't have been for a while, so I branched off of it giving it the appropriate name.  Now I want to overwrite the branch I shouldn't have been on to the version from origin (github).  Is there an easy way to do this?  I tried deleting the branch and then resetting up the tracking branch, but it just gives me the version I was working on again.</p>
","158","115030","<git>"
"4753888","1","git: renaming branches remotely?","<p>If there is a repository that I only have git:// access to (and would usually just push+pull), is there a way to rename branches in that repository in the same way that I would do locally with <code>git branch -m</code>?</p>
","156","132721","<git><branch><rename>"
"4624127","1","What is the difference between 'git format-patch and 'git diff'?","<p>I don't see a difference between the output of 'git format-patch' and 'git diff', is there any? And won't I be able to use 'git diff' to produce a patch and then apply it using git apply?</p>

<p>My problem is that I have changes added to the index, but apparently git format-patch only accepts commits, so if I can use the output of diff, then I can use this command to produce a patch for the changes in the index:</p>

<pre><code>git diff --cached &gt; index.patch
</code></pre>
","59","24774","<git><diff><patch>"
"4624357","1","GIT: How to 'overwrite', rather than 'merge', a branch on another branch","<p>I have two branches, email and staging. Staging is the latest one and I no more need the old changes in 'email' branch, yet I don't want to delete them. So I just want to dump all the contents of 'staging' into 'email' so that they both point to the same commit. Is that possible?</p>
","109","66890","<git>"
"4624881","1","How can I uncommit the last commit in a git bare repository?","<p>Taking into consideration that there are several git commands that make no sense in a bare repository (because bare repositories don't use indexes and do not have a working directory), </p>

<pre><code>git reset --hard HEAD^ 
</code></pre>

<p>is not a solution to uncommit the last change in such a repository.</p>

<p>Searching through the Internet, all I could find related to the topic is <a href=""http://kerneltrap.org/mailarchive/git/2007/7/14/251529"">this</a>, in which I am presented three ways of doing this:<br>
1. ""update the ref manually (which involves plumbing)"";<br>
2. ""<code>git push -f</code> from a non-bare repository"";<br>
3. ""<code>git branch -f this $that</code>"".</p>

<p>Which solution do yo think is more appropriate or what other ways are there to do this? Unfortunatelly, the documentation I found about git bare repositories is fairly poor.</p>

<p>Thank you very much,<br>
Lavinia</p>
","69","22022","<git><repository><commit><reset><git-bare>"
"4754152","1","git - how to remove git tracking from a project?","<p>I want to remove git tracking from a project's directory. What is the correct method to do this? Can I do a shell command such as:</p>

<pre><code>rm -rf .git
</code></pre>

<p>from my projects directory or is there a way to do this as a git command.</p>

<p>I used this project to learn git and realize I made some mistakes early on in the project with moved, renamed and deleted files. I'd like to remove all git tracking and start fresh with <code>git init</code>.</p>
","169","119753","<git>"
"4627712","1","Mysysgit ""(END)"" displays, how do I proceed?","<p>While using mysysgit under Windows, I do not know how to regain control of the console windows after running <strong>git log</strong> in Git Bash. This seems simple yet I cannot find the key combination or command, so I find myself having to close the console window and relaunching a new instance of Git Bash to interact with git. </p>

<p>What is the key combination and/or command I need to exit the log viewer?</p>
","47","5918","<windows><git><logging><git-bash>"
"11656761","1","Git: ""please tell me who you are"" error","<p>I have app servers that I bootstrap together using Chef + some ad-hoc bash scripts. The problem is, when I want to run an update on one of these app servers, I get:</p>

<pre><code>19:00:28: *** Please tell me who you are.

Run

  git config --global user.email ""you@example.com""
  git config --global user.name ""Your Name""
</code></pre>

<p>Do I really need to set this for doing a simple <code>git pull origin master</code> every time I update an app server? Is there anyway to override this behavior so it doesn't error out when name and email are not set?</p>
","69","61811","<git>"
"6976473","1","What does the term ""porcelain"" mean in Git?","<p>The term ""porcelain"" appears occasionally in the Git documentation.  What does it mean?</p>
","194","26701","<git>"
"11575398","1","How can I save my secret keys and password securely in my version control system?","<p>I keep important settings like the hostnames and ports of development and production servers in my version control system. But I know that it's <em>bad practice</em> to keep <em>secrets</em> (like private keys and database passwords) in a VCS repository.</p>

<p>But passwords--like any other setting--seem like they should be versioned. So what <em>is</em> the proper way to keep passwords version controlled?</p>

<p>I imagine it would involve keeping the <em>secrets</em> in their own ""secrets settings"" file and having <em>that</em> file encrypted and version controlled. But what technologies? And how to do this properly? Is there a better way entirely to go about it?</p>

<hr>

<p>I ask the question generally, but in my specific instance I would like to store secret keys and passwords for a <em>Django/Python</em> site using <em>git</em> and <em>github</em>.</p>

<p>Also, an <em>ideal</em> solution would do something magical when I push/pull with git--e.g., if the encrypted passwords file changes a script is run which asks for a password and decrypts it into place.</p>

<p><hr>
EDIT: For clarity, I <em>am</em> asking about where to store <em>production</em> secrets.</p>
","96","17790","<python><django><git><version-control>"
"4630312","1","Reset all changes after last commit in git","<p>How can I undo <em>every</em> change made to my directory after the last commit, including deleting added files, resetting modified files, and adding back deleted files?</p>
","138","46862","<git>"
"4630704","1","Receiving ""fatal: Not a git repository"" when attempting to remote add a Git repo","<p>I am introducing myself to Git by following this tutorial:</p>

<ul>
<li><a href=""http://hayley.ws/2010/12/04/getting-jekyll-running.html"">getting jekyll running on nearlyfreespeech.net</a></li>
</ul>

<p>Everything works fine up until the part where the repo is added to my local machine:</p>

<pre><code>git remote add nfsn ssh://USERNAME@NFSNSERVER/home/private/git/REPONAME.git
</code></pre>

<p>(After replacing USERNAME, NFSNSERVER, and REPOAME with the correct names) I receive the error:</p>

<pre><code>fatal: Not a git repository (or any of the parent directories): .git
</code></pre>

<p>Can you help me get past this step?</p>
","163","238806","<git>"
"11657295","1","Count the number of commits on a Git branch","<p>I found this answer already: <a href=""http://stackoverflow.com/questions/10913892/number-of-commits-on-branch-in-git"">Number of commits on branch in git</a>
but that assumes that the branch was created from master.</p>

<p>How can I count the number of commits along a branch <em>without</em> relying on that assumption?</p>

<p>In SVN this is trivial, but for some reason is really difficult to figure out in git.</p>
","40","15500","<git>"
"4632749","1","How to push to git on EC2","<p>I am trying to follow <a href=""http://thelucid.com/2008/12/02/git-setting-up-a-remote-repository-and-doing-an-initial-push/"">this</a> instruction. I have a local git repo and when I do a git push, I need the repo to be pushed to my EC2 instance.</p>

<p>But, in the above tutorial, when I do a <code>git push origin master</code>, I get <code>Permission denied (publickey)</code> error because I did not specify the identity file.</p>

<p>Say, I login to EC2 like this: <code>ssh -i my_key.pem username@11.111.11.11</code></p>

<p>So, can I do something similar here to: <code>git -i my_key.pem push origin master</code> or set the identity file in <code>.git/config</code></p>

<p>So, how can I set it up?</p>

<p>Update: Output of <code>git config -l</code></p>

<pre><code>user.name=my name
user.email=my_email_addreess@gmail.com
github.user=userid
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
remote.origin.url=ec2_id@my_e2_ip_address:express_app
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
</code></pre>

<p><strong>Update (from @Jon's <a href=""http://stackoverflow.com/questions/4632749/how-to-push-to-git-on-ec2#comment5097220_4632766"">comment</a>):</strong></p>

<p>If you have your key in an odd path just run <code>ssh-add /private/key/path</code>. This worked for me.</p>
","60","36301","<git><amazon-ec2>"
"4633681","1","Git: Ignoring Version-Controlled Files","<p>The .gitignore file is very useful in ignoring some of the files that we don't want to control. Unfortunately, it cannot be used when the file is already under version control. For example, my .gitignore (which is already added to git) file might be different than what my coworker wants it to be (e.g. I want to ignore Vim files). Whenever I make changes to this file, git shows it as a modified file. So my questions:</p>

<ol>
<li>Is there any way to ignore changes for a certain file, which is already controlled by Git?!</li>
<li>Is there any way to commit these changes, but keep it for myself only? Obviously, I don't want to use a branch, because I am working on a certain branch.</li>
</ol>
","32","7545","<git><gitignore>"
"11579311","1","git commit as different user without email / or only email","<p>I'm trying to commit some changes as a different user, but i do not have a valid email address, following command is not working for me:</p>

<pre><code>git commit --author=""john doe"" -m ""some fix""
fatal: No existing author found with 'john doe'
</code></pre>

<p>I have the same problem when trying to commit with only an email address</p>

<pre><code>git commit --author=""john@doe.com"" -m ""some fix""
fatal: No existing author found with 'john@doe.com'
</code></pre>

<p>On the git man pages for the commit command it says i can use the </p>

<pre><code>standard A U Thor &lt;author@example.com&gt; format
</code></pre>

<p>For the --author option.</p>

<p>Where is this format defined ?
what does A and U stand for ? how do i commit for a different user with only a username or only an email?</p>
","55","36945","<git><commit>"
"9224754","1","How to remove origin from git repository","<p>Basic question: How do I disassociate a git repo from the origin from which it was cloned?</p>

<p><code>git branch -a</code> shows:</p>

<pre><code>* master
  remotes/origin/HEAD -&gt; origin/master
</code></pre>

<p>and I want to remove all knowledge of origin, and the associated revisions.</p>

<p>Longer question: I want to take an existing subversion repo and make a number of smaller git repos from it. Each of the new git repos should have the full history of just the relevant branch. I can prune the repo to just the wanted subtree using:</p>

<pre><code>git filter-branch --subdirectory-filter path/to/subtree HEAD
</code></pre>

<p>but the resulting repo still contains all the revisions of the now-discarded subtrees under the origin/master branch.</p>

<p>I realise that I could use the -T flag to git-svn to clone the relevant subtree of the subversion repo in the first place. I'm not sure if that would be more efficient than later running multiple instantiations of <code>git filter-branch --subdirectory-filter</code> on copies of the git repo but, in any case, I would still like to break the link with the origin.</p>
","124","82935","<git><git-svn>"
"4750148","1","git: Show index diff in commit message as comment","<p>When <code>git commit</code> open the message editor is shows a brief status, something like this:</p>

<pre><code># Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch master
# Your branch is ahead of 'origin/master' by 26 commits.
#
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   Showcase/src/com/gigantt/BorderArea.mxml
#   modified:   Showcase/src/com/gigantt/Client.mxml
#   modified:   Showcase/src/com/gigantt/GraphItem.mxml
#
</code></pre>

<p>How can I tweak git to show also the diff to be committed?
I'm aware that it may be a long diff, but still.. so useful.</p>
","76","9338","<git>"
"4722423","1","How to merge two branches with different directory hierarchies in git?","<p>I started using Maven with a web application project so the directory hierarchy changed. I created a new branch for the Maven integration. Now I have two branches one with the old directory hierarchy and one with the maven directory hierarchy. Both branches have new commits (bugfixes and new features).</p>

<p>I would like to get rid of the old branch and merge it's changes to the Maven branch. Git merge gives countless conflicts that feels like impossible to resolve. I believe that this is because file paths have changed.</p>

<p>What is the best way to approach this merge?</p>
","36","14356","<git><merge><git-merge>"
"7066325","1","List Git aliases","<p>How do I print a list of my git aliases, i.e., something analogous to the bash <code>alias</code> command?</p>
","183","41205","<git><terminal><alias>"
"21255438","1","Permission denied (publickey) fatal: Could not read from remote repository. while cloning Git repository","<p>I am unable to clone a Git repository, and getting this error:</p>

<pre><code>krishna.soni@KRISHNACHANDRAS /c/Projects $ git clone http://stage.abc.com:10088/pqr
http://&lt;url&gt;/&lt;repository&gt; Cloning into '&lt;repository&gt;'... fatal: could not read Username for 'http://&lt;url&gt;': No such file or directory
</code></pre>

<p>I've read <a href=""http://stackoverflow.com/questions/20923193/bitbucket-windows-and-fatal-could-not-read-password-for"">Bitbucket, Windows and “fatal: could not read Password for”</a>, but still have the problem.</p>

<p>I proceeded further but am now getting this error</p>

<pre><code>sh.exe"": chown: command not found

krishna.soni@KRISHNACHANDRAS /c
$ git clone ssh://krishna.sonipayu.in@stage.payupaisa.
/projects
Cloning into 'C:/projects'...
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.

&gt; krishna.soni@KRISHNACHANDRAS /c
&gt;     $ git clone ssh:&lt;url&gt;
&gt;     ts
&gt;     Cloning into 'C:/projects'...
&gt;     Permission denied (publickey).
&gt;     fatal: Could not read from remote repository.

Please make sure you have the correct access rights
</code></pre>

<p>and the repository exists.</p>
","34","120531","<git><git-clone>"
"7068179","1","Convert line-endlings for whole directory tree (Git)","<p>Following situation:</p>

<p>I'm working on a Mac running OS X and recently joined a project whose members so far all use Windows. One of my first tasks was to set up the codebase in a Git repository, so I pulled the directory tree from FTP and tried to check it into the Git repo I had prepared locally. When trying to do this, all I got was this</p>

<pre><code>fatal: CRLF would be replaced by LF in blog/license.txt.
</code></pre>

<p>Since this affects all files below the ""blog"" folder, I'm looking for a way to conveniently convert ALL files in the tree to Unix line-endings. Is there a tool that does that out of the box or do I get scripting something myself?</p>

<p>For reference, my Git config concerning line-endings:</p>

<pre><code>core.safecrlf=true
core.autocrlf=input
</code></pre>
","37","21372","<git><line-endings>"
"13894387","1","Github ""Failed to publish this branch"" error on windows","<p>I'm new to git, and I just downloaded it yesterday.  As a test for my first online (not local) repo, I committed a useless text file and then hit publish.  After a short while, I got this very non-descriptive error:</p>

<p><img src=""http://i.stack.imgur.com/gUPJ0.jpg"" alt=""enter image description here""></p>

<p>So I know that I can't publish to this branch.  There's only one and it's the master branch.  Does anyone have any further information on what might be causing this error?</p>

<p>As a side note, my partner has successfully uploaded files to the same repo, but I haven't gotten any sort of indication that this has happened.  Does this mean I'm not connected to the repo properly in some way?  I was the one who set it up!</p>
","44","29467","<windows><git><github><repository>"
"21333654","1","How to re-open an issue in github?","<p>I have reported an issue to a project. Now owner changed it state to closed, but how can I change it to open again ?<br>
I read somewhere that I need rights for push and pull operation. Is that true ?</p>
","50","8623","<git><github><git-push><git-pull>"
"7070659","1","GIT -- Exclude / Ignore Files from commit","<p>I need to ignore files in git!  I don't think ignore is the right word actually; I want the files to be in git, but I don't want to be able to commit changes to them.  This may seem like a weird thing to some, but there are many, many instances that I need this functionality.  The one instance I need it for now is when using git with a CMS; the CMS won't work without files that it is constantly changing, but I don't want those files to ever be committed after the initial commit. (This is very easy to do with SVN and Tortoise).</p>

<p>WorkFlow:</p>

<ol>
<li>Get All Files needed to run the app.</li>
<li>Ignore specified directories / files when committing.</li>
</ol>

<p>Here is what I've tried:</p>

<ol>
<li><code>.gitignore</code> -- the files never enter git.  If the file is already in
cache the .gitignore file doesn't do anything.</li>
<li><code>/.git/info/exclude</code> -- same problem as .gitignore, but only for
the local repo.</li>
<li>Branching -- master => LocalIgnores => WorkingBranch.  When the
Working branch is merged with master, the changes made from
LocalIgnores end up in master.  Also, when you checkout one of the
new branches, the deleted files get deleted instead of ignored.</li>
<li>Thirdparty File Structure -- Thirdparty directory on the root
node that holds a copy of all important thirdparty files so they can
be copied into the working directory that utilizes the .gitignore
file. (This one works, but there has to be an easier / better
solurtion).</li>
</ol>
","33","39978","<git><content-management-system><gitignore><filefilter>"
"13897717","1","Push commits to another branch","<p>Is it possible to commit and push changes from one branch to another.</p>

<p>Assume I commited changes in <strong>BRANCH1</strong> and want to push them to <strong>BRANCH2</strong>.</p>

<p>From <strong>BRANCH1</strong>, is it valid to do:</p>

<pre><code>git push origin **BRANCH2**
</code></pre>

<p>And then reset BRANCH1?</p>
","58","42026","<git>"
"4750520","1","git branch: gh-pages","<p>I have a repo on GitHub. Recently I have discovered GitHub's pages and I want to use them.<br>
I would like to create this new branch and then, when I need to, either commit on <code>master</code> branch or on <code>gh-pages</code> branch.  </p>

<p>How can I do this? Do I have to create another folder inside my repo?</p>
","33","22890","<git><git-branch><github-pages>"
"7072013","1","git cherry-pick not working","<p>I'm trying to cherry-pick a commit from master and get it into the current production branch.  However, when I execute <code>git cherry-pick &lt;SHA-hash&gt;</code>, I just get this message:</p>

<pre><code># On branch prod_20110801
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#   site/test-result/
 nothing added to commit but untracked files present (use ""git add"" to track)
 The previous cherry-pick is now empty, possibly due to conflict resolution.
If you wish to commit it anyway, use:

    git commit --allow-empty

Otherwise, please use 'git reset'
</code></pre>

<p>Note: I've tried doing a reset and a reset --hard HEAD^, and neither seemed to change anything.</p>

<p>I'm confused as to why this isn't working for me.</p>

<p>Any insight, advice, or ideas on how to resolve this would be helpful~!</p>
","38","18056","<git><branching-and-merging><cherry-pick>"
"4750845","1","How do you annotate a branch?","<p>Is there any way to annotate a branch?  It would be nice to be able to do something like:</p>

<pre>
$ git notes add branch-name -m 'This branch is for whatever'
</pre>

<p>but that of course is not terribly helpful, since the note applies to the current head of the branch rather than the branch itself. </p>

<p>An easy workaround is to drop a README.branch-name in the repository, but that seems clumsy.   Slightly more elegant is to have an orphaned branch containing nothing but README.branch-names.  I'm looking for a way to record what the purpose of the branch is other than just putting it in the commit message for the ""first"" commit of the branch.  I put ""first"" in quotes because it's not always clear what is meant by that, which is the reason it is inconvenient to put the discussion in a commit message.  It's often difficult to find the commit in which such a message is recorded.</p>
","33","5480","<git>"
"28008139","1","Git Shelve vs Stash","<p>I am very unfamiliar with the <code>shelve</code> aspect of Git. If <code>stash</code> is used to put aside unfinished work what is <code>shelve</code> then? What would you use it for?</p>
","40","13896","<git><intellij-idea>"
"7075923","1","Resync git repo with new gitignore file","<p>Is it possible to ""refresh"" a git repository after updating the gitignore file?</p>

<p>I just added more ignorations(?) to my gitignore and would like to remove stuff already in the repo matching the new file.</p>
","79","39543","<git>"
"7076164","1","Terminology used by Git","<p>it seems like I have to learn to use git. Which probably is a good thing (TM).
However reading online guides and man-pages, I just cannot get my head around the terminology. Everything is always defined in terms of themselves or other unexplained terms (do a ""man git"" and you see what I mean).</p>

<p>So, is there a more DAG-alike structure of definitions of terms, including some of the following (all taken from the git man page(s)!). Maybe using a file system as a starting point, and not assuming the reader is well versed in svn (which I am not).</p>

<ul>
<li>repo</li>
<li>repository</li>
<li>a git</li>
<li>""the git""</li>
<li>index</li>
<li>clone</li>
<li>commit</li>
<li>branch</li>
<li>tree</li>
<li>upstream</li>
<li>a head</li>
<li>HEAD</li>
<li>version</li>
<li>tag</li>
<li>archive</li>
<li>patch</li>
<li>submission</li>
<li>changeset</li>
<li>stash</li>
<li>archive</li>
<li>object</li>
<li>module</li>
<li>submodule</li>
<li>refspec</li>
<li>a history</li>
</ul>

<p>While I can find explanations for some, they usually are in terms of the other. Also some others terms I do know from other contexts (like a UNIX diff). However some other I thought I knew...</p>

<p>I have gathered that there are repositories (similar to gits? and/or trees? upstream?), which you copy (clone? branch?) to get the files physically to your hard drive. Then there are branches (similar to changesets?), tags and commits (similar to patches?), but their distinction is not clear. What files do what modify? What makes my files stay local and what might (heaven forbid) submit my code to teh internets?</p>

<p>What is the recommended way to work, when it comes to branches, tags and commits -- so it is easy to swap between versions, and to import updates from publically available gits.</p>

<p>//T, biting his tongue to control his frustration...</p>
","46","14631","<git>"
"4111728","1","How do I deal with corrupted git object files?","<p>I did a git pull when I was near my quota, and as a result (so I think),  got a corrupted file:</p>

<pre><code>$ git pull
walk dffbfa18916a9db95ef8fafc6d7d769c29a445aa
fatal: object d4a0e7599494bfee2b5351113895b43c351496b3 is corrupted

$ git fsck --full
bad sha1 file: .git/objects/66/b55c76947b1d38983e0944f1e6388c86f07a1b.temp
fatal: object d4a0e7599494bfee2b5351113895b43c351496b3 is corrupted

$ git cat-file -t d4a0e7599494bfee2b5351113895b43c351496b3
error: unable to find d4a0e7599494bfee2b5351113895b43c351496b3
fatal: git cat-file d4a0e7599494bfee2b5351113895b43c351496b3: bad file
</code></pre>

<p>How can I solve this corruption?</p>

<p>.git/objects/66/b55c76947b1d38983e0944f1e6388c86f07a1b.temp was zero bytes; deleting it did nothing to solve my problem(same errors).</p>
","36","34805","<git>"
"11785126","1","CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme:","<p>I understand this is an xcode warning/error, however, it happens when I try to run <code>gitk --all</code> from the command line.</p>

<pre><code>YuFei-Zhus-MacBook-Pro:test phil88530$ gitk --all
2012-08-02 21:14:49.246 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
2012-08-02 21:14:49.252 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
2012-08-02 21:14:49.293 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
2012-08-02 21:14:49.295 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
2012-08-02 21:14:49.474 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
2012-08-02 21:14:49.476 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
2012-08-02 21:14:50.731 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
2012-08-02 21:14:50.734 Wish[33464:707] CFURLCopyResourcePropertyForKey failed because it was passed this URL which has no scheme: 
YuFei-Zhus-MacBook-Pro:test phil88530$ 
</code></pre>

<p>I just replaced a new disk and did a fresh install of osx and updated to mountain lion, installed x11 and xcode. Any suggestions why this happens?</p>
","38","7431","<xcode><osx><git><command-line><terminal>"
"18836351","1","Visual Studio 2013 and BitBucket","<p>Visual Studio 2013 apparently has some nice slick Git integration.</p>

<p>However, after an hour of head-scratching with absolutely nothing making even the slightest bit of sense, I've only been able to create a local repository and despite cloning a remote bitbucket repository I simply cannot find a way to publish to my remote repository.</p>

<p>I've used TFS, Subversion, Perforce and just about everything else, but this is completely baffling, with no instructions and a completely un-intuitive user interface.</p>

<p>Any ideas anyone ?</p>
","124","67319","<git><visual-studio><bitbucket>"
"4735058","1","How to work with Git branches and Rails migrations","<p>I am working on a rails app with quite a few git branches and many of them include db migrations. We try to be careful but occasionally some piece of code in master asks for a column that got removed/renamed in another branch.</p>

<ol>
<li><p><strong>What would be a nice solution to ""couple"" git branches with DB states?</strong></p></li>
<li><p><strong>What would these ""states"" actually be?</strong></p>

<p>We can't just duplicate a database if it's a few GBs in size.</p></li>
<li><p><strong>And what should happen with merges?</strong></p></li>
<li><p><strong>Would the solution translate to noSQL databases as well?</strong></p>

<p>We currently use MySQL, mongodb and redis</p></li>
</ol>

<hr>

<p>EDIT: Looks like I forgot to mention a very important point, I am only interested in the <strong>development environment</strong> but with large databases (a few GBs in size).</p>
","94","13417","<ruby-on-rails><database><git>"
"9436405","1","Git is ignoring files that aren't in gitignore","<p>I have a git repository that is ignoring image files as well as a few other files, but my .gitignore file only has it ignoring a <code>config.php</code> file.  Is there some global ignore file somewhere that I can't seem to find?  I have to specify files to add them now, and it's giving me this warning:</p>

<p><code>The following paths are ignored by one of your .gitignore files</code></p>

<p>The contents of my ~/.gitconfig file are only my e-mail address.</p>
","38","13835","<osx><git><gitignore>"
"4735556","1","Git: ""Not currently on any branch."" Is there an easy way to get back on a branch, while keeping the changes?","<p>So I've done some work in the repository and when I'm about to commit I realize that I'm not currently on any branch. This happens a lot when working with submodules and I am able to solve it, but the process is tedious and I've been thinking that there must be an easier way to do this. </p>

<p>Is there an easy way to get back on a branch, while keeping the changes?</p>
","135","78148","<git>"
"4737381","1","GIT_EDITOR not working with macvim","<p>This is what I have in my ~/.bashrc</p>

<pre><code>export GIT_EDITOR='/Applications/MacVim.app/Contents/MacOS/Vim -g '
</code></pre>

<p>When I issue</p>

<pre><code>git commit
</code></pre>

<p>then I get a macvim editor but on the command line I see this message</p>

<pre><code>$ git commit
Aborting commit due to empty commit message.
</code></pre>

<p>If I use change GIT_EDITOR to use textmate then things work fine</p>

<pre><code>export GIT_EDITOR='/usr/local/bin/mate -w'
</code></pre>

<p>I don't want to use textmate. I want to use macvim. I am using mac and use bash.</p>
","36","6949","<git><bash>"
"23838259","1","How do I clone a job in jenkins?","<p>Sorry, I am relatively new to Jenkins and inherited an environment that I did not set up.  He has the Gerrit Plugin in place so that when we do checkins to gerrit, Jenkins performs a build and if it succeeds, then the modification in gerrit is verified.  If the build fails then it is not.  My understanding is that this is accomplished through jobs set up in Jenkins.  We have now created a new branch (git) and I guess I need to clone the existing jobs pointing to the other branch so that this same workflow occurs and builds are performed on every commit.  Can somebody explain how I would clone these jobs.  I don't seem to see a way to do it through the UI nor can I even see a way to list the jobs out through the UI.</p>
","34","20129","<git><jenkins><continuous-integration><gerrit>"
"11675841","1","git stash -> merge stashed change with current changes","<p>I made some changes to my branch and realized I forgot I had stashed some other necessary changes to said branch.  What I want is a way to merge my stashed changes with the current changes.  </p>

<p>Is there a way to do this?</p>

<p>Its more for convenience, I eventually gave up and committed first my current changes, then my stashed changes, but I would have preferred to get them in with one fell swoop.</p>
","47","36109","<git><git-merge><git-stash>"
"4739683","1","How does 'git log --graph' or 'hg graphlog' work?","<p>I know that the history in Git is stored in a data structure called a DAG. I've heard about DFS and know it's somewhat related.</p>

<p>I'm curious, how do programs such as <code>git log --graph</code> or <code>hg graphlog</code> draw the history? I always thought it's quite complicated to draw the lanes and everything in such a nice way.</p>

<p>Could someone write some pseudo code that demonstrates it?</p>

<p>note: I tried looking around Git or hg's code but it's very hard to follow and get a general idea of what's going on.</p>
","32","3153","<algorithm><git><mercurial>"
"11676210","1","git log the difference between 1 branch from another","<p>I have 2 branches A and B.</p>

<p>Whenever I run a build, Branch A gets merged into Branch B. I want to be able to email out all the updates made in A, since the last time the build was ran.  How can I use <code>git log</code> to be able to copy all the commits made in A since the last A -> B merge?</p>
","37","11305","<git><git-merge><git-log>"
"4752387","1","Pushing a local branch up to GitHub","<p>I have Git configured so that when I run <code>git push</code>, it pushes changes to my GitHub repo. Until now I have only had a master branch.</p>

<p>However, I have now created a local branch and committed to it using: </p>

<pre><code>git checkout -b my_new_branch
git commit
</code></pre>

<p>What I would like to do now is push my changes on this branch to GitHub. Do I just do a git push?</p>

<p>When I first set it up I did run:</p>

<pre><code>git config push.default current
</code></pre>
","87","49820","<git><github><git-push>"
"14040754","1","Deleting remote master branch, refused due to being current branch","<p>How do I delete a remote master branch from GitHub/Bitbucket?</p>

<p>I'm trying:</p>

<pre><code># git push bb --delete master
remote: bb/acl: user is allowed. accepted payload.[K
remote: error: refusing to delete the current branch: refs/heads/master[K
To ssh://git@bitbucket.org/user/reponame.git
 ! [remote rejected] master (deletion of the current branch prohibited)
error: failed to push some refs to 'ssh://git@bitbucket.org/user/reponame.git' 
</code></pre>

<p>Also I tried</p>

<pre><code>git push bb :master
</code></pre>

<p>But all this is not work.</p>
","33","16058","<git><github><bitbucket>"
"7084273","1","Renaming remote git branch","<p>I have 2 git branches: master and experimental.</p>

<p>Experimental became good, I want to make it the master. I figured I would rename to shuffle things around, but here is what I got:</p>

<pre><code>nutebook:Stuff nathan$ git remote rename master old
error: Could not rename config section 'remote.master' to 'remote.old'
</code></pre>

<p>I use GitHub and Git-Tower.</p>
","32","37391","<git><github>"
"11792671","1","How to git bundle a complete repo","<p>I need to transfer a complete repo to a new non-networked machine, preferable as a single file entity. The git bundle allows a <code>git fetch</code>, <code>git pull</code> style operation in a sneakernet environment but appears to assume that you already have a working version of the repo on the destination machine.</p>

<p>What is the right invocation to:</p>

<ol>
<li>Bundle <em>all</em> the branches in the current repo</li>
<li>Start up the new repo on the destination directory, i.e. get the root commit correctly installed</li>
</ol>
","34","16222","<git>"
"21472971","1","What is the purpose of `text=auto` in `.gitattributes` file?","<p>Mostly <code>.gitattributes</code> file has <code>* text=auto</code>. What is the purpose of <code>text=auto</code> in that file?</p>
","37","9015","<git><gitattributes>"
"4743770","1","Git collaboration - how to manage configuration files","<p>I'm writing a short script with a few simple variables at the top of the page. I want to work on them with a friend, but we aren't sure how to manage the variables needing to be changed after pulling each time for one of us, adding unnecessary junk to git status. I thought about just creating different named branches for each of us, and then the master will just have example usernames set, but it seems silly to have to do all that extra work merging. We could have the variables passed to the script as options, but that isn't desired, nor is separating it out to another separate configuration file. It would be great to have something like a .gitignore but for only ignore a few lines in a file.</p>

<p>How can this be elegantly managed? How is this problem usually managed?</p>

<p>Thanks!</p>
","33","7354","<git><configuration-files><gitignore>"
"14142609","1","Git: discover which commits ever touched a range of lines","<p>I'm having trouble figuring out how to use <code>git blame</code> for getting the set of commits that <em>ever</em> touched a given range of lines. There are similar questions like <a href=""http://stackoverflow.com/questions/5098256/git-blame-prior-commits"">this one</a> but the accepted answer doesn't bring me much further.  </p>

<p>Let's say I have a definition that starts on line 1000 of <code>foo.rb</code>. It's only only 5 lines long, but the number of commits that ever changed those lines is enormous. If I do</p>

<pre><code>git blame foo.rb -L 1000,+5
</code></pre>

<p>I get references to (at most) five distinct commits that changed these lines, but I'm also interested in the commits ""behind them"". </p>

<p>Similarly,</p>

<pre><code>git rev-list HEAD -- foo.rb | xargs git log --oneline
</code></pre>

<p>is almost what I want, but I can't specify line ranges to <code>git rev-list</code></p>

<p>Can I pass a flag to <code>git blame</code> to get the list of commits that ever touched those five lines, or what's the quickest way to build a script that extracts such information? Let's ignore for the moment the possibility that the definition once had more or less than 5 lines. </p>
","35","5207","<git><blame>"
"21573405","1","How to prepare a Unity project for git?","<p>What are the steps necessary to prepare a Unity project for committing to a git repository eg. github? I don't want to store unnecessary files (specially temp files and avoid binary formats as much as possible). </p>
","77","45273","<git><unity3d>"
"16666089","1","What's the difference between 'git merge' and 'git rebase'?","<p>I'm trying to understand ... What's the difference between <code>git merge</code> and <code>git rebase</code>?</p>
","236","61887","<git><merge><rebase>"
"14318234","1","How to ignore error on git pull about my local changes would be overwritten by merge?","<p>How do I ignore the following error message on git pull?</p>

<blockquote>
  <p>Your local changes to the following files would be overwritten by merge</p>
</blockquote>

<p>What if I <strong>want</strong> to overwrite them?</p>

<p>I've tried things like <code>git pull -f</code>, but nothing works.</p>

<p>To be clear, I only want to overwrite specific changes, not everything.</p>
","174","192604","<git><git-pull><git-stash>"
"26174757","1","Git: Needed a single revision error","<p>I initialized a new git in my project and I have only two commits so far. My log is like below</p>

<pre><code>git log
commit e515e5b8dcbd8f1ea4a7a7d4a1efb82a1a0aee7a
Author: Olkun Mustafa &lt;olkun.mustafa@gmail.com&gt;
Date:   Fri Oct 3 10:04:20 2014 +0300

    Temp commit

commit 71781bf0a7807351a56d5155dac94169ea700527
Author: Olkun Mustafa &lt;olkun.mustafa@gmail.com&gt;
Date:   Fri Oct 3 10:01:42 2014 +0300

    First Commit
</code></pre>

<p>When I try to rebase this commits I get error like below</p>

<pre><code>git rebase --interactive HEAD~2
fatal: Needed a single revision
invalid upstream HEAD~2
</code></pre>

<p>I quite research at google but I haven't found solution till now.</p>
","40","11930","<git>"
"37848650","1","What causes git push to fail all of a sudden with ""User was holding a relation lock for too long""?","<p>I came back to some code I had open after a few hours and made some changes to the code and then pushed it. All of a sudden, I am getting this error:</p>

<pre><code>sura@raitorial:~/workspace/conse (master) $ git push 
Counting objects: 15, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 492 bytes | 0 bytes/s, done.
Total 6 (delta 5), reused 0 (delta 0)
remote: canceling statement due to conflict with recovery
remote: LINE 1: ...er"".""date_joined"" FROM ""bb_repository"" INNER JOIN ""auth_user...
remote:                                                              ^
remote: DETAIL:  User was holding a relation lock for too long.
remote: 
To git@bitbucket.org:sureumar__/conse.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'git@bitbucket.org:sureumar__/conse.git'
sura@raitorial:~/workspace/conse (master) $ 
</code></pre>

<p>How can I diagnose the cause of this error?</p>
","43","2559","<git><bitbucket>"
"11796580","1","git pull error :error: remote ref is at but expected","<p><strong>Full message:</strong></p>

<pre><code>error: Ref refs/remotes/origin/user is at 3636498c2ea7735fdcedc9af5ab3c8689e6abe77 but expected a21359c6cc2097c85775cde6a40105f4bd7100ec
From github.com:{github project url}
 ! a21359c..6273ffc  user -&gt; origin/user  (unable to update local ref)
</code></pre>
","68","22740","<git><pull><git-pull>"
"9446644","1","What goes into your .gitignore if you're using CocoaPods?","<p>I've been doing iOS development for a couple of months now and just learned of the promising <a href=""http://cocoapods.org/"">CocoaPods</a> library for dependency management.</p>

<p>I tried it out on a personal project: added a dependency to <a href=""https://github.com/allending/Kiwi"">Kiwi</a> to my Podfile, ran <code>pod install CocoaPodsTest.xcodeproj</code>, and <em>voila</em>, it worked great.</p>

<p>The only thing I'm left wondering is: what do I check in, and what do I ignore for version control? It seems obvious that I want to check in the Podfile itself, and probably the .xcworkspace file as well; but do I ignore the Pods/ directory? Are there other files that will be generated down the road (when I add other dependencies) that I should also add to my .gitignore?</p>
","265","49475","<objective-c><git><cocoapods>"
"16386323","1","Following git-flow how should you handle a hotfix of an earlier release?","<p>If you try to follow the git-flow branching model, <a href=""http://nvie.com/posts/a-successful-git-branching-model/"">documented here</a> and with <a href=""https://github.com/nvie/gitflow"">tools here</a>, how should you handle this situation:</p>

<p>You have made a 1.0 release and a 2.0 release. Then you need to make a hotfix for 1.0. You create a hotfix branch off the 1.0 tag and implement the fix there. But what then?</p>

<p>Normally you would merge to master and put a 1.1 release tag there. But you can't merge 1.1 to a point after 2.0 on master.</p>

<p>I guess you could put the release tag on the hotfix branch, but that would create a permanent branch beside the master that would contain a release tag. Is that the right way?</p>
","41","8250","<git><branch><git-flow><hotfix>"
"14031970","1","Git - push current branch shortcut","<p>Is there a shortcut to tell Git to push the current tracking branch to origin?
<br/><strong>Note:</strong> I know that I can change the <a href=""http://stackoverflow.com/a/948397/138585"">default push behavior</a>, but I am looking for an ad-hoc solution that does not change the default behavior. </p>

<p>For example, suppose I am on branch <code>feature/123-sandbox-tests</code> I would be using</p>

<pre><code>git push origin feature/123-sandbox-tests
</code></pre>

<p>which is tedious. I am looking for a shortcut, something like</p>

<pre><code>git push origin current
</code></pre>

<p>where git knows that current is <code>feature/123-sandbox-tests</code>.</p>

<hr>

<p><strong>Edit</strong>: Starting from version 2.0, git's <strong>default</strong> behavior has changed to a more intuitive behavior, which is what I wanted to achieve. See <a href=""http://stackoverflow.com/questions/13148066/warning-push-default-is-unset-its-implicit-value-is-changing-in-git-2-0"">This SO question</a> for details.  </p>

<p><strong>Edit 2</strong>: <a href=""http://stackoverflow.com/a/20922141/138585"">ceztko's answer</a> is the best answer as it allows to push the current branch, regardless of the settings.</p>
","95","31380","<git>"
"4541300","1","Export only modified and added files with folder structure in Git","<p>I would like to get a list of modified and added files in an specific commit so that I can export them and generate a package with the file structure.</p>

<p>The idea is to get the package and extract it on the server. For many reasons I can't create a hook to pull the repo automatically and the easiest way I have to keep the server updated is generating this package. </p>
","43","21729","<git><git-diff>"
"9067283","1","Is there a way to use a Mercurial repository as Git submodule?","<p>I been happily using submodules to track all the libraries my project depends from. 
The thing is I'm using a library called core-plot that only has a public mercurial repository. 
I can probably mirror it in a readonly Git repository, but is this the best option I got? 
I had seen there is modules in Mercurial to track things in Git.  Someone know if the other way around exists?</p>
","49","6391","<git><mercurial><git-submodules>"
"13662255","1","Is there a way to lock individual files or directories on fork when using github?","<p>We are a team of 60+ developers working on the same product and are moving from SVN to Github. We have a process in SVN where in individual files are locked and whenever a developer wants to commit code, he needs to get it unlocked by the owner of the file. Three of us are the owners of the total 150+ files. The unlocking is preceded by a code review. </p>

<p>In Github, we are planning to use the Fork-Clone model - each project a group of dev is working on will do a fork, each developer will do a clone of the fork, write the code &amp; commit to origin, the lead of the feature will do a pull request to upstream.</p>

<p>Though this seems fine, the problem is when a big project gets delivered, it brings in lots of changes for review and hence, increases the load for the file owners. Also, this might happen in the later cycles of development and hence the project might be jeopardized.</p>

<p>One method we thought might work is to have hooks when the git push is done to the origin (fork). There can be one final review git pull to upstream. </p>

<p>However, we could not find any github extensions or push hooks for the same. Is there a quick way (read, existing extension) to do this with Github or should we use the same hooks that we would use with git?</p>
","33","27680","<git><github><githooks><github-api>"
"7297379","1","How do you rebase the current branch's changes on top of changes being merged in?","<p>Okay. If I'm on a branch (say <code>working</code>), and I want to merge in the changes from another branch (say <code>master</code>), then I run the command <code>git-merge master</code> while on the <code>working</code> branch, and the changes get merged in without rebasing the history at all. If I run <code>git-rebase master</code>, then the changes in <code>master</code> are rebased to be put on the top of my <code>working</code> branch. But what if I want to merge in the changes from <code>master</code> but rebase my changes in <code>working</code> to be on top? How do I do that? Can it be done?</p>

<p>I could run <code>git-rebase working</code> on my <code>master</code> branch to put my changes on top in the <code>master</code> branch, but I'd like to be able to do that in my <code>working</code> branch, and I have no idea how. The closest that I can think of doing is creating a new branch from <code>master</code> and then rebase <code>working</code>'s changes on top of that, but then I'd have a new branch instead of altering the <code>working</code> branch.</p>
","49","52365","<git><merge><rebase><git-rebase>"
"307579","1","How do I copy a version of a single file from one git branch to another?","<p>I've got two branches that are fully merged together.</p>

<p>However, after the merge is done, I realise that one file has been messed up by the merge (someone else did an auto-format, gah), and it would just be easier to change to the new version in the other branch, and then re-insert my one line change after bringing it over into my branch.</p>

<p>So what's the easiest way in git to do this?</p>
","522","104013","<git><merge>"
"307828","1","Completely remove file from all Git repository commit history","<p>I accidentally committed an unwanted file (<code>filename.orig</code> while resolving a merge) to my repository several commits ago, without me noticing it until now. I want to completely delete the file from the repository history. Is it possible to rewrite the change history such that <code>filename.orig</code> was never added to the repository in the first place?</p>
","254","194816","<git><git-filter-branch><git-rewrite-history><git-rm>"
"9705534","1","How do I delete a Git branch with TortoiseGit","<p>Is there an option to delete a branch with <a href=""http://en.wikipedia.org/wiki/TortoiseGit"">TortoiseGit</a>?</p>

<p>I found a <a href=""http://stackoverflow.com/questions/2003505/how-do-i-delete-a-git-branch-both-locally-and-in-github"">solution for the commandline</a>. Is there an implementation in TortoiseGit?</p>
","127","34596","<git><branch><tortoisegit>"
"2500296","1","Can I make fast forwarding be off by default in git?","<p>I can't really ever think of a time when I would use <code>git merge</code> rather than <code>git rebase</code> and <em>not</em> want to have a commit show up.  Is there any way to configure git to have fast forwarding off by default?  The fact that there's an <code>--ff</code> option would seem to imply that there's a way, but I can't seem to find it in the documentation.</p>
","173","36455","<git><merge><branch><rebase><fast-forward>"
"364925","1","Is it possible to retroactively turn a set of commits into a branch?","<p>Say I have a git repository and I've been working on master, can I retroactively create a branch.  For example:</p>

<p>A - B - C - A1 - D - A2 - E</p>

<p>I want to make it look like this:</p>

<pre><code>A - A1 - A2   
\           \   
B - C - D - E
</code></pre>

<p>The specific use case is when I've cherry-picked a bunch of commits into an old version branch and it needs to go into multiple older versions and I don't want to repeat the cherry-pick on all those revision.</p>

<p>Essentially it's something that would have been good as a feature or topic branch in the first place but wasn't created like that.</p>
","32","4002","<git><branch>"
"11497457","1","Git clone without .git directory","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/160608/how-to-do-a-git-export-like-svn-export"">How to do a &ldquo;git export&rdquo; (like &ldquo;svn export&rdquo;)</a>  </p>
</blockquote>



<p>Is there a flag to pass to <code>git</code> when doing a clone, say don't clone the <code>.git</code> directory? If not, how about a flag to delete the <code>.git</code> directory after the clone?</p>
","50","34390","<git><version-control><git-clone>"
"6894322","1","How to make git-diff and git log ignore new and deleted files?","<p>Sometimes there's a couple of changed files together with some new, deleted and/or renamed files. When doing <code>git diff</code> or <code>git-log</code> I'd like to omit them, so I can better spot the modifications.</p>

<p>Actually, listing the names of the new and deleted files without their content would be best. For ""old"" renamed to ""new"" I'd like to optionally get the difference between ""old"" and ""new"".</p>
","66","8057","<git><git-diff>"
"4545370","1","How to list all tags pointing to a specific commit in git","<p>I have seen the commands <code>git describe</code> and <code>git-name-rev</code> but I have not managed to get them to list more than one tag.</p>

<p>Example: I have the sha1 48eb354 and I know the tags A and B point to it. So I want a git command <code>git {something} 48eb354</code> that produce output similar to ""A, B"". I am not interested in knowing references relative other tags or branches just exact matches for tags.</p>
","36","10169","<git><tags>"
"24290358","1","Remove a folder from git tracking","<p>I need to exclude a folder (name uploads) from tracking. I tried to run</p>

<pre><code>git rm -r --cached wordpress/wp-content/uploads
</code></pre>

<p>and after that I added the path to .gitignore</p>

<pre><code>/wordpress/wp-content/uploads
</code></pre>

<p>but when I ran ""git status"" they show up as deleted. If I try to commit the changes, the files will be deleted, not only removed from tracking.</p>

<p>What I'm doing wrong? </p>

<p>I have also tried</p>

<pre><code>git update-index --assume-unchanged &lt;file&gt;
</code></pre>

<p>but this seems to untrack only files. But I need to remove an entire folder (including subfolders) from tracking.</p>

<p>Thank you so much</p>
","40","18912","<git>"
"2568321","1","Cloning git repository from svn repository, results in file-less, remote-branch-less git repo","<h2>Working SVN repo</h2>

<p>I'm starting a git repo to interact with a svn repo.  The svn repository is set and working fine, with a single commit of a basic README file in it.</p>

<p>Checking it out works fine:</p>

<pre><code>tchalvak:~/test/svn-test$ 
svn checkout --username=myUsernameHere http://www.url.to/project/here/charityweb/
A    charityweb/README
Checked out revision 1.
</code></pre>

<h2>Failed git-svn clone of svn repo</h2>

<p>When I try to clone the repository in git, the first step shows no errors...</p>

<pre><code>tchalvak:~/test$ 
git svn clone -s --username=myUserNameHere http://www.url.to/project/here/charityweb/
Initialized empty Git repository in /home/tchalvak/test/charityweb/.git/
Authentication realm: &lt;http://www.url.to/project/here:80&gt; Charity Web
Password for 'myUserNameHere': 
</code></pre>

<p>...but results in a useless folder, containing no files, no branches, and no commits:</p>

<pre><code>tchalvak:~/test$ ls
charityweb
tchalvak:~/test$ cd charityweb/
tchalvak:~/test/charityweb$ ls
tchalvak:~/test/charityweb$ ls -al
total 12
drwxr-xr-x 3 tchalvak tchalvak 4096 2010-04-02 13:46 .
drwxr-xr-x 4 tchalvak tchalvak 4096 2010-04-02 13:46 ..
drwxr-xr-x 8 tchalvak tchalvak 4096 2010-04-02 13:47 .git
tchalvak:~/test/charityweb$ git branch -av
tchalvak:~/test/charityweb$ git status
# On branch master
#
# Initial commit
#
nothing to commit (create/copy files and use ""git add"" to track)
tchalvak:~/test/charityweb$ git fetch
fatal: Where do you want to fetch from today?
tchalvak:~/test/charityweb$ git rebase origin/master
fatal: bad revision 'HEAD'
fatal: Needed a single revision
invalid upstream origin/master
tchalvak:~/test/charityweb$ git log
fatal: bad default revision 'HEAD'
</code></pre>

<p>How do I get something I can commit back to?  I expect I'm doing something wrong in this process, but what?</p>
","33","9742","<git><repository><git-svn><git-clone>"
"5009096","1","Files showing as modified directly after git clone","<p>I'm having an issue with a repository at the moment, and though my git-fu is usually good, I can't seem to solve this issue. </p>

<p>When I clone this repository, then cd into the repo, git-status shows several files as changed. Note: I haven't opened the repo in any editor or anything. </p>

<p>I tried following this guide: <a href=""http://help.github.com/dealing-with-lineendings/"">http://help.github.com/dealing-with-lineendings/</a> but this didn't help at all with my issue.</p>

<p>I have tried <code>git checkout -- .</code> many times but it seems not to do anything.</p>

<p>Any help/ideas would be greatly appreciated</p>

<p>Update 1: I'm on a mac, and there are no submodules in the repo itself.</p>

<p>Update 2: the filesystem is ""Journaled HFS+"" filesystem on the mac, and is not case-sensitive. The files are one-line and about 79K each (yes, you heard right) so looking at <code>git diff</code> isn't particularly helpful. I have heard about doing <code>git config --global core.trustctime false</code> which might help, which i will try when i get back to the computer with the repo on it.</p>

<p><strong>Update 3:</strong> changed details of filesystem with facts! and, I tried the <code>git config --global core.trustctime false</code> trick which didn't work very well.</p>
","108","37204","<git><git-clone>"
"9069061","1","What is the difference between `git merge` and `git merge --no-ff`?","<p>Using <code>gitk log</code>, I could not spot a difference between the two. How can I observe the difference (with a git command or some tool)?</p>
","287","113810","<git><merge><fast-forward>"
"454734","1","How can one change the timestamp of an old commit in Git?","<p>The answers to <a href=""http://stackoverflow.com/questions/179123/how-do-i-edit-an-incorrect-commit-message-in-git"">Edit an incorrect commit message in Git</a> describe a way to amend previous commit messages that haven't yet been pushed upstream.  The new messages inherit the timestamps of the original commits.  This seems logical, but is there a way to also re-set the times?</p>
","343","103851","<git><timestamp><commit><git-rewrite-history>"
"12222186","1","Are git hooks pushed to the remote when I 'git push'?","<p>If I create a new hook script in my local repository in repo/.git/hooks/post-commit and then I run ""git push"" are the hooks pushed to the remote?  Then, when the other developers run ""git pull"" from the same origin will they get my new hooks? </p>
","31","7231","<git><githooks>"
"6897600","1","Git push failed, ""Non-fast forward updates were rejected""","<p>I've edited my GIT repositories via Git Online. After I tried to push my local code changes, I got an error: </p>

<pre><code>Git push failed, To prevent from losing history, non-fast forward updates were rejected.
</code></pre>

<p>How can I fix this?</p>
","69","99192","<git><github><push>"
"19576116","1","how to add multiple files in git at the same time","<p>This will be my first git use. I have added new files ( a lot ) to the folder/project ( git local repository).</p>

<p>I went through online tutorials and forums and see i can do </p>

<pre><code>     git commit -a
</code></pre>

<p>So i go to the base folder of the repository and do a </p>

<pre><code>    sudo git commit -a
</code></pre>

<p>But then, some screens comes up and asks me to add a comment which i do. i do not know how to proceed or exit. I do not want to mess up so i did ctrl + Z and did not do anything.</p>

<p>Can you guys please outline the commands i need to use?</p>

<pre><code>git commit -a 
</code></pre>

<p>and </p>

<pre><code>git push?
</code></pre>
","32","39734","<git><push><commit>"
"2672351","1","Hg: How to do a rebase like git's rebase","<p>In Git I can do this:</p>

<pre>
1. Start working on new feature:
$ git co -b newfeature-123  # (a local feature development branch)
do a few commits (M, N, O)

master A---B---C
                \
newfeature-123   M---N---O

2. Pull new changes from upstream master:
$ git pull
(master updated with ff-commits)

master A---B---C---D---E---F
                \
newfeature-123   M---N---O

3. Rebase off master so that my new feature 
can be developed against the latest upstream changes:
(from newfeature-123)
$ git rebase master

master A---B---C---D---E---F
                            \
newfeature-123               M---N---O
</pre>

<p><br /></p>

<p>I want to know how to do the same thing in Mercurial, and I've scoured the web for an answer, but the best I could find was: <a href=""http://www.selenic.com/pipermail/mercurial/2007-June/013393.html"">git rebase - can hg do that</a></p>

<p>That link provides 2 examples:<br />
1. I'll admit that this: (replacing the revisions from the example with those from my own example)</p>

<pre>
hg up -C F  
hg branch -f newfeature-123  
hg transplant -a -b newfeature-123 
</pre>

<p>is not too bad, except that it leaves behind the pre-rebase M-N-O as an unmerged head and creates 3 new commits M',N',O' that represent them branching off the updated mainline.</p>

<p>Basically the problem is that I end up with this:</p>

<pre>
master A---B---C---D---E---F
                \           \
newfeature-123   \           M'---N'---O'
                  \
newfeature-123     M---N---O
</pre>

<p>this is not good because it leaves behind local, unwanted commits that should be dropped.</p>

<ol>
<li>The other option from the same link is </li>
</ol>

<pre>
hg qimport -r M:O
hg qpop -a
hg up F
hg branch newfeature-123
hg qpush -a
hg qdel -r qbase:qtip
</pre>

<p>and this does result in the desired graph:</p>

<pre>
master A---B---C---D---E---F
                            \
newfeature-123               M---N---O
</pre>

<p>but these commands (all 6 of them!) seem so much more complicated than </p>

<pre>
$ git rebase master
</pre>

<p>I want to know if this is the only equivalent in Hg or if there is some other way available that is simple like Git.</p>
","170","45784","<git><mercurial><dvcs><rebase>"
"6898317","1","git pull analogous to / opposite of git push -f?","<p>Sometimes, esp. when I'm the only one working on a remote repository, I like rewriting the history with <code>git rebase -i</code> and <code>git push origin master -f</code>.</p>

<p>How do I do a forced <code>git pull origin master</code> without a merge? I tried it with the <code>-f</code> option, but that didn't work. I just want to rewrite the history of my local git repo to match that of the remote (origin).</p>
","31","2636","<git><git-push><git-pull><git-fetch>"
"2672454","1","How do I git reset --hard HEAD on Mercurial?","<p>I'm a Git user trying to use Mercurial.</p>

<p>Here's what happened: I did a <code>hg backout</code> on a changeset I wanted to revert. That created a new head, so hg instructed me to merge (back to ""default"", I assume). After the merge, it told me I still had to commit. Then I noticed something I did wrong when resolving a conflict in the merge, and decided I wanted to have everything as before the <code>hg backout</code>, that is, I want this uncommited merge to go away. On Git this uncommited stuff would be in the index and I'd just do a <code>git reset --hard HEAD</code> to wipe it out but, from what I've read, the index doesn't exist on Mercurial. So how do I back out from this?</p>
","38","27476","<git><mercurial><merge><dvcs>"
"556923","1","How to merge my local uncommitted changes into another Git branch?","<p>How can I do this in git:</p>

<p>My current branch is branch1 and I have made some local changes. However I now realize that I actually meant to be applying these changes to branch2. Is there a way to apply/merge these changes so that they become local changes on branch2 without committing them on branch1?</p>
","403","76493","<git><branch>"
"23492381","1","Does Git warn me if a shorthand commit ID can refer to 2 different commits?","<p>If <code>cee157</code> can refer to 2 different commit IDs, such as </p>

<p><code>cee157eb799af829a9a0c42c0915f55cd29818d4</code> and <code>cee1577fecf6fc5369a80bd6e926ac5f864a754b</code></p>

<p>will Git warn me if I type in <code>git log cee157</code>?  (or Git 1.8.5.2 (Apple Git-48) allows me to type in <code>git log cee1</code>).</p>

<p>I think it should, although I can't find any authoritative source that says it would.</p>
","128","4466","<git>"
"610208","1","How to retrieve a single file from specific revision in Git?","<p>I have a Git repository and I'd like to see how some file looked a few months ago. I found the revision at that date, it's: <code>27cf8e84bb88e24ae4b4b3df2b77aab91a3735d8</code>. I need to see what did one file look like and also save that to a file.</p>

<p>I managed to see the file using <code>gitk</code>, but it doesn't have an option to save it. I tried with command line tools, the closest I got was:</p>

<pre><code>git-show 27cf8e84bb88e24ae4b4b3df2b77aab91a3735d8 my_file.txt
</code></pre>

<p>However, this command shows a diff and not the file contents. I know I can later use something like <code>PAGER=cat</code> and redirect output to a file, but I don't know how to get to the actual file content.</p>

<p>Basically, I'm looking for something like <strong>svn cat</strong>.</p>
","436","171090","<git><single-file>"
"655243","1","Ignore modified (but not committed) files in git?","<p>Can I tell git to ignore files that are modified (deleted) but should not be committed?</p>

<p>The situation is that I have a subdirectory in the repo which contains stuff I'm not interested in at all, so I deleted it to prevent it showing up in auto-completions and the like (in the IDE).</p>

<p>But now, if I add that folder to .gitignore, simply nothing changes, all the stuff is shown as deleted by git status.</p>

<p>Is there a way to make git ignore it either way?</p>

<p>(Alternatively, as I'm using git-svn, could I commit the changes to the local git and ensure they are not passed on to the svn repo?)</p>
","135","38293","<git><git-svn><ignore>"
"4468322","1","Switch current branch in git bare repository","<p>I actually want to remove a branch in the bare repository i am working with, but this task hits a dead end because I cannot switch away from the master repository without a 'work tree' which a bare repository does not have.</p>

<p>When I run <code>git branch -d master</code> the output is:</p>

<pre><code>error: Cannot delete the branch 'master' which you are currently on.
</code></pre>

<p>So I try to switch to another branch called 'develop' by running <code>git checkout develop</code> and the output is:</p>

<pre><code>fatal: This operation must be run in a work tree
</code></pre>
","44","9222","<git><git-branch><git-checkout>"
"4468361","1","Search all of Git history for a string?","<p>I have a code base which I want to push to GitHub as open source. In this git-controlled source tree, I have certain configuration files which contain passwords. I made sure not to track this file and I also added it to the <code>.gitignore</code> file. However, I want to be absolutely positive that no sensitive information is going to be pushed, perhaps if something slipped in-between commits or something. I doubt I was careless enough to do this, but I want to be <em>positive</em>.</p>

<p>Is there a way to ""grep"" all of git? I know that sounds weird, but by ""all"" I guess I mean every version of very file that ever was. I guess if there is a command that dumps the diff file for every commit, that might work?</p>
","325","84907","<git><github>"
"12366150","1","How to delete  .orig files after merge from git repository?","<p>Some how .orig files are checked in my git repository during merge, which are now displayed in modified and un-tracked sector. But I don't want this files anymore in my repository. How to do that.</p>

<pre><code>    modified:   Gemfile.lock.orig
    #   modified:   Gemfile.orig
    #   modified:   app/assets/images/bg_required.png.orig
    #   modified:   app/assets/javascripts/application.js.orig

    etc...
</code></pre>

<p>Any help will be appreciated.  </p>
","45","23645","<git>"
"9072376","1","configure Git to accept a particular self-signed server certificate for a particular https remote","<p>The sysadmin for a project I'm on has decided that SSH is ""too much trouble""; instead, he has set up Git to be accessible via an <code>https://</code> URL (and username/password authentication). The server for this URL presents a self-signed certificate, so he advised everyone to turn off certificate validation. This does not strike me as a good setup, security-wise.</p>

<p>Is it possible to tell Git that for remote X (or better, any remote in any repository that happens to begin with <code>https://$SERVERNAME/</code>) it is to accept a particular certificate, and <em>only</em> that certificate?  Basically reduplicate SSH's server-key behavior.</p>
","58","53167","<git><ssl-certificate>"
"7588268","1","Telling git its ok to remove untracked files","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/61212/how-do-you-remove-untracked-files-from-your-git-working-copy"">How do you remove untracked files from your git working copy?</a>  </p>
</blockquote>



<p>Is it possible to tell git to remove untrack files? Mainly something that is similar to a reset?</p>

<p>example:</p>

<pre><code>git checkout -- index.php &lt;-- revert my file
git checkout -- master &lt;-- this would revert the entire repo back to the last commit on master, removing (deleting) any and all untracked files as well as reverting committed ones.
</code></pre>

<p>I know this is trivial todo on the shell, but I'd like to know if this can be done in Git?</p>
","42","18934","<git><version-control>"
"4638500","1","Git blame showing no history","<p>When I run git blame on a file (using msysgit) I always get the following sort of printout:</p>

<pre><code>00000000 (Not Committed Yet 2011-01-09 11:21:30 +0200   1) package co
00000000 (Not Committed Yet 2011-01-09 11:21:30 +0200   2) {
00000000 (Not Committed Yet 2011-01-09 11:21:30 +0200   3)      impor
00000000 (Not Committed Yet 2011-01-09 11:21:30 +0200   4)      impor
00000000 (Not Committed Yet 2011-01-09 11:21:30 +0200   5)      impor
00000000 (Not Committed Yet 2011-01-09 11:21:30 +0200   6)      impor
00000000 (Not Committed Yet 2011-01-09 11:21:30 +0200   7)      impor
</code></pre>

<p>i.e. it shows all lines as Not Yet Committed.</p>

<p>I tried this on many files, that have many commits - always the same results. I also tried using relative/full path, but it seems to make no difference.</p>

<p>When I try to use TortoiseGit's blame it always shows every line as being last committed at the first commit:</p>

<p><img src=""http://i.stack.imgur.com/c4p9p.png"" alt=""alt text""></p>

<p>even thought, as I've said, there are actually tens of commits in the history of these files..</p>

<p>Ideas?</p>

<p><strong>Edit - More Info</strong></p>

<ul>
<li>Git blame works fine on GitHub, where this repo is hosted.</li>
<li>It also works fine if I clone it to a linux machine and do the blame there</li>
<li>It seems that only on msysgit this doesn't work</li>
</ul>
","69","8356","<git><msysgit><blame>"
"5252450","1","Using someone else's repo as a Git Submodule on GitHub","<p>I am trying to find out if it is possible to use someone else's repository (or branch of a repository) as a Submodule in your own Git repository. Documentation on github itself is either missing, or I'm not using the right terminology to look for it. If this isn't the preferred way to go about including a public repository as a shared library within ones git project, suggestions as an alternative best practice would be appreciated.</p>
","53","16059","<git><version-control><repository><github><git-submodules>"
"9229301","1","git cherry-pick says ""...38c74d is a merge but no -m option was given""","<p>I made some changes in my master branch and want to bring those upstream. when I cherry-pick the following commits however I get stuck on fd9f578 where git says:</p>

<pre><code>$ git cherry-pick fd9f578
fatal: Commit fd9f57850f6b94b7906e5bbe51a0d75bf638c74d is a merge but no -m option was given.
</code></pre>

<p>What is git trying to tell me and is cherry-pick the right thing to be using here?  The master branch does include changes to files which have been modified in the upstream branch, so I'm sure there will be some merge conflicts but those aren't too bad to straighten out. I know which changes are needed where.</p>

<p>These are the commits I want to bring upstream.</p>

<pre><code>e7d4cff added some comments...
23e6d2a moved static strings...
44cc65a incorporated test ...
40b83d5 whoops delete whitspace...
24f8a50 implemented global.c...
43651c3 cleaned up ...
068b2fe cleaned up version.c ...
fd9f578 Merge branch 'master' of ssh://extgit/git/sessions_common
4172caa cleaned up comments in sessions.c ...
</code></pre>
","151","67058","<git><merge><rebase><cherry-pick>"
"4639091","1","Undo “git add <dir>”?","<p>I mistakenly added files using the command ""git add dir"". I have not yet run ""git commit"". Is there a way to remove this dir and everything contained within it from the commit?</p>

<p>I have tried <code>git reset dir</code>, but it didn't work. Apparently <code>git reset file</code> is the way to undo it. But I have so many files and so little time.</p>
","80","26921","<git><git-reset>"
"801577","1","How to recover Git objects damaged by hard disk failure?","<p>I have had a hard disk failure which resulted in some files of a Git repository getting damaged. When running <code>git fsck --full</code> I get the following output:</p>

<pre><code>error: .git/objects/pack/pack-6863e0a0e4b4ded6090fac5d12eba6ca7346b19c.pack SHA1 checksum mismatch
error: index CRC mismatch for object 6c8cae4994b5ec7891ccb1527d30634997a978ee from .git/objects/pack/pack-6863e0a0e4b4ded6090fac5d12eba6ca7346b19c.pack at offset 97824129
error: inflate: data stream error (invalid code lengths set)
error: cannot unpack 6c8cae4994b5ec7891ccb1527d30634997a978ee from .git/objects/pack/pack-6863e0a0e4b4ded6090fac5d12eba6ca7346b19c.pack at offset 97824129
error: inflate: data stream error (invalid stored block lengths)
error: failed to read object 0dcf6723cc69cc7f91d4a7432d0f1a1f05e77eaa at offset 276988017 from .git/objects/pack/pack-6863e0a0e4b4ded6090fac5d12eba6ca7346b19c.pack
fatal: object 0dcf6723cc69cc7f91d4a7432d0f1a1f05e77eaa is corrupted
</code></pre>

<p>I have backups of the repository, but the only backup that includes the pack file has it already damaged. So I think that I have to find out a way to retrieve the single objects from different backups and somehow instruct Git to produce a new pack with only correct objects.</p>

<p>Can you please give me hints how to fix my repository?</p>
","71","64316","<git><corruption><data-recovery>"
"802573","1","Difference between GIT and CVS","<p>What is the difference between git and cvs version control systems?  </p>

<p>I have been happily using CVS for over 10 years and have been told that GIT is much better.  Could someone please explain what the difference between the two is and why one is better than the other?</p>
","80","42227","<git><version-control><cvs>"
"13674647","1","Cannot push to git repository - permission denied","<p>I have a following problem:</p>

<pre><code>$ git push -u origin master
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>I have already checked the connection doing this:</p>

<pre><code>$ ssh -vT git@github.com
</code></pre>

<p>and output looks good, I was correctly authenticated.</p>

<p>While checking further, I noticed that:</p>

<pre><code>$ ssh-add -l
The agent has no identities.
</code></pre>

<p>I have tried to run ssh-agent, but nothing changed:</p>

<pre><code>$ ssh-agent
SSH_AUTH_SOCK=/tmp/ssh-A1mhFqvqncuO/agent.766; export SSH_AUTH_SOCK;
SSH_AGENT_PID=767; export SSH_AGENT_PID;
echo Agent pid 767;
$ ssh-add -l
Could not open a connection to your authentication agent.
</code></pre>

<p>I am using Arch Linux. Any help would be strong appreciated! Thanks in advance!</p>

<p><a href=""https://help.github.com/articles/error-permission-denied-publickey/"" rel=""nofollow"">Github diagnostic help here.</a></p>
","33","45300","<git><github><ssh><ssh-keys><ssh-agent>"
"2888029","1","How to push a local Git repository to another computer?","<p>I have a local Git repository setup on my laptop. I would like to push it to my desktop. </p>

<p>How can I do that?</p>
","39","16266","<git><git-push>"
"5307417","1","How to skip the commit message step in ""git commit --amend""?","<p>I'm running a very rapid code-compile-test loop where I am amending changes to my commits far more often than not.</p>

<p>For example:</p>

<pre><code># Make some changes
$ git commit -m ""Added feature X""
# Compile, test
# Fix bugs
$ git commit -a --amend
</code></pre>

<p>I usually want the same commit message after I fix my bugs. Is there a way to make git skip firing up my <code>EDITOR</code> and just use the original commit message?</p>
","38","3248","<git><version-control><commit-message>"
"6899582","1","I change the capitalization of a directory and Git doesn't seem to pick up on it","<p>I'm developing a project on OS X Lion that is under Git version control. I had these lowercase directories and then later capitalized them (e.g. emailaddresses => EmailAddresses), but Git doesn't seem to recognize the change. It still thinks the directories are lowercase when I run <code>git ls-files</code> and other commands.</p>

<p>Is this harmless, or should I do something else to get Git to pick up on this change?</p>
","41","9104","<git><osx>"
"5335197","1","Git's famous ""ERROR: Permission to .git denied to user""","<p>I have tried googling and read through <a href=""http://help.github.com/troubleshooting-ssh/"">http://help.github.com/troubleshooting-ssh/</a> and various, various guides. I am unable to <code>git push -u origin master</code> or <code>git push origin master</code> ( the same command ).</p>

<p>I've had my git account for at least 2 or so years. I've successfully been able to create repos and <code>push -u origin master</code> fine on my laptop but on this desktop I'm having issues.</p>

<p>Here's what I tried:</p>

<p><strong>1.</strong> I have setup my git user name</p>

<p><strong>2.</strong> I have setup my git user email</p>

<p><strong>3.</strong> I have uploaded the contents of my /home/meder/.ssh/id_rsa.pub to github's account page. I have verified I did not paste any whitespace</p>

<p><strong>4.</strong> I have created a ~/.ssh/config with these contents:</p>

<pre><code>  Host github.com
  User git
  Hostname github.com
  PreferredAuthentications publickey
  IdentityFile ~/.ssh/id_rsa
</code></pre>

<p>I have chmodded the .ssh to 700, id_rsa 600</p>

<p><strong>5.</strong> I have added the <strong>proper</strong> remote origin <strong>without making typos</strong> : <code>git remote add origin git@github.com:medero/cho.git</code></p>

<p><strong>6.</strong> To confirm #5, here is my .git/config. The directory is <em>correct</em> and not another directory:</p>

<pre><code>[remote ""origin""]
        fetch = +refs/heads/*:refs/remotes/origin/*
        url = git@github.com:medero/cho.git
</code></pre>

<p><strong>7.</strong> <code>ssh git@github.com -v</code> gives me a successful Authentication</p>

<p><strong>8.</strong> One weird thing is, the username which it greets me with has <code>t</code> appended to it. My github username is <code>medero</code>, not <code>medert</code>.</p>

<blockquote>
  <p>Hi mederot! You've successfully
  authenticated, but GitHub does not
  provide shell access.</p>
</blockquote>

<p><strong>9.</strong> I am <strong>not</strong> behind a proxy or firewall</p>

<p><strong>10.</strong> The key is offered, heres the output from <code>-v</code>:</p>

<blockquote>
<pre><code>debug1: Host 'github.com' is known and matches the RSA host key.
debug1: Found key in /home/meder/.ssh/known_hosts:58
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Offering public key: /home/meder/.ssh/id_rsa
debug1: Remote: Forced command: gerve mederot
debug1: Remote: Port forwarding disabled.
debug1: Remote: X11 forwarding disabled.
debug1: Remote: Agent forwarding disabled.
debug1: Remote: Pty allocation disabled.
debug1: Server accepts key: { some stuff, dont know if i should share it

debug1: Remote: Forced command: gerve mederot
debug1: Remote: Port forwarding disabled.
debug1: Remote: X11 forwarding disabled.
debug1: Remote: Agent forwarding disabled.
debug1: Remote: Pty allocation disabled.
debug1: Authentication succeeded (publickey).
</code></pre>
</blockquote>

<p><strong>11.</strong> Here are the commands I used</p>

<pre><code>mkdir cho
git init
touch README
git add README
git commit -m 'test'
git remote add origin git@github.com:medero/cho.git
git push -u origin master
</code></pre>

<p><strong>12.</strong> I don't want to create a new SSH key.</p>

<p><strong>13.</strong> If I git clone using ssh and make an edit, commit, and git push, I get the same exact thing.</p>

<p><strong>14.</strong> Here's the actual error:</p>

<pre><code>$ git push
ERROR: Permission to medero/cho.git denied to mederot.
fatal: The remote end hung up unexpectedly
</code></pre>

<p><strong>15.</strong> I have setup my github username and github token:</p>

<p>$ git config --global github.user medero
$ git config --global github.token 0123456789yourf0123456789tokenSets the GitHub token for all git instances on the system</p>

<p><strong>16.</strong> I have confirmed my github username is NOT <code>mederot</code> and my github token IS CORRECT per my account page ( validated first 2 chars and last 2 chars ).</p>

<p><strong>17.</strong> To confirm #16, ~/.gitconfig contains</p>

<pre><code>[github]
    token = mytoken...
    user = medero
</code></pre>

<p><strong>18.</strong> I did <code>ssh-key add ~/.ssh/id_rsa</code> if that's even necessary...</p>

<p><br><br>
<strong>THEORIES:</strong></p>

<p>I suspect there's something fishy because when I get ssh authenticated, the user greeting is <code>mederot</code> and not <code>medero</code>, which is my acct. Could something in my github account possibly be incorrectly cached?</p>

<p>I also suspect some local ssh caching weirdness because if i <code>mv ~/.ssh/id_rsa KAKA</code> and <code>mv ~/.ssh/id_rsa.pub POOPOO</code>, and do <code>ssh git@github.com -v</code>, it still Authenticates me and says it serves my /home/meder/.ssh/id_rsa when I renamed it?! It has to be cached?!</p>
","31","26277","<git><ssh><github>"
"922210","1","Unable to Git-push master to Github","<p>This question is related to my problem in <a href=""http://stackoverflow.com/questions/904353/unable-to-understand-git-branch-merge-and-rebase/907799#907799"">understanding rebase, branch and merge</a>,
and to the problem</p>

<blockquote>
  <p>How can you commit to your github account as you have a teamMate in your remote list?</p>
</blockquote>

<p>I found out that <a href=""http://ubuntuforums.org/showthread.php?t=850161"">other people</a> have had the same problem.
The problem seems to be related to /etc/xinet.d/.</p>

<p><strong>Problem:</strong> unable to push my local branch to my master branch at Github</p>

<p>I run</p>

<pre><code>git push origin master
</code></pre>

<p>I get </p>

<pre><code>fatal: 'origin' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>The error message suggests me that the branch 'origin' is not in my local git repository. This way, Git stops connecting to Github.</p>

<p>This is strange, since I have not removed the branch 'origin'.</p>

<p>My git tree is</p>

<pre><code>  dev
* master
  ticgit
  remotes/Math/Math
  remotes/Math/master
  remotes/origin/master
  remotes/Masi/master
</code></pre>

<p><strong>How can you push your local branch to Github</strong>, while you have a teamMate's branch in your local Git?</p>

<hr>

<p>VonC's answer solves the main problem.
I put a passphares to my ssh keys.</p>

<p>I run </p>

<pre><code>$git push github master     
</code></pre>

<p>I get</p>

<pre><code>Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>It seems that I need to give the passphrase for Git somehow.</p>

<p><strong>How can you make Github ask for your passphrase rather than relying on the ssh key?</strong></p>
","83","111299","<git><version-control><push>"
"6900103","1","Why can't I push from a shallow clone?","<p>The <code>git clone --depth</code> command option says</p>

<pre><code>--depth &lt;depth&gt; 
Create a shallow clone with a history truncated to the specified number of revisions. 
A shallow repository has a number of limitations 
(you cannot clone or fetch from it, nor push from nor into it),
 but is adequate if you are only interested in the recent history of a large project with a long history,
 and would want to send in fixes as patches. 
</code></pre>

<p>Why do shallow clones have this limitation? Why is it a patches only workflow?</p>

<p>For some project workflows I need to pass just the latest commit from a single branch to a coder, and then have them be able to <code>push</code> their (fast forward) developments to the main server. This partly for security, IP protection and repo size, and partly to reduce the confusion that a big repo would bring to a naive coder. Is there a git workflow that allows this?</p>

<hr>

<p>Update: Based on Karl Bielefeldt's answer the <code>git checkout --orphan</code> should be the right answer. But one still needs to 'clone' that branch alone to the new user, and be able to push it effectively.</p>

<p>The man page states:</p>

<blockquote>
  <p><code>git checkout [-q] [-f] [-m] [[-b|-B|--orphan] &lt;new_branch&gt;] [&lt;start_point&gt;] --orphan</code></p>
  
  <p>Create a new orphan branch, named <code>&lt;new_branch&gt;</code>, started from
  <code>&lt;start_point&gt;</code>  and switch to it. The first commit made on this new
  branch will have no  parents and it will be the root of a new history
  totally disconnected from  all the other branches and commits.</p>
  
  <p>The index and the working tree are adjusted as if you had previously
  run <code>git checkout &lt;start_point&gt;</code>. This allows you to start a new
  history that  records a set of paths similar to <code>&lt;start_point&gt;</code> by
  easily running <code>git  commit -a</code> to make the root commit.</p>
  
  <p>This can be useful when you want to publish the tree from a commit
  without  exposing its full history. You might want to do this to
  publish an open  source branch of a project whose current tree is
  ""clean"", but whose full  history contains proprietary or otherwise
  encumbered bits of code.</p>
  
  <p>If you want to start a disconnected history that records a set of
  paths that  is totally different from the one of <code>&lt;start_point&gt;</code>, then
  you should clear  the index and the working tree right after creating
  the orphan branch by  running <code>git rm -rf .</code> from the top level of the
  working tree. Afterwards  you will be ready to prepare your new files,
  repopulating the working tree,  by copying them from elsewhere,
  extracting a tarball, etc.</p>
</blockquote>

<p>VonC's link to Junio's comments is interesting. I think the manual should provide the guidance in this case, and allow the right command [e.g. <code>clone &lt;branch&gt; --options</code>] to extract just the relevant part of the repo. Obviously the probability of <code>push</code> success is increased by having a few linked commits and SHA1s at the bottom of the history that will lock down the repo matching.</p>

<hr>

<p>Update Git 1.9.0 : release notes 14 Feb '14.</p>

<p>""Fetching from a shallowly-cloned repository used to be forbidden,
primarily because the codepaths involved were not carefully vetted
and we did not bother supporting such usage. This release attempts
to allow object transfer out of a shallowly-cloned repository in a
more controlled way (i.e. the receiver becomes a shallow repository
with a truncated history).""</p>

<p>This is good news for the shallow cloners.
Next - Narrow clones possibly.</p>
","37","16262","<git><workflow><git-clone>"
"9146907","1","git: abort commit in the middle of typing message","<p>I am in the middle of committing. I have typed up my commit message in vim. I now remembered I needed to change something. I realize that there are other options to accomplish what I want, but I want to know if there is a way to abort the commit but still save the commit message I've typed up so far.</p>
","56","12928","<git>"
"2952507","1","Can GitHub show the history of changes made to one file in patch form?","<p>If you do <code>git log --patch -- path/to/file</code>, you will get the history of the file along with a diff of all the changes made to it with each commit, like this:</p>

<pre><code>$ git log --patch -- git-rebase.sh

commit 20351bb06bf4d32ef3d1a6849d01636f6593339f
Author: Ramkumar Ramachandra &lt;artagnon@gmail.com&gt;
Date:   Sat Jun 15 18:43:26 2013 +0530

    rebase: use 'git stash store' to simplify logic

    rebase has no reason to know about the implementation of the stash.  In
    the case when applying the autostash results in conflicts, replace the
    relevant code in finish_rebase () to simply call 'git stash store'.

    Signed-off-by: Ramkumar Ramachandra &lt;artagnon@gmail.com&gt;
    Signed-off-by: Junio C Hamano &lt;gitster@pobox.com&gt;

diff --git a/git-rebase.sh b/git-rebase.sh
index d0c11a9..17be392 100755
--- a/git-rebase.sh
+++ b/git-rebase.sh
@@ -153,11 +153,8 @@ finish_rebase () {
                then
                        echo ""$(gettext 'Applied autostash.')""
                else
-                       ref_stash=refs/stash &amp;&amp;
-                       &gt;&gt;""$GIT_DIR/logs/$ref_stash"" &amp;&amp;
-                       git update-ref -m ""autostash"" $ref_stash $stash_sha1 ||
-                       die ""$(eval_gettext 'Cannot store $stash_sha1')""
-
+                       git stash store -m ""autostash"" -q $stash_sha1 ||
+                       die ""$(eval_gettext ""Cannot store \$stash_sha1"")""
                        gettext 'Applying autostash resulted in conflicts.
 Your changes are safe in the stash.
 You can run ""git stash pop"" or ""git stash drop"" it at any time.

commit 2e6e276decde2a9f04fc29bce734a49d3ba8f484
Author: Ramkumar Ramachandra &lt;artagnon@gmail.com&gt;
Date:   Fri Jun 14 18:47:52 2013 +0530

    rebase: use peel_committish() where appropriate

    The revisions specified on the command-line as &lt;onto&gt; and &lt;upstream&gt;
    arguments could be of the form :/quuxery; so, use peel_committish() to
    resolve them.  The failing tests in t/rebase and t/rebase-interactive
    now pass.

    Signed-off-by: Ramkumar Ramachandra &lt;artagnon@gmail.com&gt;
    Signed-off-by: Junio C Hamano &lt;gitster@pobox.com&gt;

diff --git a/git-rebase.sh b/git-rebase.sh
index d0c11a9..6987b9b 100755
--- a/git-rebase.sh
+++ b/git-rebase.sh
@@ -434,7 +434,7 @@ then
                shift
                ;;
        esac
-       upstream=`git rev-parse --verify ""${upstream_name}^0""` ||
+       upstream=$(peel_committish ""${upstream_name}"") ||
        die ""$(eval_gettext ""invalid upstream \$upstream_name"")""
        upstream_arg=""$upstream_name""
 else
@@ -470,7 +470,7 @@ case ""$onto_name"" in
        fi
        ;;
 *)
-       onto=$(git rev-parse --verify ""${onto_name}^0"") ||
+       onto=$(peel_committish ""$onto_name"") ||
        die ""$(eval_gettext ""Does not point to a valid commit: \$onto_name"")""
        ;;
 esac
</code></pre>

<p>I want to be able to get the same kind of format <strong>using GitHub's web interface (not the command line)</strong>, and I want a link to send to someone else without the code.</p>
","63","31714","<git><version-control><github>"
"6900328","1","git command to show all (lightweight) tags creation dates","<p>Is there a one liner that shows me the dates where all git lightweight tags where created ?</p>

<p>Something like: <code>git show tags --format=date</code> ?</p>
","89","21283","<git><date><tags>"
"923956","1","How to back up private branches in git","<p>I have a local branch for day-to-day dev work in git. My workflow is:</p>

<ol>
<li>Do stuff on local_branch, commit</li>
<li>Fetch origin/master </li>
<li>Rebase local_branch to catch up with new stuff from origin/master</li>
</ol>

<p>It all works fine, however most of the recommendations I encountered say that one should not ""push"" private branches, on which rebase is regularly performed.</p>

<p>The problem here is that in this case local branch is not backed up to a server and the only way to save the work is to merge it back to ""pushable"" branch (i.e. origin/master)</p>

<p>What would be your recommendations on the workflow in this case? </p>

<p>Thanks!</p>

<p><strong>UPDATE</strong>: I realised that one of the original requirements I had (avoiding usage of external utilities) is unnecessary limiting.</p>

<p>My current solution is to store all my repositories in a cloud-synchronised folder - this   way I get backup for free.</p>
","33","10580","<git><merge><workflow><rebase><dropbox>"
"7726131","1","git add -A is not adding all modified files in directories","<p>I want to add all files no matter what: whether it is deleted, created, modified, untracked, etc? I just don't want to git add <strong>ALL</strong> my files <strong>EVERY TIME</strong>. I tried <code>git add -A</code> but it is <strong>NOT</strong> adding modified files inside folders.</p>

<p>Here is my initial <code>git status</code> in my project:</p>

<pre><code>Rakib-MacBook-Pro:my-xcode-practice rakib$ git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#   (commit or discard the untracked or modified content in submodules)
#
#   modified:   BankAccount (modified content, untracked content)
#   modified:   BuckysButtons (modified content, untracked content)
#   modified:   multiview (modified content, untracked content)
#   modified:   rotator (modified content, untracked content)
#   modified:   segmentedControls (modified content, untracked content)
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Then I put <code>git add -A</code>:</p>

<pre><code>Rakib-MacBook-Pro:my-xcode-practice rakib$ git add -A
</code></pre>

<p>and then here is the new status <strong>AFTER</strong> doing <code>git add -A</code>:</p>

<pre><code>Rakib-MacBook-Pro:my-xcode-practice rakib$ git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#   (commit or discard the untracked or modified content in submodules)
#
#   modified:   BankAccount (modified content, untracked content)
#   modified:   BuckysButtons (modified content, untracked content)
#   modified:   multiview (modified content, untracked content)
#   modified:   rotator (modified content, untracked content)
#   modified:   segmentedControls (modified content, untracked content)
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>You can see that there has been no change in the <code>git status</code>. 
How do I solve this? </p>

<p>I also tried <code>git add .</code> - it did not help</p>

<p>I also tried <code>git add *</code> - it did not help</p>
","41","33291","<git><recursion>"
"995636","1","Popularity of Git/Mercurial/Bazaar vs. which to recommend","<p>Going by the number of questions on this site for these three distributed version control systems, it seems like Git either </p>

<ol>
<li>is more popular, or </li>
<li>is more difficult (hence requiring more questions), or </li>
<li>has more features (hence requiring more questions).</li>
</ol>

<p>Or most probably a combination of the three. (Let's say that popularity on this site equates to popularity at large.) Here are the numbers:</p>

<pre>
                | Jun 2009 | Jul 2010 | Jul 2011 | Jul 2012
    -------------------------------------------------------
    [svn]       |     2353 |     5323 |     9028 |    12687
    [git]       |      726 |     3725 |     9225 |    17523
    [mercurial] |      169 |     1120 |     2765 |     4221
    [bazaar]    |       50 |      159 |      252 |      351
</pre>

<p>It's not entirely satisfactory having three competing yet largely equivalent open source products to choose from. Personally I use Git and I'm fine with the other two. But when it comes to recommending one system over the others, I'd like to ask: can we start recommending one safely yet?</p>

<p><strong>Comments from mid-2009</strong>:
The recent historical popularity of Subversion is clearly reflected by the number of questions, indicating at least a small tipping of the scales towards Git over the Mercurial or Bazaar.</p>

<p><strong>Comments from mid-2010</strong>:
Look at that huge relative increase in Mercurial numbers. Obviously only two-data points aren't enough to show a trend, but it looks like Git and Subversion are largely entrenched, Mercurial has seen a lot of growth, and Bazaar has remained relatively quiet.</p>

<p><strong>Brief comment, mid-2011</strong>:
Can we just call Git the winner? <code>:)</code> No, I accept the argument that number of questions is not equivalent to popularity. Numbers sure are strong, though. </p>
","131","48253","<svn><git><version-control><mercurial><bazaar>"
"999907","1","git push says everything up-to-date even though I have local changes","<p>I have a remote gitosis server and a local git repository, and each time I make a big change in my code, I'll push the changes to that server too. </p>

<p>But today I find that even though I have some local changes and commit to local repository, when running <em>git push origin master</em> it says 'Everything up-to-date', but when I use <em>git clone</em> to checkout files on the remote server, it doesn't contain lastest changes. And I have only one branch named master and one remote server named origin.</p>

<p>PS:
This is what git displays when running ls-remote, I'm not sure whether it helps</p>

<pre><code>$ git ls-remote origin
df80d0c64b8e2c160d3d9b106b30aee9540b6ece        HEAD
df80d0c64b8e2c160d3d9b106b30aee9540b6ece        refs/heads/master
$ git ls-remote .
49c2cb46b9e798247898afdb079e76e40c9f77ea        HEAD
df80d0c64b8e2c160d3d9b106b30aee9540b6ece        refs/heads/master
df80d0c64b8e2c160d3d9b106b30aee9540b6ece        refs/remotes/origin/master
3a04c3ea9b81252b0626b760f0a7766b81652c0c        refs/tags/stage3
</code></pre>
","113","79203","<git><gitosis>"
"1004936","1","How to use Git?","<p>I am an engineering student who spends most of his spare time watching TV rather than coding. So basically I have zero experience with any kind of version control system. My understanding is somehow they make distribution of projects easier.</p>

<p>I was looking into <a href=""http://github.com/joshuaclayton/blueprint-css/tree/master"">Blueprint CSS Framework</a>, liked it and downloaded from their Git project page. Now, I know Git does much more than providing a link on their website. So my questions are the following:</p>

<ul>
<li>How do I use Git properly to keep my Blueprint download updated? Say there is a new version, what do I do?</li>
<li>Can I update all Git downloads at the same time? Say I have Blueprint and other projects downloaded on my Mac, how can I update them efficiently?</li>
</ul>

<p>I looked into Git guide, but it's mostly for the people who have much more experience than I have. </p>

<p>Thanks for help :)</p>
","118","137739","<git>"
"1006775","1","How to reference the initial commit?","<p>I've got a script that needs to reference the initial commit in a repository.   git has the special reference <code>HEAD</code>, but doesn't have the corresponding <code>TAIL</code>.  I cannot find anything in <code>git help rev-parse</code> that would seem to help me.</p>

<p>Here's what I'd like to do:</p>

<pre><code>git show TAIL
</code></pre>

<p>Here's one option I have:</p>

<pre><code>git show `git log --reverse | if read a commit ; then echo $commit ; fi`
</code></pre>

<p>That's pretty hacky and depends on the output of git log not changing.</p>

<p>Right now I just tag the initial commit and use that as my refspec.  However, I'd like to release a general tool, so that's not a great option.</p>
","54","19584","<git><git-commit>"
"31769820","1","Differences between git submodule and subtree","<p>What are the conceptual differences between using git submodule and subtree?</p>

<p>What are the typical scenarios for each?</p>
","41","9157","<git><git-submodules><git-subtree>"
"3021161","1","Git: can't undo local changes (error: path ... is unmerged)","<p>I have following working tree state</p>

<pre><code>$ git status foo/bar.txt
# On branch master
# Unmerged paths:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#   (use ""git add/rm &lt;file&gt;..."" as appropriate to mark resolution)
#
#       deleted by us:      foo/bar.txt
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>File <code>foo/bar.txt</code> is there and I want to get it to the ""unchanged state"" again (similar to 'svn revert'):</p>

<pre><code>$ git checkout HEAD foo/bar.txt
error: path 'foo/bar.txt' is unmerged
$ git reset HEAD foo/bar.txt
Unstaged changes after reset:
M       foo/bar.txt
</code></pre>

<p>Now it is getting confusing:</p>

<pre><code>$ git status foo/bar.txt
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       new file:   foo/bar.txt
#
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   foo/bar.txt
#
</code></pre>

<p>The same file in both sections, new <em>and</em> modified? What should I do?</p>
","155","80269","<git><git-checkout><git-reset>"
"7818927","1","Git push branch from one remote to another?","<p>I have the following remotes set up:</p>

<pre><code>$ git remote 
korg
rorg
</code></pre>

<p>And the following branches:</p>

<pre><code>$ git branch -a
* (no branch)
  remotes/korg/gingerbread
  remotes/korg/gingerbread-release
  remotes/korg/honeycomb
  remotes/korg/honeycomb-mr1-release
  remotes/korg/master
  remotes/m/android-2.3.3_r1 -&gt; refs/tags/android-2.3.3_r1a
  remotes/m/gingerbread -&gt; korg/gingerbread
</code></pre>

<p>Now <strong>I wish to push all the remote branches from <code>korg</code> to the <code>rorg</code> remote. How do I do that?</strong></p>

<p>Preferably without making a local branch for each first, if that is avoidable.</p>
","40","11419","<git><git-branch><git-push><git-remote>"
"1170166","1","Can I checkout github wikis like a git repository?","<p>I want to modify and view github wikis with local editor like Emacs, and Google Code wikis can be checked out just like code. Is there any way to checkout github wikis? Or is there any other git repository provider offers such feature?</p>
","82","19368","<git><github>"
"11506124","1","How to enter command with password for git pull?","<p>I want to do this command in one line: git pull &amp;&amp; [my passphrase]</p>

<p>How to do it?</p>
","32","41886","<git><bash><command>"
"6990484","1","git checkout by date","<p>I am working on a regression in the source code.  I'd like to tell git: ""checkout the source based on a parameterized date/time"".  Is this possible?  I also have staged changes in my current view that I don't want to lose.  Ideally I would like to toggle back and forth between the current source, and some version I'm interested in based on a previous date.</p>
","124","46765","<git>"
"4644380","1","Git: warning: refname 'xxx' is ambiguous when using git-svn","<p>I am using git as a frontend to Subversion (via git svn).</p>

<p>So, for every svn trunk/branch I have remote branch in git named ""remotes/xxx"". For example ""remotes/trunk"", ""remotes/coolfeature"".</p>

<p>Now I want have one ""default"" local branch for every remote branch, to use it for dcommit. The problem is that I want such branches to be named after Subversion branches, like ""trunk"", ""coolfeature"", so I have the following branches in git:</p>

<pre><code>trunk
coolfeature
remotes/trunk
remotes/coolfeature
</code></pre>

<p>The problem is that every time I reference ""trunk"" or ""coolfeature"" git complains branch name is ambiguous. Not a big deal, but I feel uncomfortable.</p>

<p>The question is, how can I deal with that warning, assuming that simply renaming branches is not what I want to do. What are the best practices for such cases?</p>
","46","18221","<git><branch><ambiguity>"
"4647301","1","Rolling back local and remote git repository by 1 commit","<p>I've read the similar posts on this topic, and can't for the life of me figure out how to do this properly.</p>

<p>I checked in about 1000 files that I don't want, and I'd rather not have to go through 1by1 and remove them all from the repo.</p>

<ul>
<li>I have a remote <strong><code>master</code></strong> Branch.</li>
<li>I have the local <strong><code>master</code></strong> Branch.</li>
</ul>

<p>They are both at the same revision.</p>

<p><strong>I want to rollback my remote by 1 commit.</strong></p>

<p>Say my history on <code>master</code> is <code>A--B--C--D--E</code>.<br>
I want to rollback my local to <code>D</code>.<br>
Then push it to remote so my current hash will be D both remote and local.  </p>

<p>I'm having issues doing this.<br>
I'm using Git Tower but am comfortable with the command line. Any help?</p>

<p><strong>UPDATE:</strong> 
Great comments below. Using a reset seems to be partially discouraged especially if the repository is shared with other users.
<strong>What's the best way to undo the previous commit's changes without using a hard reset</strong>? Is there a way?</p>
","76","44552","<git>"
"9237348","1","What does FETCH_HEAD in Git mean?","<p><code>git pull --help</code> says:</p>

<blockquote>
  <p>In its default mode, git pull is shorthand for git fetch followed by git merge FETCH_HEAD.</p>
</blockquote>

<p>What is this <code>FETCH_HEAD</code>, and what is actually merged during <code>git pull</code>?</p>
","83","63193","<git><git-fetch>"
"11692124","1","Link latest file on Bitbucket Git repository","<p>I have a public Git repository on Bitbucket. I want to link the latest version of a Read-Me file. Here's the link to a revision/commit:</p>

<p><a href=""https://bitbucket.org/wordless/thofu-interpreter/raw/5bfc37864c5d/ThoFu%20Interpreter/ReadMe.txt"">https://bitbucket.org/wordless/thofu-interpreter/raw/5bfc37864c5d/ThoFu%20Interpreter/ReadMe.txt</a></p>

<p>I tried to replace the revision number with <strong>tip</strong> and <strong>default</strong>, but it didn't work. <strong>Is there any way to get a permanent link to my latest files?</strong></p>
","59","8050","<git><hyperlink><bitbucket>"
"9339429","1","What does cherry-picking a commit with git mean?","<p>Recently, I have been asked to cherry pick a commit. But I have no idea what it means. So what does <code>cherry picking</code> a commit in git mean? How do you do it? </p>
","353","85250","<git><cherry-pick><git-cherry-pick>"
"7099833","1","How to revert a merge commit that's already pushed to remote branch?","<p><code>git revert &lt;commit_hash&gt;</code> alone won't work. '-m' must be specified, and I'm pretty confused about it.</p>

<p>Anyone experienced this before?</p>
","132","90785","<git>"
"2257196","1","Git: Pull from other branch","<p>I have created a fork from a project on GitHub.
How can I now pull changes from the project that I forked from?</p>
","60","82269","<git><github>"
"11693074","1","git: 'credential-cache' is not a git command","<p>I followed <a href=""https://help.github.com/articles/set-up-git"">these instructions</a> to the letter, including the part about password caching. It seems like the instructions are wrong, because every time I <code>git push origin master</code> I get this error:</p>

<pre><code>git: 'credential-cache' is not a git command. See 'get --help'.
</code></pre>

<p>... at which point I am forced to enter my username and password. After doing so, I am presented with the same error message again, followed by the output from <code>git push</code>.</p>

<p>Here is the contents of my .gitconfig file:</p>

<pre><code>[user]
    name = myusername
    email = myusername@myemaildomain.com
[credential]
    helper = cache
</code></pre>

<p>To be clear, after I installed Git and ran Git Bash, here is exactly what I typed:</p>

<pre><code>git config --global user.name ""myusername""
git config --global user.email ""myusername@myemaildomain.com""
git config --global credential.helper cache
</code></pre>

<p>Please help. This is so frustrating!</p>
","152","35389","<git><msysgit><git-bash><git-config>"
"4092432","1","Could not execute editor","<p>I don't often have to modify multiple commit messages, but it has happened once or twice and I don't ever remember seeing this. I hope someone else has. When I <code>git rebase -i HEAD~7</code>, the expected list opens in vi exactly as expected. I change the <code>pick</code> values to <code>edit</code> where appropriate and then <code>:wq</code>.</p>

<p>Result: <code>Could not execute editor</code></p>

<p>The <code>core.editor</code> setting in my global <code>.gitconfig</code> is <code>vi</code> (I've also changed it to <code>vim</code> in a wildly desperate move). I tried using <code>mate</code>, but that didn't even open the initial list properly so I changed it back.</p>

<p>I'm using v1.7.3 and would welcome any suggestions.</p>
","84","18785","<git><vim>"
"6561142","1","Difference between ""git checkout <filename>"" and ""git checkout -- <filename>""","<p><a href=""http://norbauer.com/notebooks/code/notes/git-revert-reset-a-single-file"">http://norbauer.com/notebooks/code/notes/git-revert-reset-a-single-file</a></p>

<p>I have found a post. </p>

<p>But still don't know what is the different between</p>

<p>1.<code>git checkout &lt;filename&gt;</code></p>

<p>2.<code>git checkout -- &lt;filename&gt;</code></p>

<p>In what situation i should use first one and second one respectively?
Thanks a lot.</p>
","47","12378","<git>"
"9343189","1","""did you run git update-server-info"" error on a Github repository","<p>I'm using the github Gui from their website to manage my repos, and I'm getting the following error:</p>

<pre><code>fatal: https://github.com/TeaCodie/TeaCodie-Website.git/info/refs not found: 
did you run git update-server-info on the server?
</code></pre>

<p>How can I fix this?</p>
","127","95360","<git><github><github-for-mac>"
"7103631","1","How to unstage large number of files without deleting the content","<p>I accidently added lot of temporary files using <code>git add -A</code>
I manage to unstage the files using the following commands and managed to remove the dirty index. </p>

<pre><code>git ls-files -z | xargs -0 rm -f
git diff --name-only --diff-filter=D -z | xargs -0 git rm --cached
</code></pre>

<p>THe above commands are listed in the <code>git help rm</code>. But sadly, my files were also deleted on execution though I had given cache option. How clear the index without losing the content?</p>

<p>Also it would be helpful if someone can explain the way this pipe operation works. </p>
","114","59163","<git><version-control>"
"11696295","1","rejected master -> master (non-fast-forward)","<p>I'm trying to push my project (all files in a new repository). I follow the steps but when I push with <code>git push -u origin master</code> I get this error:</p>

<pre><code>! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@github.com:asantoya/projectnewbies.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>really many times I got this error and can't figure out what to do. </p>
","92","91599","<git><push>"
"4196148","1","Git pre-push hooks","<p>I would like to run a unit-tests before every git push and if tests fails, cancel the push, but I can't even find pre-push hook, there is pre-commit and pre-rebase only. </p>
","60","26791","<git><hook>"
"6564257","1","Can't ignore UserInterfaceState.xcuserstate","<p>I'm using Git for Xcode 4 project version control.  I've explicitly added <code>ProjectFolder.xcodeproj/project.xcworkspace/xcuserdata/myUserName.xcuserdatad/UserInterfaceState.xcuserstate</code> to <code>.gitignore</code>, but Git it won't ignore it.  Any ideas why this is so?</p>
","185","59381","<xcode><git><xcode4><gitignore>"
"15797183","1","Differences between ""git pull"" commands when pulling from origin?","<p>What are the differences between these commands?:</p>

<pre class=""lang-bash prettyprint-override""><code># 1
git pull
# 2
git pull origin
# 3
git pull origin master
# 4
git pull origin/master
# 5
git pull origin HEAD:master
</code></pre>
","40","14662","<git>"
"15798862","1","What does git rev-parse do?","<p>What does <code>git rev-parse</code> do?</p>

<p>I have read the man page but it raised more questions than answers. Things like:</p>

<blockquote>
  <p>Pick out and <strong>massage</strong> parameters</p>
</blockquote>

<p><em>Massage</em>? What does that mean?</p>

<p>I'm using as a resolver (to SHA1) of revision specifiers, like</p>

<pre><code>git rev-parse HEAD^
</code></pre>

<p>or</p>

<pre><code>git rev-parse origin/master
</code></pre>

<p>Is this the command’s purpose? If not, is even correct to use it to achieve this?</p>
","84","25145","<git>"
"18329621","1","Storing git config as part of the repository","<p>I'm using filters to mangle files during checkout like described <a href=""http://git-scm.com/book/ch7-2.html#Keyword-Expansion"">here</a>.
Now the problem is that filter definition is only stored in my local configuration file:</p>

<pre><code>$ cat .git/config
....
[filter ""dater""]
        smudge = /home/.../expand_date
        clean = perl -pe \""s/\\\\\\$Date[^\\\\\\$]*\\\\\\$/\\\\\\$Date\\\\\\$/\""
</code></pre>

<p>If my coworkers want to benefit from this <code>Date</code> expansion, they need to copy my filter definition. And if I change it, I need to notify them, etc..</p>

<p>So can I store this filter definition part of <code>.git/config</code> in repository and make git use it?</p>
","37","7960","<git>"
"11269256","1","How to name and retrieve a stash by name in git?","<p>I was always under the impression that you could give a stash a name by doing <code>git stash save stashname</code>, which you could later on apply by doing <code>git stash apply stashname</code>. But it seems that in this case all that happens is that <code>stashname</code> will be used as the stash description.</p>

<p>Is there no way to actually name a stash? If not, what would you recommend to achieve equivalent functionality? Essentially I have a small stash which I would periodically like to apply, but don't want to always have to hunt in <code>git stash list</code> what its actual stash number is.</p>
","492","128832","<git><git-stash>"
"13507430","1","Git commit in terminal opens VIM, but can't get back to terminal","<p>Trying to learn GitHub at the moment and doing this <a href=""https://tutsplus.com/course/git-essentials/"">Git essentials tutorial</a> over at nettuts. I'm on the lesson about making commits.</p>

<p>The teacher types <code>git commit</code> and it opens VIM as his editor (I'd also like to know how to make it open up in <a href=""http://www.sublimetext.com/"">Sublime Text</a> 2 instead) anyways it opens in VIM and I add in 1 line saying this is my first commit and hit save.</p>

<p>Next it then prompts me to save the output to the desktop, something I did not see in his screencast. Now I'm still in VIM and not sure how to get back to 'normal' terminal :(</p>

<p>I couldn't figure it out so I just exited the terminal and relaunched it, did git commit again and had some warning messages about duplicates! Not sure if I need to <code>(E)edit</code> anyways or <code>(A)abort</code>.</p>

<p><strong>git status</strong></p>

<p><img src=""http://i.stack.imgur.com/OoMYb.png"" alt=""enter image description here""></p>

<p><strong>vim</strong></p>

<p><img src=""http://i.stack.imgur.com/d4bbf.png"" alt=""enter image description here""></p>

<p><strong>message</strong> when I reopen terminal and do git commit again</p>

<p><img src=""http://i.stack.imgur.com/wIZ30.png"" alt=""enter image description here""></p>
","92","65584","<git><vim><terminal><command-line-interface><commit>"
"13507763","1","Do I need to publish to npm every time I update a package available via git?","<p>Say I maintain an incredible <code>crab-season</code> package.  I've <code>npm publish</code>ed version 0.1.0 with a <code>package.json</code> containing:</p>

<pre><code>""repository"": {
  ""type"": ""git"",
  ""url"": ""https://github.com/example/crab-season.git""
}
</code></pre>

<p>When I add awesome new features, bump the version to 0.2.0, and push to github will the npmjs registry notice my new version or do I need to <code>npm publish</code> each time?</p>
","34","9171","<git><publish><npm>"
"6648870","1","is not checked out... bundle install does NOT fix help!","<pre><code>https://github.com/intridea/omniauth.git (at master) is not checked out. Please run `bundle install` (Bundler::GitError)
</code></pre>

<p>So what do I do? bundle install works on development, but when I push and deploy to my production server. I get this error, even after running bundle install on my production server.</p>
","51","29352","<ruby-on-rails><ruby><git><gem>"
"6648995","1","How to create a remote Git repository from a local one?","<p>I have a local Git repository. I would like to make it available on a remote, ssh-enabled, server. How do I do this?</p>
","86","58960","<git><installation>"
"13509293","1","git: fatal: Could not read from remote repository","<p>I am trying to set git up with <a href=""http://danielmiessler.com/study/git/#website"">http://danielmiessler.com/study/git/#website</a> to manage my site.</p>

<p>I have gotten to the last step in the instructions:  git push website +master:refs/heads/master</p>

<p>I am working using the git ming32 command line in win7</p>

<pre><code>$ git push website +master:refs/heads/master
Bill@***.com's password:
Connection closed by 198.91.80.3
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>One problem here may be that the program is looking for Bill@***.com. when I connect via ssh to my site I have a different username( lets say 'abc'). so maybe this should be abc@***.com. If so I don't know how to change this or if I can push under an alias</p>
","81","263516","<git>"
"6650215","1","How to keep the local file or the remote file during merge using Git and the command line?","<p>I know how to merge modification using vimdiff, but, assuming I just know that the entire file is good to keep or to throw away, how do I do that? </p>

<p>I don't want to open vimdiff for each of them, I change want a command that says 'keep local' or 'keep remote'.</p>

<p>E.G: I got a merge with files marked as changed because somebody opened it under windows, changing the EOL, and then commited. When merging, I want to just keep my own version and discard his.</p>

<p>I'm also interested in the contrary: I screwed up big time and want to accept the remote file, discarding my changes. </p>
","77","31610","<git><merge><local>"
"32437659","1","cannot pull Git remote repository from Sourcetree","<p>I Generated ssh keys and configured my git and SourceTree. I could git pull and do other operations from Git-bash. 
Note: I have added the following in .bashrc to make it work.</p>

<pre><code>eval `ssh-agent`
ssh-add
</code></pre>

<p>However, when I try to git pull in SourceTree, I get this.</p>

<blockquote>
  <p>git -c diff.mnemonicprefix=false -c core.quotepath=false fetch origin
  Permission denied (publickey,password). fatal: Could not read from
  remote repository.</p>
  
  <p>Please make sure you have the correct access rights and the repository
  exists.</p>
</blockquote>

<p>When I tried to create ssh-key from Putty(windows), it goes further, but waits with this following message!</p>

<blockquote>
  <p>git -c diff.mnemonicprefix=false -c core.quotepath=false fetch origin
  The server's host key is not cached in the registry. You have no
  guarantee that the server is the computer you think it is. The
  server's rsa2 key fingerprint is:</p>
  
  <p>ssh-rsa 2048 0f:ee:bb:1c:6c:b4:50:0e:54:d6:e9:55:9b:38:45:df If you
  trust this host, enter ""y"" to add the key to PuTTY's cache and carry
  on connecting. If you want to carry on connecting just once, without
  adding the key to the cache, enter ""n"". If you do not trust this host,
  press Return to abandon the connection.</p>
</blockquote>

<p>if I open the terminal in SourceTree(which is git-bash), it asks me for passphrase. So, i suspect my .bashrc is not sourced by SourceTree. Or am I missing something else? </p>
","41","13593","<git><github><ssh><atlassian-sourcetree>"
"4380945","1","Exclude a directory from git diff","<p>I'm wondering how I can exclude an entire directory from my Git diff.  (In this case /spec).  I'm creating a diff for our entire software release using the git diff command.  However the changes to the specs are irrelevant for this procedure, and just create headaches.  now I know i can do</p>

<pre><code>git diff previous_release..current_release app/
</code></pre>

<p>This would create a diff for all the changes in the app directory, but not for instance, in the lib/ directory.  Does anyone know how to accomplish this task?  Thanks!</p>

<p>Edit:  I just want to be clear, I know I can just string the parameters of all of my directories on the end, minus /spec.  I was hoping there was a way to truly exclude a single directory in the command.</p>
","67","19763","<git>"
"4470523","1","Git create a branch from another branch","<p>I have 2 branches : <strong>master</strong> and <strong>dev</strong></p>

<p>I want to create a ""feature branch"" from the <strong>dev</strong> branch</p>

<p>Currently On branch dev, I do :</p>

<pre><code>$ git checkout -b myfeature dev  
</code></pre>

<p>... (some work)</p>

<pre><code>$ git commit -am ""blablabla""  
$ git push origin myfeature  
</code></pre>

<p>but, after visualizing my branches, I got:</p>

<pre><code>--**master**  
------0-----0-----0-----0-----0    
------------------------**dev**----**myfeature**    
</code></pre>

<p>I mean that the branch seems ff merged and I don't understand why...</p>

<p>What I'm doing wrong ?
Can you explain me pls how you branch off from another branch and push back to the remote repo for the feature branch ?</p>

<p>All that in a branching model like the <a href=""http://nvie.com/posts/a-successful-git-branching-model/"">one described here</a>.</p>
","265","188340","<git><git-branch><git-workflow><git-flow>"
"13669410","1","Clear git repository on Bitbucket?","<p>I'm just getting started with git, and started messing about with Bitbucket.  However, I now want to use the repository I created, but without its initial history.</p>

<p>Is there any way I can clear out or purge my repository so that I can start from scratch?</p>

<p>I'm not too bothered about any of the content, so can I just delete the repository, then create a new one with the same name?</p>
","39","20230","<git><bitbucket>"
"3107789","1","Using git, how do you reset the working tree to the state of the index?","<p>Situation:</p>

<ol>
<li>Edit files</li>
<li>Add files to the index</li>
<li>Edit more files</li>
</ol>

<p>Now we have three different states.  The state of HEAD, the state of the index and the state of the working tree.  What is the command to undo changes in the working tree so that it matches the state of the index?</p>
","34","9159","<git>"
"1220309","1","git difftool, open all diff files immediately, not in serial","<p>The default git diff behavior is to open each diff file in serial (wait for previous file to be closed before opening next file). </p>

<p>I'm looking for a way to open all the files at once - in BeyondCompare for example this would open all the files in tabs within the same BC window.</p>

<p>This would make it easier to review a complex set of changes; flick back and forwards between the diff files and ignore unimportant files.</p>
","147","28198","<git><difftool>"
"1260748","1","How do I remove a submodule?","<p>How do I remove a Git submodule?</p>

<p>By the way, is there a reason I can't simply do </p>

<pre><code>git submodule rm whatever
</code></pre>

<p>?</p>
","2301","420785","<git><git-submodules>"
"5551556","1","Changing file names in git repo","<p>How does git handle filename changes?</p>

<p>Will a file name change be detected as a modification or will there be a ""lost"" file which needs to be removed and the new file needs to then be added with <code>git add</code> ?</p>
","37","24073","<git>"
"1304626","1","git: Switch branch and ignore any changes without committing","<p>I was working on a git branch and was ready to commit my changes, so I made a commit with a useful commit message. I then absentmindedly made minor changes to the code that are not worth keeping. I now want to change branches, but git gives me,</p>

<blockquote>
  <p>error: You have local changes to ""X""; cannot switch branches.</p>
</blockquote>

<p>I thought that I could change branches without committing. If so, how can I set this up? If not, how do I get out of this problem? I want to ignore the minor changes without committing and just change branches.</p>
","148","129120","<git><branch><checkout>"
"7938582","1","How does git detect similar files, for its rename detection?","<p>Wikipedia explains the automatic rename detection:</p>

<blockquote>
  <p>Briefly, given a file in revision N, a file of the same name in
  revision N−1 is its default ancestor. However, when there is no
  like-named file in revision N−1, Git searches for a file that existed
  only in revision N−1 and is <strong>very similar</strong> to the new file.</p>
</blockquote>

<p>Rename detection apparently boils down to similar file detection. Is that algorithm documented anywhere? It would be nice to know what kinds of transformations are detected automatically.</p>
","58","9344","<git>"
"31878901","1","Should I add the Visual Studio 2015 .vs folder to source control?","<p>Visual Studio 2015 creates a new folder called "".vs"". What is the purpose of it and should I add it to source control?</p>
","92","11040","<git><svn><version-control><visual-studio-2015><ignore>"
"1307114","1","How can I archive git branches?","<p>I have some old branches in my git repository that are no longer under active development. I would like to archive the branches so that they don't show up by default when running git branch -l -r. I don't want to delete them, because I want to keep the history. How can I do this?</p>

<p>I know that it's possible to create a ref outside of refs/heads. For example, refs/archive/old_branch. Are there any consequences of doing that?</p>
","145","20583","<git>"
"1351567","1","Putting uncommitted changes at Master to a new branch by Git","<p>How can you put uncommitted changes to a branch TEST when I am at the branch <code>master</code>?</p>
","170","36829","<git><branch><master>"
"3231759","1","How can I visualize per-character differences in a unified diff file?","<p>Say I get a patch created with <code>git format-patch</code>. The file is basically a unified diff with some metadata. If I open the file in Vim, I can see which lines have been modified, but I cannot see which <em>characters</em> in the changed lines differ. Does anyone know a way (in Vim, or some other free software that runs on Ubuntu) to visualize per-character differences?</p>

<p>A counter example where per-character diff is visualized is when executing <code>vimdiff a b</code>.</p>

<p><strong>update Fri Nov 12 22:36:23 UTC 2010</strong></p>

<p><a href=""http://stackoverflow.com/questions/242646/use-vimdiff-with-a-diff-file/244766#244766"">diffpatch is helpful</a> for the scenario where you're working with a single file.</p>

<p><strong>update Thu Jun 16 17:56:10 UTC 2016</strong></p>

<p>Check out <a href=""https://github.com/blog/2188-git-2-9-has-been-released"" rel=""nofollow"">diff-highlight in git 2.9</a>. This script does <em>exactly</em> what I was originally seeking.</p>
","55","11836","<git><vim><diff><patch>"
"4475457","1","Add all files to a commit except a single file?","<p>I have a bunch of files in a changeset, but I want to specifically ignore a single modified file. Looks like this after git status:</p>

<pre><code># modified:   main/dontcheckmein.txt
# deleted:    main/plzcheckmein.c
# deleted:    main/plzcheckmein2.c
...
</code></pre>

<p>Is there a way I can do git add but just ignore the one text file I don't want to touch? Something like:</p>

<pre><code>git add -u -except main/dontcheckmein.txt
</code></pre>

<p>Thanks</p>
","195","57436","<git><version-control>"
"1398329","1","Take all my changes on the current branch and move them to a new branch in Git","<p>I started work on what I thought would be a minor bug fix on my master branch. However, it has spiraled out of control to the point where I wish I had created a separate branch to do the development in the first place.</p>

<p>So right now what I'd like to do is:</p>

<ol>
<li>Create a new branch called (say) ""edge""</li>
<li>Move all the changed / untracked files on master to edge (such that master is unchanged from when I started the bug fix)</li>
<li>Finish my work on edge, merge back into master</li>
</ol>

<p>How can I do this?</p>
","77","17224","<git><branch>"
"5678699","1","Creating branches on an empty project in git","<p>Let's say I am about to implement 3 different features in 3 different files (fileA, fileB an fileC) for a new project of mine.</p>

<p>I thought I'd just need to add my (currently empty) project to git:</p>

<pre><code>git init
</code></pre>

<p>and then create 3 different branches:</p>

<pre><code>git branch file1_branch
git branch file2_branch
git branch file3_branch
</code></pre>

<p>but this doesn't work:</p>

<blockquote>
  <p>fatal: Not a valid object name: 'master'.</p>
</blockquote>

<p>Why is this?</p>

<p>Maybe the problem could be related that even the master branch wasn't created at this point? I tried doing a <code>git branch</code>. It yielded nothing.</p>

<p>I then thought about doing an ""empty"" commit to oblige git to create the <code>master</code> branch:</p>

<pre><code>git commit -m `initial_commit`
</code></pre>

<p>but as I didn't add any files to the staging area it doesn't work. </p>

<p>Keep in mind I'm just about to start my project, so at this point I don't have any files to add to the commit!</p>

<p>How to solve this issue? Am I doing something wrong?</p>

<p>Thanks</p>
","37","16396","<git><version-control>"
"4556467","1","""git pull"" or ""git merge"" between master and development branches","<p>I have my <code>master</code> branch and a <code>develop</code> branch for working on a few changes. I need to merge changes from <code>master</code> into <code>develop</code>, but will eventually merge everything from <code>develop</code> into <code>master</code>. I  have two different workflows in mind:</p>

<ol>
<li><code>git pull origin master</code> into <code>develop</code> branch</li>
<li><code>git merge master</code> into <code>develop</code> branch</li>
</ol>

<p>Which is the best way to do this, and why?</p>
","213","124943","<git><workflow>"
"5721566","1","Combining Multiple Commits Into One Prior To Push","<p>This question pertains not only to how to accomplish this task, but to whether doing so is good or bad practice with Git.</p>

<p>Consider that locally I do most work on the master branch, but I have created a topical branch I will call ""topical_xFeature"". In the process of working on ""topical_xFeature"" and switching back and forth to do other work on the master branch, it turns out that I have made more than one commit on the ""topical_xFeature"" branch, but between each commit, I have done no push.</p>

<p><strong>First</strong>, would you consider this bad practice? Would it not be wiser to stick with one commit per branch per push? In what cases would it be good to have multiple commits on a branch before a push is made?</p>

<p><strong>Second</strong>, how shall I best accomplish bringing the multiple commits on the topical_xFeature branch into the master branch for a push? Is it a nuisance to not worry about it and just do the push where multiple commits get pushed, or is it less annoying to somehow merge the commits into one and then push? Again, how to do this?</p>
","62","27093","<git><workflow>"
"15240815","1","Git, fatal: The remote end hung up unexpectedly","<p>When I tried to run</p>

<pre><code>git push origin master --force
</code></pre>

<p>I just got</p>

<pre><code>Counting objects: 2649, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (1280/1280), done.
error: RPC failed; result=22, HTTP code = 413 | 116 KiB/s   
fatal: The remote end hung up unexpectedly
Writing objects: 100% (2504/2504), 449.61 MiB | 4.19 MiB/s, done.
Total 2504 (delta 1309), reused 2242 (delta 1216)
fatal: The remote end hung up unexpectedly
Everything up-to-date
</code></pre>

<p>Is it something to do with not being secure? I tried creating a public key as in the answer for <a href=""http://stackoverflow.com/questions/14967621/fatal-the-remote-end-hung-up-unexpectedly"">Fatal: The remote end hung up unexpectedly</a> and running it again, but it still doesn't work. Am I not actually using the key? If so, how do I use it?</p>
","125","182632","<git><github>"
"20138640","1","Pushing empty commits to remote","<p>I have pushed one commit to remote but now I realized that the commit message is not correct. I would like to change the commit message but AFAIK it is not possible. So i decided to create empty commit with correct message:</p>

<pre><code>git commit --allow-empty
</code></pre>

<p>Are there any disadvantages/consequences of pushing empty commits? Is there any problem I might face in future because of this empty commit??</p>
","93","40043","<git><git-commit>"
"23569152","1","I need a workaround for Resharper when it says 'Failed to modify Documents'. Does anybody know why it does this and how to get around it?","<p>I have noticed a few times over the past months that sometimes I will use the little yellow lightbulb icon and right click it and select an option for it to fix something for me and then it just highlights what it was going to fix and pops up a message that says ""Failed to modify Documents"".  </p>

<p>Has anybody had this problem?<br>
Do you know how to overcome it?<br>
It is almost as if resharper thinks that the document is read-only or something, even though I can manually edit the document.</p>
","71","6756","<c#><git><visual-studio-2013><resharper>"
"5767850","1","Git On Custom SSH Port","<p>My VPS provider recommends that I leave my SSH port to the custom port number they assign it by default (not 22).  The thing is the while I know I can give the port number when create a remote config, it seems like I can't do the same when doing a git clone.  I am using gitolite so I clone commands look like:</p>

<pre><code>git clone git@mydomain.com:gitolite-admin
</code></pre>

<p>Is there a way to covert this to using the custom ssh port number?</p>

<p>I should also mention I am running cygwin on windows.  I have seen multiple places saying to add the custom port to the <code>~/.ssh/config</code> file like</p>

<pre><code>Host mydomain.com
    Port 12345
</code></pre>

<p>however in cygwin, that file does not seem to exist.</p>
","72","61490","<git><version-control><ssh><cygwin>"
"9153598","1","How do I fetch a branch on someone else's fork on GitHub?","<p>I've forked from a repo on GitHub. I want to get the code from a branch on another user's fork.  </p>

<p>Must I clone this user's whole repo to a separate local repo or can I do something like <code>git checkout link_to_the_other_users_branch</code>?</p>
","39","10754","<git><github><git-branch><git-fork><git-fetch>"
"1499157","1","Git checkout/pull doesn't remove directories?","<p>I've got my repo @ github. I did some work at home and pushed it to github. It involved some deleting of files and directories. Now I'm on my work box, which had a copy of the code before deleting the files and directories.</p>

<p>I issued the following:</p>

<pre><code>git remote update
git checkout HEAD
git pull origin HEAD
</code></pre>

<p>It deleted all of the files it should have, but not the directories the files were in.</p>

<p>Two questions: </p>

<ol>
<li>Why did it not remove the directories?</li>
<li>Is there a git command I can issue in the current state to remove them?</li>
</ol>
","46","15229","<git><git-clean>"
"1500400","1","Is TortoiseGit ready for prime time yet?","<p>I'm a big fan of the simplicity of TortoiseSVN. I also am interested in digging into git, and think it would make a good fit for an upcoming project. However, a strictly command-line based app can be a little intimidating. I've followed the <a href=""https://tortoisegit.org/"" rel=""nofollow"">TortoiseGit</a> project for a little while, and it looks like they are past 1.0.</p>

<p>Is there anyone using it in the wild right now? How's it working out? Does it let you use all of the features in git well?</p>
","41","9122","<git><version-control><tortoisegit>"
"5816688","1","Resetting remote to a certain commit","<p>I want to discard all changes done after commit <code>&lt;commit-hash&gt;</code> .
So I did:</p>

<pre><code>git reset --hard &lt;commit-hash&gt;
</code></pre>

<p>Now I want to do the same with my remote. How can I do this? I have done some commits (and pushes) after <code>&lt;commit-hash&gt;</code> and I just want to discard them all. Is just something went <em>terribly</em> wrong in the way and I don't want to make it worse than it is already. ;(</p>

<p>I basically want to rewind my <code>origin/master</code> to <code>&lt;commit-hash&gt;</code></p>
","126","69076","<git>"
"1552340","1","How to list the file names only that changed between two commits?","<p>I have a bunch of commits in the repo. I want to see a list of files changed between two commits - from SHA1 to SHA2.</p>

<p>What command should I use? </p>
","916","302577","<git><git-diff>"
"11511390","1","jenkins GIT Plugin detached HEAD","<p>I am new on GIT and well also on Jenkins. My problem is to bring the jenkins Maven release plugin to work.</p>

<p>When i build a common Maven build with jenkins, it works well, but when i try to perform a release with the Maven release Plugin i get the following stacktrace:</p>

<pre><code>org.apache.maven.lifecycle.LifecycleExecutionException: Failed to execute goal org.apache.maven.plugins:maven-release-plugin:2.3.2:prepare (default-cli) on project parent: An error is occurred in the checkin process: Exception while executing SCM command.
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:217)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:84)
    at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:59)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.singleThreadedBuild(LifecycleStarter.java:183)
    at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:161)
    at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:320)
    at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:156)
    at org.jvnet.hudson.maven3.launcher.Maven3Launcher.main(Maven3Launcher.java:79)
    at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
    at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:39)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launchStandard(Launcher.java:329)
    at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:239)
    at org.jvnet.hudson.maven3.agent.Maven3Main.launch(Maven3Main.java:158)
    at hudson.maven.Maven3Builder.call(Maven3Builder.java:98)
    at hudson.maven.Maven3Builder.call(Maven3Builder.java:64)
    at hudson.remoting.UserRequest.perform(UserRequest.java:118)
    at hudson.remoting.UserRequest.perform(UserRequest.java:48)
    at hudson.remoting.Request$2.run(Request.java:326)
    at hudson.remoting.InterceptingExecutorService$1.call(InterceptingExecutorService.java:72)
    at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:303)
    at java.util.concurrent.FutureTask.run(FutureTask.java:138)
    at java.util.concurrent.ThreadPoolExecutor$Worker.runTask(ThreadPoolExecutor.java:886)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:908)
    at java.lang.Thread.run(Thread.java:662)
Caused by: org.apache.maven.plugin.MojoExecutionException: An error is occurred in the checkin process: Exception while executing SCM command.
    at org.apache.maven.plugins.release.PrepareReleaseMojo.prepareRelease(PrepareReleaseMojo.java:295)
    at org.apache.maven.plugins.release.PrepareReleaseMojo.execute(PrepareReleaseMojo.java:247)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:101)
    at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:209)
    ... 27 more
Caused by: org.apache.maven.shared.release.ReleaseExecutionException: An error is occurred in the checkin process: Exception while executing SCM command.
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.checkin(AbstractScmCommitPhase.java:160)
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.performCheckins(AbstractScmCommitPhase.java:145)
    at org.apache.maven.shared.release.phase.ScmCommitPreparationPhase.runLogic(ScmCommitPreparationPhase.java:76)
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.execute(AbstractScmCommitPhase.java:78)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:234)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:169)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:146)
    at org.apache.maven.shared.release.DefaultReleaseManager.prepare(DefaultReleaseManager.java:107)
    at org.apache.maven.plugins.release.PrepareReleaseMojo.prepareRelease(PrepareReleaseMojo.java:291)
    ... 30 more
Caused by: org.apache.maven.scm.ScmException: Exception while executing SCM command.
    at org.apache.maven.scm.command.AbstractCommand.execute(AbstractCommand.java:63)
    at org.apache.maven.scm.provider.git.AbstractGitScmProvider.executeCommand(AbstractGitScmProvider.java:291)
    at org.apache.maven.scm.provider.git.AbstractGitScmProvider.checkin(AbstractGitScmProvider.java:217)
    at org.apache.maven.scm.provider.AbstractScmProvider.checkIn(AbstractScmProvider.java:410)
    at org.apache.maven.shared.release.phase.AbstractScmCommitPhase.checkin(AbstractScmCommitPhase.java:156)
    ... 38 more
Caused by: org.apache.maven.scm.ScmException: Detecting the current branch failed: fatal: ref HEAD is not a symbolic ref
    at org.apache.maven.scm.provider.git.gitexe.command.branch.GitBranchCommand.getCurrentBranch(GitBranchCommand.java:147)
    at org.apache.maven.scm.provider.git.gitexe.command.checkin.GitCheckInCommand.createPushCommandLine(GitCheckInCommand.java:192)
    at org.apache.maven.scm.provider.git.gitexe.command.checkin.GitCheckInCommand.executeCheckInCommand(GitCheckInCommand.java:132)
    at org.apache.maven.scm.command.checkin.AbstractCheckInCommand.executeCommand(AbstractCheckInCommand.java:54)
    at org.apache.maven.scm.command.AbstractCommand.execute(AbstractCommand.java:59)
    ... 42 more
channel stopped
Finished: FAILURE
</code></pre>

<p>The failing command and error message is:</p>

<blockquote>
  <p>[INFO] Executing: /bin/sh -c cd
  /var/lib/jenkins/workspace/test_maven/parent &amp;&amp; git symbolic-ref HEAD
  [INFO]  Working directory:
  /var/lib/jenkins/workspace/test_maven/parent  mojoFailed
  org.apache.maven.plugins:maven-release-plugin:2.3.2(default-cli)
  projectFailed ch.apkern.achilles:parent:1.0-SNAPSHOT  sessionEnded</p>
</blockquote>

<p>I have figured out that's the Jenkins GIT plugin creates a detached HEAD ref ""(no branch)"" and thats the problem i think. But i have absolutely no idea why this ref will be created or how i can solve this problem.</p>

<p>i would be grateful about any help.</p>

<p>Thank in advance.</p>

<p>Greez Michel</p>
","35","20847","<git><jenkins>"
"5817579","1","How can I preview a merge in git?","<p>I have a git branch (the mainline, for example) and I want to merge in another development branch. Or do I?</p>

<p>In order to decide whether I really want to merge this branch in, i'd like to see some sort of preview of what the merge will do. Preferably with the ability to see the list of commits that are being applied.</p>

<p>So far, the best I can come up with is <code>merge --no-ff --no-commit</code>, and then <code>diff HEAD</code>.</p>
","193","43788","<git><git-merge>"
"12896780","1","Should composer.lock be committed to version control?","<p>I'm a little confused with <code>composer.lock</code> used in an application with a repository.</p>

<p>I saw many people saying that we should not <code>.gitignore</code> <code>composer.lock</code> from the repository.</p>

<p>But if I update my libraries in my dev environment, I will have a new <code>composer.lock</code> but I will not be able to update them into production, will I ?</p>

<p>Won't it generate conflicts on this file ?</p>
","236","41776","<git><version-control><composer-php>"
"3424419","1","Mercurial <--> git cheat sheet?","<p>Is there a cheat sheet or wiki page out there which relates <code>hg</code> commands to <code>git</code> commands, and vise-versa?</p>

<p>I'd like to know for two reasons: first, I'd like to be able to translate <code>git</code>-speak<sup>1</sup> into Mercurial, and second I'd like to be aware of the subtle differences between similar-sounding commands (eg, <code>hg pull</code> and <code>git pull</code>).</p>

<p><sup>1</sup> case in point: <code>git push origin :refs/heads/foo</code></p>
","39","8871","<git><mercurial>"
"4649356","1","How Do I run Git Log to see changes only for a specific branch?","<p>I have a local branch tracking the remote/master branch. After running git-pull and git-log, the log will show all commits in the remote tracking branch as well as the current branch. However, because there were so many changes made to the remote branch, I need to see just the commits made to the current local branch.</p>

<p>What would be the git command to use to only show commits for a specific branch?</p>

<p>Notes:
Config info:</p>

<pre><code>[branch ""my-branch""]
  remote = origin
  merge = refs/heads/master
</code></pre>
","146","75248","<git><branch><git-branch><git-log>"
"17843384","1","Stash changes while keeping the changes in the working directory in Git","<p>Is there a <code>git stash</code> command that stashes your changes, but keeps them in the working directory too? So basically a <code>git stash; git stash apply</code> in one step?</p>
","31","5197","<git><git-stash>"
"15375192","1","What is a Tracking Reference?","<p>When I push a new branch up to a remote repository via Git Extensions, I get an alert saying</p>

<pre><code>The branch {branch name} does not have a tracking reference. Do
you want to add a tracking reference for {branch name}?
</code></pre>

<p>What is a tracking reference?  I've found only a few mentions of tracking references in Google and no real definition.</p>
","33","9211","<git><git-extensions>"
"10610327","1","Delete all local git branches","<p>I follow a development process where I create a new local branch for every new feature or story card. When finished I merge the branch into master and then push. </p>

<p>What tends to happen over time due to a combination of laziness or forgetfulness, is that I end up with a large list of local branches. </p>

<p>I know how to list all my local branches and I know how to remove a single branch but I was wondering if there was a git command that allows me to delete all my local branches?</p>

<p>Below is the output of the <code>git branch --merged</code> command.</p>

<pre><code>user@machine:~/projects/application[master]$ git branch --merged
  STORY-123-Short-Description
  STORY-456-Another-Description
  STORY-789-Blah-Blah
* master
</code></pre>

<p>All attempts to delete branches listed with <code>grep -v \*</code> (as per the answers below) result in errors:</p>

<pre><code>error: branch 'STORY-123-Short-Description' not found.
error: branch 'STORY-456-Another-Description' not found.
error: branch 'STORY-789-Blah-Blah' not found.
</code></pre>

<p>I'm using:<br>
git 1.7.4.1<br>
ubuntu 10.04<br>
GNU bash, version 4.1.5(1)-release<br>
GNU grep 2.5.4  </p>
","88","47056","<git><bash><ubuntu><version-control><grep>"
"3532740","1","Do I ever need to run git gc on a bare repo?","<p><a href=""http://www.kernel.org/pub/software/scm/git/docs/git-gc.html""><code>man git-gc</code></a> doesn't have an obvious answer in it, and I haven't had any luck with Google either (although I might have just been using the wrong search terms).</p>

<p>I understand that you should occasionally run <code>git gc</code> on a local repository to prune dangling objects and compress history, among other things -- but is a shared bare repository susceptible to these same issues?</p>

<p>If it matters, our workflow is multiple developers pulling from and pushing to a bare repository on a shared network drive. The ""central"" repository was created with <code>git init --bare --shared</code>.</p>
","31","11990","<git><git-gc>"
"4652532","1","SSL certificate issue when trying to clone Git repository within Cygwin","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3777075/https-github-access"">HTTPS github access</a>  </p>
</blockquote>



<p>I am trying to clone a Git repository from Cygwin running on Windows 7. I am entering the command <code>git clone http://github.com/scottgonzalez/node-chat</code> and getting this result:</p>

<pre><code>Cloning into node-chat...
error: SSL certificate problem, verify that the CA cert is OK. Details:
error:14090086:SSL routines:SSL3_GET_SERVER_CERTIFICATE:certificate verify
    failed while accessing https://github.com/scottgonzalez/node-chat/info/refs

fatal: HTTP request failed
</code></pre>

<p>It seems like I get some sort of error whenever I try to do anything involving an https URL in Cygwin. How can I make the clone work?</p>
","36","96743","<git><ssl><https><cygwin>"
"13040958","1","Merge two Git repositories without breaking file history","<p>I need to merge two Git repositories into a brand new, third repository.  I've found many descriptions of how to do this using a subtree merge (for example <a href=""http://stackoverflow.com/a/1426163"">Jakub Narębski's answer</a> on <a href=""http://stackoverflow.com/questions/1425892/how-do-you-merge-two-git-repositories"">How do you merge two git repositories?</a>) and following those instructions mostly works, except that when I commit the subtree merge all of the files from the old repositories are recorded as new added files.  I can see the commit history from the old repositories when I do <code>git log</code>, but if I do <code>git log &lt;file&gt;</code> it shows only one commit for that file - the subtree merge.  Judging from the comments on the above answer, I'm not alone in seeing this problem but I've found no published solutions for it.</p>

<p>Is there any way do merge repositories and leave individual file history intact?</p>
","99","37792","<git><git-subtree>"
"16190387","1","When applying a patch is there any way to resolve conflicts?","<p>I am on windows. </p>

<p>For various reasons we have multiple git instances of different svn branches. </p>

<p>Many times I want to fix an issue in repository A, generate a patch, and apply it to repository B. This works fine except if there are conflicts. </p>

<p>When rebasing I just right click the folder and use tortioseGit and select the resolve option. This brings up a nice gui to let me work through my conflicts. </p>

<p>Is there any way to accomplish this with rejected patch chunks?</p>

<p>Here is my current approach to creating/applying the patches</p>

<pre><code>git format-patch master --stdout &gt; c:\\patch\\file.patch
git apply --reject --ignore-space-change --ignore-whitespace c:\\patch\\file.patch
</code></pre>
","44","19980","<git>"
"18750808","1","Difference between author and committer in Git?","<p>I am trying to make a commit like</p>

<pre class=""lang-bash prettyprint-override""><code>git commit --author=""John Doe &lt;john@doe.com&gt;"" -m ""&lt;the usual commit message&gt;""
</code></pre>

<p>where John Doe is some user in whose name I want to make the commit.</p>

<p>It appears all right in <code>git log</code>. However, when I do a <code>gitk</code>, <strong>the author name is correct, but the committer name is picked from my global git config settings</strong> (and is thus set to my name/email).</p>

<h2>Questions</h2>

<ol>
<li><p>What is the difference between the two (committer vs author)?</p></li>
<li><p>Should I be setting the committer as well to the other user?</p></li>
<li><p>If yes, how?</p></li>
</ol>
","82","17926","<git><git-config><gitk>"
"7106012","1","Download a single folder or directory from a GitHub repo","<p>How can I download only a specific folder or directory from a remote Git repo hosted on GitHub?</p>

<p>Say the example GitHub repo lives here:</p>

<pre><code>git@github.com:foobar/Test.git
</code></pre>

<p>Its directory structure:</p>

<pre><code>Test/
    foo/ 
       a.py
       b.py
    bar/
       c.py
       d.py
</code></pre>

<p>I want to download only the <strong>foo</strong> folder and not clone the whole Test project.</p>
","306","155463","<git><github>"
"1793735","1","Change case of a file on Windows?","<p>There are a couple of files in our git-controlled codebase that I'd like to rename.  Specifically, I just want to change the case of the file, so that <code>sourceCode.java</code> becomes <code>SourceCode.java</code>, for example.  The catch: I'm on a Windows box, and the filesystem thinks those are the same file name.</p>

<p>How can I get Windows and Git to recognize that change and check it in?</p>
","111","21372","<windows><git><filenames>"
"16288176","1","Your branch is ahead of 'origin/master' by 3 commits","<p>I am getting the following when running <code>git status</code></p>

<pre><code>Your branch is ahead of 'origin/master' by 3 commits.
</code></pre>

<p>I have read on some other post the way to fix this is run <code>git pull --rebase</code> but what exactly is rebase, will I lose data or is this simple way to sync with master?</p>
","79","80947","<git>"
"3713765","1","Viewing all `git diffs` with vimdiff","<p>I setup <code>git diff</code> to wrap into vimdiff, using ""<a href=""http://technotales.wordpress.com/2009/05/17/git-diff-with-vimdiff/"" rel=""nofollow"">Git Diff with Vimdiff</a>"" as a guide, and it's working as expected unless there are many files with changes. </p>

<p>When there are multiple files with changes and I run <code>git diff</code>, it opens the first file and, after quitting the first instance of vimdiff, I'm presented with the following message:</p>

<pre><code>external diff died, stopping at filename
</code></pre>

<p>This is a completely different behavior than I am used to.  I had a similar setup in the past with SVN and, when diffing against multiple files, I would review the first file, then write and quit using <code>:wq</code> and the next file with differences would open up.</p>

<p>This is not the case with Git. I tried <code>:n[ext]</code>, but doing so does not fill the left window with the original file so that it can be diffed against the modified version.</p>
","124","50741","<git><vim><diff><vimdiff>"
"9347458","1","Switch between user identities in one Git on one computer","<p>I'm a Git/Github newbie, forgive me if this is an elementary question, I might have not got the priciples right just yet (primary source: ProGit book). But I keep stumbling throughout the book, can't figure this out. Anyway...</p>

<hr>

<p>I have <strong>ONE</strong> repository on <strong>GitHub</strong>, let's call it <code>Repo-1</code>.</p>

<p>I want to first access that repository as a <strong>default Git user</strong>.</p>

<p>Let's call that user <code>User-1</code>.</p>

<p>I created <strong>SSH keypair</strong>, everything fine, <strong>works nice</strong>.</p>

<hr>

<p>I made <strong>ANOTHER</strong> repository on <strong>GitHub</strong>, let's call it <code>Repo-2</code>.</p>

<p>I <strong>didn't make any changes in local Git</strong>, on my laptop. No configurational changes, nothing.</p>

<p>Now - I want to <strong>clone</strong> from <code>Repo-1</code> as the <code>User-2</code> (but <strong>from the same laptop</strong>).</p>

<p>First of all: is this at all possible to do?</p>

<p>Can local Git on one single laptop switch between ""user accounts"" and present itself as <code>User-2</code>? And then, from THAT identity, clone from Repo-1, make some change, and then push to <code>Repo-1</code>?</p>

<p>If possible, how on Earth do I do that? Thanx in advance to whomever spares a line...</p>
","35","59528","<git><github><user>"
"6102297","1","How do I clean up my Github fork so I can make clean pull requests?","<p>I forked a repository on Github. I've made some minor changes and submitted pull requests to the upstream, but along the way my fork has become so mangled I'm unable to generate clean pull requests; when I start a pull request from a branch with six changes, Github wants to submit thirteen, with seven of them already existing upstream (natch). </p>

<p>My problem seems to be related to <a href=""http://stackoverflow.com/q/5561161/306084"">only pulling the latest commits</a>, but when I create a new branch and cherry-pick commits I still have extras. I've futzed with <a href=""http://stackoverflow.com/q/3867284/306084"">rebasing</a> as well, but now it looks like even <a href=""https://github.com/pjmorse/sproutguides"">my master</a> is so messed up I can't generate a clean copy of <a href=""https://github.com/sproutcore/sproutguides"">upstream</a>. This is apparently because I didn't understand that I needed to <a href=""http://stackoverflow.com/questions/5968964/avoid-unwanted-merge-commits-and-other-commits-when-doing-pull-request-in-github/5969100#5969100"">rebase instead of merging</a>, so clearly I've made mistakes; what I'm trying to do is figure out how to unsnarl that knot and get back to a clean state where I can move forward usefully.</p>

<p>I kind of want to blow away my fork and make a new fork of the upstream, but I gather that, too, is difficult. </p>

<p>Having confessed my Git sins, how do I obtain github absolution?</p>
","63","14284","<git><github>"
"10779343","1",".gitignore NuGet exclude packages/ include packages/repositories.config","<p>I'm trying to create a .gitignore for a Visual Studio project that uses NuGet. It currently contains:</p>

<pre><code>\packages/*
!packages/repositories.config
</code></pre>

<p>This does not ignore anything in the folder. Everything gets staged on an add. I have also tried:</p>

<pre><code>packages/
!packages/repositories.config
</code></pre>

<p>This ignores everything in the packages folder and does not include the packages/repositories.config.</p>

<p>What am I doing wrong?</p>
","70","16080","<git><nuget><gitignore>"
"10780228","1","How can I revert multiple Git commits (already pushed) to a published repository?","<p>New to git, and already messing up.</p>

<p>I've commited and pushed some changes to a remote dev machine.
I need to recover an older version, but keep the ""bad progress"" doing so far to keep working on a separate branch;</p>

<p>I was thinking doing it like this:</p>

<ol>
<li><strong>Create a local branch</strong> named: ""tested-thing""</li>
<li><strong>Revert local repository</strong> to the state where it worked <em>(hopefully meaningful commits will help)</em>;</li>
<li><p><strong>Push to remote</strong></p></li>
<li><p><em>finish tests on tested-thing</em> </p></li>
<li><strong>Merge</strong> ""tested-thing"" <strong>into dev</strong></li>
<li><strong>Push to remote</strong></li>
</ol>

<p>Between steps 3 and 5 other developers may commit and push, and I'm afraid this may result on a ""merge tragedy"" - Anyway, may this be a proper way to go ?</p>

<p><strong>UPDATE:</strong></p>

<p><strong>The main problem here resides on 2)</strong></p>

<p>Here, on topic: ""breaking work into a topic branch""
<a href=""http://learn.github.com/p/undoing.html"">http://learn.github.com/p/undoing.html</a></p>

<p>They suggest:</p>

<ol>
<li>$ git branch test</li>
<li>$ git reset --hard a6b4c974</li>
</ol>

<p>By doing so, other developers could still:</p>

<p><code>$ git commit</code> (on the dev branch)</p>

<p>and I can <strong>checkout to test</strong> and work it out until <strong>merge</strong> time.</p>

<p>Despite all your options, this feels like to be a nice approach to follow. 
However, it's not stated if this can be done after we have pushed ?</p>

<p>Please note the following: <em>Since I made those changes and I mess up the all thing, <strong>no one else have worked on the repository so far</strong>. So, if I revert the working directory, no one will notice.</em></p>
","31","30546","<git><version-control>"
"6104072","1","git update-index --assume-unchanged and git reset","<p>Here is the scenario:</p>

<p>In my working directory, I have a number of files (let's call them A,B,C) that I've edited.  I then ran <code>git update-index --assume-unchanged</code> on those files.  Now <code>git status</code> returns blank.  Good.</p>

<p>Now, if I do a <code>git reset --hard</code>, the contents of the files A,B, and C, revert back to the contents before I've edited them and ""assume-unchanged"" them.  </p>

<p>Is there a way to stop git from actually reverting files A,B, and C, and simply ignore them? </p>

<p>Thanks,</p>

<p>Ken</p>
","33","9993","<git><reset>"
"6104258","1","How to reset Heroku app and re-commit everything?","<p>I'm building an application which I'm also testing in Heroku. I ran into some problem today and had to rollback one commit in my local git repo, but Heroku now won't recognize my changes saying that ""everything is up to date"".</p>

<p>So, running</p>

<pre><code>git push heroku master
</code></pre>

<p>heroku responds with </p>

<pre><code>Everything up-to-date
</code></pre>

<p>which isn't true.</p>

<p>UPDATE: Things I've tried</p>

<pre><code>git push -f heroku master
git push --force heroku master
git push heroku +master
git push --force heroku +master
</code></pre>

<p>Did some changes in the source code and then</p>

<pre><code>git add.
git commit -a -m ""Message"" #(Then this commit shows in my git explorer)
git push heroku master #Everything up-to-date
</code></pre>
","46","32505","<ruby-on-rails-3><git><heroku>"
"8475958","1","How can I find out what version of git I'm running?","<p>I'm trying to follow some tutorials to learn how to use Git but some of the instructions are for specific versions.</p>

<p>Is there a command that I can use find out what version I have installed?</p>
","55","30864","<git>"
"1967370","1","git replacing LF with CRLF","<p>Running git on a Windows XP machine, using bash. I exported my project from SVN, and then cloned a bare repository.</p>

<p>I then pasted the export into the bare repositories directory, and did a:</p>

<pre><code>git add -A
</code></pre>

<p>I then got a list of messages saying:</p>

<blockquote>
  <p>LF will be replaced by CRLF</p>
</blockquote>

<p>What are the ramifications of this conversion? This is a .NET solution in Visual Studio.</p>
","436","264051","<git>"
"8476376","1","Typical .gitignore file for an Android app","<p>Just put an Android project under git (<em>beanstalk</em>) version control via the command line (<em>mac terminal</em>). Next step is to set up exclusions.</p>

<p>To those of you who have already been down this path:</p>

<p><strong>What should a typical .gitignore file look like for an android project?</strong></p>

<p><em>Project set up in Eclipse</em></p>
","108","43202","<java><android><eclipse><git><gitignore>"
"1967967","1","Git command to display HEAD commit id?","<p>What command can I use to print out the commit id of HEAD?</p>

<p>This is what I'm doing by hand:</p>

<pre><code>$ cat .git/HEAD
ref: refs/heads/v3.3
$ cat .git/refs/heads/v3.3
6050732e725c68b83c35c873ff8808dff1c406e1
</code></pre>

<p>But I need a script that can reliably pipe the output of some command to a text file such that the text file contains exactly the commit id of HEAD (nothing more or less, and not just a ref).  Can anyone help?</p>
","91","38753","<git><version-control>"
"1968512","1","Getting the difference between two repositories","<p>How can we get the difference between two git repositories?</p>

<p>The scenario:
We have a repo_a and repo_b. The latter was created as a copy of repo_a. There have been parallel development in both the repositories afterwards. Is there a way we can list the differences of the current versions of these two repositories?</p>
","34","19757","<git><git-diff>"
"13225826","1","Using the same deploy key for multiple github projects","<p>Github does not allow the same ssh deploy key to be used for more than one project, which would be very useful in some cases (e.g. CI server dealing with project with private sub-modules). I've seen various threads that seem to say that this limitation is there for 'security reasons', but I'm yet to see a convincing explanation about exactly what risk that would raise.</p>

<p>Note that the fact that Github doesn't allow <em>Account Level</em> keys to be reused makes sense (two users shouldn't share keys). It is only the restriction on <em>Deploy Keys</em> that I'm questioning.</p>

<p>And to be clear, I'm <em>not</em> looking for workarounds (create a dummy user, use multiple keys, ...), but only for a plausible explanation for this limitation on Deploy Keys.</p>

<p>Related threads:</p>

<ul>
<li>One showing a <a href=""http://eclipsesource.com/blogs/2012/07/30/accessing-multiple-private-github-repositories-without-a-dedicated-build-user/"">workaround</a></li>
<li>One <a href=""https://github.com/gitlabhq/gitlabhq/issues/370"">discussing the issue</a> but not really going anywhere</li>
</ul>
","39","9116","<git><github><ssh>"
"6335521","1","Git: How to revert 2 files that are stubbornly stuck at ""Changed but not committed""?","<p>I have a repo that has two files that supposedly I changed locally.</p>

<p>So I'm stuck with this:</p>

<pre><code>$ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   dir1/foo.aspx
#       modified:   dir2/foo.aspx
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Doing <code>git diff</code> says that the entire file contents have changed, even though from eyeballing it that seems untrue (there seem to be common line ranges that diff seems to be failing to see).</p>

<p>Interestingly I don't remember changing these files locally. This repo is used with one remote repo (private, at GitHub.com, FWIW).</p>

<p>No matter what I've tried, I can't discard these local changes. I have tried all of:</p>

<pre><code>$ git checkout -- .
$ git checkout -f
$ git checkout -- dir1/checkout_receipt.aspx
$ git reset --hard HEAD
$ git stash save --keep-index &amp;&amp; git stash drop
$ git checkout-index -a -f
</code></pre>

<p>In other words I've tried everything described in <a href=""http://stackoverflow.com/questions/52704/how-do-you-discard-unstaged-changes-in-git"">How do you discard unstaged changes in git?</a> plus more. But the 2 files remain stuck as ""changed but not committed"".</p>

<p>What the heck would cause two files to be stuck like this and seemingly ""un-revert-table""??</p>

<p>P.S. In the list above showing commands I'd already tried, I mistakenly wrote <code>git revert</code> when I meant <code>git checkout</code>. I'm sorry and thank you to those of you who answered that I should try <code>checkout</code>. I edited the question to correct it. I definitely did already try <code>checkout</code>.</p>
","42","14009","<git><github><revert>"
"6335717","1","Can git tell me if a merge will conflict without actually merging?","<p>Is it possible to know if a merge will conflict or not, without touching the working tree? I don't want to touch the working tree because I don't want to have it checked-out. That would take a long time if I want to see this information for several branches.</p>
","72","24976","<git>"
"6335681","1","git: How do I get the latest version of my code?","<p>I'm using Git 1.7.4.1.  I want to get the latest version of my code from the repository, but I'm getting errors ...</p>

<pre><code>$ git pull
….
M   selenium/ant/build.properties
….
M   selenium/scripts/linux/get_latest_updates.sh
M   selenium/scripts/windows/start-selenium.bat
Pull is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;' as appropriate to mark resolution, or use 'git commit -a'.
</code></pre>

<p>I've deleted the local copies of the files the tool is complaining about, but I still get the errors.  How do I check out the latest version from the remote repo? - Dave</p>
","75","160005","<git>"
"3481973","1","Heroku error: ""Permission denied (public key)""","<p>I keep getting this error. I am using Mac. I generated a key and added it to heroku using </p>

<p><code>heroku config:add key=""ssh-rsa blahblah=me@me.com""</code></p>

<p>But this doesn't work. I keep getting the same error. Short of reinstalling ssh-keygen, what can I do about this?</p>
","91","31152","<git><configuration><heroku>"
"2676912","1","Resuming git-svn clone","<p>I started cloning an SVN repository using the git-svn's clone operation.  After about 6 hours of importing (it's a big repo), my computer went and slept on me.  Is there a way to resume the operation without redoing all of the initial work?</p>
","89","11421","<git><git-svn>"
"5875275","1","`git commit -v` by default","<p>How can I configure <code>git commit</code> to act as <code>git commit -v</code> (showing the full diff being committed) by default?</p>

<p>Using an alias is not quite satisfactory, as it does not affect commit message editing during operations which may indirectly commit, such as <code>git rebase</code>. </p>
","42","4956","<git>"
"3959924","1","What's the difference between git clone --mirror and git clone --bare","<p>The git clone help page has this to say about <code>--mirror</code>:</p>

<blockquote>
  <p>Set up a mirror of the remote repository. This implies <code>--bare</code>.</p>
</blockquote>

<p>But doesn't go into detail about how the <code>--mirror clone</code> is different from a <code>--bare clone.</code></p>
","235","127072","<git><git-clone>"
"559917","1","git rebase and git push: non-fast forward, why use?","<p>I have a branch that should be available to other contributors and that should constantly stay up to date with the master.</p>

<p>Unfortunately, every time I do 'git rebase' and then try to push, it results in 'non-fast forward' message and abortion of pushing. The only way to push here is to use --force. Does that mean I should use 'git merge' instead of rebasing if my branch went public and others are working on it?</p>
","64","39156","<git><merge><rebase>"
"9500898","1","Compiler error - msgfmt command not found when compiling git on a shared hosting","<p>I'm trying to update Git from my shared hosting. For that I'm following these steps:</p>

<ol>
<li>Download latest Git version</li>
<li>Unpack and place it on the server</li>
<li>Configure and create the Makefile -> ./configure --prefix=$HOME/dev/git/src --without-tcltk</li>
<li>Build the package -> ""make"" then ""make install""</li>
<li>Update PATH .bash_profile</li>
</ol>

<p>I'm stuck at point 4. When I run the ""make"" command, I get the following:</p>

<pre><code>
user@ssh1:~/dev/git/src$ make
SUBDIR gitweb
SUBDIR ../
make[2]: ? GIT-VERSION-FILE ? est ? jour.
GEN git-instaweb
SUBDIR perl
SUBDIR git_remote_helpers
SUBDIR templates
MSGFMT po/build/locale/is/LC_MESSAGES/git.mo
/bin/sh: msgfmt: command not found
make: *** [po/build/locale/is/LC_MESSAGES/git.mo] Erreur 127
</code></pre>

<p>Compiler throws a <code>msgfmt command not found</code> error.</p>

<p>I Googled it and it seems to be related to the gettext package.</p>

<p>Any idea how to fix that error on a shared hosting?</p>
","41","39178","<git><compiler-errors><gettext><shared-hosting><msgfmt>"
"1616957","1","How do you roll back (reset) a Git repository to a particular commit?","<p>I cloned a Git repository and then tried to roll it back to a particular commit early on in the development process. Everything that was added to the repository after that point is unimportant to me so I want to omit all subsequent changes from my local source code.</p>

<p>However, when I try to roll back in the GUI tool it doesn't update my local file system - I always end up with the latest source code for the project.</p>

<p>What's the correct way to just get the source for a repository as of a particular commit in the project's history and omit all later updates?</p>
","470","343830","<git>"
"2702731","1","Git fails when pushing commit to github","<p>I cloned a git repo that I have hosted on github to my laptop.  I was able to successfully push a couple of commits to github without problem.  However, now I get the following error: </p>

<pre><code>Compressing objects: 100% (792/792), done.
error: RPC failed; result=22, HTTP code = 411
Writing objects: 100% (1148/1148), 18.79 MiB | 13.81 MiB/s, done.
Total 1148 (delta 356), reused 944 (delta 214)
</code></pre>

<p>From here it just hangs and I finally have to ^C back to the terminal.</p>
","84","63206","<git><github><rpc>"
"21657430","1","Why is a git 'pull request' not called a 'push request'?","<p>The terminology used to merge a branch with an official repository is a 'pull request'. This is confusing, as it appears that I am requesting to push my changes to the official repository.</p>

<p>Why is it called a pull request and not a push request?</p>
","86","6704","<git><github>"
"2125710","1","How to revert a ""git rm -r .""?","<p>I accidentely said <code>git rm -r .</code>. How do I recover from this?</p>

<p>I did not commit.</p>

<p>I think all files were marked for deletion and were also physically removed from my local checkout.</p>

<p><em>EDIT:</em> I could (if I knew the command) revert to the last commit. But it would be a lot better if I could just undo the <code>git rm -r .</code>. Because I am not really sure what I did after the last commit and before the <code>git rm -r .</code>.</p>
","225","106727","<git><git-rm>"
"15381198","1","remove credentials from git","<p>I'm working with several repositories, but lately I was just working in our internal one and all was great.</p>

<p>Today I had to commit and push code into other one but I'm having some troubles.</p>

<pre><code>$ git push appharbor master
error: The requested URL returned error: 403 while accessing https://gavekortet@appharbor.com/mitivo.git/info/refs?service=git-receive-pack
fatal: HTTP request failed
</code></pre>

<p>there is nothing I can do, that would bring the password entry again.</p>

<p>How can I reset the credentials on my system so Git will ask me for the password of that repo?</p>

<p>I have tried:</p>

<ul>
<li><code>git config --global --unset core.askpass</code></li>
</ul>

<p>in order to unset the password</p>

<ul>
<li><code>git config credential.helper 'cache --timeout=1'</code></li>
</ul>

<p>in order to avoid credentials cache...</p>

<p>Nothing seam to work, does anyone have a better idea?</p>
","65","44789","<windows><git><credentials>"
"585844","1","Merging with ""git mergetool""","<p>I've found <strong>git mergetool</strong> to be a handy utility for merging diffs visually, but the way I'm going about it seems really wonky.  Essentially, my process looks like this when conflicts are reported:</p>

<ol>
<li>Execute a <strong>git mergetool</strong></li>
<li>At the prompt, hit <strong>Enter</strong> to launch my diff tool (Meld or FileMerge, depending on which computer)</li>
<li>Resolve the conflicts</li>
<li>Save the changes</li>
<li>Close the diff tool</li>
</ol>

<p>If I have more than one conflict, rinse, repeat. Yep, that's me opening and closing my diff viewer once for each conflict in the merge. Since it's launched from the command line, closing it is the only way I know of to tell git mergetool that I've resolved this particular conflict and that it can move on to the next.</p>

<p>Surely there's a better way, but I have no idea. Li'l help, please? This process seems crazy inefficient.</p>

<p>Thanks.</p>
","46","66252","<git><diff><mergetool>"
"11852982","1","Arrange Repositories in Folders on Github","<p>I am new to git and what I am doing now is to upload all my recent projects as repositories to github. There are a lot of different projects like webdesign, wordpress themes and different types of applications. And some of these also belong to bigger projects because they were about testing some stuff as a different application.</p>

<p>The problem is that I have a confusing amount of repositories online now.</p>

<p><strong>How can I group related github repositories in a folder structure?</strong> Is there a feature providing any ability to order and structure or even tag repositories on github?</p>
","43","11181","<git><github><repository><order>"
"1677121","1","Is there an ignore command for git like there is for svn?","<p>I am a new user to git and I am starting a new project. I have a bunch of dot files that I would like to ignore. Is there an ignore command for git like there is for svn?</p>
","54","41034","<git><ignore>"
"2263674","1","How do I find the next commit in git?","<p><code>ref^</code> refers to the commit before <code>ref</code>, what about getting the commit <em>after</em> <code>ref</code>?</p>

<p>For example, if I <code>git checkout 12345</code> how do I check out the next commit?</p>

<p>Thanks.</p>

<p>PS  Yes, git's a DAG node pointer struct tree whatever.  <strong>How do I find the commit after this one?</strong></p>
","117","25990","<git>"
"5181845","1","Git push existing repo to a new and different remote repo server?","<p>Say I have a repository on <a href=""http://git.fedorahosted.org/git/?p=rhq/rhq.git;a=summary"">git.fedorahosted.org</a> and I want to clone this into my account at github to have my own playground aside from the more ""official"" repo on fedorahosted.
What would be the steps to initially copy that over?
Within github there is this nice ""fork"" button, but I can't use this for obvious reasons.</p>

<p>And how would I track changes in the fedorahosted repo into the github one? </p>
","188","94598","<git><github>"
"19663093","1","Apply gitignore on an existing repository already tracking large number of files","<p>I have an existing Visual Studio project in my repository. I recently added a .gitignore file under my project and I assume that tells Git to ignore the files listed in the file. </p>

<p>My problem is that all those files are already being tracked and as far as I know Git will not ignore a file that was already tracked before a rule was added to this file to ignore it.</p>

<p>It was suggested to use: <code>git rm --cached</code> and manually un-track them but that's going to take me forever to go through them one by one. </p>

<p>I thought about deleting the repository and recreating it again but this time with .gitignore file present, but there must be a better way to do this.</p>
","75","35609","<git><gitignore>"
"6468893","1","stash@{1} is ambiguous?","<p>I'm trying to get info about my stash, but git is telling me that <code>stash@{0}</code> and <code>stash@{1}</code> are ambiguous. <code>git stash list</code> works fine, and <code>.git/logs/refs/stash</code> seems to have the appropriate content (not that I'm an expert on git internals).</p>

<pre><code>% git stash list
stash@{0}: On master: two
stash@{1}: On master: one
% git stash show stash@{1}
fatal: ambiguous argument 'stash@1': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions
</code></pre>

<p>Just plain <code>git stash show</code> works fine. So why are the names that <code>git stash list</code> gives me considered ambiguous?</p>
","75","8843","<git>"
"15432052","1","What is the meaning of git reset --hard origin/master?","<p>I did a git pull and got an error ""The following working tree files would be overwritten by merge... Please move or remove them before you can merge"". To resolve this I did the following</p>

<pre><code>git fetch
git reset --hard origin/master
</code></pre>

<p>Now when I do git pull, it says everything up to date.I want to know what exactly happens when i run these commands. I know <code>git fetch</code> fetches the changes from the remote repo without merging them into my local repo.</p>

<p>What is the meaning of <code>git reset --hard origin/master</code>? How does it work?</p>
","58","71109","<git><version-control>"
"3541647","1","git add . vs git commit -a","<p>What's the difference between:</p>

<ul>
<li><code>git add .</code></li>
<li><code>git commit -a</code></li>
</ul>

<p>Should I be doing both, or is that redundant?</p>
","53","18779","<git><version-control><git-commit><git-add><git-commands>"
"11856983","1","Why git AuthorDate is different from CommitDate?","<p>I lookup my git logs and find that the AuthorDate and CommitDate is slightly different for some of my commits:</p>

<pre><code>commit 3a5912f90dc5227f308e99f95152fbee2301c59a
Author:     &lt;hidden&gt;
AuthorDate: Fri Jun 15 10:57:22 2012 +0800
Commit:     &lt;hidden&gt;
CommitDate: Fri Jun 15 11:14:37 2012 +0800
</code></pre>

<p>The Author and Commit is the same me.</p>

<p>How does this happen? I am puzzled for days.</p>

<p>There are more(happens in 17 out of 341 commits):</p>

<pre><code>+------------------------------+-------------------------------+
| from_unixtime(authored_date) | from_unixtime(committed_date) |
+------------------------------+-------------------------------+
| 2012-06-15 10:57:22          | 2012-06-15 11:14:37           |
| 2012-06-15 14:39:54          | 2012-06-15 14:48:57           |
| 2012-06-19 12:28:21          | 2012-06-19 12:29:41           |
| 2012-06-21 18:16:25          | 2012-06-21 18:28:48           |
| 2012-06-26 17:30:54          | 2012-06-26 17:33:55           |
| 2012-07-13 11:41:43          | 2012-07-13 11:42:17           |
| 2012-07-13 11:56:02          | 2012-07-13 12:13:22           |
| 2012-07-13 12:05:09          | 2012-07-13 12:12:24           |
| 2012-07-12 18:38:49          | 2012-07-13 12:26:35           |
| 2012-07-13 11:00:47          | 2012-07-13 12:25:15           |
| 2012-07-16 14:10:54          | 2012-07-16 14:15:01           |
| 2012-07-13 12:56:51          | 2012-07-16 13:49:48           |
| 2012-07-16 14:10:54          | 2012-07-16 14:19:46           |
| 2012-07-24 16:05:05          | 2012-07-24 16:05:48           |
| 2012-07-24 17:42:58          | 2012-07-24 17:43:33           |
| 2012-07-24 17:42:58          | 2012-07-24 17:45:18           |
| 2012-07-26 16:55:40          | 2012-07-26 16:55:53           |
+------------------------------+-------------------------------+
</code></pre>
","34","6616","<git>"
"27330446","1","Getting a fatal error in git for multiple stage entries","<p>Using Git version 2.2.0 with unity game engine on OS X, and wanted to commit my code.  I added everything and did not get an error message.  then commit -m , and got this error message:</p>

<pre><code>fatal: multiple stage entries for merged file 'Assets/Prefabs/Resources'
</code></pre>

<p>Not noticing it I pushed, that didn't give an error message, in fact said <code>Everything up-to-date</code>
So I checked bitbucket (where the repo is held) and it didn't show my commit.  so I checked my local log and that also does not show my commit.</p>

<p>I've looked into google for an answer... and nothing. what is this error? and how can I fix it?</p>
","164","30638","<git>"
"9512549","1","How to fast-forward a branch to head?","<p>I switch to master after develop on a branch for a long time. The log shows:</p>

<blockquote>
  <p>Your branch is behind 'origin/master' by 167 commits, and can be fast-forwarded.</p>
</blockquote>

<p>I tried:</p>

<pre><code>git checkout HEAD
</code></pre>

<p>It has no effect. This is cause because that I have checkout out an intermediate commit on master.</p>

<p>How to make master stay on head? </p>
","148","118121","<git>"
"10622179","1","How to find/identify large files/commits in Git history?","<p>I've got a git repo of 300 MB. My currently checked-out files weigh 2 MB, and the git repo weighs 298 MB. This is basically a code-only repo that should not weigh more than a few MB.</p>

<p>Most likely, somebody at some point committed some heavy files by accident (video, huge images, etc), and then removed them...but not from git, so we have a history with useless large files. How can I track down the large files in the git history? There are 400+ commits, so going one by will be time-consuming. </p>

<p><strong>NOTE</strong>: my question <strong><em>is not about <a href=""http://stackoverflow.com/questions/2100907/how-to-purge-a-huge-file-from-commits-history-in-git"">how to remove the file</a></em></strong>, but how to <strong><em>find</em></strong> it in the first place. </p>
","63","17455","<git>"
"8740187","1","Git: How to remove file from historical commit?","<p>I have commit with id 56f06019 (for example). In that commit i have accidentally commited large file (50Mb). In another commit i add the same file but in the right size (small). Now my repo when i clone is too heavy :( How to remove that large file from repo history to reduce the size of my repo ?</p>
","57","16351","<git>"
"7568811","1","Git diff - how to quit the diff listing","<p>How do you quit git diff listing?</p>

<p>There is an <code>&lt;END&gt;</code> marker at the bottom of the screen, and everything I do which appears to quit the diff listing, then shows an <code>&lt;END&gt;</code> marker at the bottom of the screen again.</p>
","67","12679","<git>"
"4099742","1","How can I compare files from two different branches?","<p>I have a script that works fine in one branch and is broken in another. I want to look at the two versions side-by-side and see what's different. Are there any ways to do this?</p>

<p><strong>To be clear</strong> I'm not looking for a compare tool (I use Beyond Compare). I'm looking for a git diff command that will allow me to compare the master version to my current branch version to see what has changed. I'm not in the middle of a merge or anything. I just want to say something like </p>

<pre><code>git diff mybranch/myfile.cs master/myfile.cs
</code></pre>
","567","225069","<git><diff>"
"12370714","1","Git: How do I list only local branches?","<p><code>git branch -a</code> shows both remote and local branches.</p>

<p><code>git branch -r</code> shows remote branches.</p>

<p>Is there a way to list just the local branches?</p>
","333","162791","<git><git-branch>"
"26336709","1","Android studio - should the entire .idea directory be in git ignore?","<p>I saw a lot of examples for <code>.gitignore</code> files for <strong>AndroidStudio</strong>, some have <code>.idea</code> in them, and some don't.</p>

<p>Is there a good reason not to add the entire .idea dir to .gitignore?</p>

<p>If it should not be completely ignored, are there specific files inside .idea (such as .iml) that should be in .gitignore? </p>
","47","18870","<android><git><android-studio><gitignore>"
"5257553","1","Coloring white space in git-diff's output","<p>Regarding code formatting I'm kind of purist :). I very often remove unnecessary white spaces (lines with only ws, ws at the end of lines etc). I even have set vim to show that kind of lines colored to red.</p>

<p>My problem is that using git-diff I often see something like this:</p>

<pre><code>-      else{ 
+      else{
</code></pre>

<p>Even if I have git-diff colored I can't see difference (in that particular situation I removed 1 ws at the end of line). Is there any way to tell git-diff to show that ws colored to red? (for example those matched with /\s+$/ regexp).</p>
","85","23302","<git><colors><diff><whitespace>"
"1741143","1","'git pull origin mybranch' leaves local mybranch N commits ahead of origin. Why?","<p>I just observed something odd about <code>git pull</code>, which I don't understand.</p>

<p>On Friday, I worked on a local branch. let's call it <code>mybranch</code>. Before leaving the office I pushed it to origin (which is my github repo): <code>git push origin mybranch</code>.</p>

<p>Yesterday at home, I <code>pull</code>ed mybranch to my laptop, did some more coding, and then pushed my changes back to github (origin).</p>

<p>Now I'm at work again, and tried to pull the changes from yesterday to my work machine (I didn't change anything in my work place's local repo over the weekend):</p>

<pre><code>git pull origin mybranch
</code></pre>

<p>that caused a fast forward merge, which is fine. I then did a <code>git status</code>, and it said:</p>

<pre><code># On branch mybranch
# Your branch is ahead of 'origin/mybranch' by 6 commits.
#
nothing to commit (working directory clean)
</code></pre>

<p>Huh? How can it be 6 commits ahead when I didn't even touch it over the weekend, AND just pulled from origin? So I ran a <code>git diff origin/mybranch</code> and the diffs were exactly the 6 changes I just pulled from remote.</p>

<p>I could only ""fix"" this by running <code>git fetch origin</code>:</p>

<pre><code>From git@github.com:me/project
af8be00..88b0738  mybranch -&gt; origin/mybranch
</code></pre>

<p>Apparently, my local repo was missing some reference objects, but how can that be? I mean, a pull does a fetch already, and I didn't work on anything except that branch, so a <code>git fetch origin</code> and <code>git fetch origin mybranch</code> should have the same result?</p>

<p>Should I always use <code>git pull origin</code> instead of <code>git pull origin branchname</code>?</p>

<p>I'm confused.</p>
","89","25881","<git><version-control><git-pull>"
"5989592","1","Git: cannot checkout branch - error: pathspec '...' did not match any file(s) known to git","<p>I'm not sure why I'm <strong>unable to checkout</strong> a branch that I had worked on earlier. See the commands below (note: <code>co</code> is an alias for <code>checkout</code>):</p>

<pre><code>ramon@ramon-desktop:~/source/unstilted$ git branch -a
* develop
  feature/datts_right
  feature/user_controlled_menu
  feature/user_controlled_site_layouts
  master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/develop
  remotes/origin/feature/datts_right
  remotes/origin/master
ramon@ramon-desktop:~/source/unstilted$ git co feature/user_controlled_site_layouts 
error: pathspec 'feature/user_controlled_site_layouts' did not match any file(s) known to git.
</code></pre>

<p>I'm not sure what it means, and I can't seem to find anything I can understand on Google. </p>

<p><strong>How do I checkout that branch, and what may I have done to break this?</strong></p>

<p><strong>UPDATE</strong>:</p>

<p>I found <a href=""http://stackoverflow.com/questions/4181861/git-error-src-refspec-master-does-not-match-any"">this post</a>, and running <code>git show-ref</code> gives me:</p>

<pre><code>97e2cb33914e763ff92bbe38531d3fd02408da46 refs/heads/develop
c438c439c66da3f2356d2449505c073549b221c1 refs/heads/feature/datts_right
11a90dae8897ceed318700b9af3019f4b4dceb1e refs/heads/feature/user_controlled_menu
c889b37a5ee690986935c9c74b71999e2cf3c6d7 refs/heads/master
c889b37a5ee690986935c9c74b71999e2cf3c6d7 refs/remotes/origin/HEAD
e7c17eb40610505eea4e6687e4572191216ad4c6 refs/remotes/origin/develop
c438c439c66da3f2356d2449505c073549b221c1 refs/remotes/origin/feature/datts_right
c889b37a5ee690986935c9c74b71999e2cf3c6d7 refs/remotes/origin/master
23768aa5425cbf29d10ff24274adad42d90d15cc refs/stash
e572cf91e95da03f04a5e51820f58a7306ce01de refs/tags/menu_shows_published_only
429ebaa895d9d41d835a34da72676caa75902e3d refs/tags/slow_dev
</code></pre>

<p><strong>UPDATE on <code>.git</code> directory</strong> (<code>user_controlled_site_layouts</code> is in the <code>refs/heads/feature folder</code>):</p>

<pre><code>$ ls .git/refs/heads/feature/
datts_right  user_controlled_menu  user_controlled_site_layouts
$ cat .git/refs/heads/feature/user_controlled_site_layouts
3af84fcf1508c44013844dcd0998a14e61455034
</code></pre>

<p><strong>UPDATE on <code>git show 3af84fcf1508c44013844dcd0998a14e61455034</code></strong></p>

<pre><code>$ git show 3af84fcf1508c44013844dcd0998a14e61455034
commit 3af84fcf1508c44013844dcd0998a14e61455034
Author: Ramon Tayag &lt;xxx@xxxxx.xxx&gt;
Date:   Thu May 12 19:00:03 2011 +0800

    Removed site layouts migration

diff --git a/db/schema.rb b/db/schema.rb
index 1218fc8..2040b9f 100755
--- a/db/schema.rb
+++ b/db/schema.rb
@@ -10,7 +10,7 @@
 #
 # It's strongly recommended to check this file into your version control system.

-ActiveRecord::Schema.define(:version =&gt; 20110511012647) do
+ActiveRecord::Schema.define(:version =&gt; 20110503040056) do

   create_table ""attachments"", :force =&gt; true do |t|
     t.string   ""name""
@@ -205,15 +205,6 @@ ActiveRecord::Schema.define(:version =&gt; 20110511012647) do
     t.integer  ""old_id""
   end

-  create_table ""site_layouts"", :force =&gt; true do |t|
-    t.string   ""name""
-    t.text     ""description""
-    t.text     ""content""
-    t.integer  ""site_id""
-    t.datetime ""created_at""
-    t.datetime ""updated_at""
-  end
-
   create_table ""site_styles"", :force =&gt; true do |t|
     t.text     ""published""
     t.datetime ""created_at""
</code></pre>
","221","237671","<git>"
"16557071","1","Git: error: RPC failed; result=22, HTTP code = 411","<p><strong>Symptoms:</strong></p>

<p>Git suddenly refused to push a repository (to github in my case):</p>

<pre><code>$ git push
Counting objects: 9292, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (2136/2136), done.
error: RPC failed; result=22, HTTP code = 411
fatal: The remote end hung up unexpectedly
Writing objects: 100% (8222/8222), 1.27 MiB | 837 KiB/s, done.
Total 8222 (delta 6060), reused 8181 (delta 6033)
fatal: The remote end hung up unexpectedly
Everything up-to-date
</code></pre>
","61","20749","<git><github><runtime-error>"
"811251","1","How can I move a single directory from a git repository to a new repository whilst maintaining the history?","<p>I have inherited a git repository containing multiple projects in separate directories. I'd like to split the repository into new individual repositories, one for each project and then have the master repository contain the projects as submodules. I'd like to do all this whilst maintaining the revision history of the individual projects if possible.</p>

<p>I could clone the repository for each project and remove all the other projects each time, but it there a better way to avoid having the cloned history in each new project repository?</p>
","102","18887","<git><git-submodules>"
"24022582","1","OSX 10.10 yosemite beta on git pull: git-sh-setup: No such file or directory","<p>After upgrading to OSX 10.10 Yosemite Beta, running <code>git pull</code> is returning the following error:</p>

<blockquote>
  <p>/Library/Developer/CommandLineTools/usr/libexec/git-core/git-pull: line 11: git-sh-setup: No such file or directory</p>
</blockquote>

<p>I've checked the referenced git-core directory and the git-sh-setup.sh is there.</p>

<p>Other git commands are working exactly as expected</p>
","89","19939","<git><zsh><osx-yosemite>"
"15715825","1","How do you get git repos name in some git repository?","<p>Probably this is a basic question for git. When you are working in some git directory, how can you get git repos name in some git repository? Are there any git's commands?</p>

<pre><code># I did check out bar repository and working in somewhere 
# under bar directory at this moment such as below.

$ git clone git://github.com/foo/bar.git
$ cd bar/baz/qux/quux/corge/grault # and I am working in here!
$ git xxx # &lt;- ???
bar
</code></pre>
","37","39440","<git><command><repository>"
"6476513","1","Git file permissions on Windows","<p>I've read through a few questions regarding file permissions in Git and I'm still a bit confused. I've got a repo on GitHub forked from another. Post merge, they should be identical. However:</p>

<pre><code>$ git diff --summary origin/epsilon master/epsilon
 mode change 100644 =&gt; 100755 ants/dist/sample_bots/csharp/compile.sh
 mode change 100644 =&gt; 100755 ants/dist/starter_bots/coffeescript/MyBot.coffee
 mode change 100644 =&gt; 100755 ants/dist/starter_bots/coffeescript/ants.coffee
 mode change 100644 =&gt; 100755 ants/util/block_test.sh
 mode change 100644 =&gt; 100755 manager/mass_skill_update.py
 mode change 100644 =&gt; 100755 worker/jailguard.py
 mode change 100644 =&gt; 100755 worker/release_stale_jails.py
 mode change 100644 =&gt; 100755 worker/start_worker.sh
</code></pre>

<p>I've tried changing file permissions, but it does not alter the diff results.</p>

<p>What should I do?</p>

<p><strong>edit</strong>: this problem was caused/compounded by the fact that I was using git on an ubuntu VM guest with the repo hosted on the shared Windows 7 host. This was a recipe for disaster. The answers here seem reasonable to me, but I cannot award a tick because they answer a problem which I didn't have.</p>
","54","21161","<windows><git><diff><file-permissions>"
"14207414","1","How to show changed file name only with git log?","<p>Is it able to show changed <strong>file name</strong> only with <code>git log</code>?</p>
","46","27424","<git>"
"8746631","1","What happens when I do git pull origin master in the develop branch?","<p>Let's say I have a private topic branch called develop with 2 commits ahead of master.</p>

<p>What does <code>git pull origin master</code> do?</p>

<p>Pull everything from the remote master in the local develop and merge it? Pull everything in the local master branch and merge it?</p>

<p>And is there a way to update master from develop without <code>git checkout master</code> first?</p>
","32","16632","<git><pull>"
"21639437","1","Git flow release branches and tags - with or without ""v"" prefix","<p>I have seen multiple contradicting definitions on various git flow related websites. Is there an official recommendation or single source of truth?</p>

<p>Branches: <code>release/1.2.3</code> or <code>release/v1.2.3</code></p>

<p>Tags: <code>1.2.3</code> or <code>v1.2.3</code></p>
","44","10026","<git><naming-conventions><git-flow>"
"10728420","1","Editing the git commit message in GitHub","<p>Is there any way of online editing the commit message in <code>GitHub.com</code>, after submission?</p>

<p>From the command line, one can do</p>

<pre><code>git commit --amend -m ""New commit message""
</code></pre>

<p>as correctly suggested in <a href=""http://stackoverflow.com/questions/179123/how-do-i-edit-an-incorrect-commit-message-in-git"">another question</a>.</p>

<p>Trying <code>git pull</code> and then <code>git push</code> has worked (without any other commit having interfered in the mean time).</p>

<p>But can it be done via the <code>GitHub</code> website?</p>
","56","33987","<git><github><commit><post-commit>"
"7671461","1","How do I change the default location for git bash in windows?","<p>I am using Git in windows 7, and access my repos through git bash. How can I change the default location that git bash opens when I start it? </p>

<p>It's somewhat time consuming to navigate to htdocs, and then a specific folder. Is there a way to change the config file to have it open elsewhere? Or would it be possible to write a .sh file to do this?</p>

<p>Unfortunately git bash won't open my htdocs folder shortcut on my desktop, and it takes 5 cds to get to my desired directory.</p>
","60","50030","<git><windows-7>"
"10728956","1","What should I put in a meteor .gitignore file?","<p>I have a new meteor project. I'm guessing the <code>.meteor</code> dir has a combination of configuration files (needed) and temporary files (not needed). </p>

<p>So what's in your <code>.gitignore</code>?</p>
","116","14727","<git><meteor><cvs><gitignore>"
"6048425","1","Not currently on any branch + git commit + checkout when not in any branch. Did i loose my changes?","<p>I was not currently on any branch when I commited my changes.
I didn't really notice the message and checked out another branch.</p>

<p>How can I retrieve my changes?
I can't merge or checkout, since there is no branch to merge from.</p>
","32","21251","<git><commit>"
"5341077","1","Git doesn't show how many commits ahead of origin I am, and I want it to","<p>There are plenty of questions here about Git saying people are ahead of a remote branch by X commits, and they want it to stop.</p>

<p>I have the opposite problem.  I want Git to tell me how many commits ahead I am, but it doesn't.</p>

<p>When I created my remote bare repository first, then cloned from it, this worked.  In my current case I created the local repository first, then cloned it (bare) to the remote.</p>

<p>This set up my local repository as the remote for the bare repository.  But I removed that, and manually added the remote repository reference to my local.  Pushing works fine.  But I don't see the ""You are ahead by X commits"" message.  How can I get it?</p>
","46","4000","<git>"
"12470029","1","How to commit no change and new message?","<p>How can I make a new <code>commit</code> and create a new message if no changes are made to files?</p>

<p>Is this not possible since the commit's code (SHA ?) will be the same?</p>
","31","7915","<git><commit>"
"8839958","1","How does origin/HEAD get set?","<p>I have a branch set up to track a ref in origin.  <code>git checkout &lt;branchname&gt;</code> switches to that branch, and a <code>git status</code> will show me how far ahead or behind my branch is from origin, but I'm surprised that <code>origin/HEAD</code> still points at <code>origin/master</code>, and not <code>origin/&lt;branchname&gt;</code></p>

<p>So my question is, under what circumstances does origin/HEAD get moved?</p>

<p>EDIT:</p>

<p>I appreciate the answers about <em>how</em> to move origin/HEAD, but I'm interested in what ""organically"" moves it, outside of me explicitly telling it to do so.</p>

<p>For example, when I switch branches, git makes HEAD point at the branch I'm checking out, so I'm surprised that origin/HEAD doesn't move in the same manner.</p>
","68","55172","<git>"
"14230602","1","Git error when pushing: Object from LD_PRELOAD cannot be preloaded","<p>This has something that's just started happening recently, although I'm not sure what I could have done to trigger it.</p>

<p>Whenever I run a <code>git push</code> I get the following error:</p>

<pre><code>ERROR: ld.so: object '/lib/liblm.so' from LD_PRELOAD cannot be preloaded: ignored.
</code></pre>

<p>The push does procede after that and works correctly.</p>

<p>I've updated to the latest version of Git (via homebrew) and that didn't solve it.</p>

<p><strong>EDIT:</strong> Apologies, I wasn't very clear exactly what I was asking. I guess my question is two fold:</p>

<ul>
<li>Out of interest, what is causing the error?</li>
<li>How can I fix the error so it goes away? It doesn't seem to be causing any problems that I can see, but it's a bit irritating!</li>
</ul>
","33","10571","<git>"
"4209208","1","How to convert a readonly git clone from github to a forked one","<p>From time to time I encounter this issue.</p>

<p>Let's say that I did following to read the source code of rails because I am running into some issues.</p>

<pre><code>git clone git://github.com/rails/rails.git
</code></pre>

<p>During the research I tested something and now I have a fix I would like rails core team to take a look at. How do I push my changes to a forked version of rails.</p>

<p>Remember when I cloned, I did not clone a forked version but a read-only version.</p>

<p>It is not that I am opposed to forking. It is just that sometimes I think I am just going to browse then I want to add something.</p>
","74","6566","<git><github><git-push><git-remote>"
"10790232","1","Hanging at ""POST git-receive-pack (chunked)""","<p>I will be honest, I know very little about the internals of git.</p>

<p>I have staged and commit a 40mb directory, but when I come to push...</p>

<pre><code>$ git push --verbose --progress
Pushing to https://acron0@bitbucket.org/acron0/project.git
Password for 'https://acron0@bitbucket.org':
POST git-receive-pack (chunked)
</code></pre>

<p>It's been like this for 20 minutes. I am assuming it's hanging but...is there anything I can do to find out why?</p>
","38","23280","<git><version-control>"
"3729278","1","Git and hard links","<p>Since git does not recognize symbolic links that point to outside of the repository.</p>

<p>is there any problem using hard links ? </p>

<p>Git could break them ?
Can point me  to detailed information ?</p>
","41","16912","<linux><git><hyperlink><hardlink>"
"2927672","1","How can I get 'git status' to always use short format?","<p>I'd like <code>git status</code> to always use the short format:</p>

<pre><code>$ git status --short
 M file1
 M dir/file2
?? file_untracked3
?? dir/file_untracked4
</code></pre>

<p>There doesn't seem to exist a configuration option for this, and <code>git config --global alias.status ""status --short""</code> does not work. I haven't managed to create an alias in <em>zsh</em> either. </p>

<p>How can I make <code>git status</code> to use the short format by default?</p>
","35","4707","<git><zsh><status>"
"2959443","1","Why is the meaning of “ours” and “theirs” reversed with git-svn","<p>I use git-svn and I noticed that when I have to fix a merge conflict after performing a <code>git svn rebase</code>, the meaning of the <code>--ours</code> and <code>--theirs</code> options to e.g. <code>git checkout</code> is reversed. That is, if there's a conflict and I want to keep the version that came from the SVN server and throw away the changes I made locally, I have to use <code>ours</code>, when I would expect it to be <code>theirs</code>.</p>

<p>Why is that?</p>

<p>Example:</p>

<pre><code>mkdir test
cd test
svnadmin create svnrepo
svn co file://$PWD/svnrepo svnwc
cd svnwc
echo foo &gt; test.txt
svn add test.txt
svn ci -m 'svn commit 1'
cd ..
git svn clone file://$PWD/svnrepo gitwc
cd svnwc
echo bar &gt; test.txt 
svn ci -m 'svn commit 2'
cd ..
cd gitwc
echo baz &gt; test.txt 
git commit -a -m 'git commit 1'
git svn rebase

git checkout --ours test.txt
cat test.txt 
# shows ""bar"" but I expect ""baz""

git checkout --theirs test.txt
cat test.txt 
# shows ""baz"" but I expect ""bar""
</code></pre>
","79","19599","<git><git-svn>"
"3730527","1","Workflow for GitHub-based code review","<p>I'm considering using <a href=""http://github.com"">GitHub</a> as our primary tool for doing code review. With features like in-line commenting and compare view, it seems to have a lot of features that tools like Gerrit have on offer.</p>

<p>Has anyone else used GitHub for this? If so, what is your workflow? And what have your experiences been doing so, both positive and negative?</p>

<p>As I get some thoughts on this and sort out what will work best for us, I'll edit my question to share my own proposed workflow. </p>

<p><strong>EDITED with proposed workflow</strong></p>

<p>Step 0. <a href=""http://help.github.com/post-receive-hooks/"">Set up a post-receive hook</a> using the awesome <a href=""https://github.com/supermatter/reviewth.is"">reviewth.is</a>.</p>

<p>Then:</p>

<ol>
<li><p>Commit as usual with <code>commit -a -s</code>, but in the commit message append <code>#reviewthis @username</code>.</p></li>
<li><p>If the build fails, the review is skipped until the build is restored.</p></li>
<li><p>Reviewer comments on commit line-by-line or at the file level.</p></li>
<li><p>GitHub automagically notifies reviewee of comments.</p></li>
<li><p>Reviewer notifies reviewee by email when comments are completed with a review summary.</p></li>
<li><p>Reviewee replies to reviewer comments within GitHub, allowing the project access to history of code reviews.</p></li>
</ol>

<p><strong>My biggest problems are with Step 2 and Steps 4/5.</strong> Gerrit works nicely for not asking for reviews unless the build succeeds; I'd like a way to do this within GitHub. Steps 4/5 also have the potential to get annoying (multiple emails) and reduce the automatic nature of the review process (requiring an emailed summary).</p>

<p>We use Hudson as our build server, if that helps.</p>

<p><strong>Any thoughts on these problems would also be helpful.</strong></p>
","51","24929","<git><hudson><code-review><github>"
"6116548","1","How to tell git to use the correct identity (name and email) for a given project?","<p>I use my personal laptop for both work and personal projects and I would like to use my work email address for my commits at work (gitolite) and my personal email address for the rest (github).</p>

<p>I read about the following solutions which are all either global or temporary:</p>

<ul>
<li><code>git config --global user.email ""bob@example.com""</code></li>
<li><code>git config user.email ""bob@example.com""</code></li>
<li><code>git commit --author ""Bob &lt;bob@example.com&gt;""</code></li>
<li>setting one of the <code>GIT_AUTHOR_EMAIL</code>, <code>GIT_COMMITTER_EMAIL</code> or <code>EMAIL</code> environment variables</li>
</ul>

<p>One solution is to run manually a shell function that sets my environment to <em>work</em> or <em>personal</em>, but I am pretty sure that I will often forget to switch to the correct identity resulting in committing under the wrong identity.</p>

<p>Is there a way of binding a certain repository, project name, etc. to an identity (name, email)? What do people do?</p>
","47","37354","<git><github><gitolite><git-config>"
"1881594","1","use Winmerge inside of Git to file diff","<p>Is there a way to use Winmerge inside of git to do Diffs? </p>
","81","41000","<git><diff><msysgit><winmerge>"
"7731785","1","git stuck on Unpacking Objects phase","<p>I'm trying to do a <code>git pull</code> from a remote repository in github into a local machine...
but git gets stuck on 70% into the ""Unpacking objects"" phase , with no sign of going anywhere..(left it for several hours now with no change)</p>

<p>any suggestion on how o fix this issue?</p>

<p>is it possible to instruct git to only download the latest commit/version from the remote repository without all the Intermediate states?</p>
","41","10980","<git><github>"
"1029969","1","Why is my git repository so big?","<p>145M = .git/objects/pack/</p>

<p>I wrote a script to add up the sizes of differences of each commit and the commit before it going backwards from the tip of each branch. I get 129MB, which is without compression and without accounting for same files across branches and common history among branches.</p>

<p>Git takes all those things into account so I would expect much much smaller repository. So why is .git so big?</p>

<p>I've done:</p>

<pre><code>git fsck --full
git gc --prune=today --aggressive
git repack
</code></pre>

<p>To answer about how many files/commits, I have 19 branches about 40 files in each. 
287 commits, found using:</p>

<pre><code>git log --oneline --all|wc -l
</code></pre>

<p>It should not be taking 10's of megabytes to store information about this.</p>
","72","43171","<git>"
"6658313","1","Generate a git patch for a specific commit","<p>I need to write a script that create patches for a list of SHA1 commit numbers.</p>

<p>I tried using <code>git format-patch &lt;the SHA1&gt;</code>, but that generated a patch for each commit since that SHA1. After a few hundred patches were generated, I had to kill the process.</p>

<p>Is there a way to generate a patch only for the specific SHA1?</p>
","604","224942","<git>"
"14404704","1","How do I replace a git submodule with another repo?","<p>How do I replace a git submodule with a different git repo?</p>

<p>Specifically, I have a submodule:</p>

<ul>
<li>located at <code>./ExternalFrameworks/TestFramework</code> that points to a git repo <code>git@github.com:userA/TestFramework.git</code> </li>
<li>I'd like it to now point to <code>git@github.com:userB/TestFramework.git</code>.</li>
</ul>

<p>The problem is that when I delete the submodule with the method described <a href=""http://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule"">here</a>, then re-add it using the command     </p>

<pre><code>git submodule add git@github.com:userB/TestFramework.git
</code></pre>

<p>I get this error:</p>

<pre><code>A git directory for 'ExternalFrameworks/TestFramework' is found locally with remote(s):
  origin    git@github.com:userA/TestFramework.git
If you want to reuse this local git directory instead of cloning again from
  git@github.com:userB/TestFramework.git
use the '--force' option. If the local git directory is not the correct repo
or you are unsure what this means choose another name with the '--name' option.
</code></pre>
","71","22548","<git><git-submodules>"
"1030169","1","Easy way pull latest of all submodules","<p>We're using git submodules to manage a couple of large projects that have dependencies on many other libraries we've developed.    Each library is a separate repo brought into the dependant project as a submodule.  During development, we often want to just go grab the latest version of every dependant submodule.</p>

<p>Does git have a built in command to do this?  If not, how about Windows batch file or similar that can do it.</p>
","774","301995","<git><git-submodules>"
"8614112","1","How to close off a Git Branch?","<p>so i'm starting out using Git + GitHub.</p>

<p>In our little distributed team, each member is creating their own branch for each issue/requirement they are allocated.</p>

<ol>
<li><code>git branch Issue#1     &lt;-- create this branch</code></li>
<li><code>git checkout issue#1   &lt;-- switch over to this branch</code></li>
</ol>

<p>now <code>code code</code>, <code>commit</code>, <code>code</code>, <code>commit</code>, etc...</p>

<p>then <code>pull request</code>, <code>code-fixup</code>, <code>commit</code>, <code>code</code>, <code>commit</code> .. etc.</p>

<p>and FINALLY ... pull request is accepted.</p>

<p>Woot.</p>

<p>but .. now what? (......awkward......) </p>

<p>Does the person who created the branch on their local dev machine need to .. close off the branch? A suggestion was for the dev person to delete the branch `( ... -D ...) and then do a pull / refresh of the master .. which then will get all their branch code.</p>

<p>Hmmmmm... not sure - please help :)</p>
","68","46722","<git><github>"
"2127104","1","permission denied (publickey) Error using git on windows 7","<p>When I want to push to github with this command</p>

<pre><code>git push origin master
</code></pre>

<p>I got this</p>

<pre><code>Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>So, what's wrong?</p>
","45","46909","<git>"
"4297795","1","configure git so that ""git pull"" instead of ""git pull origin master""?","<p>Using <code>git pull</code> used to pull from the remote repository as expected - now, it's asking me to use <code>git pull origin master</code>. I don't quite understand the instructions it's giving me, saying I can add something to my configuration file:</p>

<pre><code>[branch ""master""]
remote = &lt;nickname&gt;
merge = &lt;remote-ref&gt;

[remote ""&lt;nickname&gt;""]
url = &lt;url&gt;
fetch = &lt;refspec&gt;
</code></pre>

<p>Right now my configuration file looks like</p>

<pre><code>[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
    ignorecase = true
[remote ""origin""]
    url = |redacted|
    fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>So I'm guessing I need to add</p>

<pre><code>[branch ""master""]
    remote = origin
    merge = ??
</code></pre>

<p>What does ""merge"" need as its argument? What's a remote-ref(erence?)? I tried looking at <a href=""http://git-scm.com/docs/git-config"">http://git-scm.com/docs/git-config</a> but it seems to be more about the command itself.</p>

<p>Thanks in advance!</p>
","44","46329","<git>"
"5401229","1","How do I execute several git commands in a batch file without terminating after the first command?","<p>I tried to put a series of GIT commands that I always use continuously togeter as batch files so that I don't repeat myself too much. For example, I have this batch file called <code>update_repo_branch.bat</code> to update a local repo and synch a branch with the remote branch:  </p>

<blockquote>
  <p>@echo off<br>
  if(%1) == () goto end<br>
  if(%2) == () goto end<br>
  cd %1<br>
  git checkout %2<br>
  git fetch origin<br>
  git merge oring/%2<br>
  :end</p>
</blockquote>

<p>Good to be lazy, but what I found is that <strong>when a GIT command is finished, it seems to send an exit flag back to terminate whatever is running</strong>. Therefore, using a batch file to exectute them all in one go simply doesn't work. Any idea how to work around it?</p>
","35","23342","<windows><git><batch-file>"
"1039817","1","git commit frequency","<p>Since i switched to git from svn i started make more commits every time i recompile and my tests pass i commit my work. In the end i end up committing function by function.</p>

<p>I also track some other projects using git like emacs,wordpress etc. I see that they do not commit that often. So i am wondering how ofthen do you commit?</p>
","51","9504","<git><version-control><commit>"
"4298960","1","git add -A, git commit in one command?","<p>Is there any way I can do</p>

<pre><code>git add -A
git commit -m ""commit message""
</code></pre>

<p>in one command? I seem to be doing those two commands a lot, and if Git had an option like <code>git commit -Am ""commit message""</code>, it would make life that much more convenient.</p>

<p><code>git commit</code> has the <code>-a</code> modifier, but it doesn't quite do the same as doing <code>git add -A</code> before committing. <code>git add -A</code> adds newly created files, but <code>git commit -am</code> does not. What does?</p>
","144","84619","<git>"
"4211604","1","show all tags in git log","<p>Why does git log --decorate not display more than one tag per commit?</p>

<p><strong>EDIT</strong>: Charles Bailey has come up with the answer (at least in my case)<br>
Essentially, I had one tag that pointed to another tag that pointed to the commit.  Because of this extra layer of indirection, the tag wasn't showing up in the log.  I'll have to fix this, wither by fixing our tagging script to tag correctly, or by some shell script voodoo to recursively follow tags.  Anyway, I'll leave this question up just for reference in case anyone wants it.  (I'm new to stack overflow, but I assume that is the correct protocol?)</p>

<p>... Original question follows ...</p>

<p>Backstory: We use git at work for source control, and we have a policy of always tagging a commit when we deploy.  (It's actually a script that does tags, and then pulls the tag on the server).  Since it's a web application with separate staging and production servers, we often tag a release for staging (for testing or whatever), and then later tag the same commit for production.</p>

<p>So it's actually very often that we have multiple tags on the same commit.  It would be very nice to be able to see this in the text log, but it doesn't seem to support it.  I'm currently working around the issue by manually checking the tag I'm looking for, or by firing up <code>gitk</code>.  While both of these solutions work, it seems to me that it's really weird for git log --decorate to only support one tag per commit by default.</p>

<p>I did some googling around, but didn't find much.  Am I missing something obvious?</p>

<p>P.S.  (I actually use a custom format string with %d, according to the man pages and some quick tests, it's equivalent to --decorate)</p>
","44","44804","<git>"
"15883416","1","Adding git branch on the Bash command prompt","<p>I tried adding the git branch I'm currently working on (checked-out) on the bash prompt without success..  (<strong>while keeping my current path which shows the active directory/file</strong> intact)
I have a .bashrc file on my home, but I also saw many people mentioning the .profile file.. </p>
","89","64910","<git><bash><ubuntu>"
"4389833","1","Unlink of file Should I try again?","<p>Something wrong going on with one of the files in my local git repository. When I'm trying to change the branch it says me that:</p>

<pre><code>Unlink of file 'templates/media/container.html' failed. Should I try again? (y/n)
</code></pre>

<p>What that could mean?</p>
","114","48744","<git>"
"16574625","1","How do I add files in Git to the path of a former submodule?","<p>I have a project that used to contain a submodule, at path <code>mysubmodule</code>.  I installed the latest Git from source (1.8.3-rc2) and ran <code>git submodule deinit mysubmodule</code>.  I then deleted the <code>.gitmodules</code> file and committed the change.  I also deleted the <code>.git</code> directory from the <code>mysubmodule</code> folder.</p>

<p>I'd like to commit the files from <code>mysubmodule</code> into my repo directly now, but git says there are no changes.  If I type <code>git add mysubmodule</code> it does nothing.  If I type <code>git add mysubmodule/file.txt</code> it says <code>fatal: Path 'mysubmodule/file.txt' is in submodule 'mysubmodule'</code></p>

<p>I've also discovered if you check out a fresh version of the repo, it creates a <code>mysubmodule</code> directory, despite having no <code>.gitmodules</code> file.  And running <code>git submodule init</code> gives you a <code>No submodule mapping found in .gitmodules for path 'mysubmodule'</code> error.</p>

<p>How do I fix this?</p>
","37","7291","<git><git-submodules>"
"14220929","1","Git clone with custom SSH using GIT_SSH error","<p>I am trying to clone a Git repo using a custom SSH command. I set the SSH command in the GIT_SSH environmental variably be running </p>

<p><code>export GIT_SSH=""/usr/bin/ssh -o StrictHostKeyChecking=no -i /home/me/my_private_key""</code>. </p>

<p>But when, after the previous command I run </p>

<p><code>git clone git@bitbucket.org:uname/test-git-repo.git</code>, I get the following weird error</p>

<pre><code>error: cannot run /usr/bin/ssh -o StrictHostKeyChecking=no -i /home/me/my_private_key
fatal: unable to fork
</code></pre>

<p>Can you please help me out solve this issue?</p>
","36","28790","<git><ssh><environment-variables><clone><git-clone>"
"1178389","1","Browse and display files in a git repo without cloning","<p>Is there a way to browse and display files in a git repo without cloning it first? I can do those in svn using the commands:</p>

<pre>
svn ls /path/to/repo 
svn cat /path/to/repo/file-in-repo
</pre>

<p>I can supposedly use git show but doing:</p>

<pre>
git show /path/to/repo
git show HEAD:/path/to/repo
</pre>

<p>result to </p>

<pre>
fatal: Not a git repository
</pre>
","69","82919","<git>"
"21651185","1","Git: Merge a Remote branch locally","<p>I've pulled all remote branches via <code>git fetch --all</code>. I can see the branch I'd like to merge via <code>git branch -a</code> as remotes/origin/branchname. Problem is its not accessible. I can't merge or checkout?</p>
","47","56330","<git><repository><branch><git-branch>"
"5519007","1","How do I make git merge's default be --no-ff --no-commit?","<p>Company policy is to use <code>--no-ff</code> for merge commits. I personally like to adjust merge log messages so I use <code>--no-commit</code>. Plus I like to actually compile and test before I let the commit go.</p>

<p>How do I make <code>--no-ff</code> and <code>--no-commit</code> the default for me for all branches?</p>

<p>(and I've learned in the years since asking this, I almost always am happy with the commit, so it is simpler to allow it to commit by default and so long as I amend or otherwise fix things up before doing a push things are all good...)</p>
","52","10852","<git><merge>"
"5599122","1","Problems with entering Git commit message with Vim","<p>OS: Windows</p>

<p>I write</p>

<pre><code>$ git commit
</code></pre>

<p>then </p>

<blockquote>
  <p>""# Please enter the commit message""</p>
</blockquote>

<p>I write some text, like</p>

<blockquote>
  <p>""Form validation added""</p>
</blockquote>

<p>Press Enter and not commited. Then i press Shift+Enter, Ctrl+Enter, Alt+Enter - still not commited.</p>

<p>I think its stupid trouble, but What i must to do?</p>
","81","75387","<git><commit><message>"
"4393527","1","Why might git log not show history for a moved file, and what can I do about it?","<p>I've renamed a couple of files using <code>git mv</code>, used <code>git stash</code>, had a quick look at HEAD (without changing it) then did <code>git stash pop</code> to get the whole lot back again. My moves had disappeared from the commit list, so I redid them with <code>git rm</code> and the commit message claimed git had spotted the rename was a rename. So I thought no more of it.</p>

<p>But now, post-commit, I can't get at the history of the moved files! Here's what git says about the commit in question:</p>

<pre><code>~/projects% git log --summary
commit de6e9fa2179ae17ec35a5c368d246f19da27f93a
Author: brone
Date:   Wed Dec 8 22:37:54 2010 +0000

    Moved R_DebugUI into runtime

 delete mode 100644 test/R_DebugUI_iOS.h
 delete mode 100644 test/R_DebugUI_iOS.m
 create mode 100644 system/runtime/src/R_DebugUI_iOS.h
 create mode 100644 system/runtime/src/R_DebugUI_iOS.m

 &lt;&lt;snip older commits&gt;&gt;
 ~/projects%
</code></pre>

<p>I'm now trying to get the history of one of these moved files, so I can look at an old version, but I don't get anything very useful:</p>

<pre><code>~/projects/system/runtime/src% git log --follow --find-copies-harder -M -C R_DebugUI_iOS.m
commit de6e9fa2179ae17ec35a5c368d246f19da27f93a
Author: brone
Date:   Wed Dec 8 22:37:54 2010 +0000

    Moved R_DebugUI into runtime
~/projects/system/runtime/src% 
</code></pre>

<p>(I've also tried it without <code>-M</code>, <code>-C</code> and <code>--find-copies-harder</code>, but to no avail.)</p>

<p>I can get its history under its old name, which stops at the point it was deleted from its old location:</p>

<pre><code>~/projects% git log --summary --follow --find-copies-harder -M -C -- test/R_DebugUI_iOS.m
commit de6e9fa2179ae17ec35a5c368d246f19da27f93a
Author: brone
Date:   Wed Dec 8 22:37:54 2010 +0000

    Moved R_DebugUI into runtime

 delete mode 100644 test/R_DebugUI_iOS.m

commit 32a22d53c27e260714f759ecb3d3864e38b2e87f
Author: brone
Date:   Tue Dec 7 23:52:51 2010 +0000

    Can set debug UI's alpha.

&lt;&lt;snip older commits&gt;&gt;
~/projects%
</code></pre>

<p>So I'm not completely stuck this time, but I wouldn't fancy having to do this kind of thing all the time. (I anticipate having a fair number of files that will move at least once in their life.)</p>

<p>Am I doing something wrong? The old copy of the file and the new copy are 98.8% the same (2 lines out of 166 changed). My understanding is that git should be able to track the file in this case, because it infers rename operations rather than storing them explicitly, and the files are similar enough that I believe it should consider them the same.</p>

<p>Is there anything I can do to fix this?</p>
","34","17099","<git><history><dvcs><rename><git-log>"
"16586642","1","git unpack error on push to gerrit","<p>On push of a new branch to a gerrit server we encounter the following error:</p>

<pre><code>de@roma:~/git-hate/www$ git push origin landingpage
Counting objects: 149, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (73/73), done.
Writing objects: 100% (111/111), 2.77 MiB, done.
Total 111 (delta 68), reused 80 (delta 38)
remote: Resolving deltas: 100% (68/68)
error: unpack failed: error Missing tree 30c4809ade0b4b0c81cb7f882450774862b82361
fatal: Unpack error, check server log
To ssh://user@git-server/repository
 ! [remote rejected] landingpage -&gt; landingpage (n/a (unpacker error))
error: failed to push some refs to 'ssh://user@git-server/repository'
</code></pre>

<p>We tried to copy the mentioned tree object to the remote git manually without success.</p>

<p>On gerrit side we get a stacktrace:</p>

<pre><code>[2013-05-16 13:43:42,753] ERROR com.google.gerrit.sshd.BaseCommand : Internal server error (user de account 1000000) during git-receive-pack '/repository'
com.google.gerrit.sshd.BaseCommand$Failure: fatal: Unpack error, check server log
        at com.google.gerrit.sshd.commands.Receive.runImpl(Receive.java:157)
        at com.google.gerrit.sshd.AbstractGitCommand.service(AbstractGitCommand.java:106)
        at com.google.gerrit.sshd.AbstractGitCommand.access$000(AbstractGitCommand.java:34)
        at com.google.gerrit.sshd.AbstractGitCommand$1.run(AbstractGitCommand.java:72)
        at com.google.gerrit.sshd.BaseCommand$TaskThunk.run(BaseCommand.java:430)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
        at java.util.concurrent.FutureTask$Sync.innerRun(FutureTask.java:334)
        at java.util.concurrent.FutureTask.run(FutureTask.java:166)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$101(ScheduledThreadPoolExecutor.java:165)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:266)
        at com.google.gerrit.server.git.WorkQueue$Task.run(WorkQueue.java:337)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1110)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:603)
        at java.lang.Thread.run(Thread.java:636)
Caused by: java.io.IOException: Unpack error on project ""repository"":
  AdvertiseRefsHook: org.eclipse.jgit.transport.AdvertiseRefsHookChain@7047125class org.eclipse.jgit.transport.AdvertiseRefsHookChain

        at com.google.gerrit.sshd.commands.Receive.runImpl(Receive.java:156)
        ... 13 more
Caused by: org.eclipse.jgit.errors.UnpackException: Exception while parsing pack stream
        at org.eclipse.jgit.transport.ReceivePack.service(ReceivePack.java:202)
        at org.eclipse.jgit.transport.ReceivePack.receive(ReceivePack.java:142)
        at com.google.gerrit.sshd.commands.Receive.runImpl(Receive.java:98)
        ... 13 more
Caused by: org.eclipse.jgit.errors.MissingObjectException: Missing tree 30c4809ade0b4b0c81cb7f882450774862b82361
        at org.eclipse.jgit.transport.BaseReceivePack.checkConnectivity(BaseReceivePack.java:996)
        at org.eclipse.jgit.transport.BaseReceivePack.receivePackAndCheckConnectivity(BaseReceivePack.java:756)
        at org.eclipse.jgit.transport.ReceivePack.service(ReceivePack.java:167)
        ... 15 more
</code></pre>

<p>Folks: any ideas what to do?</p>
","39","27385","<git><push><gerrit><unpack>"
"4485059","1","Git/Bash is extremely slow in Windows 7 x64","<p>I've been using Git on both Windows and Ubuntu during the development of a small project, frequently flipping back and forth between the two.  The issue I'm having is that Git/Bash consistently become slow.  When I say slow, I mean that running <code>cd</code> takes anywhere from 8-25 seconds, running <code>git</code> commands take from 5-20 seconds, and <code>ls</code> can take up to 30 seconds sometimes.  Needless to say, this is not fun, not to mention unproductive.  I know Git is slower on Windows, but this is ridiculous.</p>

<p>The one solution which has worked--temporarily--for me has been to disable my network connection (as suggested in <a href=""http://stackoverflow.com/questions/2835775/msysgit-bash-is-horrendously-slow-in-windows-7"">this answer</a>), start git, and then reconnect.  Sometimes it continues to run quickly for days after doing that, but the performance always degrades eventually.  I've trawled through the msysgit discussion group, SO, msysgit issue list, etc. on and off for weeks, but I haven't been able to turn up solutions which work.</p>

<p>So far, I've tried:</p>

<ul>
<li>Adding git &amp; project folders to virus scanner's exclusion list</li>
<li>Disabling my virus scanner completely (Kaspersky IS 2011)</li>
<li>Ensuring that Outlook is not running (Outlook 2007)</li>
<li>Shutting down all other applications</li>
<li>Running git as administrator</li>
<li>Disabling network connection, starting git, and keeping connection disabled</li>
<li>Disabling network connection, starting git, re-enabling connection (works only occasionally)</li>
<li>Running git gc</li>
<li>And combinations of the above</li>
</ul>

<p>I did read that a couple people had success disabling bash completion, but ideally I'd like to keep that active.  The version of msysgit is 1.7.3.1-preview20101002 &amp; the OS is Windows 7 x64.  Running the same things on Linux is, predictably, lightning fast.  I would use Linux exclusively, but I need to run stuff in Windows, too (certain apps, testing, etc.).</p>

<p>Has anyone encountered a similar issue?  If so, what was the underlying problem and what was the solution (if any)?</p>

<p>Edit: This extends beyond just the git repositories, but just for reference, the repos I've been using git with have been pretty small: ~4-50 files max.</p>
","235","62652","<git><bash><windows-7><msysgit><mingw32>"
"18502999","1","Git Extensions: Win32 error 487: Couldn't reserve space for cygwin's heap, Win32 error 0","<p><strong>Git Extensions:</strong> Everything was working fine until yesterday.</p>

<p>But suddenly I am get this error when I try to pull some repositories using <code>git extensions</code> </p>

<pre><code>C:\Program Files\Git\bin\git.exe pull --progress ""origin"" 
Done
    0 [main] us 0 init_cheap: VirtualAlloc pointer is null, Win32 error 487
AllocationBase 0x0, BaseAddress 0x68560000, RegionSize 0x390000, State 0x10000
C:\Program Files\Git\bin\sh.exe: *** Couldn't reserve space for cygwin's heap, Win32 error 0
</code></pre>

<p>It is happening for all the repositories which I have cloned. 
But, my <strong>git bash</strong> is working fine.
I don't have any idea what is going on. Any idea as to why this is happening?</p>
","246","83646","<git><cygwin><git-extensions>"
"14409420","1","Restart conflict resolution in a single file","<p>In a larger git merge with several conflicting files, I incorrectly marked a file as resolved (using <code>git add FILE</code> after some editing)</p>

<p>Now I'd like to undo my conflict resolution attempt and start over resolving that file.</p>

<p>How can I do that?</p>
","44","4978","<git><git-merge>"
"16757393","1","What is the difference between Git Bash and the GitHub for Windows shell?","<p>I'm referring to the shell that comes with GitHub for Windows, and Git Bash (which has a stand alone installer).</p>
","47","41781","<git><bash><github>"
"6839398","1","Find when a file was deleted in Git","<p>I have a Git repository with n commits.</p>

<p>I have a file that I need, and that used to be in the repository, and that I suddenly look for and think ""Oh! Where'd that file go?""</p>

<p>Is there a (series of) Git command(s) that will tell me that ""file really_needed.txt was deleted at commit n-13""?</p>

<p>In other words, without looking at every individual commit, and knowing that my Git repo has every change of every file, can I quickly find the last commit that HAS that file, so I can get it back?</p>
","357","72326","<git>"
"16758131","1","What's the difference between ""squash"" and ""fixup"" in Git/Git Extension?","<p>I've been using <strong>Git Extensions</strong> for a while now (it's awesome!) but I haven't found a simple answer to the following:</p>

<p>Sometimes, when typing a commit message, a make a typo. My friend showed me how to fix it the following way (in Git Extentions):</p>

<blockquote>
  <p>Right-Click on the commit > Advanced > Fixup commit</p>
</blockquote>

<p><img src=""http://i.stack.imgur.com/XK6Jt.png"" alt=""enter image description here""></p>

<p>Then I simply check the box ""Amend"" and rewrite my message and voila! My commit message is fixed.</p>

<p>However this other option ""Squash commit""... I have always wondered what it does?!</p>

<p><strong>My question is:</strong></p>

<p>Would someone simply explain me what is the exact difference between <strong>Squash commit</strong> and <strong>Fixup commit</strong> in <strong>Git/Git Extentions</strong>? They look kind of... <em>""similar""</em> to me:
<img src=""http://i.stack.imgur.com/qIHAX.png"" alt=""enter image description here"">
<img src=""http://i.stack.imgur.com/FFuPd.png"" alt=""enter image description here""></p>
","33","15811","<git><git-extensions><squash><fixup><difference>"
"27810419","1","'git push heroku master' is still asking for authentication","<p>I have executed:</p>

<pre><code>$ heroku login
</code></pre>

<p>But when I try to push, I'm still asked for authentication:</p>

<pre><code>$ git push heroku master
Username for 'https://git.heroku.com': &lt;email&gt;
Password for 'https://&lt;email&gt;@git.heroku.com':
</code></pre>

<p>Then I get a WARNING: Do not authenticate with username and password using Git.</p>

<p>I ran heroku login again and authenticated successfully but I still get the same failure.</p>

<p>I've checked the remote:</p>

<pre><code>$ git remote -v
heroku https://git@heroku.com/appname.git (fetch)
heroku https://git@heroku.com/appname.git (push)
</code></pre>

<p>I've also generated a new public key, passed it to Heroku, and validated it: <a href=""https://devcenter.heroku.com/articles/keys"">https://devcenter.heroku.com/articles/keys</a></p>

<p>I am on Windows 8, with Git 1.9.5.</p>
","35","7120","<git><authentication><heroku><heroku-toolbelt>"
"6842687","1","The remote end hung up unexpectedly while git cloning","<p>My <code>git</code> client repeatedly fails with the following error after trying to clone the repository for some time.</p>

<p>What could be the issue here? </p>

<p><strong>Note:</strong> I have registered my SSH key with the GIT hosting provider</p>

<pre><code>Receiving objects:  13% (1309/10065), 796.00 KiB | 6 KiB/s
fatal: The remote end hung up unexpectedly
</code></pre>
","96","95405","<git>"
"13685920","1","Install specific git commit with pip","<p>I'm developing a django app and I'm using pip to manage my requirements. How can I do to install a specific git's commit?</p>

<p>In my case I need to install this commit:
<a href=""https://github.com/aladagemre/django-notification/commit/2927346f4c513a217ac8ad076e494dd1adbf70e1"">https://github.com/aladagemre/django-notification/commit/2927346f4c513a217ac8ad076e494dd1adbf70e1</a></p>
","48","12369","<git><install><commit><pip>"
"4581740","1","Pull in changes from a Github fork","<p>Someone forked a Github project of mine and made some changes. How can I merge the changes back in to my upstream version? </p>

<p>Also, is it possible to pull in just a specific commit?</p>

<p>What I'm looking is if there is a way to pull a specific commit instead of the entire branch.</p>
","35","11847","<git><github><git-merge><git-commit>"
"4581832","1","Do I need Git to use Github in JetBrains IntelliJ IDEA?","<p>JetBrains IntelliJ IDEA has 2 plugins: <strong>Git</strong> and <strong>Github</strong>. Do I need to install Git from <a href=""http://git-scm.com"">http://git-scm.com</a> on my local windows machine in order to upload my files to GitHub through IntelliJ IDEA?</p>
","38","40619","<git><github><intellij-idea>"
"16773257","1","How can I stop and start TGitCache.exe gracefully","<p>I want to remove my local repository entirely, but TGitCache.exe keeps an open handle to the directory. I would like to shut down it gracefully, delete the folder and start it again.</p>
","35","8238","<git><tortoisegit>"
"11533199","1","Find commit where file was added","<p>Say I have a file <code>foo.js</code> that was committed some time ago. I would like to
simply find the commit where this file was first added.</p>

<p>After reading the answers and my own tinkering, this works for me</p>

<pre class=""lang-sh prettyprint-override""><code>git log --follow --diff-filter=A --find-renames=40% foo.js
</code></pre>
","63","13202","<git><commit><git-commit>"
"25931026","1","How can I rename a git stash?","<p>I have a stash with an incorrect name. I would like to fix the name so it's accurate. </p>

<p><strong>How can I rename a stash?</strong></p>
","60","4865","<git><git-stash>"
"21297970","1","Can I comment out a line on a .git/config file?","<p>I have a http.proxy line on my repository config file that I would like to 'turn on and off' easily without having to remember and type again the whole configuration every time I'm behind or free from this proxied connection.</p>

<p>Another possibility would be to use this repository config file when I'm behind the proxy and when not, use a global/local config file without any proxy setup.</p>
","52","8338","<git><proxy><config>"
"7031729","1","Publish to S3 using Git?","<p>Does anyone know how to do this? So far I haven't been able to find anything useful via Google.</p>

<p>I'd really like to setup a local repo and use <code>git push</code> to publish it to S3, the idea being to have local version control over assets but remote storage on S3.</p>

<p>Can this be done, and if so, how?</p>
","59","27369","<git><amazon-s3>"
"4689844","1","What is git actually doing when it says it is ""resolving deltas""?","<p>During the first clone of a repository, git first receives the objects (which is obvious enough), and then spends about the same amount of time ""resolving deltas"".  What's actually happening during this phase of the clone?</p>
","76","16860","<git>"
"8550586","1","How to push from one branch to another and checkout?","<p>I am trying to implement the setup outlined here <a href=""http://toroid.org/ams/git-website-howto"">http://toroid.org/ams/git-website-howto</a> but with one difference. On my local repository I want to use a branch different to master.</p>

<p>So when I go to push the initial files rather than push the master files I want to push the files from my demo branch to the master branch on the remote repository. For example:</p>

<pre><code>git push web +master:refs/heads/demo
</code></pre>

<p>But when I do this I get the following error after it completes uploading all of the files:</p>

<pre><code>remote: fatal: You are on a branch yet to be born
</code></pre>

<p>Is it possible to do what I am trying to do with this setup?</p>
","35","18026","<git>"
"3895453","1","How do I make a Git commit in the past?","<p>I'm converting everything over to Git for my own personal use and I found some old versions of a file already in the repository.  How do I commit it to the history in the correct order according the the file's ""date modified"" so I have an accurate history of the file? </p>

<p>I was told something like this would work:</p>

<pre><code>git filter-branch --env-filter=""GIT_AUTHOR_DATE=... --index-filter ""git commit path/to/file --date "" --tag-name-filter cat -- --all  
</code></pre>
","94","32643","<git><version-control><repository><git-commit>"
"10039747","1","How to view file diff in git before commit","<p>This often happens to me: </p>

<p>I'm working on a couple related changes at the same time over the course of a day or two, and when it's time to commit, I end up forgetting what changed in a specific file. (This is just a personal git repo, so I'm ok with having more than one update in a commit.) </p>

<p>Is there any way to preview the changes between my local file, which is about to be checked in, and the last commit for that file? </p>

<p>Something like:</p>

<pre><code>git diff --changed /myfile.txt
</code></pre>

<p>And it would print out something like:</p>

<pre><code>line 23
  (last commit): var = 2+2
  (current):     var = myfunction() + 2

line 149
  (last commit): return var
  (current):     return var / 7
</code></pre>

<p>This way, I could quickly see what I had done in that file since it was last checked in.</p>
","83","46112","<git>"
"6089294","1","Why do I need to do `--set-upstream` all the time?","<p>I create a new branch in Git:</p>

<pre><code>git branch my_branch
</code></pre>

<p>Push it:</p>

<pre><code>git push origin my_branch
</code></pre>

<p>Now say someone made some changes on the server and I want to pull from <code>origin/my_branch</code>. I do:</p>

<pre><code>git pull
</code></pre>

<p>But I get:</p>

<pre><code>You asked me to pull without telling me which branch you
want to merge with, and 'branch.my_branch.merge' in
your configuration file does not tell me, either. Please
specify which branch you want to use on the command line and
try again (e.g. 'git pull &lt;repository&gt; &lt;refspec&gt;').
See git-pull(1) for details.

If you often merge with the same branch, you may want to
use something like the following in your configuration file:

    [branch ""my_branch""]
    remote = &lt;nickname&gt;
    merge = &lt;remote-ref&gt;

    [remote ""&lt;nickname&gt;""]
    url = &lt;url&gt;
    fetch = &lt;refspec&gt;

See git-config(1) for details.
</code></pre>

<p>I learned that I can make it work with:</p>

<pre><code>git branch --set-upstream my_branch origin/my_branch
</code></pre>

<p>But why do I need to do this for every branch I create? Isn't it obvious that if I push <code>my_branch</code> into <code>origin/my_branch</code>, then I would want to pull <code>origin/my_branch</code> into <code>my_branch</code>? How can I make this the default behavior?</p>
","548","299855","<git><git-branch>"
"3703159","1","Git remote/shared pre-commit hook","<p>With a one official repository as the remote, and multiple local repositories cloned from it, can a pre-commit hook be scripted on that main repository and be enforced on all clones of it?</p>
","50","16062","<git><githooks>"
"6276752","1","Can I split an already split hunk with git?","<p>I've recently discovered git patch option to the add command, and I must say it really is a fantastic feature.
I also discovered that a large hunk could be split into smaller hunk by hitting the s key, which adds to the precision of the commit.
But what if I want even more precision, if the split hunk is not small enough?</p>

<p>For example, consider this already split hunk:</p>

<pre><code>@@ -34,12 +34,7 @@
   width: 440px;
 }

-/*#field_teacher_id {
-  display: block;
-} */
-
-form.table-form #field_teacher + label,
-form.table-form #field_producer_distributor + label {
+#user-register form.table-form .field-type-checkbox label {
   width: 300px;
 }
</code></pre>

<p>How can I add the CSS comment removal only to the next commit ? The 's' option is not available anymore!</p>
","81","10418","<git><split><add><patch>"
"1947430","1","Git remove directory","<p>I've got a repository on GitHub (http://github.com/hrickards/PHP-Crypto) for a little project me and a couple of others are working on. My development environment is Aptana Studio, and I use the EGit plugin as Aptana is basically Eclipse underneath. Today the designer sent the HTML and CSS for the website with the images in a folder named img. Previously the images were in a folder called images. Thinking nothing of it and being too lazy to update the CSS and HTML, I simply kept the images in the img directory and commited to Git. However, the GitHub web interface shows both the img and images directories, with the images directory being empty. I've tried deleting the images directory with <code>git rm -r images</code> and <code>git rm images</code>, and even <code>mkdir images; git add images; git rm -r images</code> but whatever I try I get the same result:
<code>fatal: pathspec 'images' did not match any files</code>.</p>

<p>Has anyone got any advice on how to remove images, or am I misunderstanding Git or something?</p>
","37","50558","<git><version-control><github><dvcs>"
"8554776","1","What option should be used restrict the git diff to a given set of file extensions?","<p>Is there an option to restrict <code>git diff</code> to a given set of file extensions?</p>
","49","10523","<git><file-extension>"
"883452","1","Git interoperability with a Mercurial Repository","<p>I use GIT on a Mac. Enough said. I have the tools, I have the experience. And I want to continue to use it. No wars here...</p>

<p>The problem is always with interoperability. Most people use SVN, which is great for me. Git SVN works out of the box, and is a no frills solution. People can continue happily use SVN and I don't lose my workflow and neither my tools.</p>

<p>Now... Some guys come along with Mercurial. Fine for them: they have their reasons. But I can't find any GIT HG out-of-the-box. I don't want to switch to HG, but I still need to interoperate with their repository.</p>

<p>Any of you guys know a simple solution for this?</p>
","168","35600","<git><version-control><mercurial><interop><dvcs>"
"6279082","1","git push to remote branch","<p>Folks,</p>

<p>I had cloned a repo. I created a branch out of it to work on a feature by issuing the following command:</p>

<p><code>git branch fix78</code></p>

<p>then I worked on that branch by </p>

<p><code>git checkout fix78</code></p>

<p>I continued to make commits to this local branch. Now I wanted to push this to the repo and hence I issued the following command:</p>

<p><code>git push origin master:fix78</code></p>

<p>I viewed the repo from a web browser and saw that a new branch called fix78 was created on the repo. But it did not have any of my commits that I had made.</p>

<p>What am I doing wrong here? This is what I am trying to achieve:</p>

<p>There is a repo(master(trunk in the SVN lingo)), now when I am working on a feature I want to create a local branch of it and then I also want to check in this branch to the repo(so that other team members can see what I am working on), then I want my local branch to be in sync with this remote branch that I create. </p>

<p>Any help/feedback would be totally awesome.</p>

<p>Thanks. </p>
","43","57204","<git><version-control><git-branch><git-push><git-remote>"
"10067848","1","Remove folder and its contents from git/GitHub's history","<p>I was working on a repository on my GitHub account and this is a problem I stumbled upon.</p>

<ul>
<li>Node.js project with a folder with a few npm packages installed</li>
<li>The packages were in <code>node_modules</code> folder</li>
<li>Added that folder to git repository and pushed the code to github (wasn't thinking about the npm part at that time)</li>
<li>Realized that you don't really need that folder to be a part of the code</li>
<li>Deleted that folder, pushed it </li>
</ul>

<p>At that instance, the size of the total git repo was around <strong>6MB</strong> where the actual code (all except that folder) was only around <strong>300 KB</strong>. </p>

<p>Now what I am looking for in the end is a way to get rid of details of that package folder from git's history so if someone clones it, they don't have to download 6mb worth of history where the only actual files they will be getting as of the last commit would be 300KB.</p>

<p>I looked up possible solutions for this and tried these 2 methods</p>

<ul>
<li><a href=""http://stackoverflow.com/questions/2164581/remove-file-from-git-repository-history"">Remove file from git repository (history)</a></li>
<li><a href=""http://help.github.com/remove-sensitive-data/"">http://help.github.com/remove-sensitive-data/</a></li>
<li><a href=""https://gist.github.com/1588371"">https://gist.github.com/1588371</a></li>
</ul>

<p>The Gist seemed like it worked where after running the script, it showed that it got rid of that folder and after that it showed that 50 different commits were modified. But it didn't let me push that code. When I tried to push it, it said <code>Branch up to date</code> but showed 50 commits were modified upon a <code>git status</code>. The other 2 methods didn't help either.</p>

<p>Now even though it showed that it got rid of that folder's history, when I checked the size of that repo on my localhost, it was still around 6MB. (I also deleted the <code>refs/original</code>folder but didn't see the change in the size of the repo).</p>

<p>What I am looking to clarify is, if there's a way to get rid of not only the commit history (which is the only thing I think happened) but also those files git is keeping assuming one wants to rollback.</p>

<p>Lets say a solution is presented for this and is applied on my localhost but cant be reproduced to that GitHub repo, is it possible to clone that repo, rollback to the first commit perform the trick and push it (or does that mean that git will still have a history of all those commits? - aka. 6MB). </p>

<p>My end goal here is to basically find the best way to get rid of the folder contents from git so that a user doesn't have to download 6MB worth of stuff and still possibly have the other commits that never touched the modules folder (that's pretty much all of them) in git's history.</p>

<p>How can I do this?</p>
","83","27849","<git><github><rebase><git-rebase>"
"3921153","1","Git: File Rename","<p>I wanted to rename a folder from ""<code>Frameworks</code>"" to ""<code>frameworks</code>"", but git would not let me add the new lowercase name. I guess it treats filenames case insensitive, does it?</p>

<p>A <code>git add frameworks/ -f</code> didn't help</p>
","50","20810","<osx><git><case-insensitive>"
"3899627","1","Create Git branch with current changes","<p>I started working on my master branch thinking that my task would be easy. After a while I realised it would take more work and I want to do all this work in a new branch.  How can I create a new branch and take all these changes with me without dirtying master?</p>
","336","106801","<git><git-branch>"
"3921409","1","How to know if there is a git rebase in progress?","<p>When I start a <code>git rebase -i</code>, I can issue commands like <code>git rebase --continue</code>, or <code>git rebase --abort</code>. Those commands only work if a rebase is in progress.</p>

<p>How can I know if there is a rebase in progress?</p>

<p>(I would greatly appreciate some details on how rebase works internally; what does git do to a repo that gives it the ""rebase in progress"" status,?)</p>
","43","10770","<git><git-rebase>"
"6167905","1","git clone through ssh","<p>I have a project on which I created a git repository:</p>

<pre><code>$ cd myproject  
$ git init  
$ git add .  
$ git commit  
</code></pre>

<p>I the wanted to create a bare clone on another machine:</p>

<pre><code>$ cd ..  
$ git clone --bare myproject  ssh://user@server:/GitRepos/myproject.git  
</code></pre>

<p>I executed the clone but did not print any answer.
I logged on to the server machine and tried to see how the files are stored. The path /GitRepos was empty, so I decided to do the clone again:  </p>

<pre><code>$ git clone --bare myproject  ssh://user@server:/GitRepos/myproject.git
</code></pre>

<p>This time the answer was :</p>

<blockquote>
  <p>fatal: destination path 'ssh://user@server:/GitRepos/myproject.git' already exists and is not an empty directory.</p>
</blockquote>

<p>But I saw that the path was empty.<br>
What's going on here ?</p>
","81","206788","<git><git-clone>"
"920165","1","Howto extract a git subdirectory and make a submodule out of it?","<p>I started a project some months ago and stored everything within a main directory.
In my main directory ""Project"" there are several subdirectories containing different things:
Project/paper contains a document written in LaTeX
Project/sourcecode/RailsApp contains my rails app. </p>

<p>""Project"" is GITified and there have been a lot of commits in both ""paper"" and ""RailsApp"" directory. Now, as I'd like to use cruisecontrol.rb for my ""RailsApp"" I wonder if there is a way to make a submodule out of ""RailsApp"" without losing the history.</p>

<p>Any suggestions?</p>
","97","23283","<git><git-submodules>"
"3921708","1","How do I squash two non-consecutive commits?","<p>I'm a bit new to the whole rebasing feature within git.  Let's say that I made the following commits:</p>

<pre><code>A -&gt; B -&gt; C -&gt; D
</code></pre>

<p>Afterwards, I realize that <code>D</code> contains a fix which depends on some new code added in <code>A</code>, and that these commits belong together.  How do I squash <code>A</code> &amp; <code>D</code> together and leave <code>B</code> &amp; <code>C</code> alone?</p>
","48","4951","<git><git-rebase>"
"2950107","1","Git Push into Production (FTP)","<p>I would like to know if there is an easy way to push a GIT repository into production (on a FTP server) ?
Thanks</p>
","101","65040","<git><ftp><push>"
"17404316","1","The following untracked working tree files would be overwritten by merge, but I don't care","<p>on my branch I had some files in .gitignore</p>

<p>on a different branch those files are not.</p>

<p>I want to merge the different branch into mine, and I don't care if those files are no longer ignored or not</p>

<p>unfortunately I get this: ""The following untracked working tree files would be overwritten by merge""</p>

<p>how would I modify my pull command to overwrite those files, without me having to find, move or delete those files myself</p>
","46","110752","<git><merge><git-merge><git-fetch>"
"2183900","1","How do I prevent git diff from using a pager?","<p>Is there a command line switch to pass to <code>git diff</code> and other commands that use the <code>less</code> pager by default?</p>

<p>I know I can pipe it to cat, but that removes all the syntax highlighting.</p>

<p>I know I can set the pager in the global .gitconfig to cat by <code>GITPAGER=cat</code> (or something like that); but I want to have pager sometimes (depending on the size of the diff).</p>

<p>But, I would prefer a command line switch if there is one; and I am not able to find one, going through the man pages.</p>
","299","45158","<git>"
"6168736","1","How do I tell Git to ignore a specific filename only in the repository's top level?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/3637660/how-to-exclude-file-only-from-root-folder-in-git"">How to exclude file only from root folder in GIT</a>  </p>
</blockquote>



<p>For a specific JavaScript project, I am using the <a href=""http://www.ritlabs.com/en/products/tinyweb/"">TinyWeb HTTP Server</a> for local testing (to work around a specific security limitation that applies to file URLs). That program requires I have an <code>index.html</code> file in the root directory, but I do not want to commit that file to my Git repository.</p>

<p>How can I stop Git from bugging me about this ""untracked file"" on every commit? I do want to commit all <code>index.html</code> files located in subdirectories.</p>
","37","11086","<git><gitignore>"
"17626944","1","Heroku 'Permission denied (publickey) fatal: Could not read from remote repository' woes","<p>I've searched around for many hours on end looking to a solution to my seemingly easy-to-fix problem. It's not that my search turned up nothing, it's that my search turned up so many different solutions -none of which have worked.</p>

<p>Anyways, I am simply unable to push, pull, or fetch from my Heroku repository from my Mac. Every attempt gives me (as if it's mocking me) the following error:</p>

<blockquote>
  <p>'Permission denied (publickey). fatal: Could not read from remote
  repository.'</p>
</blockquote>

<p>I've tried (and re-tried) to fix it in many different ways. As I've said, I've spent a good chunk of the last two days searching around for an answer. Here are some of the things I've tried:</p>

<ul>
<li>heroku keys:clear followed by heroku keys:add</li>
<li>Regenerating an ssh key on my own with 'ssh-keygen -t rsa'</li>
<li>Clearing out my .ssh directory, followed by heroku keys:clear, followed by generating an ssh key</li>
<li>Deleting my app on heroku and recreating one (fortunately not much was on there)</li>
</ul>

<p>I can fetch from my GitHub repository fine, so I know it's not network connectivity (pinging heroku also works). </p>

<p>As a makeshift solution (that I hope doesn't turn into a permanent one), I've logged in to my Ubuntu Amazon AWS ec2 instance. Pulling and pushing to and from Heroku works perfectly. For this reason, I still feel as if the problem lies with the ssh key on my Mac. Both keys show up under my Heroku account. Does the email address at the end of the key matter?</p>

<p>EDIT: I can push and pull from GitHub fine (I'm not using ssh, however), so why not Heroku?</p>

<p>At this point I'm willing to try anything. Thanks!</p>
","118","83402","<git><heroku><ssh><repository><public-key>"
"15915430","1","What exactly does git's ""rebase --preserve-merges"" do (and why?)","<p>Git's <a href=""https://git-scm.com/docs/git-rebase"">documentation for the <code>rebase</code> command</a> is quite brief:</p>

<pre><code>--preserve-merges
    Instead of ignoring merges, try to recreate them.

This uses the --interactive machinery internally, but combining it
with the --interactive option explicitly is generally not a good idea
unless you know what you are doing (see BUGS below).
</code></pre>

<p>So what actually happens when you use <code>--preserve-merges</code>? How does it differ from the default behavior (without that flag)? What does it mean to ""recreate"" a merge, etc.</p>
","138","25616","<git><git-rebase>"
"984707","1","What are the file limits in Git (number and size)?","<p>Does anyone know what are the Git limits for number of files and size of files?</p>
","136","68062","<git>"
"6697557","1","Is there a way to get download/clone statistics of a git repository?","<p>Is there any way to get how many times a git repository has been cloned or downloaded from github? 
I was just curious as I found other statistics such as commit times lines of codes cam be generated using: <a href=""http://gitstats.sourceforge.net/"">http://gitstats.sourceforge.net/</a> but I did not find how to check for clone/download count. </p>
","48","12765","<git><github>"
"18128863","1","Should ""node_modules"" folder be included in the git repository","<p>I'm wondering if we should be tracking node_modules in our repo or doing an npm install when checking out the code?</p>
","67","11060","<git><node.js><version-control><npm>"
"3900805","1","git command to move a folder inside another","<p>I have created a folder <code>common</code> with a bunch of source files and folders.</p>

<p>Now I want to move the <code>common</code> folder into the <code>include</code> folder so it looks like <code>include/common</code></p>

<p>I tried these:</p>

<p>1) <code>git add include</code></p>

<p>2) <code>git mv common/ include/</code></p>

<p>but it fails with this error</p>

<pre><code>fatal: bad source, source=myrepo/common, destination=myrepo/include
</code></pre>

<p>3) I tried git mv common/ include/common but I get the same error</p>

<p>Any idea how to achieve this?</p>
","105","52176","<git><dvcs>"
"2085402","1","What does git update-server-info do?","<p>What does git update-server-info do?  How do I know if I need it? The manual says:</p>

<blockquote>
  <p>A dumb server that does not do on-the-fly pack generations must have some auxiliary information files in $GIT_DIR/info and $GIT_OBJECT_DIRECTORY/info directories to help clients discover what references and packs the server has. This command generates such auxiliary files.</p>
</blockquote>

<p>How do I know if my server is dumb, and whether it does or does not do ""on-the-fly pack generations"", and whether it ""must have some auxiliary information files""?</p>

<p>I am pushing a web app via ssh to a bare repository, then pulling from that bare repository into the web root.</p>
","35","23012","<git><ssh>"
"2985074","1","Configure Git to use Plink","<p>I'm trying to configure Git to use Plink. It worked for me many times before. Now, for some reason, this option isn't available to me (it is disabled):</p>

<p><img src=""http://i.stack.imgur.com/oESrx.png"" alt=""Git Setup Plink option screenshot""></p>

<p>I tried uninstalling and reinstalling Git a hundred times. Nothing. I can't get to this option enabled.</p>
","32","24511","<git><msysgit><plink>"
"987142","1","Make .gitignore ignore everything except a few files","<p>I understand that a .gitignore file cloaks specified files from Git's version
control. I have a project (LaTeX) that generates lots of extra files (.auth,
.dvi, .pdf, logs, etc) as it runs, but I don't want those to be tracked.</p>

<p>I'm aware that I could (maybe should) make it so all those files are put in an
separate subfolder in the project, since I could then just ignore the folder.</p>

<p>However, is there any feasible way to keep the output files in the root of the
project tree and use .gitignore to ignore everything except the files I'm
tracking with Git? Something like</p>

<pre class=""lang-sh prettyprint-override""><code># Ignore everything
*

# But not these files...
script.pl
template.latex
# etc...
</code></pre>
","633","134178","<git><gitignore>"
"2186628","1","Textbased issue-tracker/todo list for Git?","<p>I've been managing all of my todo-lists as</p>

<pre><code>~/git-repo/todo
</code></pre>

<p>which is kept under git. THen I add/delete files from the todo list, and have git autocommit all changes. However, I feel there should be more powerful tools.</p>

<p>Besides ""cil"" and git-issues [neither of which I've tried], what tools are available?</p>

<p>PS I want something that's entirely text/command line based.</p>

<p>Thanks!</p>
","62","16416","<git><todo>"
"991801","1","Git Ignores and Maven targets","<p>Anyone know if it is possible to ignore all the instances of a particular directory in a file structure managed by git. </p>

<p>I'm looking to exclude all the 'target' folders in a maven project with a number of submodules. I know I can explicitly exclude each of them in a top level .gitignore, but I'd really like to be able to specify a pattern like **/target/* there to have it automatically ignore the instance in sub directories?</p>

<p>Is this possible?</p>
","63","57156","<git><maven-2><version-control><gitignore>"
"6396349","1","Eclipse + EGit: clone project into workspace","<p>I'm a little confused about how EGit workes.</p>

<p>I have an existing git repository on Github and want to clone it into my workspace. 
My goal is to have the local repository directly stored inside my workspace-folder but I don't get it working with EGit.</p>

<p>When I want to clone the github repo with EGit, I have to choose a directory as destination. The suggested directory is in my homedir (not in my workspace). When I choose this directory I can see the project in Eclipse but it is not stored in my workspace-folder. Instead it is stored in my home dir. </p>

<p>When I choose a directory directly inside my workspace, later when it comes to import the project it says that there is already a directory with this name. </p>

<p>I don't know how to solve this. I thought this would be a common scenario. In the past I have used hgEclipse (Mercurial) and it was working exactly the way I thought it should be so I'm confused EGit doesn't. Maybe I misunderstood something.</p>

<p>Probably this is important to know: In the github repository there are no .project or .settings files from eclipse. I have them on my .gitignore and so in the import-dialog I have to choose ""Import as General Project"" and not ""Import Existing Projects"". But I think this shouldn't matter?</p>

<p>I hope someone can help me or explain me why the EGit plugin doesn't clone the repository directly into the workspace by default. </p>

<p>My Eclipseversion is 3.6, I have installed EGit over the markedplace.</p>
","55","39676","<eclipse><git><github><egit>"
"4024095","1","Push a commit in two branches with Git","<p>how do I push a commit in two branches? </p>

<p>I can't use ""git push"", because then it pushes to three branches, and i just want the commit in two of them.. </p>

<p>Ive tried a ""git merge HEAD --commit id from branch A--"" in branch B, but then it takes everything from branch A and merges with branch B. I just want the last commit and not everything else merged with branch B.</p>

<p>Anyone know what to do?</p>
","31","14110","<git><branch><push>"
"2190409","1","What's the difference between `git add .` and `git add -u`?","<p>I was assuming that both work in the same way. Both add every file onto index. But I seem wrong.</p>

<ul>
<li>What's the difference between <code>git add .</code> and <code>git add -u</code>?</li>
</ul>
","35","13353","<git><git-add>"
"4025708","1","git: can't push (unpacker error) related to permission issues","<p>I have this problem when i try to push in git:</p>

<pre><code>error: insufficient permission for adding an object to repository database ./objects

fatal: failed to write object
error: unpack failed: unpack-objects abnormal exit
To ssh://&lt;repo url&gt;/&lt;repo dir&gt;
 ! [remote rejected] master -&gt; master (n/a (unpacker error))
error: failed to push some refs to 'ssh://&lt;repo url&gt;/&lt;repo dir&gt;'
</code></pre>

<p>I've had this before sporadically and we've always had to solve it by each user sshing to the repo and setting group permissions on all the files therein with </p>

<pre><code>chmod -R g+w *
</code></pre>

<p>This was never a satisfactory solution and now it's bitten us in the arse as one of the guys is away and no-one knows his repo user's password.  So, i'm trying to solve it properly.  </p>

<p>The error seems to occur when someone tries to push up a change that will alter a repo dir that is owned by another user (hence setting the group write option above).  I've done a bit of googling around this and have found a couple of solutions being discussed (neither of which worked for me)</p>

<p>1) make sure that the group that the repo dirs are shared with is each users' primary group (i believe that is the case already: each user has only one group so that must be their primary group, right?)</p>

<p>2) git repo core.sharedRepository setting, as detailed here: <a href=""http://stackoverflow.com/questions/398203/git-cant-push-from-one-computer#answer-399133"">http://stackoverflow.com/questions/398203/git-cant-push-from-one-computer#answer-399133</a>
I changed this but it didn't make any difference.  Do i need to reload the config or something to actually effect the change?</p>

<p>Here's what my repo config looks like atm:</p>

<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = true
        sharedRepository = all
[receive]
        denyNonFastForwards = True
</code></pre>

<p>Grateful for any advice or suggestions!
max</p>
","35","57492","<linux><git>"
"4025916","1","Git undo local branch delete","<p>I just deleted the wrong branch with some experimental changes I need with <code>git branch -D branchName</code>.</p>

<p>How do I recover the branch?</p>
","172","35286","<git><branch><git-branch>"
"8961334","1","How to change folder with git bash?","<p>My default git folder is C:\Users\username.git</p>

<p>But I want to go into c:/project</p>

<p>What command do I need to get into that?</p>
","109","120896","<git><git-bash>"
"8558597","1","What does the “@@…@@” meta line with at signs in svn diff or git diff mean?","<p>When I use <code>svn diff</code> or <code>git diff</code> it shows lines like:</p>

<pre><code>@@ -1,5 +1,9 @@
</code></pre>

<p>What do they mean?</p>
","42","3899","<git><svn><diff>"
"10189356","1","How to add screenshot to READMEs in github repository ?","<p>Is it possible to place a screenshot in README file in a GitHub repository? What's the syntax ?</p>
","275","75694","<git><github><markdown>"
"10189745","1","How to reset or change the passphrase for a GitHub SSH key?","<p>I have forgot my passphrase in Git.</p>

<p>How to reset this. I found two solutions on Stack Overflow. But I want to know what is the process to follow to reset it or to get it.</p>
","38","53611","<git><github><ssh><ssh-keys><passphrase>"
"2227062","1","How do I move a Git branch out into its own repository?","<p>I have a branch that I'd like to move into a separate Git repository, and ideally keep that branch's history in the process.  So far I've been looking at <code>git filter-branch</code>, but I can't make out whether it can do what I want to do.</p>

<p>How do I extract a Git branch out into its own repository?</p>
","97","18694","<git><branch><extract>"
"4061481","1","How do you push a Git tag to a branch using a refspec?","<p>I want to force push, for example, my tag <code>1.0.0</code> to my remote <code>master</code> branch.</p>

<p>I'm now doing the following:</p>

<pre><code>git push production +1.0.0:master
</code></pre>

<p><strong><em>I want to force the push</em></strong>, because all I care about is that the code inside the <code>1.0.0</code> tag is pushed to the <code>master</code> branch on the remote repository.</p>

<p>What am I doing wrong?</p>

<h3>Update #1</h3>

<p>When I SSH into my server where my <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> repository is and execute <code>git branch -l</code>, I don't see the <code>master</code> branch listed either.</p>

<h3>Update #2</h3>

<p>After running <code>git tag -l</code> from inside the remote Git repository, I see that <code>master</code> is listed, meaning that when I ran the following:</p>

<pre><code>git push production 1.0.0:master
</code></pre>

<p>It actually pushed the tag and <strong><em>created a tag named</em></strong> <code>master</code> rather than <strong><em>a new branch</em></strong>.</p>

<p>I want to basically push the <strong><em>contents</em></strong> of the tag <code>1.0.0</code> into the <code>master</code> branch of the remote Git repository.</p>
","208","128673","<git><git-push><git-tag>"
"10827160","1","Undo a git stash","<p>I just did a stash in a project that I haven't commit. Is there a way to go back to the state before I stashed? How could I do this? I've closed the terminal and my laptop is shut down. I've done some researched and it seems there's no way to do this.</p>
","82","42832","<git>"
"10230469","1","Temporarily switch working copy to a specific Git commit","<p>How to switch to specific Git commit <strong>without losing all the commits made after it</strong>?</p>

<p>I want that local files will be changed, but commits' database will remain intact, only the current position pointer is set to currently selected commit.</p>

<p>I want to change files' state to specific commit, run project and, when finished, restore files back to last commit.</p>

<p>How to do this without zipping the whole project's folder?</p>
","100","35087","<git><commit><temporary>"
"6403601","1","Purging file from Git repo failed, unable to create new backup","<p>I tried to remove a file from my remote repo by running:</p>

<pre><code>git filter-branch --index-filter 'git rm --cached --ignore-unmatch Rakefile' HEAD
</code></pre>

<p>But Git complains that </p>

<blockquote>
  <p>Cannot create new backup. A previous backup already exists in refs/original/<br>
  Force overwriting the backup with -f<br>
  rm: cannot remove /.git-rewrite/backup-refs : Permission denied<br>
  rm: cannot remove directory /.git-rewrite : Directory not empty</p>
</blockquote>

<p>This was after I already deleted the .git-rewrite directory on Windows.</p>

<p>How can I remove that file? It's a 29Mb file sitting on my repo, so I quite need to remove the file. </p>

<p>I tried to delete the commit in <code>git rebase -i</code>, but apparently because the commit touched a lot of different files, Git complains of conflicts and I aborted to be safe.</p>
","58","17437","<git><git-commit><git-filter-branch><git-rewrite-history>"
"6172037","1","Really, a concrete example that merging in Git is easier than SVN?","<p>Stack Overflow question <em><a href=""http://stackoverflow.com/questions/2471606/how-and-or-why-is-merging-in-git-better-than-in-svn"">How and/or why is merging in Git better than in SVN?</a></em> is a great question with some <strong>great answers</strong>. However none of them show a simple example where merging in Git works better than <a href=""http://en.wikipedia.org/wiki/Apache_Subversion"">SVN</a>.</p>

<p>On the chance this question will be closed as a duplicate, what is</p>

<ol>
<li>A concrete merge scenario</li>
<li>How it is difficult in SVN?</li>
<li>How the same merge is easier in Git?</li>
</ol>

<p>A few points:</p>

<ul>
<li>No philosophy or deep explanations of what a DVCS is please. These are great, really, but I don't want their details to obfuscate the answer to this (IMHO) important</li>
<li>I don't care about ""historic SVN"" at the moment. Please compare modern Git (1.7.5) to modern SVN (1.6.15).</li>
<li>No renames please - I know that Git detects renames and moves, while SVN doesn't. This is great, but I am looking for something deeper, and example that doesn't involve renames or moves.</li>
<li>No rebase or other 'advanced' Git operation. Just show me the merge please.</li>
</ul>
","53","6247","<git><svn><merge>"
"18216991","1","Create a tag in GitHub repository","<p>I have a repository in GitHub and I need to <strong>tag</strong> it. I tagged in a shell, but on GitHUb it is not showing up. Do I have to do anything else?</p>

<p>The command I used in shell is:</p>

<pre><code>git tag 2.0
</code></pre>

<p>and now when I type <code>git tag</code> it shows:</p>

<pre><code>2.0  
</code></pre>

<p>so it seems like tags are present, correct?</p>

<p>The repository is: <a href=""https://github.com/keevitaja/myseo-pyrocms"">https://github.com/keevitaja/myseo-pyrocms</a>.</p>

<p>How do I make this tag show up on GitHub? Where are my tags?</p>
","92","52178","<git><github><git-tag>"
"9035895","1","How do I add a submodule to a sub-directory?","<p>I have a git repo in <code>~/.janus/</code> with a bunch of submodules in it. I want to add a submodule in <code>~/.janus/snipmate-snippets/snippets/</code>, but when I run <code>git submodule add &lt;git@github.com:...&gt;</code> in the <code>snipmate-snippets</code> directory, I get the following error message:</p>

<pre><code>You need to run this command from the toplevel of the working tree.
</code></pre>

<p>So the question is: How do I add a submodule to the <code>snipmate-snippets</code> directory?</p>
","117","75590","<git><git-submodules>"
"3903817","1","Pull new updates from original GitHub repository into forked GitHub repository","<p>I forked someone's repository on GitHub and would like to update my version with commits and updates made in the original repository. These were made after I forked my copy.</p>

<p>How can I pull in the changes that were made in the origin and incorporate them into my repository?</p>
","342","83143","<git><github>"
"20842750","1","Git in Visual Studio. Conflict prevents checkout","<p>I am using git in Visual studio. When I am trying to synchronize, the following message appears.</p>

<blockquote>
  <p>An error occured. Detailed message: An error was raised by libgit2. Cetegory = checkout(MergeConflict). 1 conflicts prevent checkout</p>
</blockquote>

<p>And I have not even a clue about what the conflicts are, and how to fix them. This is however really annoyng. Could you please help me with that?</p>
","52","36691","<git><visual-studio><visual-studio-2013><conflict>"
"8786564","1","Cannot push to Heroku because key fingerprint","<p>I am new to Rails, and I was trying to deploy a very simple app to Heroku. This is the second app that I deploy, and the first one I was able to do it just fine. However I am having some issues with this one. Whenever I ""<strong>git push heroku master</strong>"", I get this error:</p>

<blockquote>
  <p>!  Your key with fingerprint xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx:xx is not authorized to >access my_heroku_app.</p>
  
  <p>fatal: The remote end hung up unexpectedly</p>
</blockquote>

<p>I have tried to manage my keys after logging in heroku. If I type in my console ""<strong>heroku keys</strong>"", then I get:</p>

<blockquote>
  <p>No keys for myemailaddress.</p>
</blockquote>

<p>However, If I run the comand ""<strong>heroku keys:add</strong>"" I get</p>

<blockquote>
  <p>Found existing public key: /Users/michele/.ssh/id_rsa.pub
  Uploading ssh public key /Users/michele/.ssh/id_rsa.pub
  !    Fingerprint already exists. Please use one ssh key per Heroku account</p>
</blockquote>

<p>Please help me! This is soo frustating, I have no idea what's wrong!
Thank you</p>
","125","41958","<git><heroku><ssh><git-push>"
"4151495","1","Should Gemfile.lock be included in .gitignore?","<p>I'm sort of new to bundler and the files it generates. I have a copy of a git repo from GitHub that is being contributed to by many people so I was surprised to find that bundler created a file that didn't exist in the repo and wasn't in the <code>.gitignore</code> list.</p>

<p>Since I have forked it, I know adding it to the repo won't break anything for the main repo, but if I do a pull request, will it cause a problem?</p>

<p>Should <code>Gemfile.lock</code> be included in the repository?</p>
","361","61341","<git><version-control><bundler>"
"18220663","1","Advice on multiple release lines and git-flow, for git non-gurus","<p>Our software product line requires developing and maintaining multiple software versions concurrently.  We are relative Git newbies and recently adopted Git Flow to take advantage of <a href=""http://nvie.com/posts/a-successful-git-branching-model/"">Driessen's branching model</a>.  We have a very small software team with few dedicated developers (we all wear many hats) and no ""integration guru.""</p>

<p>Much searching has turned up little specific advice on how to adapt Git and Git Flow to our needs.  What has turned up is that Git Flow is not well suited to supporting multiple versions concurrently.  One <a href=""http://stackoverflow.com/a/16386527/2383778"">related discussion on SO</a> has answers indicating separate branch names need to be used to track separate versions' histories.  This, and related strategies, eliminates Git Flow unless it is modified; see our team limitations above for a reason why this isn't practical for us.</p>

<p>The key question is what have others found to be a good approach for implementing Driessen's branching model as closely as possible while supporting multiple release lines?</p>

<p>UPDATES:</p>

<p>Distilling the answers below (particularly @Rasmus') with more targeted searching and internal discussions on a few options leads to the following solution that we are implementing, and which I offer as one approach that may be relevant to similar teams under similar conditions.</p>

<p>We won't continue to use Git Flow.  Instead, we will apply Driessen's model to each individual release line in a repo by prefacing each branch name with its intended release string, e.g.:</p>

<pre><code>r1.5/develop
</code></pre>

<p>All versions of a project are contained in the Git repository.  Starting a new project version consists of creating a small set of new long-lived branches prefaced by the release string (e.g. <code>r1.6/develop</code> and, in our case, <code>r1.6/release</code>; no <code>master</code> with its implication of the single current good buildable state).</p>

<p>We establish one central public repository per project on a server that will be the main avenue for sharing code through local repo <code>remote</code> links.  A push to this repository signifies code that is ready to be consumed by others.  Merging <code>RX.Y/develop</code> into and then pushing the <code>RX.Y/release</code> branch signifies code that is intended for release.  <code>feature</code>, <code>hotfix</code>, et. al. branches are handled similarly.  The branch merge/commit history for a given release line is clean and understandable.  We don't want the typical Git distributed repo strategy in favor of avoiding the complexity of merging such repos that, over time, are likely to diverge in structure.</p>

<p>In some Git GUIs (such as SourceTree for example) this branch structure is recognized and displayed as hierarchical, which helps understand the top-level history of a project from the branch structure.</p>

<p>Apologies for not up-voting any answers; my reputation on SO is not yet the minimum required to do so.</p>
","37","5123","<git><release-management><git-flow>"
"6284809","1","how to pull from remote git repository and override the changes in my local repository","<p>i need to throw away all the changes in my local repository and pull all the code from the remote repository. What is the git command to do this? </p>

<p>Many Thanks!</p>
","102","69487","<git>"
"6284887","1","What's the difference between `git fetch` then `git rebase`, and `git pull --rebase`?","<p>In reading the <code>git pull</code> page, it gives this stern warning about <code>git pull --rebase</code>:</p>

<blockquote>
  <p>This is a potentially dangerous mode of operation. It rewrites history, which does not bode well when you published that history already. Do not use this option unless you have read git-rebase(1) carefully.</p>
</blockquote>

<p>In the <code>git rebase</code> page, it gives a lot of description but no warning of this sort.</p>

<p>In addition, I've seen some people say that</p>

<pre><code>git fetch
git rebase
</code></pre>

<p>is the same as</p>

<pre><code>git pull --rebase
</code></pre>

<p>while others say they're <em>slightly</em> different.</p>

<p>What's the truth?</p>
","31","7243","<git><git-rebase>"
"11396069","1","Squash to only one ""proper"" commit for github pull request","<p>I have a repo on github which someone else (Bob, for the sake of argument) has issued a pull request for. His code's not perfect, so we go through a few rounds of markups. As I understand it, he commits and pushes to his pull-request for each set of marked up changes.</p>

<p>So my repository now looks like this:</p>

<pre><code>master: ---o A (Chowlett
           |
           |
pull-req:  o---o---o---o
               B   C   D (all Bob)
</code></pre>

<p>Commit SHAs and msgs are as follows:</p>

<p>A:</p>

<pre><code>123456 Good commit &lt;chowlett&gt;
</code></pre>

<p>B:</p>

<pre><code>777ccc Fix the widget bug &lt;bob&gt;
</code></pre>

<p>C:</p>

<pre><code>888ddd Review markups &lt;bob&gt;
</code></pre>

<p>D:</p>

<pre><code>999eee Further markups &lt;bob&gt;
</code></pre>

<p>I'm now happy to accept this pull request; but I'd rather the pre-markup versions weren't in my repo. Can I achieve all of the following; and how?</p>

<ul>
<li>Merge B, C &amp; D into my repo as a single commit</li>
<li>Generate the ""Merge pull request #99 into ..."" commit as well</li>
<li>Have github automatically close the pull request</li>
</ul>
","36","7920","<git><github><pull-request>"
"11235827","1","Eclipse ""Error: Could not find or load main class""","<p>I have a project in eclipse on my laptop that I pushed to Git <a href=""https://github.com/chrisbramm/LastFM-History-Graph.git"">https://github.com/chrisbramm/LastFM-History-Graph.git</a></p>

<p>It works fully on my laptop and runs/builds without a problem but on my desktop it doesn't Eclipse gives the error</p>

<blockquote>
  <p>Error: Could not find or load the main class lastfmhistoryguis.InputPanel</p>
</blockquote>

<p>I've tried building the project from:</p>

<pre><code>Project&gt;Build Project
</code></pre>

<p>But nothing happened. I've set the <code>PATH</code> variables on this computer to <strong>JRE6, JRE7 and JDK 1.7.0</strong> even though these aren't set on my laptop.</p>

<p>I did have Jar file (<strong>last.fm-bindings-0.1.1.jar</strong>) that was in my <code>.classpath</code> file that was in <em>C:\Users\Chris\Downloads</em> folder on my laptop hence it wasn't included in the git tree which I recently brought into the project folder and committed ,but I'm not sure whether I have done it right.
Would this also be causing a problem but there isn't a main argument in there.</p>

<p>I can't work out now, what I need to check/change.</p>
","36","161263","<java><eclipse><git><jar><classpath>"
"10935226","1","Git Interactive Merge?","<p>I have two branches with the exact same file (incase you are wondering it is a .sql file) and I want to interactively merge it.</p>

<p>Pretty much I want to open up a diff program like I do when there is a conflict (or command line) and select exactly what lines go where.</p>

<p>Is there anyway to do this?</p>
","35","20066","<git>"
"23303549","1","What are commit-ish and tree-ish in Git?","<h2>The Question</h2>

<p>What are specific examples of commit-ish and tree-ish in Git?</p>

<p>The Stack Overflow question <a href=""http://stackoverflow.com/q/4044368/456814"">""What does tree-ish mean in git?""</a> deals
with tree-ish specifically, but I want to understand more about <strong><em>both</em></strong>.</p>

<h2>Background</h2>

<h3>Usages in Documentation</h3>

<p><a href=""https://www.kernel.org/pub/software/scm/git/docs/"">The Git documentation</a> makes several references to ""commit-ish"" and
""tree-ish"". For example, if you're examining <a href=""https://github.com/git/git"">the Git source code</a>:</p>

<pre class=""lang-none prettyprint-override""><code>$ git grep --files-with-matches --extended-regexp ""commit(-)*ish""
config.txt
git-describe.txt
git-fast-import.txt
git-name-rev.txt
git-push.txt
git-rebase.txt
git-rev-parse.txt
git.txt
gitcli.txt
glossary-content.txt
howto/revert-branch-rebase.txt
revisions.txt
</code></pre>

<p>and</p>

<pre class=""lang-none prettyprint-override""><code>$ git grep --files-with-matches --extended-regexp ""tree(-)*ish"" | \
$ grep --invert-match RelNotes
diff-format.txt
diff-generate-patch.txt
git-archive.txt
git-cat-file.txt
git-checkout.txt
git-diff-index.txt
git-diff-tree.txt
git-ls-files.txt
git-ls-tree.txt
git-merge-tree.txt
git-read-tree.txt
git-reset.txt
git-svn.txt
git.txt
gitcli.txt
gittutorial-2.txt
glossary-content.txt
revisions.txt
</code></pre>

<h3>Definitions</h3>

<p>The Git documentation <a href=""https://www.kernel.org/pub/software/scm/git/docs/#_identifier_terminology"">defines what ""commit-ish"" and ""tree-ish"" are</a>:</p>

<blockquote>
<pre><code>&lt;tree&gt;
</code></pre>
  
  <p>Indicates a tree object name.</p>

<pre><code>&lt;commit&gt;
</code></pre>
  
  <p>Indicates a commit object name.</p>

<pre><code>&lt;tree-ish&gt;
</code></pre>
  
  <p>Indicates a tree, commit or tag object name. A command that takes a <code>&lt;tree-ish&gt;</code>
  argument ultimately wants to operate on a <code>&lt;tree&gt;</code> object but automatically
  dereferences <code>&lt;commit&gt;</code> and <code>&lt;tag&gt;</code> objects that point at a <code>&lt;tree&gt;</code>.</p>

<pre><code>&lt;commit-ish&gt;
</code></pre>
  
  <p>Indicates a commit or tag object name. A command that takes a <code>&lt;commit-ish&gt;</code>
  argument ultimately wants to operate on a <code>&lt;commit&gt;</code> object but automatically
  dereferences <code>&lt;tag&gt;</code> objects that point at a <code>&lt;commit&gt;</code>.</p>
</blockquote>

<h2>The Documentation isn't Clear Enough</h2>

<p>Even though the documentation above defines what ""commit-ish"" and ""tree-ish"" are,
I still find it to be too vague and unclear.</p>

<p><strong>What are specific examples of ""commit-ish"" and ""tree-ish"", and how are they
different from each other?</strong></p>
","47","7473","<git>"
"6286571","1","Are git forks actually git clones?","<p>I keep hearing people say they're forking code in git.  Git ""fork"" sounds suspiciously like git ""clone"" plus some (meaningless) psychological willingness to forgo future merges.  There is no fork command in git, right?</p>

<p>Github makes forks a little more real by stapling correspondence onto it.  That is, you press the fork button and later, when you press the pull request button, the system is smart enough to email the owner. Hence, it's a little bit of a dance around repo ownership and permissions.</p>

<p>Yes/No? Any angst over Github extending git in this direction? Or any rumors of git absorbing the functionality?</p>
","451","167042","<git><github><git-clone><git-fork>"
"4033009","1","Git rebase: conflicts keep blocking progress","<p>I have a git branch (called v4), that was made from master just yesterday.  There were a couple of changes to master, that I want to get into v4.  So, in v4, I tried to do a rebase from master, and one file keeps screwing things up: a one-line text file, that contains the version number.  This file is <code>app/views/common/version.txt</code>, which before rebasing contains this text:</p>

<pre><code>v1.4-alpha-02
</code></pre>

<p>Here's what I'm doing:</p>

<pre><code>&gt; git rebase master
First, rewinding head to replay your work on top of it...
Applying: new version, new branch
error: patch failed: app/views/common/version.txt:1
error: app/views/common/version.txt: patch does not apply
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
Auto-merging app/views/common/version.txt
CONFLICT (content): Merge conflict in app/views/common/version.txt
Failed to merge in the changes.
Patch failed at 0001 new version, new branch

When you have resolved this problem run ""git rebase --continue"".
If you would prefer to skip this patch, instead run ""git rebase --skip"".
To restore the original branch and stop rebasing run ""git rebase --abort"".
</code></pre>

<p>The <code>version.txt</code> now looks like this:</p>

<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD:app/views/common/version.txt
v1.4-alpha-02
=======
v1.4-alpha-01
&gt;&gt;&gt;&gt;&gt;&gt;&gt; new version, new branch:app/views/common/version.txt
</code></pre>

<p>So, I tidy it up and it looks like this now:</p>

<pre><code>v1.4-alpha-02
</code></pre>

<p>and then I tried to carry on: at first I try a commit:</p>

<pre><code>&gt; git commit -a -m ""merged""
# Not currently on any branch.
nothing to commit (working directory clean)
</code></pre>

<p>No luck there.  So, I was trying to add the file:</p>

<pre><code>git add app/views/common/version.txt
</code></pre>

<p>No response.  No news is good news, I guess.  So, I try to continue:</p>

<pre><code>&gt; git rebase --continue
Applying: new version, new branch
No changes - did you forget to use 'git add'?

When you have resolved this problem run ""git rebase --continue"".
If you would prefer to skip this patch, instead run ""git rebase --skip"".
To restore the original branch and stop rebasing run ""git rebase --abort"".
</code></pre>

<p>It's at this point, after going round and round with this, that I'm banging my head off the desk.  </p>

<p>What's going on here?  What am I doing wrong?  Can anyone set me straight?</p>

<p>EDIT - for unutbu</p>

<p>I changed the file as you suggested and get the same error:</p>

<pre><code>&gt; git rebase master
First, rewinding head to replay your work on top of it...
Applying: new version, new branch
error: patch failed: app/views/common/version.txt:1
error: app/views/common/version.txt: patch does not apply
Using index info to reconstruct a base tree...
Falling back to patching base and 3-way merge...
Auto-merging app/views/common/version.txt
CONFLICT (content): Merge conflict in app/views/common/version.txt
Failed to merge in the changes.
Patch failed at 0001 new version, new branch

When you have resolved this problem run ""git rebase --continue"".
If you would prefer to skip this patch, instead run ""git rebase --skip"".
To restore the original branch and stop rebasing run ""git rebase --abort"".
</code></pre>
","79","56853","<git><rebase>"
"6612630","1","git add all expect ignoring files in .gitignore file","<p>I am adding source control to a project that had none. The problem is that there are a lot of files to initially add to git with a <em>.gitignore</em> file, but I can't figure out how to add all files without including the files matching something in the <em>.gitignore</em> file.</p>

<pre><code>git add *
</code></pre>

<p>The above command will not add any files because it detects files which are ignored by the <em>.gitignore</em>.</p>

<pre><code>git add -f *
</code></pre>

<p>The above command will add all files including the files I wish to ignore.</p>

<p>So, how do I add all files while still adhering to the <em>.gitignore</em> file?</p>
","84","31060","<git><init><gitignore>"
"6406762","1","Why am I merging ""remote-tracking branch 'origin/develop' into develop""?","<p>I'm the only one in my organization who's making commits with the following message:</p>

<blockquote>
  <p>Merge remote-tracking branch 'origin/develop' into develop </p>
</blockquote>

<p>Not sure what I'm doing to cause them, but I'd like to stop.</p>

<p>What command am I issuing to create this commit, and what is the proper command I ought to be using to not produce it?</p>

<p>Thanks,<br>
~J</p>
","64","24270","<git><branching-and-merging><git-merge><git-remote>"
"2069490","1","Git Diff with Beyond Compare","<p>I have succeeded in getting git to start Beyond Compare 3 as a diff tool however, when I do a diff, the file I am comparing against is not being loaded.  Only the latest version of the file is loaded and nothing else, so there is nothing in the right pane of Beyond Compare.</p>

<p>I am running git 1.6.3.1 with Cygwin with Beyond Compare 3.  I have set up beyond compare as they suggest in the support part of their website with a script like such:  </p>

<p><code>
    #!/bin/sh<br>
    # diff is called by git with 7 parameters:<br>
    # path old-file old-hex old-mode new-file new-hex new-mode<br>
    ""path_to_bc3_executable"" ""$2"" ""$5"" | cat
</code></p>

<p>Has anyone else encountered this problem and know a solution to this?  </p>

<p><strong>Edit:</strong><br>
I have followed the suggestions by VonC but I am still having exactly the same problem as before. I am kinda new to Git so perhaps I am not using the diff correctly.  </p>

<p>For example, I am trying to see the diff on a file with a command like such:<br>
<code>
    git diff main.css
</code></p>

<p>Beyond Compare will then open and only display my current main.css in the left pane, there is nothing in the right pane.  I would like the see my current main.css in the left pane compared to the HEAD, basically what I have last committed.  </p>

<p>My git-diff-wrapper.sh looks like this:<br>
<code>
    #!/bin/sh<br>
    # diff is called by git with 7 parameters:<br>
    # path old-file old-hex old-mode new-file new-hex new-mode<br>
    ""c:/Program Files/Beyond Compare 3/BCompare.exe"" ""$2"" ""$5"" | cat
</code></p>

<p>My git config looks like this for Diff:<br>
<code>
    [diff]<br>
    external = c:/cygwin/bin/git-diff-wrapper.sh
</code></p>
","71","44582","<git><beyondcompare>"
"1394797","1","Move existing, uncommited work to a new branch in Git","<p>I started some work on a new feature and after coding for a bit, I decided this feature should be on its own branch. </p>

<p>How do I move the existing uncommitted changes to a new branch and reset my current one?</p>

<p>I want to reset my current branch while preserving existing work on the new feature.</p>
","1579","245172","<git><git-branch><git-stash><git-reset>"
"2199897","1","How to convert a normal Git repository to a bare one?","<p>How can I convert a 'normal' Git repository to a bare one?</p>

<p>The main difference seems to be:</p>

<ul>
<li><p>in the normal git repository you have a <code>.git</code> folder inside the repository containing all relevant data and all other files build your working copy</p></li>
<li><p>in a bare Git repository, there is no working copy and the folder (let's call it <code>repo.git</code>) contains the actual repository data</p></li>
</ul>
","437","138236","<git><version-control><git-clone><git-bare><git-non-bare-repository>"
"4250063","1","How to .gitignore all files/folder in a folder, but not the folder itself?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/115983/how-do-i-add-an-empty-directory-to-a-git-repository"">How do I add an empty directory to a git repository</a>  </p>
</blockquote>



<p>I want to check in a blank folder. How can I do this?</p>
","227","80119","<git><file><folder><gitignore>"
"2071288","1","Equivalent in git of ""hg cat"" or ""svn cat""","<p>I want to extract a copy of the latest version of a file held in a git repository, and pass it into a script for some processing.  With svn or hg, I just use the ""cat"" command:</p>

<blockquote>
  <p>Print the specified files as they were at the given revision. If
  no revision is given, the parent of the working directory is used,
  or tip if no revision is checked out.</p>
</blockquote>

<p>(that's from the description of hg cat in the hg documentation)</p>

<p>What's the equivalent command to do this with git?</p>
","74","10219","<git><version-control>"
"1441010","1","The shortest possible output from git log containing author and date","<p>How can I show a git log output with (at least) this information: </p>

<pre><code>* author
* commit date
* change
</code></pre>

<p>I want it compressed to one line per log entry. What's the shortest possible format for that?</p>

<p>(tried <code>--format=oneline</code> but that does not show the date)</p>
","149","55226","<git><formatting><logging>"
"10418975","1","How to change line-ending settings","<p>Is there a file or menu that will let me change the settings on how to deal with line endings?</p>

<p>There are 3 options:</p>

<ol>
<li><p>Checkout Windows-style, commit Unix-style line endings
Git will convert LF to CRLF when checking out text files. When
committing text files, CRLF will be converted to LF. For
cross-platform projects, this is the recommended setting on Windows
(""core.autocrlf"" is set to ""true"")</p></li>
<li><p>Checkout as-is, commit Unix-style line endings
Git will not perform any conversion when checking out text files.
When committing text files, CRLF will be converted to LF. For
cross-platform projects this is the recommended setting on Unix
(""core.autocrlf"" is set to ""input"").</p></li>
<li><p>Checkout as-is, commit as-is
Git will not perform any conversions when checking out or committing
text files. Choosing this option is not recommended for cross-platform
projects (""core.autocrlf"" is set to ""false"")</p></li>
</ol>
","92","68931","<git><msysgit>"
"3910412","1","Split large Git repository into many smaller ones","<p>After successfully converting an SVN repository to Git, I now have a very large Git repository that I want to break down into multiple smaller repositories and maintain history.</p>

<p>So, can someone help with breaking up a repo that might look like this:</p>

<pre><code>MyHugeRepo/
   .git/
   DIR_A/
   DIR_B/
   DIR_1/
   DIR_2/
</code></pre>

<p>Into two repositories that look like this:</p>

<pre><code>MyABRepo/
   .git
   DIR_A/
   DIR_B/

My12Repo/
   .git
   DIR_1/
   DIR_2/
</code></pre>

<p>I've tried following directions in this previous question but it doesn't really fit when trying to put multiple directories into a separate repo (<a href=""http://stackoverflow.com/questions/359424/detach-subdirectory-into-separate-git-repository"">http://stackoverflow.com/questions/359424/detach-subdirectory-into-separate-git-repository</a>). </p>
","64","15011","<git><split><repository><git-filter-branch>"
"4034962","1","Which language has the best Git API Bindings?","<p>I am looking at building an application with heavy ties to git..</p>

<p>Are there language bindings available and if so which are the most comprehensive?</p>

<p>Would it mean going to Bare Metal C?</p>

<p>Or does perl / python / php / C#  have a set of full bindings?</p>

<p>Thanks</p>

<p>Daniel</p>
","38","11287","<c#><c><git><binding>"
"8957862","1","How to upgrade Git to latest version on Mac OS X?","<p>I just bought a new Mac with OS X Lion and I checked in the Terminal what version of git is installed by default. I got the answer</p>

<pre><code>git --version
&gt; git version 1.7.5.4
</code></pre>

<p>I would like to upgrade git to the latest version 1.7.8.3, so I downloaded the dmg installer ""git-1.7.8.3-intel-universal-snow-leopard.dmg"" and I launched it.</p>

<p>After the install, the Terminal still says that the version is 1.7.5.4, what am I doing wrong?</p>

<hr>

<p><strong>UPDATE</strong></p>

<p>I strongly recommend to not use this method anymore, you should use a package manager like <a href=""http://brew.sh/"">Homebrew</a> to keep the Git provided by OSX untouched. Simply install your own version of Git...</p>

<pre><code>brew install git
</code></pre>

<p>...and then update your PATH to use it instead of the genuine one. Take a look at the link in Ryan's comment below, it could be helpful.</p>

<p>You will be able to update Git anytime through the package manager.</p>

<pre><code>brew upgrade git
</code></pre>

<hr>

<p><strong>UPDATE 2</strong></p>

<p>Finally I found <a href=""http://justinhileman.info/article/reinstalling-php-on-mac-os-x/"">this solution from Justin Hileman</a> to update your PATH the right way :</p>

<pre><code>export PATH=""$(brew --prefix git)/bin:$PATH""
</code></pre>

<p>Add this line in your ~/.bashrc file.</p>
","79","44509","<osx><git>"
"2073841","1","How can I discard remote changes and mark a file as ""resolved""?","<p>I have some local files, I pull from remote branch and there are conflicts.  I know that I would like to keep my local changes and ignore the remote changes causing conflicts. Is there a command I can use to in effect say ""mark all conflicts as resolved, use local""?</p>
","135","62552","<git><merge><conflict>"
"6701292","1","Git fast forward VS no fast forward merge","<p>Git merge allow us to perform fast forward and no fast fast forward branch merging.  Any ideas when to use fast forward merge and when to use no fast forward merge?</p>
","114","42473","<git>"
"3923596","1","Git Windows Command Prompt gets stuck during Git commands with (END)","<p>I've got Git for Windows setup (msysgit) and it was working fine for the last few days and today I've encountered an odd error. </p>

<p>When issuing a Git command in the Windows Command Prompt or in the Git Bash that comes bundled with msysgit, I get a strange '(END)' line appear and then I cannot issue any other comamnds.</p>

<p><img src=""http://i.stack.imgur.com/Eo7O9.png"" alt=""alt text""></p>

<p>At this point all I get are system beeps.</p>

<p>Any ideas?</p>

<p>Thanks, P.</p>
","34","9522","<windows><git><command-line><cmd><msysgit>"
"10940981","1","Git: How to create a new branch from a tag?","<p>Something happened and our master branch got all screwed up. Rather than spending the time trying to figure out what went wrong, I just want to create a new master branch from an existing tag. So if my tag is <code>v1.0</code>, how do I create a new branch from this tag?</p>
","191","79504","<git>"
"2085871","1","Strategy for preventing or catching git history rewrite","<p>Although I love the git history rewrite feature, how does one go about ensuring history isn't rewritten. </p>

<p>We dont mind what a programmer does on their own machine, but we need to ensure that a version is not pushed to the server that changes history.</p>

<p>ie We need to guarantee that a particular version from the past really was that version. So this would include preventing someone going through and permanently removes a file from the history, or permanently alters a file throughout all history. </p>
","36","3949","<git>"
"13636559","1","How to download .zip from GitHub for a particular commit sha?","<p>I want to download a .zip with the source of a library hosted on github, but I don't want the master, because every time I download I could be downloading a different version.</p>

<p>This particular library does not have tags, so I can't use that.</p>

<p>So how do I download the source.zip for a specific commit sha?</p>
","38","10156","<git><github>"
"4037928","1","Can you issue pull requests from the command line on GitHub?","<p>It seems like you have to interact with github.com to initiate a pull request. Is this so?</p>
","131","77726","<git><github><pull-request>"
"5717026","1","How to git-cherry-pick only changes to certain files?","<p>If I want to merge into a Git branch the changes made only to some of the files changed in a particular commit which includes changes to multiple files, how can this be achieved?</p>

<p>Suppose the Git commit called <code>stuff</code> has changes to files <code>A</code>, <code>B</code>, <code>C</code>, and <code>D</code> but I want to merge only <code>stuff</code>'s changes to files <code>A</code> and <code>B</code>. It sounds like a job for <code>git cherry-pick</code> but <code>cherry-pick</code> only knows how to merge entire commits, not a subset of the files.</p>
","223","57424","<git><cherry-pick>"
"6294224","1","check if pushed tag is on the git remote","<p>Anyone know how to check if a tag is on the git remote after the tag is pushed from the local?</p>

<p>It seems that the only way to do it is to fetch the remote. </p>
","44","16893","<git>"
"8570636","1","Change name of folder when cloning from github?","<p>when I clone something from Github, it creates a folder with the same name as the app on my computer. Is there a way to change the name.</p>

<p>For example, doing this clone creates a long ""sign-in-with-twitter"" folder </p>

<pre><code>git clone https://github.com/sferik/sign-in-with-twitter.git
</code></pre>

<p>I know I can rename the folder after, but I'm wondering if there's a way to rename it as it comes in by adding an option on the end of the statement. For example</p>

<pre><code>git clone https://github.com/sferik/sign-in-with-twitter.git  as 'signin'
</code></pre>

<p>the problem is that I'm cloning some apps multiple times in order to tweak some of the settings to get it to work, and if there's a problem, I delete the folder but I'm worried that some of the gems remain installed even though I've deleted the folder</p>
","66","23496","<git><github>"
"6412516","1","Configuring diff tool with .gitconfig?","<p>How do I configure git to use a different tool for diffing with the .gitconfig file.  I have this in my .gitconfig:</p>

<pre><code>[diff]
    tool = git-chdiff #also tried /bin/git-chdiff
</code></pre>

<p>and it does not work, it just open the regular command line diff.  When I do </p>

<pre><code>export GIT_EXTERNAL_DIFF=git-chdiff
</code></pre>

<p>then git diff will open up the external diffing tool (so I know the external diff tool script works fine).  Do I have something wrong with my .gitconfig configuration for the diff tool?</p>
","55","69856","<git>"
"11403407","1","Git asks for username everytime I push","<p>Whenever I try to push into my repo git asks for both <code>username &amp; password</code>. </p>

<p>I have no problem in re-entering my password each time but the problem is in entering username. I use <code>https</code> to clone my repository.</p>

<p>So, how can I configure git so that it doesn't asks for <code>username</code> on each <code>git push</code>.</p>

<p>I am new to linux but IIRC in windows <code>git push</code> only asks for password.</p>
","132","62755","<linux><git><github>"
"1443210","1","Updating a local repository with changes from a Github repository","<p>I've got a project checked locally from github, that remote repo has since had changes made to it. What's the correct command to update my local copy with the latest changes?</p>
","192","234120","<git><github>"
"6794110","1","git revert back to certain commit","<p>how do i revert all my files on my local copy back to a certain commit?</p>

<pre><code>commit 4a155e5b3b4548f5f8139b5210b9bb477fa549de
Author: John Doe &lt;Doe.John.10@gmail.com&gt;
Date:   Thu Jul 21 20:51:38 2011 -0500
</code></pre>

<p>This is the commit i'd like to revert back to. any help would be a lifesaver!</p>
","51","62638","<git><commit><revert>"
"4524998","1","Name of staged files from git status?","<p>I would like to get a list of only the staged filenames. I can't find the equivalent flag for 'name-only' for the 'git status' command. What is a good alternative?</p>

<p>The file list will be piped to php -l (php lint syntax checker).</p>

<p><strong>Solution: the complete command</strong></p>

<blockquote>
  <p>git diff --name-only --cached | xargs -l php -l</p>
</blockquote>
","35","15326","<git><git-status>"
"6795070","1","Is there a way in git to obtain a push date for a given commit?","<p>I am wondering if there is a way to view a push date associated with each commit in the git log.  If that is not possible, is there a way to see all the commits under a certain push.</p>

<p>I writing a program that needs to keep track of the commits as they are pushed.  Because the git log is ordered by the commit date, not the push date, I am not able to see the most recent commits that are pushed. For example, if a user commits to his local repository 2 days before he pushes to the master, that commit will be placed behind 2 days of other commits in the master repository log.</p>
","47","18885","<git><github><git-push>"
"13716658","1","how to delete all commit history in github?","<p>I want to delete all commit history , but keep the code in current state .</p>

<p>because in my commit history , there are too many unused commit .</p>

<p>How can i do it ?</p>

<p>is there any git command can do this?</p>

<pre><code>git filter-branch ?
git rebase ?
... 
</code></pre>

<p>my code host in github.com.</p>
","48","22334","<git><github>"
"4526910","1","Rename a git submodule","<p>Is there some easy way to rename a git submodule directory (other than going through the entire motion of  <a href=""http://stackoverflow.com/questions/1260748/how-do-i-remove-a-git-submodule"">deleting</a> it and re-adding it with a new destination name). </p>

<p>And while we are at it, why is it that I simply cannot do the following in the parent directory: <code>git mv old-submodule-name new-submodule-name</code></p>
","62","15800","<git><git-submodules>"
"10461870","1","What can/should I do about this git gc error? (rm: cannot unlink pack Permission denied)","<p>When running git gc, I keep seeing this error:</p>

<pre><code>rm: cannot unlink 'pack-30b1ff2[reset of hash].pack': Permission denied
</code></pre>

<p>What can/should I do about this error?</p>

<p><strong>Update</strong></p>

<p>Sorry, I should have provided more info. Yes, I have tried a reboot. In fact,reboots have fixed gc issues for me before.</p>

<p>I only noticed this issue because when I open Git Gui, it prompts me now and then to compress the database. I eventually noticed that after a couple of times opening Git Gui that it kept prompting me, even though I clicked Yes, and it came back ""successful"". </p>

<p>So then I tried running it with Git EXT's Settings - Git maintenance -  Compress git database command. This command told me that there was an error (red light in Git EXT whereas there was a green light in Git Gui). </p>

<p>The error I posted above however was from running git gc straight from git bash. </p>

<p>Should I schedule a disk scan? Could bad sectors be causing this? I was hoping this would be a quick answer :(</p>
","32","11359","<git><garbage-collection><permission-denied>"
"16077971","1","git produces Gtk-WARNING: cannot open display","<p>I've been working on my project remotely through the command line on a machine to which I don't have admin rights and after running <code>git push origin master</code> I get the following error message:</p>

<pre><code>(gnome-ssh-askpass:29241): Gtk-WARNING **: cannot open display:
</code></pre>

<p>My <code>.git/config</code> file has the following contents:</p>

<blockquote>
<pre><code>    [core]
       repositoryformatversion = 0
       filemode = true
       bare = false
       logallrefupdates = true 
    [remote ""origin""]
       fetch = +refs/heads/*:refs/remotes/origin/*
       url = https://username@github.com/username/repository.git 
    [branch ""master""]
       remote = origin
       merge = refs/heads/master
</code></pre>
</blockquote>

<p>I was getting the 403 error earlier. Following the comment <a href=""http://stackoverflow.com/questions/7438313/pushing-to-git-returning-error-code-403-fatal-http-request-failed/9575906#9575906"">here</a>, I put my username before the @ sign in the remote url and since then, I've been getting the Gtk error.</p>

<p>When I login to the machine using <code>ssh -X</code> and try to push, I get the following error:</p>

<pre><code>X11 connection rejected because of wrong authentication.
(gnome-ssh-askpass:31922): Gtk-WARNING **: cannot open display:localhost:10.0
</code></pre>

<p>If I change the url of the remote to <code>git@github.com:username/repository.git</code>, then the error is:</p>

<pre><code>ssh: connect to host github.com port 22: Connection timed out
fatal: The remote end hung up unexpectedly
</code></pre>

<p>Do you know how to fix this?</p>
","76","33729","<git><version-control><github><ssh>"
"10950412","1","What does ""@@ -1 +1 @@"" mean in Git's diff output?","<p>I've been collecting data from the information returned from</p>

<pre><code>git diff &lt;commitId&gt;..&lt;commitId&gt;
</code></pre>

<p>and I ran into <code>@@ -1 +1 @@</code></p>

<p>I can't figure out what that's telling me. I've searched a bit on Google but to no avail.</p>
","45","9413","<git><diff>"
"4040717","1","git remote prune – didn't show as many pruned branches as I expected","<p>From the man page:</p>

<blockquote>
<pre><code>Deletes all stale tracking branches under &lt;name&gt;.
These stale branches have already been removed from the remote repository
referenced by &lt;name&gt;, but are still locally available in ""remotes/&lt;name&gt;"".
</code></pre>
</blockquote>

<p>So I removed a bunch of branches using</p>

<pre><code>git push origin :staleStuff
</code></pre>

<p>and then ran</p>

<pre><code>git remote prune origin
</code></pre>

<p>However, only one single local branch was pruned. Some of these branches were created by me, some by co-workers. Does this indicate that I wasn't tracking those branches correctly in the first place?</p>
","93","101043","<git><version-control><branch><git-branch><git-remote>"
"4528869","1","How do you attach a new pull request to an existing issue on github?","<p>I'm not sure, but I have a vague memory of creating a github pull request with ""Issue 4"" or something in the title, and it automatically attached itself to Issue 4 in the project that I was submitting it to. I tried it again recently and it didn't work -- it just created a brand new issue instead. I don't see any options like ""Attach to issue"" on the new pull request page, nor ""Open a new pull request for this issue"" on the issue page. Is there any way to do this, to help project owners keep their Issues page clean and avoid duplication?</p>

<p><strong>Edit</strong>: To clarify, I know that creating a pull request always creates a <em>new</em> issue. I would like to instead attach the pull request to an <em>existing</em> issue.</p>
","333","52097","<git><github><issue-tracking><pull><pull-request>"
"6879501","1","Filter git diff by type of change","<p>Is there a way to limit <code>git diff</code> to changed files?</p>

<p>I'd like to see the differences between two commits, but exclude paths that don't exist in one or the other (additions/deletions).  The following Perl one-liner illustrates most of what I want:</p>

<pre><code>git diff master.. | perl -lnwe 'print unless /^(new|deleted) file/../^diff/ and not /^diff/'
</code></pre>

<p>But that leaves <code>diff --git a/path b/path</code> lines for the files that were new or deleted.  Plus it'd be much nicer if I didn't have to parse (also fails if any hunk contains anything matching /^diff/, for example).</p>

<p>Another alternative I tried was:</p>

<pre><code>git diff --name-status (args) | perl -lnwe 'print if s/^M\s+//' | xargs git diff (args) --
</code></pre>

<p>Its output is better, but it still feels hackish.</p>
","38","14238","<git><diff>"
"2087216","1","Commit in git only if tests pass","<p>I've recently started using git, and also begun unit testing (using Python's <code>unittest</code> module). I'd like to run my tests each time I commit, and only commit if they pass.</p>

<p>I'm guessing I need to use <code>pre-commit</code> in <code>/hooks</code>, and I've managed to make it run the tests, but I can't seem to find a way to stop the commit if they tests fail. I'm running the tests with <code>make test</code>, which in turn is running <code>python3.1 foo.py --test</code>. It seems like I don't get a different exit condition whether the tests pass or fail, but I may be looking in the wrong place.</p>

<p><strong>Edit:</strong> Is this something uncommon that I want to do here? I would have thought it was a common requirement...</p>

<p><strong>Edit2:</strong> Just in case people can't be bothered to read the comments, the problem was that <code>unittest.TextTestRunner</code> doesn't exit with non-zero status, whether the test suite is successful or not. To catch it, I did:</p>

<pre><code>result = runner.run(allTests)
if not result.wasSuccessful():
    sys.exit(1)
</code></pre>
","32","5656","<python><unit-testing><git><githooks>"
"4042816","1","How can I rewrite history so that all files, except the ones I already moved, are in a subdirectory?","<p>I have a project under <code>git</code>. One day I moved all project files from current directory to <code>foo/bar/</code> under the project. I did it using <code>git mv</code>. Then I added some more files and did some changes to already existing files.</p>

<p>As a result, now when I look at the history of <code>foo/bar/file.c</code>, I can only see changes that I did after I moved the file.</p>

<p>I tried to fix this in various ways (<code>filter-branch</code> with subdirectory filter, etc), but nothing helped, so I am pretty stacked here. I'll appreciate any help that you can give me.
Thanks!</p>
","42","8290","<git><history><mv><git-filter-branch>"
"4043609","1","getting ""fatal: not a git repository: '.'"" when using post-update hook to execute 'git pull' on another repo","<p>I'm new to git so I apologize (and please correct me) if I misuse terminology here, but I'll do my best.</p>

<p>I'm trying to set up a bare git repo (hub) and a development site working copy (prime) on a web server. I've tried to pattern it after <a href=""http://joemaller.com/990/a-web-focused-git-workflow/"">this article</a>. I want the development working copy to be updated whenever the hub repo is pushed to. I'm under the impression that the proper hook for this is <code>post-update</code>, which I have created like so:</p>

<pre><code>#!/bin/sh
whoami
cd /path/to/working-copy/
RET=`git pull`
echo $RET
</code></pre>

<h2>Update</h2>

<p>When I push changes from my local repo to the bare hub I get the following output from the post-update script:</p>

<pre><code>remote: sites
remote: fatal: Not a git repository: '.'
</code></pre>

<p>However if I SSH into the server as user 'sites' and execute this script manually it works great Any ideas as to what might be going wrong with this hook or script?</p>
","62","14772","<git><githooks>"
"2209810","1","add #*# glob to .gitignore?","<p>I want to add emacs autosave files to my .gitignore with the glob <code>#*#</code> but of course, lines starting with a hash are comment lines.</p>

<p>How can I get this into my .gitignore without it being treated as a comment?</p>
","65","9631","<git><gitignore>"
"6436681","1","How to stage only part of a new file with git?","<p>I <strong>love</strong> <em>git add --interactive</em>. It is now part of my daily workflow.</p>

<p>The problem seems that it does not work with untracked files. What I want to do is track a new file, but only add part of it, i.e. some parts of this new file are not yet ready to be staged. </p>

<p>For example, with git add -i, I can chose the patch option and even edit individual hunks in order to stage parts of the new code, leaving debug code comments unstaged. I love working this way because it makes it obvious which places of the mega patch I am currently working on still need work.</p>

<p>Unfortunately, I don't seem to be able to do the same with an untracked file. Either I stage the whole file, or nothing. The workaround I have been using is staging or even committing a new file when it is empty, and then staging individual changes in the usual way. But this solution feels like a dirty hack and when I forget, or change my mind, it creates more troubles than there should be.</p>

<p>So the question is: How to stage only part of a new file, so that this new file gets tracked but leaving the whole or parts of its content unstaged?</p>
","116","5997","<git>"
"11058312","1","How can I use git rebase without requiring a forced push?","<p>In an attempt to achieve git nirvana, I'm spending the day learning how to leverage rebase for situations where I currently merge.</p>

<p>When running through what I consider to be a git 101 flow (which I spell out below), I have to <code>push --force</code> when pushing my changes back to the origin.  </p>

<p>I'm not the only one - I know that this is covered ground (see <a href=""http://stackoverflow.com/questions/7163457/the-correct-way-of-git-rebase%20-%20dupe"">1</a>,<a href=""http://stackoverflow.com/questions/1627906/rebase-push-cycles-for-git-branches"">2</a>,<a href=""http://stackoverflow.com/questions/559917/git-rebase-and-git-push-non-fast-forward-why-use"">3</a>,<a href=""http://stackoverflow.com/questions/9661059/git-pull-rebase-upstream-git-push-origin-rejects-non-fast-forward"">4</a>,<a href=""http://stackoverflow.com/questions/9591141/git-rebase-on-long-lived-remote-feature-branches"">5</a>), and I understand the technical reasons <em>why</em> a force is necessary.  My issue is this --- there are many (many) blog entries singing the praises of rebase and how it's changed their lives (see <a href=""http://blog.woobling.org/2009/05/git-rebase-considered-awesome.html"">1</a>,<a href=""http://gitguru.com/2009/02/03/rebase-v-merge-in-git/"">2</a>,<a href=""http://gitready.com/intermediate/2009/01/31/intro-to-rebase.html"">3</a>,<a href=""http://darwinweb.net/articles/the-case-for-git-rebase"">4</a> to list a few), but none of them mentions that <code>push --force</code> is part of their flow.  However, nearly every answer to the existing stackoverflow questions say things like ""yeah, if you're gonna rebase, ya gotta use <code>push --force</code>"".</p>

<p>Given the number and religiosity of rebase advocates, <strong>I have to believe that using 'push --force' is not an inherent part of a rebase flow, and that if one often has to force their pushes, they're doing something wrong</strong>.</p>

<p><code>push --force</code> is a <a href=""http://www.randyfay.com/node/89"">bad thing</a>.</p>

<p>So here's my flow.  <strong>In what way could I achieve the same results without a force?</strong></p>

<p><strong>Simple Example</strong></p>

<p>Two branches:</p>

<ul>
<li><strong>v1.0</strong> - a release branch, contains only patches</li>
<li><strong>master</strong> - everything for the next major release.</li>
</ul>

<p>I've got a few patch commits and a few commits for the next release.</p>

<p><img src=""http://i.stack.imgur.com/DA6lA.jpg"" alt=""premerge""></p>

<p>I'd like to incorporate the patches into my master so that they're not lost for the next release.  Pre-enlightenment I'd simply:</p>

<pre><code>git checkout master
git merge v1.0
</code></pre>

<p>But now I'm trying</p>

<pre><code>git checkout master
git rebase v1.0
</code></pre>

<p>So now I'm here:</p>

<p><img src=""http://i.stack.imgur.com/Yqas5.jpg"" alt=""enter image description here""></p>

<p>Time for:</p>

<pre><code>git push
</code></pre>

<p>No dice.  </p>
","32","7992","<git><git-rebase>"
"4044368","1","What does tree-ish mean in Git?","<p>I'm very confused about how to use <code>git archive</code>.</p>

<p>I have a git repository with folder  <em>Foo</em>, <em>Bar</em> and <em>Baz</em> at the top level.  I need to export folder <strong>Foo</strong> in a SVN-ish sort of way for quick test deployment.</p>

<p>I learned that I could use <code>git-archive</code> in an <a href=""http://stackoverflow.com/questions/4039700/setting-up-a-project-directory-structure-for-git-repo-of-a-website"">SVN-ish export sort of way</a>.</p>

<p>But here's the thing, <strong>The following works fine:</strong></p>

<pre><code>git archive master | tar -x -C ~/destination
</code></pre>

<p>it results in <em>Foo</em>, <em>Bar</em>, <em>Baz</em> folders in the <em>destination</em> folder.</p>

<p><strong>However, the following will error out</strong> with <code>fatal not a valid object name</code>:</p>

<pre><code>git archive master/foo | tar -x -C ~/destination
</code></pre>

<h3>The Documentation</h3>

<p>Looking as the synopsis for the <code>git archive</code> program I see that it can take a <code>&lt;tree-ish&gt; [path]</code> as a parameter (synopsis summarized to relevant parts):</p>

<pre><code>git archive &lt;tree-ish&gt; [path...]
</code></pre>

<p><strong>If</strong> <code>master/foo</code> <strong>is not</strong> <code>tree-ish</code><strong>, then what is?</strong></p>
","45","16950","<git><git-archive>"
"2231546","1","Git: See my last commit","<p>I just want to see the files that were committed in the last commit exactly as I saw the list when I did <code>git commit</code>. Unfortunately searching for</p>

<pre><code>git ""last commit"" log
</code></pre>

<p>in Google gets me nowhere. And </p>

<pre><code>git diff HEAD^..HEAD
</code></pre>

<p>is not what I need, of course, since it spews the guts of the change too.</p>
","160","108551","<git>"
"17748223","1","EGit and Eclipse modifies .gitignore file but it should not","<p>I'm using Eclipse and EGit, but Eclipse modifies my <em>.gitignore</em> file without me asking to do so. As soon as I open Eclipse the <em>.gitignore</em> file is modified.</p>

<p>I've added some folders to <em>.gitignore</em> (through EGit) but removed them after, but Eclipse keeps adding removed lines to <em>.gitignore</em>.</p>

<ol>
<li><code>git checkout .gitignore</code>, I get the good version of the file</li>
<li>Then I go to Eclipse window</li>
<li>Then I go back to terminal and issue: <code>git status</code>, </li>
<li>I can see that .gitignore is now modified.</li>
</ol>

<p>How can it be? </p>
","33","9015","<eclipse><git><eclipse-plugin><egit>"
"4045017","1","What is `git diff --patience` for?","<p>How does the patience algorithm differ from the default <code>git diff</code> algorithm, and when would I want to use it?</p>
","147","20938","<git><diff>"
"13321458","1","Meaning of Git checkout double dashes","<p>What is the meaning of the double dashes before the file name in this git command?</p>

<pre><code>git checkout --ours -- path/to/file.txt
git checkout --theirs -- path/to/file.txt
</code></pre>

<p>are they mandatory? is it equivalent to</p>

<pre><code>git checkout --ours path/to/file.txt
git checkout --theirs path/to/file.txt
</code></pre>

<p>thank you</p>
","107","8296","<git>"
"8691199","1","What does ""T"" mean in ""git status""? (it isn't in the man page)","<p>When I type <code>git status</code> I see:</p>

<pre><code>T /path/to/file...
M /path/to/otherfile...
</code></pre>

<p>What exactly does the <code>T</code> <code>git status</code> mean?</p>

<p>I tried <code>man git-status</code> (I think it <em>should</em> be there, but isn't).</p>
","49","9245","<git>"
"10508903","1","Cannot apply stash to working directory","<p>I cannot apply stash back to the working directory.</p>

<p><strong>Little story:</strong></p>

<p>First I tried to push some commited changes, but it said: ""no you can't, pull first""... ok then, I'll pull things from github and then push my changes. When I tried to pull, it said the I had changes that would be ovewritten, and that I should stash my changes. Ok, I stashed changes... did the pull, and push the commited changes. But now, I cannot restore the uncommited changes I was working on.</p>

<p><em>This is the error:</em></p>

<pre><code>MyPath/File.cs already exists, no checkout
Could not restore untracked files from stash
</code></pre>

<p>For sure I don't yet understand all the concepts of git, they confuse me a bit... maybe I did something wrong.</p>

<p>It would be great if someone could help me solve this... I've been searching google and everything for more than an hour now, and I didn't come to a solution yet.</p>

<p>Help is much appreciated. Thanks!</p>
","36","15952","<git><git-stash>"
"4156957","1","Merging Branches Without Checkout","<p>Is there a way to merge a branch into another without checking out either branch? For example, I have branch 'master' checked out, but I want to merge branch-a into branch-b, without leaving master.</p>
","41","5221","<git><git-merge><git-checkout>"
"13306435","1","Repository access denied. access via a deployment key is read-only","<p>After successfully cloning my repo from heroku and added another remote</p>

<pre><code>1/ git clone git@heroku.com:[APP].git
2/ git remote add bitbucket ssh://git@bitbucket.org/[ACCOUNT]/[REPO].git
3/ git push bitbucket master
</code></pre>

<p>I am still getting this error after running line (3) or using SourceTree</p>

<pre><code>conq: repository access denied. access via a deployment key is read-only.
</code></pre>

<p>First I don't understand what this message means in practice. And that's shame.</p>

<p>I did create ssh key pair and added to heroku :</p>

<pre><code>ssh-keygen -t rsa 
heroku keys:add ./id_rsa.pub 
</code></pre>

<p>I also added my key in deployment keys section in BitBucket. But I must be missing something. This question is not out of laziness, I have been reading various docs including BitBuckets guides. But it still don't get around this issue.</p>

<p>This post is related to <a href=""http://stackoverflow.com/questions/13300068/can-i-import-my-heroku-git-repo-into-bitbuket-and-how/"">Can I import my heroku git repo into bitbuket? and how?</a>   </p>

<p>ADDITIONAL FACTS:</p>

<pre><code>ssh -T hg@bitbucket.org
conq: authenticated via a deploy key.

You can use git or hg to connect to Bitbucket. Shell access is disabled.


$ ssh -v git@bitbucket.org
OpenSSH_5.6p1, OpenSSL 0.9.8r 8 Feb 2011
debug1: Reading configuration data /Users/joel/.ssh/config
debug1: Applying options for bitbucket.org
debug1: Reading configuration data /etc/ssh_config
debug1: Applying options for *
debug1: Connecting to bitbucket.org [207.223.240.181] port 22.
debug1: Connection established.
debug1: identity file /Users/joel/.ssh/id_rsa type 1
debug1: identity file /Users/joel/.ssh/id_rsa-cert type -1
debug1: Remote protocol version 2.0, remote software version OpenSSH_5.3
debug1: match: OpenSSH_5.3 pat OpenSSH*
debug1: Enabling compatibility mode for protocol 2.0
debug1: Local version string SSH-2.0-OpenSSH_5.6
debug1: SSH2_MSG_KEXINIT sent
debug1: SSH2_MSG_KEXINIT received
debug1: kex: server-&gt;client aes128-ctr hmac-md5 none
debug1: kex: client-&gt;server aes128-ctr hmac-md5 none
debug1: SSH2_MSG_KEX_DH_GEX_REQUEST(1024&lt;1024&lt;8192) sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_GROUP
debug1: SSH2_MSG_KEX_DH_GEX_INIT sent
debug1: expecting SSH2_MSG_KEX_DH_GEX_REPLY
debug1: Host 'bitbucket.org' is known and matches the RSA host key.
debug1: Found key in /Users/joel/.ssh/known_hosts:5
debug1: ssh_rsa_verify: signature correct
debug1: SSH2_MSG_NEWKEYS sent
debug1: expecting SSH2_MSG_NEWKEYS
debug1: SSH2_MSG_NEWKEYS received
debug1: Roaming not allowed by server
debug1: SSH2_MSG_SERVICE_REQUEST sent
debug1: SSH2_MSG_SERVICE_ACCEPT received
debug1: Authentications that can continue: publickey
debug1: Next authentication method: publickey
debug1: Offering RSA public key: /Users/joel/.ssh/id_rsa
debug1: Remote: Forced command: conq deploykey:13907
debug1: Remote: Port forwarding disabled.
debug1: Remote: X11 forwarding disabled.
debug1: Remote: Agent forwarding disabled.
debug1: Remote: Pty allocation disabled.
debug1: Server accepts key: pkalg ssh-rsa blen 279
debug1: read PEM private key done: type RSA
debug1: Remote: Forced command: conq deploykey:13907
debug1: Remote: Port forwarding disabled.
debug1: Remote: X11 forwarding disabled.
debug1: Remote: Agent forwarding disabled.
debug1: Remote: Pty allocation disabled.
debug1: Authentication succeeded (publickey).
Authenticated to bitbucket.org ([207.223.240.181]:22).
debug1: channel 0: new [client-session]
debug1: Requesting no-more-sessions@openssh.com
debug1: Entering interactive session.
debug1: Sending environment.
debug1: Sending env LC_CTYPE = UTF-8
PTY allocation request failed on channel 0
</code></pre>

<p>Looks like all is fine.</p>
","84","43259","<git><ssh><bitbucket><ssh-keys>"
"4157189","1","Git Pull While Ignoring Local Changes?","<p>Is there a way to do a <code>git pull</code> that ignores any local file changes without blowing the directory away and having to perform a <code>git clone</code>?</p>
","145","129748","<git><git-pull>"
"3417896","1","How do I prompt the user from within a commit-msg hook?","<p>I want to warn the user if their commit message doesn't follow a certain set of guidelines, and then give them the option to edit their commit message, ignore the warning, or cancel the commit. The problem is that I don't seem to have access to stdin.</p>

<p>Below is my commit-msg file:</p>

<pre><code>function verify_info {
    if [ -z ""$(grep '$2:.*[a-zA-Z]' $1)"" ]
    then
        echo &gt;&amp;2 $2 information should not be omitted
        local_editor=`git config --get core.editor`
        if [ -z ""${local_editor}"" ]
        then
            local_editor=${EDITOR}
        fi
        echo ""Do you want to""
        select CHOICE in ""edit the commit message"" ""ignore this warning"" ""cancel the commit""; do
            case ${CHOICE} in
                i*) echo ""Warning ignored""
                    ;;
                e*) ${local_editor} $1
                    verify_info ""$1"" $2
                    ;;
                *)  echo ""CHOICE = ${CHOICE}""
                    exit 1
                    ;;
            esac
        done
    fi
}

verify_info ""$1"" ""Scope""
if [ $# -ne 0 ];
then
    exit $#
fi
verify_info ""$1"" ""Affects""
if [ $# -ne 0 ];
then
    exit $#
fi

exit 0
</code></pre>

<p>Here is the output when I leave the Scope information blank:</p>

<pre><code>Scope information should not be omitted
Do you want to:
1) edit the commit message  3) cancel the commit
2) ignore this warning
#?
</code></pre>

<p>The message is correct, but it doesn't actually stop for input. I've also tried using the simpler ""read"" command, and it has the same problem. It seems that the problem is that at this point git has control of stdin and is providing its own input. How do I fix this?</p>

<p>Update: It seems this might be a duplicate of <a href=""http://stackoverflow.com/questions/1067874/read-from-stdin-on-a-git-pre-commit-hook-with-php"">this question</a> which unfortunately seems to suggest I'm out of luck.</p>
","37","6434","<git><hook><commit-message>"
"3418277","1","How to apply `git diff` patch without Git installed?","<p>How can my client apply patch created by <code>git diff</code> without git installed?
I have tried to use <code>patch</code> command but it always asks file name to patch.</p>
","228","100666","<git><diff><patch>"
"5813311","1","No newline at end of file","<p>When doing a <code>git diff</code> it says <em>""No newline at end of file""</em>.</p>

<p>Ok, there is no newline at end of file. What's the big deal?</p>

<p>What's the significance of the message and what's it trying to tell us?</p>
","206","63407","<git><git-svn>"
"4050798","1","GitHub: Is it possible to collaborate with someone on a private gist?","<p>I have a private gist. If I send the URL to a friend he can view it, but cannot edit it, unless he forks it.</p>

<p>Is there a way to edit it directly without forking it?</p>
","32","8056","<git><github>"
"18225126","1","How to use Git for Unity source control?","<p>What are best practices for using <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> source control with Unity, particularly in dealing with the binary nature of Unity projects? Please describe the workflow, what paths would be included in .gitignore, what settings should be set in Unity and/or the project, and any other special things that should be noted.</p>

<p>Note: I realize that using the Asset Server is the Unity-recommended way, but I would like to use Git for a variety of reasons. Please no answers that state or argue that I should just use the Asset Server. The Asset Server really isn't an option for me.</p>
","236","126819","<git><unity3d>"
"4050905","1","Changing .gitconfig location on Windows","<p>By default on Windows Git places global .gitconfig in <code>c:\documents and settings\user\</code></p>

<p>How can I change that position so .gitconfig is stored in <code>c:\my_configuration_files\</code>?</p>

<p>Can it be done at all?</p>
","51","39696","<git>"
"3103589","1","How can I easily fixup a past commit?","<p>I just read <a href=""http://stackoverflow.com/questions/493450/amending-a-single-file-in-a-past-commit-in-git"">amending a single file in a past commit in git</a> but unfortunately the accepted solution 'reorders' the commits, which is not what I want. So here's my question:</p>

<p>Every now and then, I notice a bug in my code while working on an (unrelated) feature. A quick <code>git blame</code> then reveals that the bug has been introduced a few commits ago (I commit quite a lot, so usually it's not the most recent commit which introduced the bug). At this point, I usually do this:</p>

<pre><code>git stash                      # temporarily put my work aside
git rebase -i &lt;bad_commit&gt;~1   # rebase one step before the bad commit
                               # mark broken commit for editing
vim &lt;affected_sources&gt;         # fix the bug
git add &lt;affected_sources&gt;     # stage fixes
git commit -C &lt;bad_commit&gt;     # commit fixes using same log message as before
git rebase --continue          # base all later changes onto this
</code></pre>

<p>However, this happens so often that the above sequence is getting annoying. Especially the 'interactive rebase' is boring. Is there any shortcut to the above sequence, which lets me amend an arbitrary commit in the past with the staged changes? I'm perfectly aware that this changes the history, but I'm doing mistakes so often that I'd really love to have something like</p>

<pre><code>vim &lt;affected_sources&gt;             # fix bug
git add -p &lt;affected_sources&gt;      # Mark my 'fixup' hungs for staging
git fixup &lt;bad_commit&gt;             # amend the specified commit with staged changes,
                                   # rebase any successors of bad commit on rewritten 
                                   # commit.
</code></pre>

<p>Maybe a smart script which can rewrite commits using plumbing tools or so?</p>
","50","24097","<git><rewrite>"
"13400684","1","Strange xml error: Incorrect line ending","<p>I haven't used Eclipse since 1 week ago. Today I started it and I noticed that it loaded slowly. When it was started it prompted this:</p>

<p><img src=""http://i.stack.imgur.com/EG5w4.png"" alt=""&lt;a href=&quot;http://tinypic.com?ref=2zpk1g2&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;http://i48.tinypic.com/2zpk1g2.png&quot; border=&quot;0&quot; alt=&quot;Image and video hosting by TinyPic&quot;&gt;&lt;/a&gt;""></p>

<p>I thougth that maybe Eclipse has updated something of Android so I updated to the newest ADT. Now I have the same error but I have an extra big error that I don't know if it's because the previous error. I have tried the new feature of look how an xml layer looks in many devices. I have tried with 2 layers and now the program doesn't compiles because it says: </p>

<blockquote>
  <p>Incorrect line ending: found carriage return (\r) without corresponding newline (\n)</p>
</blockquote>

<p>The error for one xml is in this line:</p>

<pre><code>     android:layout_height=""wrap_content""&gt;    
</code></pre>

<p>and the other one is in:</p>

<pre><code>    android:orientation=""horizontal""&gt;
</code></pre>

<p>wtf has happened? I didn't change anything nor saved it and 1 week ago all was fine.</p>
","39","20858","<android><eclipse><git><android-layout><egit>"
"1216733","1","Remove a directory permanently from git","<p>In my personal git repo, I have a directory that contains thousands of small images that are no longer needed. Is there a way to delete them from the entire git history? I have tried </p>

<pre><code>git filter-branch --index-filter ""git rm -rf --cached --ignore-unmatch imgs"" HEAD
</code></pre>

<p>and</p>

<pre><code>git filter-branch --tree-filter 'rm -fr imgs' HEAD
</code></pre>

<p>but the size of the git repo remains unchanged. Any ideas?</p>

<p>Thanks</p>
","45","39538","<git>"
"5509543","1","How do I properly force a Git push?","<p>I've set up a remote non-bare ""main"" repo and cloned it to my computer. I made some local changes, updated my local repository, and pushed the changes back to my remote repo. Things were fine up to that point.</p>

<p>Now, I had to change something in the remote repo. Then I changed something in my local repo. I realized that the change to the remote repo was not needed. So I tried to <code>git push</code> from my local repo to my remote repo, but I got an error like:</p>

<blockquote>
  <p>To prevent you from losing history, non-fast-forward updates were
  rejected Merge the remote changes before pushing again.  See the 'Note
  about fast-forwards' section of <code>git push --help</code> for details.</p>
</blockquote>

<p>I thought that probably a</p>

<pre><code>git push --force
</code></pre>

<p>would force my local copy to push changes to the remote one and make it the same. <strong>It does force the update</strong>, but when I go back to the remote repo and make a commit, I notice that the files contain outdated changes (ones that the main remote repo previously had).</p>

<p>As I mentioned in the <a href=""http://stackoverflow.com/questions/5509543/how-do-i-properly-force-a-git-push#comment6275726_5509588"">comments to one of the answers</a>:</p>

<blockquote>
  <p>[I] tried forcing, but when going back to master server to save the changes, i get outdated staging. Thus, when i commit the repositories are not the same. And when i try to use git push again, i get the same error.</p>
</blockquote>

<p>How can I fix this issue?</p>
","511","406459","<git><push><git-push><git-non-bare-repository>"
"10555136","1","Delete multiple remote branches in git","<p>I have a team member who inadvertently pushed over 150 of his local branches to our central repo. Thankfully, they all have the same prefix. Using that prefix, is there a git command or cool little shell script I can use that will delete all of those at once?</p>
","52","13062","<git><bash>"
"7860751","1","Git - fatal: Unable to create '/path/my_project/.git/index.lock': File exists.","<p>I am still getting this error message, when I try to move my project tree on to git repo. </p>

<p>I checked the permissions of my directory with this project and these are set on 777. In terminal in the directory with <code>my_project</code> I set:</p>

<blockquote>
  <p>git init</p>
</blockquote>

<p>and then if I try</p>

<blockquote>
  <p>git add .
  or
  git commit -m ""first upload""</p>
</blockquote>

<p>so I'll get the error</p>

<pre><code>    fatal: Unable to create '/path/my_proj/.git/index.lock': File exists.

If no other git process is currently running, this probably means a
git process crashed in this repository earlier. Make sure no other git
process is running and remove the file manually to continue.
</code></pre>

<p>I tried also create a new repo and there to commit it, but unfortunately still the same error message... I am a bit desperate of it already, I try to find the solution whole afternoon, but still without succes...</p>

<p>Could anyone help me, please, what is the cause of problem?
Million times thanks!</p>
","317","162655","<git>"
"15763059","1","GitHub: What is a ""wip"" branch?","<p>When I was browsing GitHub repositories I quite often saw ""wip"" branches (e.g. <code>3.1.0-wip</code>). What does ""wip"" mean?</p>

<p>I couldn't find the answer anywhere - neither on Google nor on GitHub:help.</p>
","31","7445","<git><github><branch><git-branch>"
"7861184","1","What is the difference between ""git init"" and ""git init --bare""?","<p>What is the different between <code>git init</code> and <code>git init --bare</code>? I found that a lot of blog post requires <code>--bare</code> for their Git server?</p>

<p>From <a href=""https://www.kernel.org/pub/software/scm/git/docs/git-init.html"">the man page</a>, it said:</p>

<blockquote>
<pre><code>--bare
</code></pre>
  
  <p>Create a bare repository. If GIT_DIR environment is not set, it is set to the current working directory</p>
</blockquote>

<p>But what does it actually mean? Is it required to have <code>--bare</code> for the Git server setup?</p>
","70","30493","<git><version-control>"
"1257592","1","How do I remove files saying ""old mode 100755 new mode 100644"" from unstaged changes in Git?","<p>For some reason, when I initially did a pull from the repository for a git project of mine,
I got a ton of files in my working copy that have no discernible changes made to them, but keep showing up in my <code>unstaged changes</code> area.  </p>

<p>I'm using Git Gui on Windows xp, and when I go to look at the file to see what has changed.
All I see is:</p>

<pre><code>old mode 100755  
new mode 100644  
</code></pre>

<p>Does anyone know what this means?  </p>

<p>How can I get these files out of my list of unstaged changes? (Very annoying to have to go through 100's of files, just to pick out files I've recently edited and want to commit).  </p>
","328","67731","<git><git-gui>"
"7897517","1","Why ""git difftool"" does not open the tool automatically?","<p>I configured <code>git</code> like this:</p>

<pre><code>git config --global diff.tool meld
</code></pre>

<p>When I run: </p>

<pre><code>git difftool
</code></pre>

<p>I get the following message:</p>

<pre><code>Viewing: 'hello.txt'
Hit return to launch 'meld': 
</code></pre>

<p>Then, if I press <kbd>Enter</kbd>, <code>meld</code> window is opened.</p>

<p>How could I disable this message, so that the <code>meld</code> window will be opened straight away after typing <code>git difftool</code>?</p>
","79","17068","<git><diff><difftool><meld>"
"8795097","1","How to git commit a single file/directory","<p>Tried the following command:</p>

<pre><code>git commit path/to/my/file.ext -m 'my notes'
</code></pre>

<p>Receive an error in git version 1.5.2.1:</p>

<pre><code>error: pathspec '-m' did not match any file(s) known to git.
error: pathspec 'MY MESSAGE' did not match any file(s) known to git.
</code></pre>

<p>Is there a new syntax for singe file or directory commits?</p>

<p><strong>ANSWER:</strong>
Arguments are expected in this order...</p>

<p><code>git commit -m 'my notes' path/to/my/file.ext</code></p>

<p>...however it's not even strict anymore :)</p>
","93","99044","<git><commit>"
"5549479","1","git: check if commit xyz in remote repo?","<p>I have a commit xyz in my local branch that I want to check if it is included in a remote release repository; can I do that in some easy way? I could clone the remote repo, but I'm hoping for a nicer+faster way. <code>git ls-remote</code> seemed promising, but found nothing of value to me there. Thanks!</p>
","35","11372","<git>"
"19987099","1","git: how do I view all commits for a specific day?","<p>I've already looked at the relevant docs from <a href=""http://git-scm.com/book/ch2-3.html"">git-scm.com</a> and <a href=""http://gitref.org/inspect/"">gitref.org</a>, but I can't seem to figure this out. </p>

<p>Let's say I want to get all commits for Tuesday, November 12th, 2013. Using an existing repo as an example, I know for a fact that I have commits on that day, as well as commits the day before and the day after. </p>

<h3>With <code>2013-11-11</code> and <code>2013-11-12</code></h3>

<p>All the following give me commits for both November 11th and 12th:</p>

<ul>
<li><code>git log --after=""2013-11-11"" --until=""2013-11-12""</code></li>
<li><code>git log --since=""2013-11-11"" --until=""2013-11-12""</code></li>
<li><code>git log --after=""2013-11-11"" --before=""2013-11-12""</code></li>
<li><code>git log --since=""2013-11-11"" --before=""2013-11-12""</code></li>
</ul>

<h3>With <code>2013-11-12</code> only</h3>

<p>All the following give me no commits:</p>

<ul>
<li><code>git log --since=""2013-11-12"" --until=""2013-11-12""</code> </li>
<li><code>git log --since=""2013-11-12"" --before=""2013-11-12""</code></li>
<li><code>git log --after=""2013-11-12"" --until=""2013-11-12""</code></li>
<li><code>git log --after=""2013-11-12"" --before=""2013-11-12""</code> </li>
</ul>

<h3>With <code>2013-11-12</code> and <code>2013-11-13</code></h3>

<p>As expected (from the results of <code>2013-11-11</code> and <code>2013-11-12</code> above), all of the following give me results from both November 12th and 13th:</p>

<ul>
<li><code>git log --since=""2013-11-12"" --before=""2013-11-13""</code></li>
<li><code>git log --after=""2013-11-12"" --before=""2013-11-13""</code></li>
<li><code>git log --since=""2013-11-12"" --until=""2013-11-13""</code></li>
<li><code>git log --after=""2013-11-12"" --before=""2013-11-13""</code></li>
</ul>

<p>...and so on and so forth. I feel like I've tried every possible combination of <code>since</code>, <code>after</code>, <code>before</code>, and <code>until</code> but still can't find the answer, nor do I understand whether those options are inclusive or exclusive, since they seem to be inclusive if the two dates are different, but exclusive if they're on the same day. Did I miss something / what am I doing wrong?! </p>
","34","6542","<git><git-log>"
"8196544","1","What are the git concepts of HEAD, master, origin?","<p>As I'm learning about git I keep coming across the terms HEAD, master, origin, and I'm not sure what the differences are. If I understand correctly, HEAD is always equal to the latest revision? (And if so, is that the latest revision of the whole repository, or of a specific branch or tag?) This is so confusing, I've read so many tutorials on this and things like branching/merging but still can't wrap my head around it.</p>
","69","28843","<git>"
"3469741","1","Remove file from the repository but keep it locally","<p>I have a folder which I'd like to remove in my remote repository. I'd like to delete it, but keep the folder in my computer</p>
","142","30091","<git><gitignore><git-rm>"
"15669091","1","Bower install using only https?","<p>I am trying to set up Bower on a build server at our organization's data center, but <code>git</code>'s port does not appear to be open on the data center's firewall.  I can use the git command line client to clone via <code>https://[repo]</code>, but not <code>git://[repo]</code>.</p>

<p>Is there a switch or preference which will instruct bower to perform git clone using <code>https</code> rather than the <code>git</code> protocol?</p>

<p>I've looked at the source, and considered changing the resolution code to replace <code>git://</code> with <code>https://</code>, but I figured I'd ask before I go to those lengths.</p>
","244","57139","<git><bower><git-clone>"
"4159950","1","How do I delete a remote branch in Git?","<p>I created a branch <code>notmaster</code> to commit as well as push some changes. When I was finished with that branch, I merged the changes back into <code>master</code>, pushed them out, and then deleted the local <code>notmaster</code>.</p>

<pre><code>$ git branch -a
* master
  remotes/origin/master
  remotes/origin/notmaster
</code></pre>

<p>Is there anyway to delete the remote <code>notmaster</code>?</p>

<hr>

<p>A little more clarity, with the <a href=""http://stackoverflow.com/a/4159972/478288"">solution from Ionut</a>:</p>

<p>The usual method failed for me:</p>

<pre><code>$ git push origin :notmaster
error: dst refspec notmaster matches more than one.
</code></pre>

<p>That's because I had a tag with the same name as the branch. This was a poor choice on my behalf and caused the ambiguity. So in that case:</p>

<pre><code>$ git push origin :refs/heads/notmaster
</code></pre>
","38","8942","<git>"
"6426247","1","Merge git repository in subdirectory","<p>I'd like to merge a remote git repository in my working git repository as a subdirectory of it. I'd like the resulting repository to contain the merged history of the two repositories and also that each file of the merged-in repository retain its history as it was in the remote repository. I tried using the subtree strategy as mentioned in <a href=""http://www.kernel.org/pub/software/scm/git/docs/howto/using-merge-subtree.html"">How to use the subtree merge strategy</a>, but after following that procedure, although the resulting repository contains indeed the merged history of the two repositories, individual files coming from the remote one haven't retained their history (`git log' on any of them just shows a message ""Merged branch..."").</p>

<p>Also I don't want to use submodules because I do not want the two combined git repositories to be separate anymore.</p>

<p>Is it possible to merge a remote git repository in another one as a subdirectory with individual files coming from the remote repository retaining their history?</p>

<p>Thanks very much for any help.</p>

<p>EDIT:
I'm currently trying out a solution that uses git filter-branch to rewrite the merged-in repository history. It does seem to work, but I need to test it some more. I'll return to report on my findings.</p>

<p>EDIT 2:
In hope I make myself more clear I give the exact commands I used with git's subtree strategy, which result in apparent loss of history of the files of the remote repository.
Let A be the git repo I'm currently working in and B the git repo I'd like to incorporate into A as a subdirectory of it. It did the following:</p>

<pre><code>git remote add -f B &lt;url-of-B&gt;
git merge -s ours --no-commit B/master
git read-tree --prefix=subdir/Iwant/to/put/B/in/ -u B/master
git commit -m ""Merge B as subdirectory in subdir/Iwant/to/put/B/in.""
</code></pre>

<p>After these commands and going into directory subdir/Iwant/to/put/B/in, I see all files of B, but <code>git log</code> on any one of them shows just  the commit message ""Merge B as subdirectory in subdir/Iwant/to/put/B/in."" Their file history as it is in B is lost.</p>

<p>What <em>seems</em> to work (since I'm a beginner on git I may be wrong) is the following:</p>

<pre><code>git remote add -f B &lt;url-of-B&gt;
git checkout -b B_branch B/master  # make a local branch following B's master
git filter-branch --index-filter \ 
   'git ls-files -s | sed ""s-\t\""*-&amp;subdir/Iwant/to/put/B/in/-"" |
        GIT_INDEX_FILE=$GIT_INDEX_FILE.new \
                git update-index --index-info &amp;&amp;
        mv ""$GIT_INDEX_FILE.new"" ""$GIT_INDEX_FILE""' HEAD 
git checkout master
git merge B_branch
</code></pre>

<p>The command above for filter-branch is taken from <code>git help filter-branch</code>, in which I only changed the subdir path.</p>
","42","10168","<git>"
"6426363","1","How can I have grep not print out 'No such file or directory' errors?","<p>I'm grepping through a large pile of code managed by git, and whenever I do a grep, I see piles and piles of messages of the form: </p>

<pre><code>&gt; grep pattern * -R -n
whatever/.git/svn: No such file or directory
</code></pre>

<p>Is there any way I can make those lines go away? </p>
","99","52255","<git><grep>"
"17628305","1","Windows git ""warning: LF will be replaced by CRLF"", is that warning tail backward?","<p>env:</p>

<ul>
<li>Windows 7  </li>
<li>msysgit  </li>
</ul>

<p>Wheng I <code>git commit</code>, it says: </p>

<pre><code>warning: LF will be replaced by CRLF. 
</code></pre>

<p>Is this warning tail backward?<br>
I edit file in Windows, the end of line is <code>CRLF</code>, just like this pic:<br>
<img src=""http://i.stack.imgur.com/IMh60.jpg"" alt=""enter image description here""><br>
And git changes it to <code>LF</code> for committing to repo.<br>
So I think the correct warning is:  </p>

<pre><code>warning: CRLF will be replaced by LF. 
</code></pre>
","33","43379","<git>"
"18134627","1","How much of a git sha is *generally* considered necessary to uniquely identify a change in a given codebase?","<p>If you're going to build, say, a directory structure where a directory is named for a commit in a Git repository, and you want it to be short enough to make your eyes not bleed, but long enough that the chance of it colliding would be negligible, how much of the SHA substring is generally required?</p>

<p>Let's say I want to uniquely identify this change: <a href=""https://github.com/wycats/handlebars.js/commit/e62999f9ece7d9218b9768a908f8df9c11d7e920"">https://github.com/wycats/handlebars.js/commit/e62999f9ece7d9218b9768a908f8df9c11d7e920</a></p>

<p>I can use as little as the first four characters:
<a href=""https://github.com/wycats/handlebars.js/commit/e629"">https://github.com/wycats/handlebars.js/commit/e629</a></p>

<p>But I feel like that would be risky.  But ssuming a codebase that, over a couple of years, might have—say—30k changes, what are the chances of collision if I use 8 characters?  12?  Is there a number that's generally considered acceptable for this sort of thing?</p>
","49","10462","<git><github><sha>"
"5863426","1","Get commit list between tags in git","<p>If I've a git repository with tags representing the versions of the releases. </p>

<p>How can I get the list of the commits between two tags (with a pretty format if is possible) ?</p>
","85","28653","<git>"
"3230074","1","git - pushing specific commit","<p>I have made several commits on different files, but so far I would like to push to my remote repository only a specific commit.</p>

<p>Is that possible?</p>
","430","164973","<git><commit><push>"
"3231079","1","How to see all tags in a git repository in command line","<p>Is there something like ""git show tags""?</p>
","43","29061","<git><version-control>"
"1395445","1","Viewing a Deleted File in Git","<p>I've deleted a file with Git and then committed, so the file is no longer in my working copy. I want to look at the contents of that file, but not actually restore it. How can I do this?</p>
","55","9480","<git>"
"2221408","1","git: How do I recursively add all files in a directory subtree that match a glob pattern?","<p>I have several .screen files inside <code>/xxx/documentation</code> and its subdirectories that are already tracked by Git.</p>

<p>After modifying many of these screen files, I run <code>git add documentation/\\*.screen</code>—as indicated by the first example in <code>git-add</code>'s documentation—to stage these files, but the command fails:</p>

<pre>fatal: pathspec 'documentation/\*.screen' did not match any files</pre>

<p>Is my command bad, or does git have a bug?</p>
","53","65999","<git><glob><git-add>"
"1396617","1","Committing Machine Specific Configuration Files","<p>A common scenario when I develop is that the codebase will have several config files which require machine specific settings. These files will be checked into Git and other developers will always accidentally check them back in and break someone else's configuration.</p>

<p>A simple solution to this would be to just not check them in to Git, or even to additionally add a .gitignore entry for them. However, I find that it is much more elegant to have some sensible defaults in the file which the developer can modify to suit his needs.</p>

<p>Is there an elegant way to make Git play nicely with such files? I would like to be able to modify a machine-specific configuration file and then be able to run ""git commit -a"" without checking that file in.</p>
","58","5934","<git><configuration><version-control>"
"17667023","1","Git, How to reset origin/master to a commit?","<p>I reset my local master to a commit by this command:</p>

<pre><code>git reset --hard e3f1e37
</code></pre>

<p>when I enter <code>$ git status</code> command, terminal says:</p>

<pre><code># On branch master
# Your branch is behind 'origin/master' by 7 commits, and can be fast-forwarded.

#   (use ""git pull"" to update your local branch)
#
nothing to commit, working directory clean
</code></pre>

<p>Since I want to reset origin/header as well, I checkout to origin/master:</p>

<pre><code>$ git checkout origin/master
Note: checking out 'origin/master'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at 2aef1de... master problem fixed for master. its okay now.
</code></pre>

<p>and reset the header by this command:</p>

<pre><code>$ git reset --hard e3f1e37
HEAD is now at e3f1e37 development version code incremented for new build.
</code></pre>

<p>Then I tried to add commit to origin/header that I was not successful.</p>

<pre><code>$ git commit -m ""Reverting to the state of the project at e3f1e37""
# HEAD detached from origin/master
nothing to commit, working directory clean
</code></pre>

<p>Finally, I checkout to my local master.</p>

<pre><code>$ git checkout master
Switched to branch 'master'
Your branch is behind 'origin/master' by 7 commits, and can be fast-forwarded.
  (use ""git pull"" to update your local branch)
</code></pre>

<p>Since, I reset the head of origin/master I expect local and origin should be in same direction but as you see, git is saying that my local/master is behind origin/master by 7 commits.</p>

<p>How can I fix this issue? The things that I'm looking for is Head of local/master and origin/master point to same commit. Following image shows what I did. Thanks.</p>

<p><img src=""http://i.stack.imgur.com/fuQB3.png"" alt=""enter image description here""></p>
","83","72637","<git><git-checkout><git-reset>"
"1396649","1","How can I compare two revisions in git in Eclipse?","<p>I am using the <a href=""http://www.eclipse.org/egit/"">eclipse plugin for Git</a> on Mac OS 10.6, and I cannot figure out how to compare two version of a file.  I can pull up the file's history, and see all of the commits, with their messages, but I can't figure out how to see what changed in each commit.</p>

<p>This was very easy with subversion, and I'm sure its easy with Git, if you know where to look (but apparently, I don't).</p>

<p>Any pointers would be greatly appreciated.</p>

<p>To elaborate on my question, is there a way to access <code>git-diff</code> in the eclipse plugin?</p>
","34","21236","<eclipse><git>"
"2221658","1","What's the difference between HEAD^ and HEAD~ in Git?","<p>When I specify an ancestor commit object in Git, I'm confused between <code>HEAD^</code> and <code>HEAD~</code>.</p>

<p>Both have a ""numbered"" version like <code>HEAD^3</code> and <code>HEAD~2</code>.</p>

<p>They seem very similar or the same to me, but are there any differences between the tilde and the caret?</p>
","192","38180","<git>"
"8709001","1","Git asks me to commit or stash changes on checkout master, even though all changes were commited?","<p>I have two branches locally, <code>master</code> and <code>Berislav</code>. The latter is currently active, and I have committed all the changes. When I try to checkout to <code>master</code>, I get the following message:</p>

<blockquote>
  <p>error: Your local changes to the following files would be overwritten
  by checkout: [list of files changed in the active branch] Please,
  commit your changes or stash them before you can switch branches.
  Aborting</p>
</blockquote>

<p>However, everything else I tried -- <code>commit</code>, <code>status</code>, <code>merge</code> -- tells me that there's nothing to commit (working directory clean). What do I need to do to get to my <code>master</code> branch?</p>

<p>EDIT: When I try <code>git stash</code>, I'm getting:</p>

<blockquote>
  <p>error: feeding unmodified [file path] to diffcore</p>
</blockquote>

<p>for all the files listed in the error above.</p>
","32","47839","<git>"
"3523534","1","Good ways to manage a changelog using git?","<p>I've been using Git for a while now, and I recently started using it to tag my releases so that I could more easily keep track of changes and be able to see which version each of our clients are running (unfortunately the code currently mandates that each client have their own copy of the PHP site; I'm changing this, but it's slow-going).</p>

<p>In any case, we're starting to build some momentum, I thought it would be really good to be able to show people what has changed since the last release. Problem is, I haven't been maintaining a changelog because I don't have a good idea of how to go about it. For this particular time, I can run through the log and manually create one, but that will get tiring very quickly.</p>

<p>I tried googling ""git changelog"" and ""git manage changelog"" but I didn't find anything that really talked about the workflow of code changes and how that coincides with the changelog. We're currently following <a href=""http://reinh.com/blog/2009/03/02/a-git-workflow-for-agile-teams.html"">Rein Henrichs' development workflow</a> and I would love something that went along with that.</p>

<p>Is there a standard approach that I am missing, or is this an area where everybody does their own thing?</p>

<p>Thanks very much for your comments/answers!</p>
","117","43785","<git><github><changelog>"
"8796522","1","Git Tag list, display commit sha1 hashes","<p>so the <code>git tag</code> command lists the current git tags</p>

<pre><code>tag1
tag2
</code></pre>

<p><code>git tag -n</code> prints tag's message</p>

<pre><code>tag1  blah blah
tag2  blah blah
</code></pre>

<p><em>What's the best way to get the hash of tag1 &amp; tag2 ?</em></p>
","37","16200","<git><hash><tags><logging><verbose>"
"3319479","1","git: can i commit a file and ignore the content changes?","<p>every developer on my team has their own local configuration. that configuration information is stored in a file called ""devtargets.rb"" which is used in our rake build tasks. i don't want developers to clobber each other's devtargets file, though. </p>

<p>my first thought was to put that file in the .gitignore list so that it is not committed to git.</p>

<p>then i started wondering: is it possible to commit the file, but ignore changes to the file? so, i would commit a default version of the file and then when a developer changes it on their local machine, git would ignore the changes and it wouldn't show up in the list of changed files when you do a git status or git commit.</p>

<p>is that possible? it would certainly be a nice feature...</p>
","93","17120","<git><gitignore>"
"4161022","1","Git - how to track untracked content?","<p>See below the solid line for my original question.</p>

<p>I have a folder in my local directory that is untracked. When I run <code>git status</code>, I get:</p>

<pre><code>Changed but not updated:
modified:   vendor/plugins/open_flash_chart_2 (modified content, untracked content)
</code></pre>

<p>When I type <code>git add vendor/plugins/open_flash_chart_2</code> then try <code>git status</code> again, it still says untracked. What's going on?  </p>

<hr>

<p>Here is a simple summary of my latest half hour:</p>

<ul>
<li><p>Discovered that my Github repo is not tracking my <code>vendor/plugins/open_flash_chart_2</code> plugin. Specifically, there's no content and it's showing a <b>green arrow</b> on the folder icon.</p></li>
<li><p>Tried <code>git submodule init</code></p>

<pre><code>No submodule mapping found in .gitmodules for path 'vendor/plugins/open_flash_chart_2'
</code></pre></li>
<li><p>Tried <code>git submodule add git://github.com/korin/open_flash_chart_2_plugin.git vendor/plugins/open_flash_chart_2</code></p>

<pre><code>vendor/plugins/open_flash_chart_2 already exists in the index
</code></pre></li>
<li><p><code>git status</code>  </p>

<pre><code>modified: vendor/plugins/open_flash_chart_2 (untracked content)
</code></pre></li>
<li><p>Hunted for any file named <code>.gitmodules</code> in my repository/local directory but couldn't find one.</p></li>
</ul>

<p>What do I have to do to <b>get my submodules working</b> so git can start tracking properly?</p>

<hr>

<p>This may be unrelated (I include it in case it helps), but every time I type <code>git commit -a</code> rather than my usual <code>git commit -m ""my comments""</code>, it throws up an error:</p>

<pre><code>E325: ATTENTION
Found a swap file by the name "".git\.COMMIT-EDITMSG.swp""
         dated: Thu Nov 11 19:45:05 2010
     file name: c:/san/project/.git/COMMIT_EDITMSG
      modified: YES
     user name: San   host name: San-PC
    process ID: 4268
While opening file "".git\COMMIT_EDITMSG""
         dated: Thu Nov 11 20:56:09 2010
  NEWER than swap file!  
Swap file "".git\.COMMIT_EDITMSG.swp"" already exists!
[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort:
Swap file "".git\.COMMIT_EDITMSG.swp"" already exists!
[O]pen Read-Only, (E)dit anyway, (R)ecover, (D)elete it, (Q)uit, (A)bort:
</code></pre>

<p>I am a complete newbie at Github and despite trying to go through the documentation, I'm a bit stumped by these particular problems. Thank you.</p>
","96","66470","<git><git-submodules>"
"10423143","1","How to exclude certain directories/files from git grep search","<p>Is there a way to search git repository using <code>git grep</code> but exclude certain paths/directories/files from the search? Like the <code>--exclude</code> option in normal grep command. </p>

<p>If you are curious: I don't want to use normal grep since it is much slower than <code>git grep</code> when the size of the git repository is large. </p>
","53","10513","<git><grep>"
"5720343","1","Using Git, show all commits that exist *only* on one specific branch, and not *any* others","<p>Given a branch, I'd like to see a list of commits that exist <strong>only</strong> on that branch.  In <a href=""http://stackoverflow.com/questions/1710894/using-git-show-all-commits-that-are-in-one-branch-but-not-the-others"">this question</a> we discuss ways to see which commits are on one branch but not one or more specified other branches.  </p>

<p>This is slightly different.  I'd like to see which commits are on one branch but not on <strong>any</strong> other branches.</p>

<p>The use case is in a branching strategy where some branches should only be merged to, and never committed directly on.  This would be used to check if any commits have been made directly on a ""merge-only"" branch.</p>

<p>EDIT: Below are steps to set up a dummy git repo to test:</p>

<pre><code>git init
echo foo1 >> foo.txt
git add foo.txt
git commit -am ""initial valid commit""
git checkout -b merge-only
echo bar >> bar.txt
git add bar.txt
git commit -am ""bad commit directly on merge-only""
git checkout master
echo foo2 >> foo.txt 
git commit -am ""2nd valid commit on master""
git checkout merge-only 
git merge master
</code></pre>

<p>Only the commit with message ""bad commit directly on merge-only"", which was made directly on the merge-only branch, should show up.</p>
","37","22125","<git>"
"3321492","1","Git alias with positional parameters","<p>Basically I'm trying to alias:</p>

<pre><code>git files 9fa3
</code></pre>

<p>...to execute the command:</p>

<pre><code>git diff --name-status 9fa3^ 9fa3
</code></pre>

<p>but git doesn't appear to pass positional parameters to the alias command. I have tried:</p>

<pre><code>[alias]
    files = ""!git diff --name-status $1^ $1""
    files = ""!git diff --name-status {1}^ {1}""
</code></pre>

<p>...and a few others but those didn't work.</p>

<p>The degenerate case would be:</p>

<pre><code>$ git echo_reverse_these_params a b c d e
e d c b a
</code></pre>

<p>...how can I make this work?</p>
","121","21215","<git><command><parameters><position><alias>"
"2223308","1","How to remove a file from the index in git?","<p>How to remove a file from the index ( = staging area = cache) without removing it from the file system?</p>
","164","73411","<git>"
"18137175","1","In Git, what is the difference between origin/master vs origin master?","<p>I know, <strong>origin</strong> is a term for the remote repository and <strong>master</strong> is the branch there.</p>

<p>I am purposely omitting the ""context"" here and I am hoping that the answer should not depend upon the context. So in git command lines, what is the difference between <strong>origin/master</strong> and <strong>origin master</strong>.  Is there a non-ambiguous way to understand when to use <strong>origin/master</strong> and when I should use <strong>origin master</strong>?</p>
","58","24893","<git>"
"8247605","1","Configuring so that pip install can work from github","<p>We'd like to use pip with github to install private packages to our production servers.  This question concerns what needs to be in the github repo in order for the install to be successful.</p>

<p>Assuming the following command line (which authenticates just fine and tries to install):</p>

<pre><code>pip install git+ssh://git@github.com/BlahCo/search/tree/prod_release_branch/ProductName
</code></pre>

<p>What needs to reside in the ProductName?  Is it the contents of what would normally be in the tar file after running setup.py with the sdist option, or is the actual tar.gz file, or something else?</p>

<p>I'm asking here because I've tried several variations and can't make it work.  Any help appreciated.</p>
","115","78559","<python><git><pip>"
"10605405","1","What does each of the [y,n,q,a,d,/,K,j,J,g,e,?] stand for in context of git -p","<p>When using -p mode of <code>git add -p</code> or <code>git stash -p</code> what does each of the letters stand for?</p>

<p>I'm guessing <code>y</code> is yes and <code>n</code> is no. What are the rest?</p>

<blockquote>
  <p>[y,n,q,a,d,/,K,j,J,g,e,?]</p>
</blockquote>
","90","10264","<git>"
"24942161","1","Does NPM ignore files listed in .gitignore?","<p>I have a file that is generated by <code>npm install</code> command (using <code>preinstall</code> task). I don't want to add it in the git repository, nor in the NPM project.</p>

<p>Supposing the file name is <code>foo.json</code>, I added it in <code>.gitignore</code> file as <code>foo.json</code>.</p>

<p>Is this enough to avoid uploading it on NPM registry?</p>

<p>I know I can add <code>.npmignore</code> file that will surely ignore the file, but I won't add it if <code>.gitignore</code> already does this.</p>
","32","8494","<json><node.js><git><npm>"
"5765645","1","Should you commit .gitignore into the Git repos?","<p>Do you think it is a good practice to commit .gitignore into a Git repo?</p>

<p>Some people don't like it, but I think it is good as you can track the file's history. Isn't it?</p>
","248","53779","<git><gitignore>"
"5813726","1","Troubleshooting git push - it asks for a user/pass","<p>I'm using git on a new git linux computer. When I do <code>git push</code>, it me asks for user/password.</p>

<p>I've setup git properly, and in fact cloning the repo from github into a new folder works perfectly (using my public key, not the readonly copy). When I try to push from a previous clone I made to the same repo I get prompted for a user/pass.</p>

<p>Of course sshing into git@github.com works, and I made sure my public key is configured in github. Any ideas how to continue debugging?</p>
","42","14980","<git><github>"
"10510462","1","Force ""git push"" to overwrite remote files","<p>I want to push my local files, and have them on a remote repo, without having to deal with merge conflicts. I just want my local version to have priority over the remote one.</p>

<p>How can I do this with Git?</p>
","245","170855","<git><git-push>"
"5917249","1","Git Symlinks in Windows","<p>The problem:
Our developers use a mix of Windows and Unix based OS's.  Therefore, symlinks created on Unix machines become a problem for Windows developers.  In windows (msysgit), the symlink is converted to a text file with a path to the file it points to.  Instead, I'd like to convert the symlink into an actual Windows symlink.</p>

<p>The (<strong>updated</strong>) solution I have to this is:</p>

<ul>
<li>Write a post-checkout script that will recursively look for ""symlink"" text files.</li>
<li>Replace them with windows symlink (using mklink) with same name and extension as dummy ""symlink""</li>
<li>Ignore these windows symlink by adding entry into .git/info/exclude </li>
</ul>

<p>I have not implemented this, but I believe this is a solid approach to this problem.  </p>

<p>The question I have for you is:</p>

<ol>
<li>What, if any, downsides do you see to this approach?</li>
<li>Is this post-checkout script even implementable?  i.e. can I recursively find out the dummy ""symlink"" files git creates?</li>
<li>Has anybody already worked on such script? =)</li>
</ol>

<p>Thanks a bunch!</p>
","119","38885","<windows><git><symlink>"
"5814319","1","Git submodule push","<p>If I modify a submodule, can I push the commit back to the submodule origin, or would that require a clone?
If clone, can I store a clone inside another repository?</p>
","58","34962","<git><git-submodules>"
"15324900","1","Standard to follow when writing git commit messages","<p>I find myself managing very many files (over 60 but below 70) and my commit messages so far follow this pattern:
when I have added something like on <code>layout.css</code>, my commit message is <em>""added something on layout.css file""</em>, and when I remove something, my commit message is <em>""removed something from layout.css file""</em>.</p>

<p>Some files down the line, I look at my commits feed and <em>added...</em> and  <em>removed...</em> messages dominate. Sometimes I don't remember what I removed or what I added in <code>layout.css</code> since I make so many changes at a go and so I struggle to come up with an appropriate commit message.</p>

<p>Is there a standard I should follow to help me come up with my commit messages?</p>
","47","34051","<git><git-commit><commit-message>"
"1549146","1","Find common ancestor of two branches","<p>How do I find the most recent common ancestor commit of two Git branches?</p>
","360","55138","<git>"
"3419658","1","understanding git fetch then merge","<p>Coming from an svn background, I had this question:</p>

<p><a href=""http://stackoverflow.com/questions/1138990/git-equivalent-of-svn-status-u"">http://stackoverflow.com/questions/1138990/git-equivalent-of-svn-status-u</a></p>

<p>(what is the git equivalent of <code>svn status -u</code>)</p>

<p>And I understand, you do:</p>

<pre><code>git fetch
git log ..origin/master
</code></pre>

<p>But, I'm guessing the <code>origin/master</code> part depends on the branch? It wouldn't necessarily be master if I was tracking a remote branch?</p>

<p>I also don't understand the <code>git merge origin/master</code> precisely.  I'm guessing that just means that <code>git fetch</code> grabbed the changes from the remote and put them into the git database system as origin/master and I'm in just master?  What if I fetched changes, check what was done, am horrified by the changes and don't want to merge?  How do I basically abandon them?  </p>
","43","33844","<git>"
"4251940","1","Retrospectively add --recursive to a git repo","<p>If you <code>git clone</code> with <code>--recursive</code>, you can get all the git submodules too.</p>

<p>If I've forgotten to add this magical flag when cloning, as can happen, how do I now go and get any submodules?</p>

<p>Additionally, how can I set the recursive flag as a default for future clones?</p>
","33","7512","<git><version-control><git-submodules><git-clone>"
"5815448","1","How to undo a git pull?","<p>I would like to undo my git pull on account of unwanted commits on the remote origin, but I don't know to which revision I have to reset back to.</p>

<p>How can I just go back to the state before I did the git pull on the remote origin? </p>
","99","92404","<git><undo><pull>"
"1550378","1","Is it possible to push a git stash to a remote repository?","<p>In git, is it possible to create a stash, push the stash to a remote repository, retrieve the stash on another computer, and apply the stash? </p>

<p>Or are my options:</p>

<ul>
<li>Create a patch and copy the patch to the other computer, or</li>
<li>Create a minor branch and commit the incomplete work to that branch?</li>
</ul>
","105","30820","<git><git-stash>"
"5816134","1","Finding a Git commit that introduced a string in any branch","<p>I want to be able to find a certain string which was introduced in any commit in
any branch, how can I do that? I found something (that I modified for Win32),
but <code>git whatchanged</code> doesn't seem to be looking into the different branches
(ignore the py3k chunk, it's just a msys/win line feed fix)</p>

<pre class=""lang-sh prettyprint-override""><code>git whatchanged -- &lt;file&gt; | \
grep ""^commit "" | \
python -c ""exec(\""import sys,msvcrt,os\nmsvcrt.setmode(sys.stdout.fileno(), os.O_BINARY)\nfor l in sys.stdin: print(l.split()[1])\"")"" | \
xargs -i% git show origin % -- &lt;file&gt;
</code></pre>

<p>It doesn't really matter if your solution is slow.</p>
","156","26764","<git><search>"
"8198105","1","How does git store files?","<p>I just started learning git and to do so I started reading <a href=""http://book.git-scm.com/"">the Git Community Book</a>, and in this book they say that SVN and CVS store the difference between files and that git stores a snapshot of all the files.</p>

<p>But I didn't really get what they mean by snapshot. Does git really make a copy of all the files in each commit because that's what I understood from their explanation.</p>

<p>PS: If any one has any better source to learn git I would appreciate it.</p>
","92","24707","<git>"
"5917956","1","Why is indentation in empty lines bad?","<p>Every FOSS project I know has rules against trailing whitespace in code. But I think it's very natural to continue the current indentation on the next line:</p>

<pre><code>int main()
{
....int a = 42;
....
....return a;
}
</code></pre>

<p>But git for instance throws warnings anyway. So my question is: Why are those tabs <em>inside</em> the current indentation bad?</p>

<p>I'm not looking for answers like ""It's always done this way"". Let's assume indentation is done <em>consistently</em> in the whole project in question.</p>
","33","1572","<c++><git><coding-style><indentation>"
"3471827","1","How do I list all remote branches in Git 1.7+?","<p>I've tried <code>git branch -r</code>, but that only lists remote branches that I've tracked locally. How do I find the list of those that I haven't? (It doesn't matter to me whether the command lists <em>all</em> remote branches or only those that are untracked.)</p>
","195","98387","<git><branch><git-branch><remote-branch>"
"1662205","1","How to make a git repository read-only?","<p>I have some git repositories accessed remotely through SSH and I want to make some of them read-only to prevent more pushes. Some people have remotes pointing to these repositories.</p>

<p>These bare repositories were initialised <code>--shared=group</code>, so is setting file permissions to 660 for all files good enough to still allow SSH access, but disallow writes? Or is there an easier way?</p>

<p>Cheers.</p>
","36","28684","<git><readonly>"
"12940626","1","GitHub Error Message - Permission denied (publickey)","<p>Anybody seen this error and know what to do?</p>

<p>I'm using the terminal, I'm in the root, the GitHub repository exists and now I don't know what to do now...thanks.</p>

<blockquote>
<pre><code>git push -u origin master
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
</blockquote>
","232","276831","<git><github>"
"8200622","1","how to remove untracked files in Git?","<p>I'm working on a branch, say ""experimental"" branch which I branch out from my master branch.Then, I generate a user model in experimental branch, but does not add them to index yet.</p>

<p>What do I have to do if I want to discard all the changes of the files recently added in my experimental branch? The untracked files are listed as below:</p>

<pre><code>$ git status
 On branch new_chick
 Untracked files:
   (use ""git add &lt;file&gt;..."" to include in what will be committed)

       .project
       app/models/user.rb
       db/migrate/
       test/fixtures/users.yml
       test/unit/user_test.rb
</code></pre>

<p>I tried to run ""git reset --hard"" in hope to undo all those changes, but all the files above still show.</p>

<p>Anyone please shed some light on me?</p>
","37","18997","<git>"
"1662753","1","Export subtree in Git with history","<p>I have a folder in my Git repository that I'd like to move out in to its own repository. Is it possible to move the history of that folder along with the folder?</p>

<p>I've previously been doing just a <code>git rm -r --cached subfolder/</code> and then <code>git init</code> on the subfolder. However, the history is not imported in to the new repository.</p>
","44","7327","<git><import><export><history>"
"12987907","1","Git: How to commit a manually deleted file?","<p>In my git repository I manually deleted a file(<code>rm</code>) after moving it to another folder. I than committed all the changes to my repo but now when I do <code>git status .</code></p>

<pre><code>ronnie@ronnie:/home/github/Vimfiles/Vim$ git status .
# On branch master
# Changes not staged for commit:
#   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       deleted:    plugin/dwm.vim
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Now, how should I commit so that <code>dwm.vim</code> is deleted from the plugin folder in my remote repo. I know that I have to use <code>git add &amp;&amp; git commit</code> but I have no file to commit/add because <code>/plugin/dwm.vim</code> is already deleted.</p>
","31","47893","<git><github>"
"3527856","1","Show git diff on file in staging area","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1587846/how-do-i-show-the-changes-which-have-been-staged"">How do I show the changes which have been staged?</a>  </p>
</blockquote>



<p>Is there a way I can see the changes that were made to a <code>file</code> after I have done <code>git add file</code>?</p>

<p>That is, when I do: </p>

<pre><code>git add file
git diff file
</code></pre>

<p>no diff is shown. I guess there's a way to see the differences since the last commit but I don't know what that is.</p>
","433","108789","<git><git-diff><git-stage>"
"3528245","1","Whats the difference between git reset --mixed, --soft, and --hard?","<p>I am looking to split a commit up and not sure which reset option to use.</p>

<p>I was looking at the page <a href=""http://stackoverflow.com/questions/2530060/can-you-explain-to-me-git-reset-in-plain-english"">Can you explain what &quot;git reset&quot; does in plain english?</a>, but I realized I don't really understand what the git index or staging area is and thus the explanations didn't help.</p>

<p>Also the use cases for <code>--mixed</code> and <code>--soft</code> look the same to me in that answer (when you want to fix and recommit.) Can someone break it down even more?  I realize <code>--mixed</code> is probably the option to go with, but I want to know <em>why</em>. Lastly, what about <code>--hard</code>?</p>

<p>Can someone give me a workflow example of how selecting the 3 options would happen?</p>
","264","47087","<git><version-control>"
"18693006","1","Git undo merge attempt","<p>I have working directory (#1) which has vendor directory(#2) in it. There is one dependency which I wanted to pull manually without composer (php version of npm/gem). I was working in #1, haven't saved/commited changes, when I decided I want to update library in #2. I navigated to vendor/myname, and did git pull repository.</p>

<p>Unfortunately it started to pull and merge to #1, instead of creating new directory in vendor folder.</p>

<p>Now I have:</p>

<ul>
<li>#1 folder with my changes</li>
<li>#1 folder with files I don't want from wrong repository</li>
<li>#1 merge conflicts such as composer.json, Readme.md... (general files)</li>
</ul>

<p>I want to ""undo"" this last git pull without loosing any changes I did to folder #1. How can I do this?</p>
","31","9917","<git><git-merge><git-pull>"
"13969050","1","How to create a new empty branch for a new project","<p>We are using a git repository to store our project. We have our branches departing from the original branch. But now we want to create a small new project to track some documentation. For that we would want to create a new empty branch to start storing our files, and I would want other users of the network to clone that branch.</p>

<p>How can we do that?</p>

<p>I tried some things, but they didnt work.</p>

<pre><code>$ mkdir proj_doc; cd proj_doc
$ git init
$ git add .
$ git commit -m 'first commit'
$ git br proj_doc
$ git co proj_doc
$ git br -d master
$ git push origin proj_doc
</code></pre>

<p>It seems to push the branch ok, but when I do a fetch or pull, it downloads information from other branches, and then I also get some extra files from other projects. What's the best solution?</p>
","107","34258","<git><branch><git-branch>"
"16329776","1","How to keep a git branch in sync with master","<p>At the moment git is doing my head in, I cannot come up with the best solution for the following.</p>

<p>There are two branches, one called <strong>master</strong> and one called <strong>mobiledevicesupport</strong>. I want to keep mobiledevicesupport as a continuous branch that will be merged/synced with the master branch whenever mobiledevicesupport is stable. This would merge changes from mobiledevicesupport into master but also bring all the changes from master into mobiledevicesupport so that branch can continue to be worked on and the features improved or amended. This needs to work with a central repository and multiple developers.</p>

<p>Please an example of similar workflows other people use or just tell me if this idea is stupid and I should consider other options. At the moment the workflow seems sound, but I just don't know how I can make git work this way.</p>

<p>Thanks, all help much appreciated.</p>

<p>Update 1:
If I was to merge master into mobiledevicesupport and mobiledevice support into master, do I get replicated commits across both branches. Or is git smart enough to work out that I have pulled the latest changes from branch A into branch B and add merge commit C to branch B. And I have pulled the latest changes from branch B into branch A and add merge commit D to branch A?</p>

<p>I was going to post an image but I don't have enough reputation for it, so I guess the following illustration will have to do. Two branches continuously running with merges going both directions often. The key thing I am not sure about is how git will play out the commits and will it fill either branch with the commits from the other branch on merges or will it stay clean. I have used rebase before but it seems to end the branch and put all the commits into the master, or I did it wrong. Thanks for the help so far.</p>

<pre><code>master
A--B--C-----H--I--J--M--N
       \   /    \
mobile  \ /      \
D--E--F--G--------K--L
</code></pre>
","85","62109","<git>"
"11744081","1","Why is git prompting me for a post-pull merge commit message?","<p>Recently, following any <code>git pull</code>, git has started spawning my text editor, and asking for a merge commit message. A commit message is already pre-filled, and I just have to save and close the window to complete the pull.</p>

<p>In the past, it would do the merge silently, with a standard commit message (along the lines of <code>Merge branch 'dev' of remote.com:/repo into dev</code>).</p>

<p>I recently updated git to version 1.7.11.3 (via homebrew), but can't think of anything else I might have done to change this behavior. Is this a setting, or is there otherwise some way of getting back to the way it was?</p>
","73","25461","<git><git-pull>"
"16330404","1","how to remove remote origin from git repo","<p>I am new to git. I just did <code>git init</code> to initialize my folder as git repo and then added a remote repository using <code>git remote add origin url</code>. Now I want to remove this <code>git remote add origin</code> and add a new repository <code>git remote add origin new-url</code>. How can I do it?</p>
","364","203375","<git><git-remote>"
"9392365","1","How would git handle a SHA-1 collision on a blob?","<p>This probably never happened in the real-world yet, and may never happen, but let's consider this: say you have a git repository, make a commit, and get very very unlucky: one of the blobs end up having the same SHA-1 as another that is already in your repository. Question is, how would git handle this? Simply fail? Find a way to link the two blobs and check which one is needed according to the context?</p>

<p>More a brain-teaser than an actual problem, but I found the issue interesting.</p>
","154","21261","<git><hash-collision>"
"21523481","1","Symfony2 - creating own vendor bundle - project and git strategy","<p>We consider creating our own <code>common</code> bundle for entity mapping and services for use within few separate apps.  Bundle should be easy to modify, run, include and test. I know about <a href=""http://symfony.com/doc/current/cookbook/bundles/best_practices.html"">Best Practices for Structuring Bundles</a>, but I don't know what <code>git</code> strategy to use when it comes to development.</p>

<p>Should we create <code>common</code> bundle as a whole project and commit whole repository to our git server, or is it better to start source control only for root of <code>common</code> bundle and push only its contents? I see this approach in bundles available on <code>github</code>, but I don't know easy and comfortable way to develop bundles that way.</p>
","51","16212","<php><git><symfony2><bundle>"
"28189880","1","Why am I getting ""Commit failed with error: pathspec ... did not match any file(s)""?","<p>I am having some issues with Git.</p>

<p>I have a repository where I can commit any file to without problem. However, there is a single file 'Funder.php' which, when I try committing, tells me there is an error  as:</p>

<pre><code>Commit failed with error:
pathspec 'application/libraries/Funder.php' did not match any file(s) known to git.
</code></pre>

<p>I am quite new to this, so was wondering if anybody could please help?</p>
","36","34261","<git><git-commit>"
"14095867","1","git pull - can't submit merge message","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/14046122/github-locks-up-mac-terminal-when-using-pull-command"">github locks up mac terminal when using pull command</a>  </p>
</blockquote>



<p>I am using git via the terminal on the mac.
I have encountered an annoying problem recently when I try to perform <code>git pull</code>.
After performing <code>git pull</code> I receive the following error message:</p>

<pre><code>Merge ssh://domain.com/repository.git
# Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#
# Lines starting with '#' will be ignored, and an empty message aborts:
# the commit.
</code></pre>

<p>The issue is that I can't enter anything. My terminal seems stuck and there isn't anything I seem to be able to do about it. I am reasonably new to git so it may be a simple mistake I am making.</p>

<p>I read <a href=""http://stackoverflow.com/questions/11744081/why-is-git-prompting-me-for-a-post-pull-merge-commit-message"">here</a> that for some people the text editor opens at this point. This certainly isn't the case at my end. It also states there that I can use the --no-edit flag to merge without a message, but even this does not seem to work at my end.</p>

<p>I am a bit clueless at the moment, stuck and unable to push any changes to my server ;-)</p>

<p>Thank you very much for any help provided!</p>
","43","26633","<git><git-merge><git-pull><commit-message>"
"11868447","1","How can I remove an entry in global configuration with git config?","<p>I ran a global configuration command in git to exclude certain files using a .gitignore_global file:</p>

<pre><code>git config --global core.excludesfile ~/.gitignore_global
</code></pre>

<p>Is there a way to undo the creation of this setting globally?</p>
","66","36228","<git>"
"5519244","1","Are there any downsides to enabling git rerere?","<p>I've read various things about git's rerere feature, and I'm considering enabling it. But I haven't seen anyone mention any possible problems that could arise while using it. I have to assume there is a downside, or it would probably be enabled by default. So is there any downside to enabling rerere? What potential problems can it cause that would not otherwise occur?</p>
","54","6350","<git><merge><git-rerere>"
"10274879","1","How to contribute on github anonymously via Tor?","<p>I would like to contribute anonymously to projects on github. Not to cause mischief, more in the spirit of anonymous donations. </p>

<p>The tool of choice for being anonymous online seems to be TOR, which works well for almost anything you can do in a browser. However, to contribute on github, it appears necessary to use the command line interface, or the Mac app. </p>

<p>How can I channel my git operations in this setup through Tor? And how can I verify that this is actually what is happening?</p>

<p><strong>Edit:</strong> please note the difference between <em>pseudonymous</em> (with a fake e-mail address) and <em>anonymous</em> (with an IP address that cannot be associated with an identity). Pseudonymous access to github is trivial; however, I am looking for anonymous access. </p>
","33","5630","<git><github><privacy><anonymous><tor>"
"17563726","1","How to see the changes in a commit?","<p>When I do <code>git diff COMMIT</code> I see the changes between that commit and HEAD (afaik) but I would like to see the changes that were made by that single commit.</p>

<p>I haven't found any obvious options on diff/log that will give me that output.</p>
","376","181784","<git><version-control><diff><git-diff>"
"1269566","1","Unable to determine upstream SVN information from HEAD history","<p>Why do I get this error message?</p>
","47","29197","<git><git-svn>"
"9393462","1","Cannot launch git gui using cygwin on windows","<p>I used to launch git gui within my cygwin console without any problems but since I updated cygwin I've got the following error message:</p>

<pre><code>$ git gui
Application initialization failed: no display name and no $DISPLAY environment variable
Error in startup script: invalid command name ""tk_messageBox""
    while executing
""tk_messageBox  -icon error  -type ok  -title ""git-gui: fatal error""  -message $err""
    invoked from within
""if {[catch {package require Tcl 8.4} err]
 || [catch {package require Tk  8.4} err]
} {
        catch {wm withdraw .}
        tk_messageBox \
                -icon error \
                -typ...""
    (file ""/usr/lib/git-core/git-gui"" line 34)
</code></pre>

<p>Anyone who knows how to solve this?</p>
","51","30754","<git><cygwin><tcl><x11><tk>"
"1270514","1","Undoing a 'git push'","<p>Here's what I did on my <em>supposed-to-be-stable</em> branch...</p>

<pre class=""lang-bash prettyprint-override""><code>% git rebase master
First, rewinding head to replay your work on top of it...
Fast-forwarded alpha-0.3.0 to master.
% git status
# On branch alpha-0.3.0
# Your branch is ahead of 'origin/alpha-0.3.0' by 53 commits.
#
nothing to commit (working directory clean)
% git push
Fetching remote heads...
  refs/
  refs/heads/
  refs/tags/
  refs/remotes/
'refs/heads/master': up-to-date
updating 'refs/heads/alpha-0.3.0'
  from cc4b63bebb6e6dd04407f8788938244b78c50285
  to   83c9191dea88d146400853af5eb7555f252001b0
    done
'refs/heads/unstable': up-to-date
Updating remote server info
</code></pre>

<p>That was all a mistake as I later realized. I'd like to undo this entire process, and revert the alpha-0.3.0 branch back to what it was.</p>

<p>What should I do?</p>
","307","245862","<git><git-push>"
"5600659","1","Rebasing a branch including all its children","<p>I have the following Git repository topology:</p>

<pre><code>A-B-F (master)
   \   D (feature-a)
    \ /
     C (feature)
      \
       E (feature-b)
</code></pre>

<p>By rebasing <code>feature</code> branch I expected to rebase the whole subtree (including child branches):</p>

<pre><code>$ git rebase feature master

A-B-F (master)
     \   D (feature-a)
      \ /
       C (feature)
        \
         E (feature-b)
</code></pre>

<p>However, this is the actual result:</p>

<pre><code>      C' (feature)
     /
A-B-F (master)
   \   D (feature-a)
    \ /
     C
      \
       E (feature-b)
</code></pre>

<p>I know I can easily fix it manually by executing:</p>

<pre><code>$ git rebase --onto feature C feature-a
$ git rebase --onto feature C feature-b
</code></pre>

<p>But is there a way to automatically rebase branch including all its children/descendants?</p>
","62","7036","<git><version-control><branch><rebase><git-rebase>"
"5600621","1",".gitignore exclude files in directory but not certain directories","<pre><code>application/cache/*
application/cache/folder/*
application/cache/folder/onemorefolder/*
</code></pre>

<p>This doesn't seem to be working. When I clone the project, there is no <code>""application/cache""</code> folder or <code>""application/cache/folder""</code> folder, etc...</p>

<p>I'd like if files in the cache folders weren't cached but folders were, so that the folders permissions transfer and exist.</p>
","58","46215","<git><gitignore>"
"3197413","1","How do I delete unpushed git commits?","<p>I accidentally committed to the wrong branch.
How do I delete that commit?</p>
","263","102517","<git>"
"3197416","1","Why doesn't ""git log -- foo"" work for deleted file foo?","<p>My repository underwent changes such as:</p>

<ol>
<li>...some unrelated commits...</li>
<li>Commit new file <code>foo</code> with 100 lines of content</li>
<li>...intervening commits, some of which touch <code>foo</code>...</li>
<li>Insert the contents of <code>foo</code> at the top of an existing file <code>bar</code> and <code>git rm foo</code> in the same commit</li>
<li>...more unrelated commits...</li>
</ol>

<p>Now I want to see the log of deleted file <code>foo</code>.  Everything I've read, including on SO, says I should be able to <code>git log -- foo</code>, but that command produces no output.</p>

<p>If I find the commit that includes deleting <code>foo</code> I can <code>git log 1234abcd -- foo</code> and see its log, so I think my path to <code>foo</code> isn't the problem.  Also note that <code>git merge-base HEAD 1234abcd</code> outputs <code>1234abcd[...]</code>, so I think that should prove the commit is reachable from <code>HEAD</code>.  Note that there is no file <code>foo</code> in my working tree (obvious, since it was deleted).  Using Git 1.7.1.1 on OS X.</p>

<p>Why doesn't <code>git log -- foo</code> work for me and how can I fix it?  Thanks!</p>
","73","19118","<git><git-log>"
"12694510","1","How to emulate git log --decorate's different colors per branch-type","<p>In making my favorite git log view I've created this alias:</p>

<p><code>graph = log --pretty=format:'%Cgreen%ad%Creset %C(yellow)%h%Creset%C(yellow)%d%Creset %s %C(cyan)[%an]%Creset %Cgreen(%ar)%Creset' --date=short --graph</code></p>

<p>This creates an output like:</p>

<p><img src=""http://i.stack.imgur.com/Rokye.png"" alt=""Git log result with own coloring""></p>

<p>What I'm missing here is the different coloring of branch types like in <code>log --oneline --decorate --graph</code>.</p>

<p><img src=""http://i.stack.imgur.com/nx1Lk.png"" alt=""Git log result with --decorate(=short)""></p>

<p>The --decorate (which uses =short by default) gives the different recognized branches a different color. The branch types <code>(HEAD, origin/master, origin/HEAD, master)</code> are colored cyan, red, red, green. Mine however are uncolored; colored only with the yellow of the whole branches part.</p>

<p><strong>Is there a way to give different colors to the different <em>kind</em> of branches with an own alias?</strong></p>
","31","2404","<git><git-config>"
"3239759","1","Checkout remote branch using git svn","<p>I have checked out a svn repository using git svn. Now I need to checkout one of the branches and track it. Which is the best way to do it?</p>
","146","69488","<git><git-svn>"
"1360712","1","Git stash: ""Cannot apply to a dirty working tree, please stage your changes""","<p>I am trying to apply changes I stashed earlier with <code>git stash pop</code> and get the message:</p>

<pre><code>Cannot apply to a dirty working tree, please stage your changes
</code></pre>

<p>Any suggestion on how to deal with that?</p>
","118","39445","<git><git-stash>"
"3240881","1","Git: can I suppress listing of 'modified content'/dirty submodule entries in status, diff, etc?","<p>Somewhen (around the 1.6.x releases, I think) git became aware of changes inside submodules. That only serves to annoy me:</p>

<pre>
$ git status vendor | grep modified:
#       modified:   vendor/rails (modified content)
</pre>

<pre>
$ git diff vendor/
diff --git a/vendor/rails b/vendor/rails
--- a/vendor/rails
+++ b/vendor/rails
@@ -1 +1 @@
-Subproject commit 046c900df27994d454b7f906caa0e4226bb42b6f
+Subproject commit 046c900df27994d454b7f906caa0e4226bb42b6f-dirty
</pre>

<p>Please make it stop?</p>

<h3>Edit:</h3>

<p>Ok, so I have an answer. Now I have another question:</p>

<p>Can I put this in <code>~/.gitconfig</code>? From my initial it appears that I cannot, and I didn't see anything promising by skimming the patch. (I guess I can still make an alias.)</p>
","76","24559","<git><git-submodules><git-config>"
"5685007","1","Making 'git log' ignore changes for certain paths","<p><strong>How can I make <code>git log</code> only show commits that changed files other than the ones I specify?</strong></p>

<p>With <code>git log</code>, I can filter the commits I see to those that touch a given set of paths. What I want is to invert that filter so that only commits that touch paths other than the specified ones will be listed.</p>

<p>I can get what I want with</p>

<pre><code>git log --format=""%n/%n%H"" --name-only | ~/filter-log.pl | git log --stdin --no-walk
</code></pre>

<p>where <code>filter-log.pl</code> is:</p>

<pre><code>#!/usr/bin/perl
use strict;
use warnings;

$/ = ""\n/\n"";
&lt;&gt;;

while (&lt;&gt;) {
    my ($commit, @files) = split /\n/, $_;

    if (grep { $_ &amp;&amp; $_ !~ m[^(/$|.etckeeper$|lvm/(archive|backup)/)] } @files) {
        print ""$commit\n"";
    }
}
</code></pre>

<p>except I want something somewhat more elegant than that.</p>

<p>Note that I am <em>not</em> asking how to make git ignore the files. These files <em>should</em> be tracked and committed. It's just that, most of the time, I'm not interested in seeing them.</p>

<p>Related question: <a href=""http://stackoverflow.com/questions/5602204/how-to-invert-git-log-grep-pattern-or-how-to-show-git-logs-that-dont-match"">How to invert `git log --grep=&lt;pattern&gt;` or How to show git logs that don&#39;t match a pattern</a> It's the same question except for commit messages rather than paths.</p>

<p>Forum discussion on this subject from 2008: <a href=""http://kerneltrap.org/mailarchive/git/2008/10/18/371624"">Re: Excluding files from git-diff</a> This looked promising but the thread seems to have dried up.</p>
","47","5908","<git>"
"8026429","1","Should I git ignore xcodeproject/project.pbxproj file?","<p>in a XCode project, I offen got xcodeproject/project.pbxproj file changed, but useless info for me, it for compile.</p>

<p>Should I git ignore this file and xcodeproject/projectxworkspace/username.xcuserdata/UserInterfaceState.xcuserstate file?</p>
","46","15340","<ios><xcode><osx><git>"
"1408450","1","Why should I use version control?","<p>I was reading a blog where the writer said this  </p>

<blockquote>
  <p><strong>""Code doesn’t exist unless it’s checked into a version control system. Use version control for everything you do. Any version control, SVN, Git, even CVS, master it and use it.""</strong>  </p>
</blockquote>

<p>I have never used any sort of version control and I do not find it that great. I have googled it and looked at it before, but I just need it put into children's terms if you will please.  </p>

<p>As I understand it right now, things like SVN are for storing your code online for a group of users or other developers to have access to the same code. Once you update some code, you can submit the new version and the SVN will keep copies of old code as well as the new ones you update.  </p>

<p>Is this the basic idea of it or am I getting it completely wrong?  </p>

<p>If I am right, then it might not be much use if I:</p>

<ul>
<li>Do not have other people working on the code.</li>
<li>Do not plan on letting others have the code.</li>
</ul>
","93","33247","<svn><git><version-control><cvs>"
"1408790","1","How do I pull my project from github?","<p>I have a project on github that I have been working on before.  However, I wiped out my computer and I am wondering which git command should I invoke under my username to checkout my project again so that I can push my latest changes to github under my account.</p>
","87","91382","<git><github>"
"12773488","1","Git fatal: Reference has invalid format: 'refs/heads/master","<p>I am using <code>Dropbox</code> to sync a <code>git</code> repository, but now when I try and <code>push</code> I am getting an error:</p>

<pre><code>fatal: Reference has invalid format: 'refs/heads/master (MacBook-Pro's conflicted copy 2012-10-07)'
</code></pre>

<p>So, it seems that Dropbox detected a conflict and created a copy. Ok, no problem, so I deleted the conflicted file. Still, getting the above git error though.</p>

<pre><code>$ git checkout master
    M   index.html
    Already on 'master'
$ git add .
$ git commit -a -m ""Cleanup repo""
    [master ff6f817] Cleanup repo
    1 file changed, 5 insertions(+), 5 deletions(-)
$ git push
    fatal: Reference has invalid format: 'refs/heads/master (MacBook-Pro's conflicted copy 2012-10-07)'
    The remote end hung up unexpectedly`
</code></pre>

<p>How can I fix this? Thanks.</p>
","90","25717","<git><dropbox>"
"20106712","1","What are the differences between git remote prune, git prune, git fetch --prune, etc","<p>My situation is this... someone working on the same repo has deleted a branch from his local &amp; remote repo...</p>

<p>Most people who have asked about this kind of problem on Stack Overflow, or other sites have the issue of branches still showing in their remote tracking branch list <code>git branch -a</code> at the bottom:</p>

<pre><code>* master
  develop
  feature_blah
  remotes/origin/master
  remotes/origin/develop
  remotes/origin/feature_blah
  remotes/origin/random_branch_I_want_deleted
</code></pre>

<p>However, in MY situation the branch that shouldn't be there, is local:</p>

<pre><code>* master
  develop
  feature_blah
  random_branch_I_want_deleted
  remotes/origin/master
  remotes/origin/develop
  remotes/origin/feature_blah
</code></pre>

<p>When I do any of the following, it doesn't get removed locally:</p>

<pre><code>$ git prune
</code></pre>

<p>I also tried:</p>

<pre><code>$ git remote prune origin
$ git fetch --prune
</code></pre>

<p>More useful info:  When I check <code>git remote show origin</code> this is how it looks:</p>

<pre><code>* remote origin
Fetch URL: utilities:homeconnections_ui.git
Push  URL: utilities:homeconnections_ui.git
HEAD branch: master
Remote branches:
 master                        tracked
 develop                       tracked
 feature_blah                  tracked
 other123                      tracked
 other444                      tracked
 other999                      tracked
Local branches configured for 'git pull':
 develop                      merges with remote develop
 feature_blah                 merges with remote other999
 master                       merges with remote master
 random_branch_I_want_deleted merges with remote random_branch_I_want_deleted
Local refs configured for 'git push':
 develop         pushes to develop     (local out of date)
 master          pushes to master      (up to date)
 feature_blah    pushes to feature_blah(up to date)
</code></pre>

<p>Notice that it's only in the section titled <code>Local branches configured for 'git pull':</code></p>

<p>Why?</p>
","77","47875","<git><remote-branch>"
"1456269","1","Python Git Module experiences?","<p>What are people's experiences with any of the Git modules for Python?  (I know of GitPython, PyGit, and Dulwich - feel free to mention others if you know of them.)</p>

<p>I am writing a program which will have to interact (add, delete, commit) with a Git repository, but have no experience with Git, so one of the things I'm looking for is ease of use/understanding with regards to Git.</p>

<p>The other things I'm primarily interested in are maturity and completeness of the library, a reasonable lack of bugs, continued development, and helpfulness of the documentation and developers.</p>

<p>If you think of something else I might want/need to know, please feel free to mention it.</p>
","129","53908","<python><git>"
"1457103","1","How is a tag different from a branch? Which should I use, here?","<p>This is probably an easy question, but I'm having some difficulty understanding how to use tags vs. branches in Git.  If there's some documentation I should be reading, feel free to just point me to it.</p>

<p>I just moved the current version of our code from CVS to Git, and now I'm going to be working on a subset of that code for a particular feature.  A few other developers will be working on this as well, but not all developers in our group are going to care about this feature.  Should I be creating a branch or a tag?  What's the general idea for when I should be using one versus the other?</p>
","321","86713","<git><branch><git-tag>"
"8070017","1","How to import a GIT non-Eclipse Java project into Eclipse?","<p>I have some problems importing a Java project into my workspace. I am following <a href=""http://www.vogella.de/articles/EGit/article.html#respository_checkoutproject"">this tutorial</a> - however I can not use the final <strong>Import existing projects</strong> step because the GIT repository I use does not include the Eclipse specific <code>.project</code> and <code>.classpath</code> files.</p>

<h2>Use the New Projects wizard</h2>

<p>Therefore the project is not recognizes as project and hence can not be imported. Therefore I tried my luck using the option <strong>Use the New Projects wizard</strong> and select ""Java Project"" in the next dialog. The problem is that this creates a new Java project without any content!
The project is also not connected to the GIT repository.</p>

<p>Edit: This is a known bug of eGIT: <a href=""https://bugs.eclipse.org/bugs/show_bug.cgi?id=324145"">Bug 324145 - Project import doesn't work for abitary project types</a> - if you want this problem fixed vote for it...</p>

<h2>Import as general Project</h2>

<p>If I use <strong>Import as general Project</strong> Eclipse always wants to use the external repository directory as project directory which is not what I want and additionally the created Project is not Java-enabled. </p>

<p><strong>Therefore I am asking why it is so complicated to import a Java project into Eclipse using eGIT?</strong></p>
","41","25490","<java><eclipse><git><import><egit>"
"5730460","1","How to do a git diff on moved/renamed file?","<p>I moved a file using <code>git mv</code>. Now I would like to do a diff on the new file to compare it with the old file (with the old, now non-existent name). </p>

<p>How do I do this?</p>
","66","10287","<git><diff><mv>"
"10434326","1","Hash collision in git","<p>What would actually happen if I had a hash collision while using git?</p>

<p>E.g. I manage to commit two files with the same sha1 checksum,
would git notice it or corrupt one of the files?</p>

<p>Could git be improved to live with that, or would I have to change to a new hash algorithm?</p>

<p>(Please do not deflect this question by discussing how unlikely that is - Thanks)</p>
","76","16753","<git><hash><sha1><hash-collision>"
"3333102","1","Is ""git push --mirror"" sufficient for backing up my repository?","<p>I'm a solo developer, working in a local Git repository. For backups, I want to send an exact copy of that repository off to another server.</p>

<p>Is it sufficient to do this?</p>

<pre><code>git push --mirror
</code></pre>

<p>I'm asking because I can sometimes run this command two or three times before Git tells me ""Everything up-to-date"", so apparently it's not an exact mirror. It seems to be re-pushing tracking branches...?</p>

<pre><code>$ git push --mirror
Counting objects: 42, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (30/30), done.
Writing objects: 100% (30/30), 5.09 KiB, done.
Total 30 (delta 17), reused 0 (delta 0)
To ssh://my/repo/url
   c094a10..0eedc92  mybranch -&gt; mybranch
$ git push --mirror
Total 0 (delta 0), reused 0 (delta 0)
To ssh://my/repo/url
   c094a10..0eedc92  origin/mybranch -&gt; origin/mybranch
$ git push --mirror
Everything up-to-date
</code></pre>

<p>What is happening, and is this a good strategy?</p>

<p>Edit: I don't like to use something like <code>git bundle</code> or <code>.tar.bz2</code> archives, because I'd like the backup to be an accessible working copy. Since my backup server is connected to the net and always on, this is a nice way to access the repository when I'm on the road.</p>
","34","18415","<git><backup>"
"1459150","1","How to undo ""git commit --amend"" done instead of ""git commit""","<p>I accidentally amended my previous commit. The commit should have been separate to keep history of the changes I made to a particular file.</p>

<p>Is there a way to undo that last commit? If I do something like <code>git reset --hard HEAD^</code>, the first commit also is undone.</p>

<p>(I have not yet pushed to any remote directories)</p>
","563","94611","<git><commit><undo><amend>"
"10475273","1","git: have different .gitignore file for each remote","<p>I have a remote repo in which I want to commit certain files (the compiled files to deploy them on a cloud computing platform), but I don't want to deploy them on github...</p>

<p>is there some way to have to different .gitignore files, one for each remote?</p>
","39","5990","<git><github><gitignore>"
"3380805","1","Checkout old commit and make it a new commit","<p>On Git, say I mess up my commits, and I want to make the version 3 commits ago as the new version. If I do <code>git checkout xxxx</code>, it creates a new branch and it seems like I can only merge it? Could I make this the new ""master version""?</p>

<p>I want:</p>

<pre><code>A-B-C-D-E
</code></pre>

<p>to become</p>

<pre><code>A-B-C-D-E-F
</code></pre>

<p>where F has exactly the same content as C</p>

<p>If I use <code>git revert xxxx</code> instead, it seems like it definitely will have conflicts and I need to manually resolve it.</p>

<p>What I really want is just make the old commit at some point the new commit, regardless of what's in my working directory or the latest commit.</p>

<p>How would I go about doing this?</p>
","107","97370","<git>"
"15292391","1","Is it possible to perform a 'grep search' in all the branches of git project","<p>Is it possible to run git grep inside all the branches of a git control sourced project ? Or is there another command to run ?</p>
","48","15351","<git><grep>"
"3431361","1","Git for Windows - The Program can't start because libiconv2.dll is missing","<p>When I attempt to run certain commands (like git push, for example) from a git Bash on Windows 7 (64bit) I get the error:</p>

<pre><code>The program can't start because libiconv2.dll is missing from your computer
</code></pre>

<p>I have searched exhaustively for a solution to this.<br>
The most I can find is an issue thread at the google code site (<a href=""http://code.google.com/p/msysgit/issues/detail?id=419"">Issue 419</a>) and a few other blogs here and there. As far as I can tell none of the suggestions offered in the posts will actually solve my issue.</p>

<p>I have tried re-installing. I have tried adding <code>$GIT/bin</code> to the <code>PATH</code>.<br>
I can verify that the dll is in the <code>$GIT/bin</code> directory...but still I cannot push to remote.</p>

<p>I have a working install of msysgit on another Windows 7 box, and I installed the same way in both situations... so needless to say I am quite confused.</p>

<p>Any help on this would be most appreciated.</p>

<p>Thanks,</p>
","82","65203","<git><msysgit>"
"32056324","1","git pull: There is no tracking information for the current branch","<p>i've been using github from a relatively short period, and I've always used the client to perform commits and pulls. I decided to try it from the git bash yesterday, and I successfully created a new repo and committed files.</p>

<p>today I did changes to the repository from another computer, I've committed the changes and now I'm back home and performed a <code>git pull</code> to update my local version and i get this:</p>

<pre><code>There is no tracking information for the current branch.
    Please specify which branch you want to merge with.
    See git-pull(1) for details

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream develop origin/&lt;branch&gt;
</code></pre>

<p>the only contributor to this repo is me and there are no branches (just a master). I'm on windows and I've performed the pull from git bash (<a href=""http://prntscr.com/85picx"">http://prntscr.com/85picx</a>)</p>

<p>git status:</p>

<pre><code>$ git status
# On branch master
nothing to commit, working directory clean
</code></pre>

<p>git branch:</p>

<pre><code>$ git branch
* master
</code></pre>

<p>what am i doing wrong?</p>
","80","34744","<git><github><git-pull>"
"10523849","1","Changing capitalization of filenames in Git","<p>I am trying to rename a file to have different capitalization from what it had before:</p>

<pre><code>git mv src/collision/b2AABB.js src/collision/B2AABB.js
fatal: destination exists, source=src/collision/b2AABB.js, destination=src/collision/B2AABB.js
</code></pre>

<p>As you can see, git throws a fit over this. I tried renaming using just the plain old <code>mv</code> command as well but git doesn't pick up the rename (as a rename <em>or</em> as a new untracked file).</p>

<p>How can I change a file to have a different capitalization of the same name? I am on Mac OS X 10.7.3 with git 1.7.9.1 using zsh 4.3.15.</p>
","181","46717","<git><rename><file-rename>"
"5827944","1","Git error on commit after merge - fatal: cannot do a partial commit during a merge","<p>I ran a <code>git pull</code> that ended in conflict. I resolved the conflict files and everything is fine now (I use mergetool also).</p>

<p>When I commit the resolved file with <code>git commit file.php -m ""message""</code> I get the error:</p>

<pre><code>fatal: cannot do a partial commit during a merge.
</code></pre>

<p>I had the same issue before and using <code>-a</code> in commit worked perfectly. I think it's not the prefect way because I don't want to commit all changes. I want to commit files separately with separate comments. How can I do that? Why git doesn't allow users to commit files separately after a merge? I could not find a satisfactory answer to this problem.</p>
","135","105398","<git><commit>"
"5828324","1","Update Git submodule to latest commit on origin","<p>I have a project with a Git submodule. It is from an ssh://... URL, and is on commit A. Commit B has been pushed to that URL, and I want the submodule to retreive the commit, and change to it.</p>

<p>Now, my understanding is that <code>git submodule update</code> should do this, but it doesn't. It doesn't do anything (no output, success exit code). Here's an example:</p>

<pre><code>$ mkdir foo
$ cd foo
$ git init .
Initialized empty Git repository in /.../foo/.git/
$ git submodule add ssh://user@host/git/mod mod
Cloning into mod...
user@host's password: hunter2
remote: Counting objects: 131, done.
remote: Compressing objects: 100% (115/115), done.
remote: Total 131 (delta 54), reused 0 (delta 0)
Receiving objects: 100% (131/131), 16.16 KiB, done.
Resolving deltas: 100% (54/54), done.
$ git commit -m ""Hello world.""
[master (root-commit) 565b235] Hello world.
 2 files changed, 4 insertions(+), 0 deletions(-)
 create mode 100644 .gitmodules
 create mode 160000 mod
# At this point, ssh://user@host/git/mod changes; submodule needs to change too.
$ git submodule init
Submodule 'mod' (ssh://user@host/git/mod) registered for path 'mod'
$ git submodule update
$ git submodule sync
Synchronizing submodule url for 'mod'
$ git submodule update
$ man git-submodule 
$ git submodule update --rebase
$ git submodule update
$ echo $?
0
$ git status
# On branch master
nothing to commit (working directory clean)
$ git submodule update mod
$ ...
</code></pre>

<p>I've also tried <code>git fetch mod</code>, which appears to do a fetch (but can't possibly, because it's not prompting for a password!), but <code>git log</code> and <code>git show</code> deny the existence of new commits. Thus far I've just been <code>rm</code>-ing the module and re-adding it, but this is both wrong in principle and tedious in practice.</p>
","358","205324","<git><git-submodules>"
"20280726","1","How to git clone a specific tag","<p>From <a href=""http://git-scm.com/docs/git-clone"">git-clone(1) Manual Page</a></p>

<blockquote>
  <p><code>--branch</code> can also take tags and detaches the HEAD at that commit in the resulting repository.</p>
</blockquote>

<p>I tried  </p>

<pre><code>git clone --branch &lt;tag_name&gt; &lt;repo_url&gt;
</code></pre>

<p>But it does not work. It returns:  </p>

<pre><code>warning: Remote branch 2.13.0 not found in upstream origin, using HEAD instead
</code></pre>

<p>How to use this parameter?</p>
","61","51617","<git><git-clone><git-tag>"
"1619737","1","Migrate project from RCS to git?","<p>I have a <a href=""http://www.cs.tufts.edu/~nr/noweb/"">20-year-old project</a> that I would like to migrate from RCS to git, without losing the history.  All web pages suggest that the One True Path is through CVS.  But after an hour of Googling and trying different scripts, I have yet to find anything that <em>successfully</em> converts my RCS project tree to CVS.  I'm hoping the good people at Stackoverflow will know what actually works, as opposed to what is claimed to work and doesn't.</p>

<p>(I searched Stackoverflow using both the native SO search and a Google search, but if there's a helpful answer in the database, I missed it.)</p>

<p><strong>UPDATE</strong>: The <code>rcs-fast-export</code> tool at <a href=""http://git.oblomov.eu/rcs-fast-export"">http://git.oblomov.eu/rcs-fast-export</a> was repaired on 14 April 2009, and this version seems to work for me.  This tool converts <em>straight</em> to git with no intermediate CVS.  Thanks Giuseppe and Jakub!!!</p>

<hr>

<p>Things that did not work that I still remember:</p>

<ul>
<li><p>The <code>rcs-to-cvs</code> script that ships in the <code>contrib</code> directory of the CVS sources</p></li>
<li><p>The <code>rcs-fast-export</code> tool at <a href=""http://git.oblomov.eu/rcs-fast-export"">http://git.oblomov.eu/rcs-fast-export</a> in versions before 13 April 2010</p></li>
<li><p>The <code>rcs2cvs</code> script found in a document called ""CVS-RCS- HOW-TO Document for Linux""</p></li>
</ul>
","33","7343","<git><migration><cvs><rcs>"
"22682870","1","Git - Undo pushed commits","<p>I have a project in a remote repository, synchronized with a local repository (development) and the server one (prod). I've been making some commited changes already pushed to remote and pulled from the server. Now, I want to undo those changes. So I could just <code>git checkout</code> to the commit before the changes and commit the new changes, but I'm guessing that there will be problems to push them again to remote. Any suggestion on how should I proceed?  </p>
","51","51188","<git>"
"1683531","1","How to import existing Git repository into another?","<p>I have a (Windows) Git repository in a folder called <strong>XXX</strong>, and I have second Git repository called <strong>YYY</strong>.</p>

<p>I want to import the <strong>XXX</strong> repository into the <strong>YYY</strong> repository, add all <strong>XXX</strong>'s change history to <strong>YYY</strong>, and rename <strong>XXX</strong> to <strong>ZZZ</strong>.</p>

<p>Folder structure before:</p>

<pre><code>XXX
 |- .git
 |-  ZZZ
</code></pre>

<p>Folder structure after:</p>

<pre><code>YYY
 |- .git  &lt;-- This now contains the change history from XXX
 |-  ZZZ  &lt;-- This was originally XXX
 |-  (other folders)
</code></pre>

<p>Can this be done, or must I resort to using sub-modules?</p>
","248","98893","<git><merge><git-merge>"
"3600728","1","Git : List all unmerged changes in git","<p>Creating a branch for various topics, and not regularly deleting them when I don't need them any more, I have now ended up with about 50 branches ;)</p>

<p>I tried deleting branches and some of them have unmerged changes.</p>

<p>What I want is the ability to see exactly what changes are there in any branch on my repo that are not in the master. Is there a way to do that</p>

<p>Thanks in advance.</p>
","42","10702","<git><branch>"
"3601672","1","How does git deal with binary files?","<ul>
<li>Do I have to set something to tell git if some files are binary, just like svn? Or, git just can handle binary data automatically?</li>
<li>If I change the binary file, so that I have 100 binary revisions, will git just store all 100 versions individually in the repository?</li>
<li>What are submodules for with git? </li>
</ul>
","42","24514","<git><binaryfiles>"
"3601911","1","How do I undo a checkout in git?","<p>I just checked out an earlier commit from my local git repo. I haven't made any changes to it, I was just looking at it. Now I want to go back to my latest commit - how do I do that?</p>

<p>The exact command I used to check it out:</p>

<pre><code>git checkout e5dff6b3c5d704f9b598de46551355d18235ac08
</code></pre>

<p>Now when I type git log, at the top I see this checked out commit, but none of my later commits. Did I accidentally delete those? </p>
","51","55628","<git>"
"27428441","1","How to disambiguate an ambiguous abbreviated sha1 in git","<p>I was intrigued by <a href=""http://blog.cuviper.com/2013/11/10/how-short-can-git-abbreviate/"">Josh Stone's analysis of sha1 abbreviation collisions</a>.</p>

<p>Let's say somebody wrote down an abbreviated commit id, <code>8b82547e33</code>, at a time when it was unambiguous.  But since then other objects have been created with that same prefix, so that now git tells you (twice, for some reason):</p>

<pre><code>$ git show 8b82547e33
error: short SHA1 8b82547e33 is ambiguous.
error: short SHA1 8b82547e33 is ambiguous.
fatal: ambiguous argument '8b82547e33': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git &lt;command&gt; [&lt;revision&gt;...] -- [&lt;file&gt;...]'
</code></pre>

<p>Now, as a human, I could probably tell which object I meant if git would just show me the ambiguous objects.  How can I achieve something like the following?</p>

<pre><code>$ git objects-starting-with 8b82547e33
8b82547e33e: commit: l2tp: Restore socket refcount when sendmsg succeeds
8b82547e338: tree [2 files, 26 subtrees]
</code></pre>

<p>(Note: the above examples are using a relatively current clone of <a href=""http://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git"">http://git.kernel.org/cgit/linux/kernel/git/stable/linux-stable.git</a>.)</p>
","32","933","<git>"
"3662543","1","Is there any way to undo the effects of ""git revert head""?","<p>I've accidentally run the command against the wrong branch in my repository - is there a way to undo this change?</p>
","55","35397","<git><undo><revert>"
"8376475","1","Cross-referencing commits in github","<p>I'd like to reference commits in other repos (in this case submodules) in the github issues of my main repo. Is it possible to do so without typing the full hyperlink in a way similar to how github creates a shortened hyperlink from the commit number?</p>
","73","14695","<git><github>"
"1809484","1","Git: how to reverse-merge a commit?","<p>With SVN it is easy to reverse-merge a commit, but how to do that with Git?</p>
","65","46621","<git><merge>"
"8377081","1","GitHub Api download zip or tarball link","<p>There was a good link here about how the zip/tarball string is created</p>

<p><a href=""http://stackoverflow.com/questions/6334040/when-i-download-a-zip-from-github-what-is-the-hex-string-at-the-end-of-the-file"">When I download a zip from github, what is the hex string at the end of the file name represent?</a></p>

<p>But I'm looking at the GitHub APIv3 and I was curious if I'm missing something.</p>

<ol>
<li><p>Is there a way to get the zip/tarball link via an API call?</p></li>
<li><p>If not, is there a way I can build that string without using the git binary or library? Meaning, can I use various API calls to pull out th data a need and assemble to URL I need?</p></li>
</ol>

<p>I know the second question is a little unreasonable for stackoverflow and this is a bit of a fun project for me, so I would prefer on the second question if you just kind of nudged me in the right direction as opposed to throwing down a code snippet. Or just told me if it was possible.</p>
","31","26898","<git><github><github-api>"
"6117109","1","Few questions with GIT, possible to have custom .gitignore? Read only access?","<p>I am working in a team environment, and there is already a <code>.gitignore</code> file.</p>

<p>I want to add more items to the file, but I don't want to check this file in either, it is only for me to see and for me to set custom ignore files in.</p>

<p>Is this possible?</p>

<p>Also, I want to give someone read only access to a private git repository on our server, if I add their SSH key to our server they will get full access like everyone else.  How can I limit it to read-only, no commits allowed.</p>
","36","5656","<git>"
"6119036","1","How to revert a folder to a particular commit by creating a patch","<p>Here's my history for the folder 'somefolder'</p>

<p>$ git log somefolder</p>

<p>commit 89cd
More changes to somefolder</p>

<p>commit ef47a
Updating somefolder and other stuff</p>

<p>commit e095
Bugs fixed in somefolder</p>

<p>I want to revert somefolder back to the 'Bugs fixed in some folder"" commit.</p>

<p>Since the second commit involved changes outside of somefolder, I don't want to revert this commit. </p>

<p>I guess the safest way would be to create a diff/patch between commit e095 and 89cd that applies just to some folder, and then apply that patch. How can I do that?</p>
","34","14624","<git>"
"1884474","1","Change old commit message on Git","<p>I was trying to edit an old commit message as explained <a href=""http://schacon.github.com/history.html"">here</a>. </p>

<p>The thing is that now, when I try to run <code>rebase -i HEAD~5</code> it says <code>interactive rebase already started</code>.</p>

<p>So then I try: <code>git rebase --continue</code> but got this error:</p>

<pre><code>error: Ref refs/heads/master is at 7c1645b447a8ea86ee143dd08400710c419b945b but expected c7577b53d05c91026b9906b6d29c1cf44117d6ba
fatal: Cannot lock the ref 'refs/heads/master'.
</code></pre>

<p>Any ideas?</p>
","59","40031","<git><repository><rebase><git-rebase>"
"6119956","1","How to determine if Git handles a file as binary or as text?","<p>I know that GIT somehow automatically detects if a file is binary or text and that gitattributes can be used to set this manually if needed. But is there also a way to ask GIT how it treats a file?</p>

<p>So let's say I have a GIT repository with two files in it: A <em>ascii.dat</em> file containing plain-text and a <em>binary.dat</em> file containing random binary stuff. Git handles the first dat file as text and the secondary file as binary. Now I want to write a GIT webfrontend which has a viewer for text files and a special viewer for binary files (Displaying a Hex dump for example). Sure, I could implement my own text/binary check but it would be more useful if the viewer relies on the information how GIT handles these files.</p>

<p>So how can I ask GIT if it treats a file as text or binary?</p>
","44","7748","<git>"
"3832227","1","Github commit message links","<p>Is it possible to create a commit message with link to other repository commit?</p>

<p>Eg. something like <code>[Username\Repo\commitHash]</code></p>

<p>Usage example: <em>if some bc break would happen in some framework's commit, I'd like to link to this very commit in my own commits updating my code which uses this framework.</em></p>
","35","17439","<git><github>"
"6214711","1","git log and show on a bare repo","<p>I created a bare repository on a file-server in my local network at home.
After this i pushed a branch of an existing repository from my desktop-pc to this new remote repository.</p>

<p>Pushing worked perfectly and it seems, that all data arrived (a ""git branch -va"" gives me the correct data). 
But i cannot use git log or git show on the bare repository.
i get an:</p>

<p><code>fatal: bad default revision 'HEAD'</code></p>

<p>or simply no output</p>

<p>is this normal for bare repositories? Is there another possibility to visualize everything?</p>

<p>Edit:
The fatal error is solved now, but i receive no output from ""git log"" or ""git log unstable"". Same command on the desktop-pc works perfectly</p>
","41","26028","<git>"
"3833561","1","Why Git doesn't ignore my specified file?","<p>I add the following line to .gitignore but when I type ""git status"" it show the file as unstaged file.what's the problem? all other patterns work good.</p>

<p>.gitignore file content:</p>

<p>sites/default/settings.php</p>

<hr>

<p>Thanks for replies.but still doesn't work.my friend told maybe file(to be ignored) is added manually.if it's true how can I solve it?It seems problem is relative to the file itself(file to be ignored).</p>
","34","19007","<git>"
"2129214","1","How to backup a local Git repository?","<p>I am using git on a relatively small project and I find that zipping the .git directory's contents might be a fine way to back up the project. But this is kind of weird because, when I restore, the first thing I need to do is <code>git reset --hard</code>.</p>

<p>Are there any problems with backing up a git repo this way? Also, is there any better way to do it (e.g., a portable git format or something similar?)?</p>
","122","78674","<git><backup>"
"3965676","1","Why did my Git repo enter a detached HEAD state?","<p>I ended up with a detached head today, the same problem as described in: <a href=""http://stackoverflow.com/questions/999907/git-push-says-everything-up-to-date-even-though-i-have-local-changes"">git push says everything up-to-date even though I have local changes</a></p>

<p>As far as I know I didn't do anything out of the ordinary, just commits and pushes from my local repo.  </p>

<p>So how did I end up with a <code>detached HEAD</code>?</p>
","202","78856","<git>"
"3965801","1","Maven plugin for versioning and minifying javascript","<h2>Single Page Javascript Application</h2>

<p>I have built a sophisticated ajax-driven single page webapp that uses a RESTful backend web service serving JSON. The javascript is split into many different files, each file representing some sort of feature or component.</p>

<p>While the service has been in <em>alpha</em> testing, I've just be serving all these files separately without minification. But now that I'd like to launch a <em>beta</em> version, I really need to combine files, minify them, and version them. I want to add this to my build process, using Maven.</p>

<h2>Javascript File Types</h2>

<p>I'm using the following ""types"" of javascript files, of which #3 and #4 are my concerns:</p>

<ol>
<li>External files, such a jquery and jquery-ui served from the Google CDN. Rarely change these versions, can be handled manually.</li>
<li>Jquery plugins that I'm hosting myself, such as fullcalendar or ui-layout. Again, I rarely update these to new versions and can handle it manually.</li>
<li>Application-wide javascript code. Custom javascript that is spread across many files and can change occasionally. All of these files need to be loaded for the app to work.</li>
<li>Feature-specific javascript code. Custom javascript that is loaded on demand when a specific feature is requested. This code can change quite frequently and is not loaded at startup.</li>
</ol>

<h2>Build Objectives</h2>

<p>I'd like to do the following during my build process:</p>

<ul>
<li>Concatenate all type 3 javascript files together, minify them, and save as a single file with a version number. For instance: <code>app-2.0.6.min.js</code>, where 2.0.6 is the maven project version.</li>
<li>All type 4 files should be individually minified and saved as separate files with version numbers in the name. For instance: <code>feature-abc-56ab32de29.min.js</code>, where 56ab32de29 is the version number of that specific file.</li>
<li>Update HTML files with <code>&lt;script&gt;</code> tags to point to javascript files with the correct version numbers.</li>
<li>Update Javscript files that load type 4 feature javascript files to point to the right versions.</li>
</ul>

<h2>Questions</h2>

<ul>
<li><p>Is there a maven plugin that will assist with the concatenation?</p></li>
<li><p>Is there a maven plugin that will assist with the minification? Ideally, I'd like to use Google Closure Compiler, but would work with others if simpler.</p></li>
<li><p>Is there a maven plugin that will assist with the versioning? </p></li>
<li><p>Is there a way to have the type 4 javascript files have independent version numbers? Ideally, if a file doesn't change between version 2.0.5 and 2.0.6, there is no need for users to download a new version and their cached version would work fine. I'm using GIT for source control, so would there be a way to use a file's GIT hashcode for versioning?</p></li>
<li><p>Is there a solution that will compress the javascript that is inline in regular HTML files without killing the HTML?</p></li>
<li><p>Is there a solution that will compress and version my CSS files as well?</p></li>
</ul>
","49","21485","<javascript><git><build><maven><minify>"
"3966714","1","How can I change the default comments in the git commit message?","<p>Is it possible to modify the commented part of the default git commit message?
I want to add a bit more 'context' information for my users.</p>

<pre><code># Please enter the commit message for your changes.
# (Comment lines starting with '#' will not be included)
# Explicit paths specified without -i nor -o; assuming --only paths...
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       modified:   test.txt
#
</code></pre>
","32","10525","<git>"
"11117823","1","Git Push error: refusing to update checked out branch","<p>Hi I have solved some merge conflicts, committed then tried to Push my changes and received the following error:</p>

<pre><code>c:\Program Files (x86)\Git\bin\git.exe push --recurse-submodules=check ""origin"" master:master
Done
remote: error: refusing to update checked out branch: refs/heads/master[K
remote: error: By default, updating the current branch in a non-bare repository[K
remote: error: is denied, because it will make the index and work tree inconsistent[K
remote: error: with what you pushed, and will require 'git reset --hard' to match[K
remote: error: the work tree to HEAD.[K
remote: error: [K
remote: error: You can set 'receive.denyCurrentBranch' configuration variable to[K
remote: error: 'ignore' or 'warn' in the remote repository to allow pushing into[K
remote: error: its current branch; however, this is not recommended unless you[K
remote: error: arranged to update its work tree to match what you pushed in some[K
remote: error: other way.[K
remote: error: [K
remote: error: To squelch this message and still keep the default behaviour, set[K
remote: error: 'receive.denyCurrentBranch' configuration variable to 'refuse'.[K
To C:/Development/GIT_Repo/Project
 ! [remote rejected] master -&gt; master (branch is currently checked out)
error: failed to push some refs to 'C:/Development/GIT_Repo/Project'
</code></pre>

<p>Does anyone know what could be causing this error?</p>

<p>Thanks</p>
","79","58693","<git><git-push>"
"8846972","1","Tortoisegit asking password","<p>I just started to work on Git. I use windows 7 and has installed msysgit(1.7.8) and Tortoisegit(1.7.6).
The repository is created on Linux server which is accessible thru LAN. The issue I'm facing is I'm not able to clone the repository using Tortoisegit, it asks for password and I'm not sure what password it is asking.
At the same time I could clone the repository using Git Gui and do all operations.
Can anybody please help me on understanding why Tortoisegit is asking password when Git Gui doesn't.
I tried uninstalling Git and Tortoisegit and then install again but no success.  </p>

<p><img src=""http://i.stack.imgur.com/WW1Qy.png"" alt=""Tortoisegit error""></p>
","46","43063","<git><version-control><tortoisegit>"
"4307095","1","How can I split up a Git commit buried in history?","<p>I flubbed up my history and want to do some changes to it. Problem is, I have a commit with two unrelated changes, and this commit is surrounded by some other changes in my local (non-pushed) history.</p>

<p>I want to split up this commit before I push it out, but most of the guides I'm seeing have to do with splitting up your most recent commit, or uncommitted local changes. Is it feasible to do this to a commit that is buried in history a bit, without having to ""re-do"" my commits since then?</p>
","231","30473","<git><split><commit><revision-history>"
"9008309","1","How do I set GIT_SSL_NO_VERIFY for specific repos only?","<p>I have to use a git server without proper certificates, but I don't want to have to do</p>

<pre><code>env GIT_SSL_NO_VERIFY=true git command
</code></pre>

<p>every single time I do a git operation. But I would also like to leave SSL enabled for other git repositories. Is there a way to make this local to a single repo?</p>
","71","80979","<git><ssl>"
"11369375","1","How can I delete all of my Git stashes at once?","<p>How can I delete all of my <a href=""http://en.wikipedia.org/wiki/Git_%28software%29"">Git</a> stashes at once?</p>

<p>Specifically I mean, with typing in one command.</p>
","464","65393","<git>"
"6755824","1","What is the difference between author and committer in Git?","<p>I just came across the following commit on GitHub:
<a href=""https://github.com/felixge/node-formidable/commit/0a0b150668daa3c6f01626d2565b898e5da12392"">https://github.com/felixge/node-formidable/commit/0a0b150668daa3c6f01626d2565b898e5da12392</a></p>

<p>How does one go about having multiple authors on the same commit like that?</p>
","31","9484","<git><github>"
"11451535","1",".gitignore not working","<p>I'm on windows and my <code>.gitignore</code> file seems to be being ignored by git - could the .ignore file be corrupt?  What file format, locale or culture does git expect?</p>

<p>My <code>.gitignore</code>:</p>

<pre><code>#this is a comment
debug.log
nbproject/
</code></pre>

<p>Output from <code>git status</code>:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       debug.log
#       nbproject/
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>I would like it if <code>debug.log</code> and <code>nbproject/</code> did not appear in the untracked files list.</p>

<p>Where should I start looking to fix this?</p>
","555","217875","<git><gitignore>"
"4492979","1","'git' is not recognized as an internal or external command","<p>When I try to use git command on my regular windows cmd or cmd with ruby, I get the following error.</p>

<blockquote>
  <p>'git' is not recognized as an internal or external command,
  operable program or batch file. </p>
</blockquote>

<p>How do I fix this problem?</p>
","141","138154","<windows><git>"
"4493936","1","git - could I change my name and surname in all previous commits?","<p>I would like to change my name, surname and email in my all commits, is it possible? Thanks.</p>
","46","15169","<git><git-filter-branch>"
"18930527","1","Difference between git pull and git pull --rebase","<p>I started using git sometime back and do not fully understand the intricacies. My basic question here is to find out the difference between a <code>git pull</code> and <code>git pull --rebase</code> , since adding the <code>--rebase</code> option does not seem to do something very different : just does a pull.</p>

<p>Please help me with understanding the difference.</p>
","123","63413","<git><git-pull>"
"23517464","1","Error: Cannot pull with rebase: You have unstaged changes","<p>I have started collaborating with a few friends on a project &amp; they use the heroku git repository.</p>

<p>I cloned the repository a few days ago and they have since made some changes so I am trying to get the latest updates</p>

<p>I ran the <code>git pull --rebase</code> command as stated here(Is this the right way to do it?): <a href=""https://devcenter.heroku.com/articles/sharing#merging-code-changes"">https://devcenter.heroku.com/articles/sharing#merging-code-changes</a></p>

<p>I get the following error:</p>

<pre><code>$ git pull --rebase
Cannot pull with rebase: You have unstaged changes.
Please commit or stash them.
</code></pre>

<p>My guess is that I messed around with the code and now it wants me to either commit or discard(is that what does stash means?) the changes. Is this what is happening? If this is the case I would like to discard any changes I might have made and just get the updated code from the git repository. </p>

<p>Any idea of what I can do?</p>
","44","46401","<git><heroku><pull>"
"16128018","1","Git: commit and automatically add all untracked files","<p>I often forgot that I have some new files and directly do,</p>

<pre><code>git commit -a -m ""My commit message""
</code></pre>

<p>This only commits changed files, and I have to do add the remaining files in a new commit. This means that there are two separate commits although logically they are part of the same task.</p>

<p>The easiest way I know to include untracked files in the commit via two consecutive commands:</p>

<pre><code>git add -A
git commit -a -m ""My commit message""
</code></pre>

<p>Is it possible to have the same effect like the above in one command?</p>
","32","31876","<git>"
"6934752","1","Combining multiple commits before pushing in Git","<p>I have a bunch of commits on my local repository which are thematically similar. I'd like to combine them into a single commit before pushing up to a remote. How do I do it? I think <code>rebase</code> does this, but I can't make sense of the docs.</p>
","191","67088","<git><git-squash>"
"4589731","1","Git: Blame Statistics","<p>How can I ""abuse"" blame (or some better suited function, and/or in conjunction with shell commands) to give me a statistic of how much lines (of code) are currently in the repository originating from each committer?</p>

<p>Example Output:</p>

<pre><code>Committer 1: 8046 Lines
Committer 2: 4378 Lines
</code></pre>

<p>PS: I'm running OSX</p>
","116","27438","<git>"
"14243380","1","How to configure 'git log' to show 'commit date'","<p>How can I configure <code>git log</code> to show <code>commit date</code> instead of <code>author date</code>?</p>
","40","16511","<git><git-log>"
"14243397","1","What are git's merge strategies?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/366860/when-would-you-use-the-different-git-merge-strategies"">When would you use the different git merge strategies?</a>  </p>
</blockquote>



<p>When git merges files I'm working on, I see:</p>

<pre><code>Merge made by the 'recursive' strategy
</code></pre>

<p>What exactly is the recursive strategy? What other strategies are there (if any)? And what would be the benefit of using one over the other? Do different strategies have different performances? Or could two different strategies result in different merge results?</p>
","35","21674","<git>"
"4693588","1","Git: What is a tracking branch?","<p>Can someone explain a ""tracking branch"" as it applies to git?</p>

<p>Here's the definition from <a href=""http://book.git-scm.com/4_tracking_branches.html"">git-scm.com</a>:</p>

<blockquote>
  <p>A 'tracking branch' in Git is a local
  branch that is connected to a remote
  branch. When you push and pull on that
  branch, it automatically pushes and
  pulls to the remote branch that it is
  connected with.</p>
  
  <p>Use this if you always pull from the
  same upstream branch into the new
  branch, and if you don't want to use
  ""git pull"" explicitly.</p>
</blockquote>

<p>Unfortunately, being new to git and coming from SVN, that definition makes absolutely no sense to me.</p>

<p>I'm reading through ""<a href=""http://www.pragprog.com/titles/pg_git/pragmatic-guide-to-git"">The Pragmatic Guide to Git</a>"" (great book, by the way), and they seem to suggest that tracking branches are a good thing and that after creating your first remote (origin, in this case), you should set up your master branch to be a tracking branch, but it unfortunately doesn't cover <em>why a tracking branch is a good thing</em> or <em>what benefits you get by setting up your master branch to be a tracking branch of your origin repository</em>.</p>

<p>Can someone please enlighten me (in English)?</p>
","47","17683","<git><version-control><branch>"
"11635493","1","Push git changes to a shared network drive","<p>How can a team of four people use Git (specifically <a href=""http://windows.github.com/"">Github for Windows</a>) to push local changes to a shared network drive? </p>

<p>Right now (without Git) we have to copy the files from the network drive to our local machine, edit the files, and then re-upload them to the shared network drive. This is a painstaking process that can lead to lots of errors, but it seems like something Git could help us with.</p>

<p>Can we simply install Git on the shared drive and go from there?</p>
","36","15989","<git><networking><push><shared><drive>"
"13867705","1","git grep by file extensions","<p>I know that, if I wanted to grep for a pattern only on files with certain extensions, I could do this:</p>

<pre><code>// searches recursively and matches case insensitively in only javascript files
// for ""res"" from the current directory
grep -iIr --include=*.js res ./
</code></pre>

<p>I've been trying to search for a way to do this via git grep as well (to take advantage of git grep's speed from the indexes it stores with its tree), but to no avail. I saw <a href=""http://git.661346.n2.nabble.com/git-grep-while-excluding-files-in-a-blacklist-td7195648.html"">here</a> that excluding certain file types is not possible.</p>
","37","8698","<git><grep><file-extension>"
"9282632","1","git index.lock File exists when I try to commit, but cannot delete the file","<p>When I do 'git commit', I'm getting the following:</p>

<p><code>fatal: Unable to create 'project_path/.git/index.lock': File exists.</code></p>

<p>However, when I do <code>ls project_path/.git/index.lock</code> it's saying the file doesn't exist. Any thoughts on what I should do? I've also noticed that project_path/.git is owned by root, not sure if that has anything to do with the problem I'm encountering.</p>

<p>git version is 1.7.5.4</p>

<p>edit: It seems that the problem most likely was another process I had running, that was writing (unbeknownst to me) to the project directory. I restarted my machine and then I had no problem committing.</p>
","80","82939","<git>"
"4697216","1","Is git good with binary files?","<p>Is git good with binary files?</p>

<p>Say if I have a lot of uncompressed files being modified, and many compressed files never (or almost never) modified would git handle it well? like, if I insert or remove the middle and insert data near the end it will notice it as it does with text?</p>

<p>If git isn't good with binary what tool might I consider?</p>
","50","35137","<git>"
"9396240","1","How do I simply create a patch from my latest git commit?","<p>I'm looking for the magic command of creating a patch from the last commit made.</p>

<p>My workflow sometimes looks like this</p>

<pre><code>vi some.txt
git add some.txt
git commit -m ""some change""
</code></pre>

<p>and now I just want to write</p>

<pre><code>git create-patch-from-last-commit-to-file SOME-PATCH0001.patch
</code></pre>

<p>but what should i put there instead of <code>create-patch-from-last-commit-to-file</code>?</p>
","96","86951","<git><patch>"
"18801147","1","Changing the default Git remote 'push to' default","<p>I want to change the Git default remote branch destination so I could just</p>

<pre><code>git push
</code></pre>

<p>Instead of:</p>

<p>git push upstream</p>

<p>Currently this is set to the origin remote and I want to set it to a different remote.</p>

<p>I tried to remove the original (cloned from) remote</p>

<pre><code>git remote rm origin
</code></pre>

<p>Which did remove the original remote. But doesn't solve the <code>git push</code> problem. I still get:</p>

<blockquote>
  <p>fatal: No configured push destination. Either specify the URL from the<br>
  command-line or configure a remote repository using...</p>
</blockquote>

<p>I also tried to play with:</p>

<pre><code>git remote set-url --push myfork origin
</code></pre>

<p>and other options but none seem to work (maybe because I deleted the origin remote too soon?)</p>

<p>Following the <a href=""http://stackoverflow.com/questions/820178/git-push-only-to-a-remote-branch"">answer here</a> I tried to change:</p>

<pre><code>git config push.default upstream (or matching)
</code></pre>

<p>but neither worked.</p>
","35","23960","<git><git-push><git-remote>"
"16800280","1","How to interactively (visually) resolve conflicts in SourceTree / git","<p>I'm using (Windows) SourceTree for my git project. I can do it in either command prompt or Linux terminal.</p>

<p>But, I'm wondering whether there is a nice way to interactively and visually resolve conflicts. For example, if pull detects conflicts, popping up a GUI-based conflict tool (e.g., P4Merge). Is it possible?</p>

<p>I am always doing manual conflict resolving, which is just painful.</p>

<p>This is, for example, a git <code>pull</code> message, from SourceTree.</p>

<pre><code>git -c diff.mnemonicprefix=false -c core.quotepath=false pull --no-commit origin master
From W:\repo\
 * branch            master     -&gt; FETCH_HEAD   

Updating 33c07bf..41e0249

error: Your local changes to the following files would be overwritten by merge:
    foo.cpp
    goo.cpp
    goo.hpp
Please, commit your changes or stash them before you can merge.
Aborting    

Completed with errors, see above.
</code></pre>
","60","82550","<git><git-merge><merge-conflict-resolution><atlassian-sourcetree>"
"23918062","1","""simple"" vs ""current"" push.default in git for decentralized workflow","<p>Functionally speaking, in a decentralized workflow, I don't see the difference between <code>simple</code> and <code>current</code> options for <code>push.default</code> config setting.</p>

<p><code>current</code> will push the current branch to an identically named branch on the specified remote. <code>simple</code> will effectively do the same thing as well for both the tracked and any untracked remotes for the current branch (it enforces identical branch names in both cases).</p>

<p>Can someone explain any important differences between the two for decentralized workflows that I am missing?</p>
","41","20065","<git><git-push><git-config>"
"11872984","1","What is the difference between git push.default=current and push.default=upstream?","<p>The man page for git-config lists these options for push.default:</p>

<pre><code>nothing - do not push anything.
matching - push all matching branches. All branches having the same name in both ends are considered to be matching. This is the default.
upstream - push the current branch to its upstream branch.
tracking - deprecated synonym for upstream.
current - push the current branch to a branch of the same name.
</code></pre>

<p>In most cases I would assume that pushing to a branch's upstream branch would be the same as pushing to a branch of the same name, since the upstream branch would normally have the same name, and since the branch of the same name (""current"") would normally (or always, by definition?) be upstream.  So what's the difference?</p>

<p><em><strong>UPDATE</em></strong>: <a href=""https://www.kernel.org/pub/software/scm/git/docs/git-config.html"">The man page for git-config</a> has been updated (as one would expect), so the distinctions made <a href=""https://www.kernel.org/pub/software/scm/git/docs/git-config.html"">there</a> may be a lot clearer now.</p>
","75","39652","<git><git-branch><git-push>"
"9524933","1","Renaming a branch in github","<p>I just renamed my local branch using</p>

<pre><code>git branch -m oldname newname
</code></pre>

<p>but this only renames the local version of the branch. How can I rename the one in <strong>github</strong>?</p>
","128","59881","<git><github><rename>"
"9527999","1","How do I create a new GitHub repo from a branch in an existing repo?","<p>I have <strong>master</strong> and <strong>new-project</strong> branches. And now I'd like to create a brand new repo with its master based on the new-project branch.</p>

<p>Background: I have one repository which contains three independent applications. It didn't start out this way. There was originally just one app in the repo. Over time, however, business needs have changed. One app became two (a legacy version and a re-write.) A web service was added. Separate branches were used to contain the three projects. However, they don't share any code. And so it'd be simpler to have them split out into their own repos.</p>
","57","18298","<git><github><branch>"
"9529078","1","How do I use 'git reset --hard HEAD' to revert to a previous commit?","<p>I know that Git tracks changes I make to my application, and it holds on to them until I commit the changes, but here's where I'm hung up:</p>

<p>When I want to revert to a previous commit I use: </p>

<pre><code>git reset --hard HEAD</code></pre>

<p>And Git returns:</p>

<pre><code>HEAD is now at 820f417 micro
</code></pre>

<p>How do I then revert the files on my hard drive back to that previous commit?</p>

<p>My next steps were:</p>

<pre><code>git add .
git commit -m ""revert""
</code></pre>

<p>But none of the files have changed on my hard drive...</p>

<p>What am I doing right/wrong?</p>
","315","821774","<git><head><git-reset><git-revert>"
"28792784","1","Why does Git use a cryptographic hash function?","<p>Why does Git use <a href=""http://en.wikipedia.org/wiki/SHA-1"">SHA-1</a>, a cryptographic hash function, instead of a faster non-cryptographic hash function?</p>

<p><strong>Related question:</strong></p>

<p>Stack&nbsp;Overflow question <em><a href=""http://stackoverflow.com/questions/11233591"">Why does Git use SHA-1 as version numbers?</a></em> asks why Git uses SHA-1 as opposed to sequential numbers for commits.</p>
","96","6052","<git><hash-function>"
"9529497","1","What is ""origin"" in Git?","<p>When I run:</p>

<pre><code>git push origin branchname
</code></pre>

<p>What exactly is <code>origin</code> and why do I have to type it before the branch name?</p>
","230","70615","<git>"
"4308610","1","How to ignore certain files in git?","<p>I have a repository with a file <code>Hello.java</code>. When I compile it an additional <code>Hello.class</code> file is generated.</p>

<p>I created an entry for <code>Hello.class</code> in a <code>.gitignore</code> file. However the file still appears to be tracked.</p>

<p>I want to know how to make git ignore <code>Hello.class</code>.</p>
","267","272398","<git><gitignore>"
"4309156","1","Commit specific lines of a file to git","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""http://stackoverflow.com/questions/1085162/how-can-i-commit-only-part-of-a-file-in-git"">How can I commit only part of a file in git</a>  </p>
</blockquote>



<p>How do I commit a few specific line ranges from a file to git? while ignoring some other line changes in the same file.</p>
","114","25474","<git>"
"13608706","1","Using version control (Git) on a MySQL database","<p>I am a WordPress Designer/Developer, who is getting more and more heavily involved with using version control, notably Git, though I do use SVN for some projects. I am currently using Beanstalk for my remote repo.</p>

<p>Adding all of the WordPress files to my repo is no problem, if I wanted to I know I could .gitignore the wp-config file, but since I'm the only developer, currently, and these projects are closed source, it really makes little sense.</p>

<p>WordPress relies heavily on the database, as any CMS does, to keep textual content, and many settings depending on the specific plugin/theme configuration I'm using. I'm wondering what the best way of using version control on the database would be, if it's even possible. I guess I could do a SQL dump, though my MySQL server is running on Windows (read as: I don't know how to do it), and then add the SQL dump to my repository. But when I push something live, that poses huge security threats.</p>

<p>Is there an accepted practice of doing this?</p>
","40","21027","<mysql><git><version-control>"
"6759791","1","How do I move forward and backward between commits in git?","<p>I am doing a <code>git bisect</code> and after arriving to the problematic commit, I am now trying to get a step forward/backward to make sure I am in the right one.</p>

<p>I know of <code>HEAD^</code> to go backwards in history but is there another shortcut to get me forward (towards a specific commit in the future) like so:</p>

<pre><code>A - B - C(HEAD) - D - E - F
</code></pre>

<p>I know that my target is <strong>F</strong> and I want to move from <strong>C</strong> to <strong>D</strong>.</p>

<hr>

<p>NOTE: this is not a duplicate of <a href=""http://stackoverflow.com/q/2121230/146272"">Git: How to move back and forth between commits</a>, my question is slightly different and is not answered there</p>
","37","21248","<git>"
"4404172","1","Tag older commit in Git","<p>We are new to git, and I want to set a tag at the beginning of our repository. 
Our production code is the same as the beginning repository, but we've made commits since then.
A tag at the beginning would allow us to ""roll back"" production to a known, stable state.</p>

<p>So how to add a tag to an arbitrary, older commit?</p>
","353","73623","<git><version-control><tags>"
"4404444","1","How do I ""blame"" a deleted line","<p><code>git blame</code> is great for modified and added lines but how can I find when a line that existed in a specific previous commit was eventually deleted.  I'm thinking <code>bisect</code> but I was hoping for something handier.</p>

<p>[ before you ask: in the case, I just did a <code>git log -p</code> and searched through for the code line and (a) some idiot had <em>just</em> deleted the vital line in the previous commit and (b) I was that idiot ]</p>
","238","26138","<git>"